
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _miot = _$$_REQUIRE(_dependencyMap[2]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

    var _Main = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    _miot.PackageEvent.packageAuthorizationCancel.addListener(function () {
        _miot.Package.exit();
    });

    switch (_miot.Package.entrance) {
        case _miot.Entrance.Scene:
            _miot.Package.entry(Scene, function (_) { });

            break;

        default:
            _miot.Package.entry(_Main.default, function (_) { });

            break;
    }
}, 10001, [14305, 10297, 10074, 10033, 10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNavigation = _$$_REQUIRE(_dependencyMap[9]);

    var _healthMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _TimeSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _RestartPlan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _ResetPassword = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _HomePage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _DeviceIndex = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _ContentDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _wifisetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _RestarRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

    var _MpkWebPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

    var _QosMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

    var _QosGuest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

    var _NetworkOptimize = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

    var _RestartTimeSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

    var _GeneralSettings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

    var Screens = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[25]));

    var _NetworkMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

    var _NetModeWireRelay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

    var _NetModePppoe = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

    var _NetModeDhcp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

    var _NetModeStaticIP = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

    var _NetModeWirelessRelay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

    var _ToolBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

    var _ChildProtect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

    var _CPDeviceList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

    var _CPDLAddDevice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));

    var _CommonSetting = _$$_REQUIRE(_dependencyMap[36]);

    var _RouterPluginCommonSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[37]));

    var _RouterSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[38]));

    var _NetworkModeWirelessSelectWifi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[39]));

    var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[40]));

    var RootStack = (0, _reactNavigation.createStackNavigator)({
        Home: _HomePage.default,
        Devices: _DeviceIndex.default,
        DevicesDetails: _ContentDetail.default,
        WiFiSetting: _wifisetting.default,
        TimeSetting: _TimeSetting.default,
        RestartPlan: _RestartPlan.default,
        ResetPassword: _ResetPassword.default,
        MpkWebPage: _MpkWebPage.default,
        QosEntry: _QosMode.default,
        QosGuest: _QosGuest.default,
        NetworkOptimizeTool: _NetworkOptimize.default,
        RestartTimeSetting: _RestartTimeSetting.default,
        RestarRouter: _RestarRouter.default,
        HealthMode: _healthMode.default,
        GeneralSettings: _GeneralSettings.default,
        DeviceName: Screens.DeviceName,
        DeviceShare: Screens.DeviceShare,
        LocationManage: Screens.LocationManage,
        FirmwareUpdate: Screens.FirmwareUpdate,
        UsingHelp: Screens.UsingHelp,
        LawInfo: Screens.LawInfo,
        Feedback: Screens.Feedback,
        TimeZone: Screens.TimeZone,
        ZoneList: Screens.ZoneList,
        MoreSettings: Screens.MoreSettings,
        ProblemType: Screens.ProblemType,
        SelectProblem: Screens.SelectProblem,
        NetworkMode: _NetworkMode.default,
        ToolBox: _ToolBox.default,
        NetModeWireRelay: _NetModeWireRelay.default,
        NetModePppoe: _NetModePppoe.default,
        NetModeDhcp: _NetModeDhcp.default,
        NetModeStaticIP: _NetModeStaticIP.default,
        NetModeWirelessRelay: _NetModeWirelessRelay.default,
        ChildProtectHomePage: _ChildProtect.default,
        CPDeviceList: _CPDeviceList.default,
        CPDLAddDevice: _CPDLAddDevice.default,
        RouterPluginCommonSetting: _RouterPluginCommonSetting.default,
        FirmwareUpgrade: _CommonSetting.FirmwareUpgrade,
        MoreSetting: _CommonSetting.MoreSetting,
        RouterSetting: _RouterSetting.default,
        NetworkModeWirelessSelectWifi: _NetworkModeWirelessSelectWifi.default
    }, {
        initialRouteName: 'Home',
        navigationOptions: function navigationOptions(_ref) {
            var navigation = _ref.navigation;
            return {
                header: _react.default.createElement(_TitleBar.default, {
                    title: navigation.state.params ? navigation.state.params.title : '',
                    type: "dark",
                    onPressLeft: function onPressLeft() {
                        navigation.goBack();
                    }
                })
            };
        },
        transitionConfig: function transitionConfig() {
            return {
                screenInterpolator: interpolator
            };
        }
    });

    function interpolator(props) {
        var layout = props.layout,
            position = props.position,
            scene = props.scene;

        if (!layout.isMeasured) {
            return function (props) {
                var navigation = props.navigation,
                    scene = props.scene;
                var focused = navigation.state.index === scene.index;
                var opacity = focused ? 1 : 0;
                var translate = focused ? 0 : 1000000;
                return {
                    opacity: opacity,
                    transform: [{
                        translateX: translate
                    }, {
                        translateY: translate
                    }]
                };
            };
        }

        var interpolate = function interpolate(props) {
            var scene = props.scene,
                scenes = props.scenes;
            var index = scene.index;
            var lastSceneIndexInScenes = scenes.length - 1;
            var isBack = !scenes[lastSceneIndexInScenes].isActive;

            if (isBack) {
                var currentSceneIndexInScenes = scenes.findIndex(function (item) {
                    return item === scene;
                });
                var targetSceneIndexInScenes = scenes.findIndex(function (item) {
                    return item.isActive;
                });
                var targetSceneIndex = scenes[targetSceneIndexInScenes].index;
                var lastSceneIndex = scenes[lastSceneIndexInScenes].index;

                if (index !== targetSceneIndex && currentSceneIndexInScenes === lastSceneIndexInScenes) {
                    return {
                        first: Math.min(targetSceneIndex, index - 1),
                        last: index + 1
                    };
                } else if (index === targetSceneIndex && currentSceneIndexInScenes === targetSceneIndexInScenes) {
                    return {
                        first: index - 1,
                        last: Math.max(lastSceneIndex, index + 1)
                    };
                } else if (index === targetSceneIndex || currentSceneIndexInScenes > targetSceneIndexInScenes) {
                    return null;
                } else {
                    return {
                        first: index - 1,
                        last: index + 1
                    };
                }
            } else {
                return {
                    first: index - 1,
                    last: index + 1
                };
            }
        };

        if (!interpolate) return {
            opacity: 0
        };
        var p = interpolate(props);
        if (!p) return;
        var first = p.first,
            last = p.last;
        var index = scene.index;
        var opacity = position.interpolate({
            inputRange: [first, first + 0.01, index, last - 0.01, last],
            outputRange: [0, 1, 1, 0.85, 0]
        });
        var width = layout.initWidth;
        var translateX = position.interpolate({
            inputRange: [first, index, last],
            outputRange: [width, 0, width * -0.3]
        });
        var translateY = 0;
        return {
            opacity: opacity,
            transform: [{
                translateX: translateX
            }, {
                translateY: translateY
            }]
        };
    }

    ;

    var App = function (_React$Component) {
        (0, _inherits2.default)(App, _React$Component);

        function App() {
            (0, _classCallCheck2.default)(this, App);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).apply(this, arguments));
        }

        (0, _createClass2.default)(App, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var routerInfoManager = _RouterInfoHelper.default.sharedInstance();

                routerInfoManager.refreshRouterToken();
                routerInfoManager.requestLocalWifiInfo();
                routerInfoManager.requestCurrentRouterInfo();
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(RootStack, null);
            }
        }]);
        return App;
    }(_react.default.Component);

    exports.default = App;
}, 10004, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10284, 10297, 10918, 10007, 10046, 10049, 10055, 10082, 10142, 10148, 10151, 10154, 10166, 10172, 10181, 10187, 10223, 10226, 10232, 10397, 10406, 10409, 10418, 10421, 10424, 10427, 10493, 10499, 10505, 10353, 10508, 10511, 10523, 10079]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _miot = _$$_REQUIRE(_dependencyMap[6]);

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[15]);

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var selectedRepeatTextArray = ["执行一次", "每天", "周一至周五"];
    var selectedRepeatDayTextArray = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];

    var deviceId = _miot.Device.deviceID.replace("miwifi.", "");

    var url = '/appgateway/third/miwifi/app/r/api/xqsmarthome/request_smartcontroller';

    var HealthMode = function (_React$Component) {
        (0, _inherits2.default)(HealthMode, _React$Component);

        function HealthMode(props) {
            var _this;

            (0, _classCallCheck2.default)(this, HealthMode);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HealthMode).call(this, props));

            _this._createMenuData();

            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    }
                }),
                list: [],
                visible1: false,
                visible2: false
            };
            return _this;
        }

        (0, _createClass2.default)(HealthMode, [{
            key: "_createMenuData",
            value: function _createMenuData() {
                var device = this.props.navigation.getParam('param') || {};
                this._menuData = [];
            }
        }, {
            key: "_openSubPage",
            value: function _openSubPage(page, props) {
                this.props.navigation.navigate(page, props);
            }
        }, {
            key: "_generateID",
            value: function _generateID() {
                var idList = [];
                this.state.list.map(function (v, i) {
                    idList.push(v.id);
                });
                var arr1 = [30000, 30001, 30002, 30003, 30004, 30005, 30006, 30007, 30008, 30009];
                var arr2 = [].concat(arr1).filter(function (x) {
                    return [].concat(idList).every(function (y) {
                        return y !== x;
                    });
                });
                return arr2[0];
            }
        }, {
            key: "_openTimeSetting",
            value: function _openTimeSetting() {
                var _this2 = this;

                if (this.state.list.length >= 9) {
                    _reactNativeRootToast.default.show("小米WiFi：最多只能添加9个定时哦~");

                    return;
                }

                this.props.navigation.navigate("TimeSetting", {
                    type: 'add',
                    callback: function callback(item) {
                        item.id = _this2._generateID();
                        item.enabled = true;
                        var repeat;

                        var duration = _this2._calDurationTime(item.selectedWifiCloseRawString, item.selectedWifiOpenRawString);

                        if (item.selectedRepeatArray[0] == 0) {
                            repeat = 0;
                        } else if (item.selectedRepeatArray[0] == 1) {
                            repeat = '0,1,2,3,4,5,6';
                        } else if (item.selectedRepeatArray[0] == 2) {
                            repeat = '1,2,3,4,5';
                        } else {
                            repeat = item.selectedIndexArray1.map(function (v) {
                                if (v == 6) {
                                    return v = 0;
                                } else {
                                    return v = v + 1;
                                }
                            }).toString();
                        }

                        var data = _this2._generateXHRData({
                            id: item.id,
                            command: "scene_setting",
                            enabled: true,
                            repeat: repeat,
                            time: item.selectedWifiCloseRawString + ':00',
                            duration: duration
                        });

                        var payload = JSON.stringify(data);
                        var method = 'POST';
                        var paramsDic = {
                            method: method,
                            params: {
                                deviceId: deviceId,
                                payload: payload
                            }
                        };

                        _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                            if (res.code == 0) {
                                _this2.setState(function (prev) {
                                    list: prev.list.push(item);
                                }, function () {
                                    _this2.setState({
                                        dataSource: _this2.state.dataSource.cloneWithRows(_this2.state.list)
                                    });
                                });
                            }

                            _CommonUtils.default.ShowToastBottom('数据添加成功');
                        }).catch(function (e) {
                            _CommonUtils.default.ShowToastBottom('数据添加失败');
                        });
                    }
                });
            }
        }, {
            key: "_fetchListData",
            value: function _fetchListData() {
                var _this3 = this;

                this._recloneData();

                var payloadDic = {
                    command: 'get_multiple_scene_setting',
                    start_id: '30000',
                    end_id: '30009'
                };
                var payload = JSON.stringify(payloadDic);
                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        payload: payload
                    }
                };

                _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        var newList = _this3._formatDataList(res.scene_list);

                        _this3.setState({
                            list: newList
                        }, function () {
                            _this3.setState({
                                dataSource: _this3.state.dataSource.cloneWithRows(_this3.state.list)
                            });
                        });
                    }

                    _CommonUtils.default.ShowToastBottom('数据读取成功');
                }).catch(function (e) {
                    _CommonUtils.default.ShowToastBottom('数据读取失败');

                    _this3.props.navigation.goBack();
                });
            }
        }, {
            key: "_formatDataList",
            value: function _formatDataList(origin) {
                var _this4 = this;

                var newList = [];
                origin.map(function (v, i) {
                    var id = v.id;

                    if (v.launch) {
                        var enabled = v.launch.timer.enabled;
                        var repeat = v.launch.timer.repeat;
                        var time = v.launch.timer.time;
                        var selectedWifiCloseRawString = time.substring(0, 5);
                        var selectedWifiCloseArray = selectedWifiCloseRawString.split(':');
                        var selectedRepeatArray = [];
                        var selectedIndexArray1 = [];
                        var selectedCustomArray = [];
                        var duration = v.action_list[0].extra.duration;

                        var selectedWifiOpenRawString = _this4._calEndTime(selectedWifiCloseArray, duration);

                        var selectedWifiOpenArray = selectedWifiOpenRawString.split(':');

                        if (repeat) {
                            if (repeat == '1,2,3,4,5') {
                                selectedRepeatArray = [2];
                                selectedIndexArray1 = selectedCustomArray = [0, 1, 2, 3, 4];
                            } else if (repeat == '0,1,2,3,4,5,6' || repeat == '1,2,3,4,5,6,0') {
                                selectedRepeatArray = [1];
                                selectedIndexArray1 = selectedCustomArray = [0, 1, 2, 3, 4, 5, 6];
                            } else {
                                selectedRepeatArray = [3];
                                repeat.split(',').map(function (v) {
                                    if (v == 0) {
                                        selectedIndexArray1.push(6);
                                    } else {
                                        selectedIndexArray1.push(v - 1);
                                    }
                                });
                                selectedCustomArray = selectedIndexArray1;
                            }
                        } else {
                            selectedRepeatArray = [0];
                            selectedIndexArray1 = [];
                            selectedCustomArray = [5, 6];
                        }

                        newList.push({
                            id: id,
                            selectedWifiCloseRawString: selectedWifiCloseRawString,
                            selectedWifiCloseArray: selectedWifiCloseArray,
                            selectedRepeatArray: selectedRepeatArray,
                            selectedIndexArray1: selectedIndexArray1,
                            selectedWifiOpenRawString: selectedWifiOpenRawString,
                            selectedCustomArray: selectedCustomArray,
                            selectedWifiOpenArray: selectedWifiOpenArray,
                            enabled: enabled,
                            duration: duration
                        });
                    } else {
                        newList.push({
                            id: id,
                            selectedWifiCloseRawString: '00:00',
                            selectedWifiCloseArray: ["00", "00"],
                            selectedRepeatArray: [0],
                            selectedIndexArray1: [0],
                            selectedWifiOpenRawString: '08:00',
                            selectedCustomArray: [],
                            selectedWifiOpenArray: ["08", "00"],
                            enabled: false,
                            duration: 28800000
                        });
                    }
                });
                return newList;
            }
        }, {
            key: "_calEndTime",
            value: function _calEndTime(startTimeArray, duration) {
                var startHour = startTimeArray[0];
                var startMinute = startTimeArray[1];
                var startMilliSecond = (Number(startHour * 3600) + Number(startMinute * 60)) * 1000;
                var endMilliSecond = startMilliSecond + duration;

                var endTime = this._secTotime(endMilliSecond);

                return endTime;
            }
        }, {
            key: "_calDurationTime",
            value: function _calDurationTime(startTime, endTime) {
                var startTimeArray = startTime.split(':');
                var endTimeArray = endTime.split(':');
                var startHour = startTimeArray[0];
                var startMinute = startTimeArray[1];
                var startMilliSecond = (Number(startHour * 3600) + Number(startMinute * 60)) * 1000;
                var endHour = endTimeArray[0];
                var endMinute = endTimeArray[1];
                var endMilliSecond = (Number(endHour * 3600) + Number(endMinute * 60)) * 1000;
                var duration = endMilliSecond - startMilliSecond;

                if (duration < 0) {
                    duration = duration + 86400;
                }

                return duration;
            }
        }, {
            key: "_secTotime",
            value: function _secTotime(s) {
                var t;
                s = s / 1000;

                if (s > -1) {
                    var hour = Math.floor(s / 3600);
                    var min = Math.floor(s / 60) % 60;
                    hour = hour >= 24 ? hour - 24 : hour;
                    min = min >= 60 ? min - 60 : min;

                    if (hour < 10) {
                        t = '0' + hour + ":";
                    } else {
                        t = hour + ":";
                    }

                    if (min < 10) {
                        t += "0";
                    }

                    t += min;
                }

                return t;
            }
        }, {
            key: "_recloneData",
            value: function _recloneData() {
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(this.state.list)
                });
            }
        }, {
            key: "_editItem",
            value: function _editItem(rowData, sectionID, rowID) {
                var _this5 = this;

                this._openSubPage('TimeSetting', {
                    type: 'edit',
                    info: rowData,
                    callback: function callback(info) {
                        var repeat = info.selectedIndexArray1.map(function (v) {
                            if (v == 6) {
                                return v = 0;
                            } else {
                                return v = v + 1;
                            }
                        }).toString();

                        var duration = _this5._calDurationTime(info.selectedWifiCloseRawString, info.selectedWifiOpenRawString);

                        var data = _this5._generateXHRData({
                            id: info.id,
                            command: "scene_update",
                            enabled: info.enabled,
                            repeat: repeat,
                            time: info.selectedWifiCloseRawString + ':00',
                            duration: duration
                        });

                        var payload = JSON.stringify(data);
                        var method = 'POST';
                        var paramsDic = {
                            method: method,
                            params: {
                                deviceId: deviceId,
                                payload: payload
                            }
                        };

                        _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                            if (res.code == 0) {
                                var copyList = JSON.parse(JSON.stringify(_this5.state.list));
                                copyList.forEach(function (v, i) {
                                    if (v.id == param.rowData.id) {
                                        copyList[i] = item;
                                    }
                                });

                                _this5.setState(function (prev) {
                                    list: copyList;
                                }, function () {
                                    _this5.setState({
                                        dataSource: _this5.state.dataSource.cloneWithRows(_this5.state.list)
                                    });
                                });

                                _CommonUtils.default.ShowToastBottom('编辑成功');
                            }
                        }).catch(function (e) {
                            _CommonUtils.default.ShowToastBottom('编辑失败');
                        });
                    }
                });
            }
        }, {
            key: "showLoading",
            value: function showLoading() {
                this.setState({
                    visible2: true
                });
            }
        }, {
            key: "hideLoading",
            value: function hideLoading() {
                this.setState({
                    visible2: false
                });
            }
        }, {
            key: "getInnerView",
            value: function getInnerView(rowData) {
                var _this6 = this;

                var spellTitle = rowData.selectedWifiCloseRawString + '关闭Wi-Fi，' + rowData.selectedWifiOpenRawString + '开启Wi-Fi';
                var repeatSubtitle;

                if (selectedRepeatTextArray[rowData.selectedRepeatArray[0]]) {
                    repeatSubtitle = selectedRepeatTextArray[rowData.selectedRepeatArray[0]];
                } else {
                    repeatSubtitle = rowData.selectedIndexArray1.map(function (o) {
                        return selectedRepeatDayTextArray[o];
                    }).join(",");
                }

                return _react.default.createElement(_reactNative.View, {
                    style: styles.innerContainer
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.innerTitle,
                    numberOfLines: 1
                }, spellTitle), _react.default.createElement(_reactNative.Text, {
                    style: styles.innersubTitle,
                    numberOfLines: 1
                }, repeatSubtitle)), _react.default.createElement(_Switch.default, {
                    style: {
                        width: 60,
                        height: 30
                    },
                    onTintColor: "#2C7DFA",
                    tintColor: "#dedede",
                    value: rowData.enabled,
                    onValueChange: function onValueChange(value) {
                        _this6._switchChange(value, rowData);
                    }
                }), _react.default.createElement(_Separator.default, {
                    style: {
                        height: 0.5
                    }
                }));
            }
        }, {
            key: "_generateXHRData",
            value: function _generateXHRData(_ref) {
                var id = _ref.id,
                    command = _ref.command,
                    enabled = _ref.enabled,
                    duration = _ref.duration,
                    repeat = _ref.repeat,
                    time = _ref.time;
                var obj = {
                    "id": 30000,
                    "command": "scene_setting",
                    "name": "健康模式",
                    "action_list": [{
                        "block": 1,
                        "delay": 0,
                        "extra": {
                            "duration": 28800000,
                            "total_length": 0
                        },
                        "keyName": "健康模式",
                        "name": "小米路由器",
                        "thirdParty": "xmrouter",
                        "type": "normal_wifi_down"
                    }],
                    "launch": {
                        "timer": {
                            "enabled": true,
                            "time": "00:00:00",
                            "repeat": "1,2,3,4,5"
                        }
                    }
                };
                if (id) obj.id = id;
                if (command) obj.command = command;
                obj.launch.timer.enabled = enabled;
                if (time) obj.launch.timer.time = time;

                if (repeat) {
                    obj.launch.timer.repeat = repeat;
                } else {
                    delete obj.launch.timer.repeat;
                }

                if (duration) obj.action_list[0].extra.duration = duration;
                return obj;
            }
        }, {
            key: "_switchChange",
            value: function _switchChange(value, rowData) {
                var _this7 = this;

                rowData.enabled = value;

                var data = this._generateXHRData({
                    id: rowData.id,
                    command: "scene_update",
                    enabled: value,
                    duration: rowData.duration
                });

                this.showLoading();
                var payload = JSON.stringify(data);
                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        payload: payload
                    }
                };

                _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                    _this7.hideLoading();

                    if (res.code == 0) { }
                }).catch(function (e) {
                    return undefined;
                });
            }
        }, {
            key: "_deleteItem",
            value: function _deleteItem() {
                var _this8 = this;

                var data = {
                    id: this.state.deleteItemId,
                    command: "scene_delete"
                };
                this.showLoading();
                var payload = JSON.stringify(data);
                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        payload: payload
                    }
                };

                _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                    _this8.hideLoading();

                    if (res.code == 0) {
                        var copyList = _this8.state.list.filter(function (v, i) {
                            return v.id != _this8.state.deleteItemId;
                        });

                        _this8.setState({
                            list: copyList
                        }, function () {
                            _this8.setState({
                                dataSource: _this8.state.dataSource.cloneWithRows(_this8.state.list)
                            });
                        });
                    }
                }).catch(function (e) {
                    return undefined;
                });
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, sectionID, rowID) {
                var _this9 = this;

                var spellTitle = rowData.selectedWifiCloseRawString + '关闭Wi-Fi，' + rowData.selectedWifiOpenRawString + '开启Wi-Fi';
                var repeatSubtitle;

                if (selectedRepeatTextArray[rowData.selectedRepeatArray[0]]) {
                    repeatSubtitle = selectedRepeatTextArray[rowData.selectedRepeatArray[0]];
                } else {
                    repeatSubtitle = rowData.selectedIndexArray1.map(function (o) {
                        return selectedRepeatDayTextArray[o];
                    }).join(",");
                }

                return _react.default.createElement(_reactNative.TouchableHighlight, {
                    style: [styles.touchStyle, {
                        width: '100%',
                        height: 65,
                        padding: 15,
                        justifyContent: 'center',
                        marginTop: 0,
                        borderBottomWidth: 1,
                        borderColor: '#eee'
                    }],
                    underlayColor: "rgba(0,0,0,.05)",
                    onPress: function onPress(_) {
                        _this9._editItem(rowData, sectionID, rowID);
                    },
                    onLongPress: function onLongPress(_) {
                        _this9.setState({
                            visible1: true,
                            deleteItemId: rowData.id
                        });
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.innerContainer
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.innerTitle,
                    numberOfLines: 1
                }, spellTitle), _react.default.createElement(_reactNative.Text, {
                    style: styles.innersubTitle,
                    numberOfLines: 1
                }, repeatSubtitle)), _react.default.createElement(_Switch.default, {
                    style: {
                        width: 46,
                        height: 24
                    },
                    onTintColor: "#32BAC0",
                    tintColor: "#F0F0F0",
                    value: rowData.enabled,
                    onValueChange: function onValueChange(value) {
                        _this9._switchChange(value, rowData);
                    }
                }), _react.default.createElement(_Separator.default, {
                    style: {
                        height: 0.5
                    }
                })));
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                var _this10 = this;

                this._gestureHandlers = {
                    onStartShouldSetResponder: function onStartShouldSetResponder() {
                        return true;
                    },
                    onMoveShouldSetResponder: function onMoveShouldSetResponder() {
                        return true;
                    },
                    onResponderGrant: function onResponderGrant() {
                        _this10.setState({
                            bg: 'red'
                        });
                    },
                    onResponderMove: function onResponderMove() { },
                    onResponderRelease: function onResponderRelease() {
                        _this10.setState({
                            bg: 'white'
                        });
                    }
                };

                this._fetchListData();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "render",
            value: function render() {
                var _this11 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.header
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[18])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.titleText
                }, "\u5B9A\u65F6\u5173\u95EDWi-Fi\uFF0C\u907F\u514D\u71AC\u591C\u4E0A\u7F51\uFF0C\u5065\u5EB7\u751F\u6D3B\u6D3B")), _react.default.createElement(_reactNative.View, {
                    style: styles.listCont
                }, _react.default.createElement(_reactNative.ListView, {
                    style: styles.list,
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this)
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.addWrap
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        return _this11._openTimeSetting();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.addcont
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.addIcon,
                    resizeMode: "contain",
                    source: _$$_REQUIRE(_dependencyMap[19])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.addText
                }, "\u6DFB\u52A0\u5B9A\u65F6")))), _react.default.createElement(_LoadingDialog.default, {
                    visible: this.state.visible2,
                    message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E",
                    timeout: 10000
                }), _react.default.createElement(_MessageDialog.default, {
                    visible: this.state.visible1,
                    message: '确认删除此定时？',
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#666666'
                        },
                        callback: function callback(_) {
                            _this11.setState({
                                visible1: false,
                                deleteItemId: null
                            });
                        }
                    }, {
                        text: '确定',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(_) {
                            _this11.setState({
                                visible1: false
                            });

                            _this11._deleteItem();
                        }
                    }],
                    onDismiss: function onDismiss(_) { }
                }));
            }
        }]);
        return HealthMode;
    }(_react.default.Component);

    exports.default = HealthMode;

    HealthMode.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '健康模式',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        icon: {
            width: 100,
            height: 100,
            margin: 40
        },
        listCont: {
            flex: 1
        },
        list: {
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 60
        },
        header: {
            backgroundColor: '#1a1b2a',
            alignItems: 'center',
            height: 280
        },
        innerContainer: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center'
        },
        innerTitle: {
            color: '#000'
        },
        innersubTitle: {
            fontSize: 12
        },
        titleText: {
            color: '#rgba(255,255,255,.5)',
            margin: 20
        },
        addWrap: {
            position: 'absolute',
            bottom: 0,
            left: 6,
            right: 6
        },
        addcont: {
            alignItems: 'center',
            justifyContent: 'center',
            height: 60,
            marginTop: 10,
            marginBottom: 10
        },
        addIcon: {
            width: 40,
            height: 40
        },
        addText: {
            marginTop: 5
        },
        separator: {
            backgroundColor: '#000',
            marginTop: 20
        }
    });
}, 10007, [14305, 14320, 14323, 14371, 14377, 14386, 10074, 10284, 10368, 10347, 10743, 10740, 10332, 10297, 10344, 10033, 10010, 10037, 10040, 10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _exportNames = {
        ToastContainer: true
    };
    Object.defineProperty(exports, "ToastContainer", {
        enumerable: true,
        get: function get() {
            return _ToastContainer.default;
        }
    });
    exports.default = undefined;

    var _Toast = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

    Object.keys(_Toast).forEach(function (key) {
        if (key === "default" || key === "__esModule") return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
        Object.defineProperty(exports, key, {
            enumerable: true,
            get: function get() {
                return _Toast[key];
            }
        });
    });

    var _ToastContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _default = _Toast.default;
    exports.default = _default;
}, 10010, [14305, 14308, 10013, 10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Manager", {
        enumerable: true,
        get: function get() {
            return _reactNativeRootSiblings.default;
        }
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeRootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _ToastContainer = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

    var Toast = function (_Component) {
        (0, _inherits2.default)(Toast, _Component);

        function Toast() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, Toast);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this._toast = null;

            _this.componentWillMount = function () {
                _this._toast = new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, _this.props, {
                    duration: 0
                })));
            };

            _this.componentWillReceiveProps = function (nextProps) {
                _this._toast.update(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, nextProps, {
                    duration: 0
                })));
            };

            _this.componentWillUnmount = function () {
                _this._toast.destroy();
            };

            return _this;
        }

        (0, _createClass2.default)(Toast, [{
            key: "render",
            value: function render() {
                return null;
            }
        }]);
        return Toast;
    }(_react.Component);

    Toast.displayName = 'Toast';
    Toast.propTypes = _ToastContainer.default.propTypes;
    Toast.positions = _ToastContainer.positions;
    Toast.durations = _ToastContainer.durations;

    Toast.show = function (message) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
            position: _ToastContainer.positions.BOTTOM,
            duration: _ToastContainer.durations.SHORT
        };
        return new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, options, {
            visible: true
        }), message));
    };

    Toast.hide = function (toast) {
        if (toast instanceof _reactNativeRootSiblings.default) {
            toast.destroy();
        } else { }
    };

    var _default = Toast;
    exports.default = _default;
}, 10013, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10016, 10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.setSiblingWrapper = setSiblingWrapper;
    exports.RootSiblingParent = RootSiblingParent;
    exports.RootSiblingPortal = RootSiblingPortal;
    exports.default = undefined;

    var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

    var _ChildrenWrapper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _wrapRootComponent3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var siblingWrapper = function siblingWrapper(sibling) {
        return sibling;
    };

    function renderSibling(sibling) {
        return siblingWrapper(sibling);
    }

    if (!global.__rootSiblingsInjected && !global.__rootSiblingsDisabled) {
        _reactNative.AppRegistry.setWrapperComponentProvider(function () {
            return Root;
        });

        global.__rootSiblingsInjected = true;
    }

    function setSiblingWrapper(wrapper) {
        siblingWrapper = wrapper;
    }

    var _wrapRootComponent = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
        Root = _wrapRootComponent.Root,
        defaultManager = _wrapRootComponent.manager;

    var uuid = 0;
    var managerStack = [defaultManager];
    var inactiveManagers = new Set();

    function getActiveManager() {
        for (var i = managerStack.length - 1; i >= 0; i--) {
            var manager = managerStack[i];

            if (!inactiveManagers.has(manager)) {
                return manager;
            }
        }

        return defaultManager;
    }

    var RootSiblingsManager = function () {
        function RootSiblingsManager(element, callback) {
            (0, _classCallCheck2.default)(this, RootSiblingsManager);
            this.id = "root-sibling-" + (uuid + 1);
            this.manager = getActiveManager();
            this.manager.update(this.id, element, callback);
            uuid++;
        }

        (0, _createClass2.default)(RootSiblingsManager, [{
            key: "update",
            value: function update(element, callback) {
                this.manager.update(this.id, element, callback);
            }
        }, {
            key: "destroy",
            value: function destroy(callback) {
                this.manager.destroy(this.id, callback);
            }
        }]);
        return RootSiblingsManager;
    }();

    exports.default = RootSiblingsManager;

    function RootSiblingParent(props) {
        var inactive = props.inactive;

        var _useState = (0, _react.useState)(function () {
            var _wrapRootComponent2 = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
                parentRoot = _wrapRootComponent2.Root,
                parentManager = _wrapRootComponent2.manager;

            managerStack.push(parentManager);

            if (inactive) {
                inactiveManagers.add(parentManager);
            }

            return {
                Root: parentRoot,
                manager: parentManager
            };
        }),
            _useState2 = (0, _slicedToArray2.default)(_useState, 1),
            sibling = _useState2[0];

        (0, _react.useEffect)(function () {
            return function () {
                if (sibling) {
                    var index = managerStack.indexOf(sibling.manager);

                    if (index > 0) {
                        managerStack.splice(index, 1);
                    }
                }
            };
        }, [sibling]);

        if (inactive && sibling && !inactiveManagers.has(sibling.manager)) {
            inactiveManagers.add(sibling.manager);
        } else if (!inactive && sibling && inactiveManagers.has(sibling.manager)) {
            inactiveManagers.delete(sibling.manager);
        }

        var Parent = sibling.Root;
        return _react.default.createElement(Parent, null, props.children);
    }

    function RootSiblingPortal(props) {
        var _useState3 = (0, _react.useState)(function () {
            return new RootSiblingsManager(null);
        }),
            _useState4 = (0, _slicedToArray2.default)(_useState3, 1),
            sibling = _useState4[0];

        sibling.update(props.children);
        (0, _react.useEffect)(function () {
            if (sibling) {
                return function () {
                    return sibling.destroy();
                };
            }
        }, [sibling]);
        return null;
    }
}, 10016, [14308, 14305, 14347, 14320, 14323, 10297, 10033, 10019, 10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = ChildrenWrapper;

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    function ChildrenWrapper(props) {
        return _react.default.createElement(_react.default.Fragment, null, props.children);
    }
}, 10019, [14305, 10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = wrapRootComponent;

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _RootController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _RootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    function wrapRootComponent(_Root, renderSibling) {
        var controller = new _RootController.default();
        return {
            Root: function Root(props) {
                return _react.default.createElement(_RootSiblings.default, {
                    controller: controller,
                    renderSibling: renderSibling
                }, _react.default.createElement(_Root, props));
            },
            manager: {
                update: function update(id, element, callback) {
                    controller.update(id, element, callback);
                },
                destroy: function destroy(id, callback) {
                    controller.destroy(id, callback);
                }
            }
        };
    }
}, 10022, [14305, 10297, 10025, 10028]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = exports.RootControllerChanges = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var RootControllerChanges;
    exports.RootControllerChanges = RootControllerChanges;

    (function (RootControllerChanges) {
        RootControllerChanges[RootControllerChanges["Insert"] = 0] = "Insert";
        RootControllerChanges[RootControllerChanges["Update"] = 1] = "Update";
        RootControllerChanges[RootControllerChanges["Remove"] = 2] = "Remove";
    })(RootControllerChanges || (exports.RootControllerChanges = RootControllerChanges = {}));

    var RootController = function () {
        function RootController() {
            (0, _classCallCheck2.default)(this, RootController);
            this.siblings = new Set();
            this.pendingActions = [];
            this.callback = null;
        }

        (0, _createClass2.default)(RootController, [{
            key: "update",
            value: function update(id, element, callback) {
                if (!this.siblings.has(id)) {
                    this.emit(id, {
                        change: RootControllerChanges.Insert,
                        element: element,
                        updateCallback: callback
                    });
                    this.siblings.add(id);
                } else {
                    this.emit(id, {
                        change: RootControllerChanges.Update,
                        element: element,
                        updateCallback: callback
                    });
                }
            }
        }, {
            key: "destroy",
            value: function destroy(id, callback) {
                if (this.siblings.has(id)) {
                    this.emit(id, {
                        change: RootControllerChanges.Remove,
                        element: null,
                        updateCallback: callback
                    });
                    this.siblings.delete(id);
                } else if (callback) {
                    callback();
                }
            }
        }, {
            key: "setCallback",
            value: function setCallback(callback) {
                this.callback = callback;
                this.pendingActions.forEach(function (_ref) {
                    var id = _ref.id,
                        action = _ref.action;
                    callback(id, action);
                });
            }
        }, {
            key: "emit",
            value: function emit(id, action) {
                if (this.callback) {
                    this.callback(id, action);
                } else {
                    this.pendingActions.push({
                        action: action,
                        id: id
                    });
                }
            }
        }]);
        return RootController;
    }();

    exports.default = RootController;
}, 10025, [14305, 14320, 14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _staticContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _RootController = _$$_REQUIRE(_dependencyMap[9]);

    var _default = function (_Component) {
        (0, _inherits2.default)(_default, _Component);

        function _default(props) {
            var _this;

            (0, _classCallCheck2.default)(this, _default);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props));
            _this.updatedSiblings = new Set();
            _this.siblingsPool = [];
            _this.state = {
                siblings: []
            };
            return _this;
        }

        (0, _createClass2.default)(_default, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;

                this.props.controller.setCallback(function (id, change) {
                    setImmediate(function () {
                        return _this2.commitChange(id, change);
                    });
                });
            }
        }, {
            key: "componentDidUpdate",
            value: function componentDidUpdate() {
                this.updatedSiblings.clear();
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_react.default.Fragment, null, this.props.children, this.renderSiblings());
            }
        }, {
            key: "commitChange",
            value: function commitChange(id, _ref) {
                var _this3 = this;

                var change = _ref.change,
                    element = _ref.element,
                    updateCallback = _ref.updateCallback;
                var siblings = Array.from(this.siblingsPool);
                var index = siblings.findIndex(function (sibling) {
                    return sibling.id === id;
                });

                if (change === _RootController.RootControllerChanges.Remove) {
                    if (index > -1) {
                        siblings.splice(index, 1);
                    } else {
                        this.invokeCallback(updateCallback);
                        return;
                    }
                } else if (change === _RootController.RootControllerChanges.Update) {
                    if (index > -1) {
                        siblings.splice(index, 1, {
                            element: element,
                            id: id
                        });
                        this.updatedSiblings.add(id);
                    } else {
                        this.invokeCallback(updateCallback);
                        return;
                    }
                } else {
                    if (index > -1) {
                        siblings.splice(index, 1);
                    }

                    siblings.push({
                        element: element,
                        id: id
                    });
                    this.updatedSiblings.add(id);
                }

                this.siblingsPool = siblings;
                this.setState({
                    siblings: siblings
                }, function () {
                    return _this3.invokeCallback(updateCallback);
                });
            }
        }, {
            key: "invokeCallback",
            value: function invokeCallback(callback) {
                if (callback) {
                    callback();
                }
            }
        }, {
            key: "renderSiblings",
            value: function renderSiblings() {
                var _this4 = this;

                return this.state.siblings.map(function (_ref2) {
                    var id = _ref2.id,
                        element = _ref2.element;
                    return _react.default.createElement(_staticContainer.default, {
                        key: "root-sibling-" + id,
                        shouldUpdate: _this4.updatedSiblings.has(id)
                    }, _this4.wrapSibling(element));
                });
            }
        }, {
            key: "wrapSibling",
            value: function wrapSibling(element) {
                var renderSibling = this.props.renderSibling;

                if (renderSibling) {
                    return renderSibling(element);
                } else {
                    return element;
                }
            }
        }]);
        return _default;
    }(_react.Component);

    exports.default = _default;
}, 10028, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10031, 10025]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _$$_REQUIRE(_dependencyMap[6]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _default = function (_Component) {
        (0, _inherits2.default)(_default, _Component);

        function _default() {
            (0, _classCallCheck2.default)(this, _default);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).apply(this, arguments));
        }

        (0, _createClass2.default)(_default, [{
            key: "shouldComponentUpdate",
            value: function shouldComponentUpdate(nextProps) {
                return nextProps.shouldUpdate;
            }
        }, {
            key: "render",
            value: function render() {
                var child = this.props.children;
                return child === null || child === false ? null : _react.Children.only(child);
            }
        }]);
        return _default;
    }(_react.Component);

    exports.default = _default;
    _default.propTypes = {
        shouldUpdate: _propTypes.default.bool.isRequired
    };
}, 10031, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.durations = exports.positions = exports.default = undefined;

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var TOAST_MAX_WIDTH = 0.8;
    var TOAST_ANIMATION_DURATION = 200;
    var positions = {
        TOP: 20,
        BOTTOM: -20,
        CENTER: 0
    };
    exports.positions = positions;
    var durations = {
        LONG: 3500,
        SHORT: 2000
    };
    exports.durations = durations;

    var styles = _reactNative.StyleSheet.create({
        defaultStyle: {
            position: 'absolute',
            left: 0,
            right: 0,
            justifyContent: 'center',
            alignItems: 'center'
        },
        containerStyle: {
            padding: 10,
            backgroundColor: '#000',
            opacity: 0.8,
            borderRadius: 5
        },
        shadowStyle: {
            shadowColor: '#000',
            shadowOffset: {
                width: 4,
                height: 4
            },
            shadowOpacity: 0.8,
            shadowRadius: 6,
            elevation: 10
        },
        textStyle: {
            fontSize: 16,
            color: '#fff',
            textAlign: 'center'
        }
    });

    var ToastContainer = function (_Component) {
        (0, _inherits2.default)(ToastContainer, _Component);

        function ToastContainer() {
            var _this;

            (0, _classCallCheck2.default)(this, ToastContainer);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToastContainer).apply(this, arguments));

            _this.componentDidMount = function () {
                _reactNative.Dimensions.addEventListener('change', _this._windowChanged);

                if (_this.props.keyboardAvoiding) {
                    _reactNative.Keyboard.addListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
                }

                if (_this.state.visible) {
                    _this._showTimeout = setTimeout(function () {
                        return _this._show();
                    }, _this.props.delay);
                }
            };

            _this.componentDidUpdate = function (prevProps) {
                if (_this.props.visible !== prevProps.visible) {
                    if (_this.props.visible) {
                        clearTimeout(_this._showTimeout);
                        clearTimeout(_this._hideTimeout);
                        _this._showTimeout = setTimeout(function () {
                            return _this._show();
                        }, _this.props.delay);
                    } else {
                        _this._hide();
                    }

                    _this.setState({
                        visible: _this.props.visible
                    });
                }
            };

            _this.componentWillUnmount = function () {
                _this._hide();

                _reactNative.Dimensions.removeEventListener('change', _this._windowChanged);

                _reactNative.Keyboard.removeListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
            };

            _this._animating = false;
            _this._root = null;
            _this._hideTimeout = null;
            _this._showTimeout = null;
            _this._keyboardHeight = 0;

            _this._windowChanged = function (_ref) {
                var window = _ref.window;

                _this.setState({
                    windowWidth: window.width,
                    windowHeight: window.height
                });
            };

            _this._keyboardDidChangeFrame = function (_ref2) {
                var endCoordinates = _ref2.endCoordinates;

                _this.setState({
                    keyboardScreenY: endCoordinates.screenY
                });
            };

            _this._show = function () {
                clearTimeout(_this._showTimeout);

                if (!_this._animating) {
                    clearTimeout(_this._hideTimeout);
                    _this._animating = true;

                    _this._root.setNativeProps({
                        pointerEvents: 'auto'
                    });

                    _this.props.onShow && _this.props.onShow(_this.props.siblingManager);

                    _reactNative.Animated.timing(_this.state.opacity, {
                        toValue: _this.props.opacity,
                        duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
                        easing: _reactNative.Easing.out(_reactNative.Easing.ease)
                    }).start(function (_ref3) {
                        var finished = _ref3.finished;

                        if (finished) {
                            _this._animating = !finished;
                            _this.props.onShown && _this.props.onShown(_this.props.siblingManager);

                            if (_this.props.duration > 0) {
                                _this._hideTimeout = setTimeout(function () {
                                    return _this._hide();
                                }, _this.props.duration);
                            }
                        }
                    });
                }
            };

            _this._hide = function () {
                clearTimeout(_this._showTimeout);
                clearTimeout(_this._hideTimeout);

                if (!_this._animating) {
                    if (_this._root) {
                        _this._root.setNativeProps({
                            pointerEvents: 'none'
                        });
                    }

                    if (_this.props.onHide) {
                        _this.props.onHide(_this.props.siblingManager);
                    }

                    _reactNative.Animated.timing(_this.state.opacity, {
                        toValue: 0,
                        duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
                        easing: _reactNative.Easing.in(_reactNative.Easing.ease)
                    }).start(function (_ref4) {
                        var finished = _ref4.finished;

                        if (finished) {
                            _this._animating = false;
                            _this.props.onHidden && _this.props.onHidden(_this.props.siblingManager);
                        }
                    });
                }
            };

            var _window = _reactNative.Dimensions.get('window');

            _this.state = {
                visible: _this.props.visible,
                opacity: new _reactNative.Animated.Value(0),
                windowWidth: _window.width,
                windowHeight: _window.height,
                keyboardScreenY: _window.height
            };
            return _this;
        }

        (0, _createClass2.default)(ToastContainer, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                var props = this.props;
                var windowWidth = this.state.windowWidth;
                var offset = props.position;
                var _this$state = this.state,
                    windowHeight = _this$state.windowHeight,
                    keyboardScreenY = _this$state.keyboardScreenY;
                var keyboardHeight = Math.max(windowHeight - keyboardScreenY, 0);
                var position = offset ? (0, _defineProperty2.default)({}, offset < 0 ? 'bottom' : 'top', offset < 0 ? keyboardHeight - offset : offset) : {
                    top: 0,
                    bottom: keyboardHeight
                };
                return this.state.visible || this._animating ? _react.default.createElement(_reactNative.View, {
                    style: [styles.defaultStyle, position],
                    pointerEvents: "box-none"
                }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
                    onPress: function onPress() {
                        typeof _this2.props.onPress === 'function' ? _this2.props.onPress() : null;
                        _this2.props.hideOnPress ? _this2._hide() : null;
                    }
                }, _react.default.createElement(_reactNative.Animated.View, {
                    style: [styles.containerStyle, {
                        marginHorizontal: windowWidth * 0.09999999999999998
                    }, props.containerStyle, props.backgroundColor && {
                        backgroundColor: props.backgroundColor
                    }, {
                        opacity: this.state.opacity
                    }, props.shadow && styles.shadowStyle, props.shadowColor && {
                        shadowColor: props.shadowColor
                    }],
                    pointerEvents: "none",
                    ref: function ref(ele) {
                        return _this2._root = ele;
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: [styles.textStyle, props.textStyle, props.textColor && {
                        color: props.textColor
                    }]
                }, this.props.children)))) : null;
            }
        }]);
        return ToastContainer;
    }(_react.Component);

    ToastContainer.displayName = 'ToastContainer';
    ToastContainer.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {
        containerStyle: _reactNative.ViewPropTypes.style,
        duration: _propTypes.default.number,
        visible: _propTypes.default.bool,
        position: _propTypes.default.number,
        animation: _propTypes.default.bool,
        shadow: _propTypes.default.bool,
        keyboardAvoiding: _propTypes.default.bool,
        backgroundColor: _propTypes.default.string,
        opacity: _propTypes.default.number,
        shadowColor: _propTypes.default.string,
        textColor: _propTypes.default.string,
        textStyle: _reactNative.Text.propTypes.style,
        delay: _propTypes.default.number,
        hideOnPress: _propTypes.default.bool,
        onPress: _propTypes.default.func,
        onHide: _propTypes.default.func,
        onHidden: _propTypes.default.func,
        onShow: _propTypes.default.func,
        onShown: _propTypes.default.func
    });
    ToastContainer.defaultProps = {
        visible: false,
        duration: durations.SHORT,
        animation: true,
        shadow: true,
        position: positions.BOTTOM,
        opacity: 0.8,
        delay: 0,
        hideOnPress: true,
        keyboardAvoiding: true
    };
    var _default = ToastContainer;
    exports.default = _default;
}, 10034, [14308, 14305, 14314, 14317, 14320, 14323, 14371, 14377, 14386, 10297, 10318, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var CommonUtils = function () {
        function CommonUtils() {
            (0, _classCallCheck2.default)(this, CommonUtils);
        }

        (0, _createClass2.default)(CommonUtils, null, [{
            key: "isTextEmpty",
            value: function isTextEmpty(text) {
                try {
                    if (text === undefined || text === null || text.trim() === "") {
                        return true;
                    }

                    return false;
                } catch (e) {
                    return false;
                }
            }
        }, {
            key: "isNull",
            value: function isNull(object) {
                if (object === undefined || object === null) {
                    return true;
                }

                return false;
            }
        }, {
            key: "getArrayPosition",
            value: function getArrayPosition(array, arr) {
                for (var i = 0; i < array.length; i++) {
                    if (array[i] == arr) {
                        return i;
                    }
                }
            }
        }, {
            key: "parserDateString",
            value: function parserDateString(dateString) {
                if (dateString) {
                    var regEx = new RegExp("\\-", "gi");
                    var validDateStr = dateString.replace(regEx, "/");
                    var milliseconds = Date.parse(validDateStr);
                    return new Date(milliseconds);
                }
            }
        }, {
            key: "getCurrentTimeStr",
            value: function getCurrentTimeStr() {
                var date = new Date();
                var y = date.getFullYear();
                var m = date.getMonth() + 1;
                m = m < 10 ? '0' + m : m;
                var d = date.getDate();
                d = d < 10 ? '0' + d : d;
                var h = date.getHours();
                h = h < 10 ? '0' + h : h;
                var minute = date.getMinutes();
                var second = date.getSeconds();
                minute = minute < 10 ? '0' + minute : minute;
                second = second < 10 ? '0' + second : second;
                return y + '' + m + '' + d + '' + h + '' + minute + '' + second;
            }
        }, {
            key: "isEmojiCharacterInString",
            value: function isEmojiCharacterInString(substring) {
                for (var i = 0; i < substring.length; i++) {
                    var hs = substring.charCodeAt(i);

                    if (0xd800 <= hs && hs <= 0xdbff) {
                        if (substring.length > 1) {
                            var ls = substring.charCodeAt(i + 1);
                            var uc = (hs - 0xd800) * 0x400 + (ls - 0xdc00) + 0x10000;

                            if (0x1d000 <= uc && uc <= 0x1f77f) {
                                return true;
                            }
                        }
                    } else if (substring.length > 1) {
                        var ls = substring.charCodeAt(i + 1);

                        if (ls == 0x20e3) {
                            return true;
                        }
                    } else {
                        if (0x2100 <= hs && hs <= 0x27ff) {
                            return true;
                        } else if (0x2B05 <= hs && hs <= 0x2b07) {
                            return true;
                        } else if (0x2934 <= hs && hs <= 0x2935) {
                            return true;
                        } else if (0x3297 <= hs && hs <= 0x3299) {
                            return true;
                        } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b || hs == 0x2b50) {
                            return true;
                        }
                    }
                }
            }
        }, {
            key: "isValidIp",
            value: function isValidIp(ip) {
                var reg = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
                return reg.test(ip);
            }
        }, {
            key: "ShowToastBottom",
            value: function ShowToastBottom(string) {
                _reactNativeRootToast.default.show(string, {
                    duration: _reactNativeRootToast.default.durations.SHORT,
                    position: _reactNativeRootToast.default.positions.BOTTOM,
                    shadow: true,
                    animation: true
                });
            }
        }, {
            key: "ShowToastCenter",
            value: function ShowToastCenter(string) {
                _reactNativeRootToast.default.show(string, {
                    duration: _reactNativeRootToast.default.durations.SHORT,
                    position: _reactNativeRootToast.default.positions.CENTER,
                    shadow: true,
                    animation: true
                });
            }
        }, {
            key: "ShowToastLongCenter",
            value: function ShowToastLongCenter(string) {
                _reactNativeRootToast.default.show(string, {
                    duration: _reactNativeRootToast.default.durations.LONG,
                    position: _reactNativeRootToast.default.positions.CENTER,
                    shadow: true,
                    animation: true
                });
            }
        }, {
            key: "isObjectKindofArray",
            value: function isObjectKindofArray(object) {
                return Object.prototype.toString.call(object) === '[object Array]';
            }
        }, {
            key: "transformSpeedData",
            value: function transformSpeedData(speed) {
                var response = {
                    transformedSpeed: '0',
                    transformedUnit: 'KB/s'
                };

                if (speed >= 0 && speed < 1000000) {
                    response.transformedSpeed = (speed / 1000).toFixed(0);
                    response.transformedUnit = 'KB/S';
                }

                if (speed >= 1000000) {
                    response.transformedSpeed = (speed / 1000000).toFixed(0);
                    response.transformedUnit = 'MB/S';
                }

                return response;
            }
        }, {
            key: "isWIFI6",
            value: function isWIFI6(model) {
                return ['xiaomi.router.ra69', 'xiaomi.router.ra67', 'xiaomi.router.r3600', 'xiaomi.router.rm1800'].includes(model);
            }
        }]);
        return CommonUtils;
    }();

    exports.default = CommonUtils;
}, 10037, [14305, 14320, 14323, 10010]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
        "width": 172,
        "height": 172,
        "scales": [1],
        "hash": "421c9077cd3e44e2f0dda32db4cad3fc",
        "name": "health",
        "type": "png"
    });
}, 10040, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
        "width": 51,
        "height": 51,
        "scales": [1],
        "hash": "685b32c440bd38f0c00a888e19199c75",
        "name": "add",
        "type": "png"
    });
}, 10043, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _miot = _$$_REQUIRE(_dependencyMap[8]);

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

    var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    var selectedRepeatTextArray = ["执行一次", "每天", "周一至周五"];
    var selectedRepeatDayTextArray = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];
    var that;

    var TimeSetting = function (_React$Component) {
        (0, _inherits2.default)(TimeSetting, _React$Component);

        function TimeSetting(props) {
            var _this;

            (0, _classCallCheck2.default)(this, TimeSetting);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeSetting).call(this, props));
            that = (0, _assertThisInitialized2.default)(_this);
            _this.state = {
                visible1: false,
                visible2: false,
                visible3: false,
                visible4: false,
                visible5: false,
                info: {
                    selectedIndexArray1: [0],
                    selectedRepeatArray: [0],
                    selectedWifiOpenArray: ["08", "00"],
                    selectedWifiOpenRawString: "08:00",
                    selectedWifiCloseArray: ["00", "00"],
                    selectedWifiCloseRawString: "00:00",
                    selectedCustomArray: []
                }
            };
            return _this;
        }

        (0, _createClass2.default)(TimeSetting, [{
            key: "_openSubPage",
            value: function _openSubPage(page, props) {
                this.props.navigation.navigate(page, props);
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "_repeatSetting",
            value: function _repeatSetting() {
                this.setState({
                    visible1: true
                });
            }
        }, {
            key: "_openWifiTime",
            value: function _openWifiTime() {
                this.setState({
                    visible2: true
                });
            }
        }, {
            key: "_closeWifiTime",
            value: function _closeWifiTime() {
                this.setState({
                    visible3: true
                });
            }
        }, {
            key: "_pressComplete",
            value: function _pressComplete() {
                var param = this.state.info;
                this.props.navigation.state.params.callback(param);
                this.props.navigation.navigate('HealthMode', {
                    'param': param
                });
            }
        }, {
            key: "onDismiss",
            value: function onDismiss(param) {
                this.setState({
                    visible1: false,
                    visible2: false,
                    visible3: false
                });
            }
        }, {
            key: "onSelect",
            value: function onSelect(res, param) {
                var info = this.state.info;

                if (param == '1') {
                    info.selectedWifiOpenRawString = res.rawString;
                    info.selectedWifiOpenArray = res.rawString.split(':');
                } else {
                    info.selectedWifiCloseRawString = res.rawString;
                    info.selectedWifiCloseArray = res.rawString.split(':');
                }

                this.setState({
                    info: info
                });
            }
        }, {
            key: "selectedRepeatResult",
            value: function selectedRepeatResult(result) {
                var info = this.state.info;

                if (result == 3) {
                    this.setState({
                        visible4: true
                    });

                    if (info.selectedRepeatArray[0] == 0) {
                        info.selectedCustomArray = [5, 6];
                    } else if (info.selectedRepeatArray[0] == 1) {
                        info.selectedCustomArray = [0, 1, 2, 3, 4, 5, 6];
                    } else if (info.selectedRepeatArray[0] == 2) {
                        info.selectedCustomArray = [0, 1, 2, 3, 4];
                    }
                }

                info.selectedRepeatArray = result;

                if (info.selectedRepeatArray[0] == 0) {
                    info.selectedIndexArray1 = [];
                } else if (info.selectedRepeatArray[0] == 1) {
                    info.selectedIndexArray1 = [0, 1, 2, 3, 4, 5, 6];
                } else if (info.selectedRepeatArray[0] == 2) {
                    info.selectedIndexArray1 = [0, 1, 2, 3, 4];
                }

                this.setState({
                    info: info
                });
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                if (this.props.navigation.state.params.type == 'edit') {
                    var info = this.props.navigation.state.params.info;
                    this.setState({
                        info: info
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var repeatSubtitle;
                var info = this.state.info;

                if (selectedRepeatTextArray[info.selectedRepeatArray[0]]) {
                    repeatSubtitle = selectedRepeatTextArray[info.selectedRepeatArray[0]];
                } else {
                    repeatSubtitle = info.selectedIndexArray1.map(function (o) {
                        return selectedRepeatDayTextArray[o];
                    }).join(",");
                }

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_ListItem.default, {
                    title: "\u91CD\u590D",
                    subtitle: repeatSubtitle,
                    containerStyle: {
                        width: width
                    },
                    subtitleStyle: {
                        color: '#a4aaae'
                    },
                    onPress: function onPress(_) {
                        return _this2._repeatSetting();
                    },
                    separator: _react.default.createElement(_Separator.default, {
                        style: styles.separator
                    })
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.timeText
                }, "\u65F6\u95F4\u8BBE\u7F6E"), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_ListItem.default, {
                    title: "WiFi\u5173\u95ED\u65F6\u95F4",
                    subtitle: info.selectedWifiCloseRawString,
                    subtitleStyle: {
                        color: '#a4aaae'
                    },
                    onPress: function onPress(_) {
                        return _this2._closeWifiTime();
                    },
                    separator: _react.default.createElement(_Separator.default, {
                        style: styles.separator
                    })
                }), _react.default.createElement(_ListItem.default, {
                    title: "WiFi\u5F00\u542F\u65F6\u95F4",
                    subtitle: info.selectedWifiOpenRawString,
                    subtitleStyle: {
                        color: '#a4aaae'
                    },
                    onPress: function onPress(_) {
                        return _this2._openWifiTime();
                    },
                    separator: _react.default.createElement(_Separator.default, {
                        style: styles.separator
                    })
                }), _react.default.createElement(_ChoiceDialog.default, {
                    visible: this.state.visible1,
                    title: '单选弹窗',
                    options: [{
                        title: '执行一次'
                    }, {
                        title: '每天'
                    }, {
                        title: '周一至周五'
                    }, {
                        title: '自定义'
                    }],
                    selectedIndexArray: info.selectedRepeatArray,
                    onDismiss: function onDismiss(_) {
                        return _this2.onDismiss('1');
                    },
                    onSelect: function onSelect(result) {
                        return _this2.selectedRepeatResult(result);
                    }
                }), _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        return _this2._pressComplete();
                    },
                    style: styles.buttonWrapper
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.compleText
                }, "\u786E\u8BA4"))), _react.default.createElement(_ChoiceDialog.default, {
                    type: _ChoiceDialog.default.TYPE.MULTIPLE,
                    visible: this.state.visible4,
                    title: '重复',
                    style: styles.choiceDialog,
                    options: [{
                        title: '星期一'
                    }, {
                        title: '星期二'
                    }, {
                        title: '星期三'
                    }, {
                        title: '星期四'
                    }, {
                        title: '星期五'
                    }, {
                        title: '星期六'
                    }, {
                        title: '星期日'
                    }],
                    selectedIndexArray: info.selectedCustomArray,
                    color: "#f0ac3d",
                    buttons: [{
                        text: '保存',
                        style: {
                            color: 'lightblue'
                        },
                        callback: function callback(result) {
                            var info = _this2.state.info;

                            if (result.length == 0) {
                                info.selectedCustomArray = result;

                                _this2.setState({
                                    visible5: true,
                                    info: info
                                });

                                return;
                            } else if (result == [0, 1, 2, 3, 4]) {
                                info.selectedRepeatArray = [1];
                            } else if (result == [0, 1, 2, 3, 4, 5, 6]) {
                                info.selectedRepeatArray = [2];
                            } else {
                                info.selectedRepeatArray = [3];
                            }

                            info.selectedIndexArray1 = result;

                            _this2.setState({
                                visible4: false,
                                info: info
                            });
                        }
                    }],
                    onDismiss: function onDismiss(_) {
                        return _this2.onDismiss('4');
                    }
                }), _react.default.createElement(_MHDatePicker.default, {
                    visible: this.state.visible2,
                    title: "\u9009\u62E9\u65F6\u95F4",
                    type: _MHDatePicker.default.TYPE.TIME24,
                    confirmColor: "#4778FF",
                    current: info.selectedWifiOpenArray,
                    onDismiss: function onDismiss(_) {
                        return _this2.onDismiss('2');
                    },
                    onSelect: function onSelect(res) {
                        return _this2.onSelect(res, '1');
                    }
                }), _react.default.createElement(_MHDatePicker.default, {
                    visible: this.state.visible3,
                    title: "\u9009\u62E9\u65F6\u95F4",
                    type: _MHDatePicker.default.TYPE.TIME24,
                    confirmColor: "#4778FF",
                    current: info.selectedWifiCloseArray,
                    onDismiss: function onDismiss(_) {
                        return _this2.onDismiss('3');
                    },
                    onSelect: function onSelect(res) {
                        return _this2.onSelect(res, '0');
                    }
                }), _react.default.createElement(_MessageDialog.default, {
                    visible: this.state.visible5,
                    message: "\u5C0F\u7C73WiFi:\u8BF7\u81F3\u5C11\u9009\u62E9\u4E00\u9879",
                    buttons: [{
                        text: '确认',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(_) {
                            return _this2.setState({
                                visible5: false
                            });
                        }
                    }],
                    onDismiss: function onDismiss(_) {
                        return _this2.onDismiss('4');
                    }
                }));
            }
        }]);
        return TimeSetting;
    }(_react.default.Component);

    exports.default = TimeSetting;

    TimeSetting.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '时间设置',
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        buttonWrapper: {
            position: "absolute",
            width: width,
            bottom: 20,
            alignItems: "center",
            justifyContent: "center"
        },
        button: {
            alignItems: "center",
            justifyContent: "center",
            backgroundColor: '#4778FF',
            height: 44,
            width: width * 0.9,
            borderRadius: 22
        },
        compleText: {
            color: '#fff'
        },
        timeText: {
            padding: 5,
            fontSize: 12,
            marginLeft: 20,
            color: '#a4aaae'
        },
        separator: {
            height: 1 / _reactNative.PixelRatio.get(),
            marginLeft: 20,
            marginRight: 20
        }
    });
}, 10046, [14305, 14320, 14323, 14371, 14377, 14374, 14386, 10297, 10074, 10284, 10329, 10734, 10716, 10332, 10033, 10743]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _miot = _$$_REQUIRE(_dependencyMap[6]);

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var repeatSelectedArrayMap = ["执行一次", "每天", "周一至周五", "自定义"];

    var deviceId = _miot.Device.deviceID.replace("miwifi.", "");

    var url = '/appgateway/third/miwifi/app/r/api/xqsmarthome/request_smartcontroller';

    var RestartPlan = function (_React$Component) {
        (0, _inherits2.default)(RestartPlan, _React$Component);

        function RestartPlan(props) {
            var _this;

            (0, _classCallCheck2.default)(this, RestartPlan);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RestartPlan).call(this, props));
            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    }
                }),
                visible1: false,
                deleteItemIndex: null,
                list: []
            };
            return _this;
        }

        (0, _createClass2.default)(RestartPlan, [{
            key: "_originToList",
            value: function _originToList(origin) {
                var newList = [];
                origin.map(function (v, i) {
                    var id = v.id;

                    if (v.launch) {
                        var enabled = v.launch.timer.enabled;
                        var repeat = v.launch.timer.repeat;
                        var time = v.launch.timer.time;
                        var startTimeString = time.substring(0, 5);
                        var startTimeArray = startTimeString.split(':');
                        var repeatSelectedArray = [];
                        var weekSelectedArray = [];

                        if (repeat) {
                            if (repeat == '1,2,3,4,5') {
                                repeatSelectedArray = [2];
                                weekSelectedArray = [0, 1, 2, 3, 4];
                            } else if (repeat == '0,1,2,3,4,5,6' || repeat == '1,2,3,4,5,6,0') {
                                repeatSelectedArray = [1];
                                weekSelectedArray = [0, 1, 2, 3, 4, 5, 6];
                            } else {
                                repeatSelectedArray = [3];
                                repeat.split(',').map(function (v) {
                                    if (v == 0) {
                                        weekSelectedArray.push(6);
                                    } else {
                                        weekSelectedArray.push(v - 1);
                                    }
                                });
                            }
                        } else {
                            repeatSelectedArray = [0];
                            weekSelectedArray = [5, 6];
                        }

                        newList.push({
                            id: id,
                            startTimeString: startTimeString,
                            startTimeArray: startTimeArray,
                            repeatSelectedArray: repeatSelectedArray,
                            weekSelectedArray: weekSelectedArray,
                            enabled: enabled
                        });
                    } else {
                        var me = {
                            id: id,
                            startTimeString: '00:00',
                            startTimeArray: ['00', '00'],
                            repeatSelectedArray: [0],
                            weekSelectedArray: [5, 6],
                            enabled: false
                        };
                        newList.push(me);
                    }
                });
                return newList;
            }
        }, {
            key: "_generateXHRData",
            value: function _generateXHRData(_ref) {
                var id = _ref.id,
                    command = _ref.command,
                    enabled = _ref.enabled,
                    repeat = _ref.repeat,
                    time = _ref.time,
                    utc_time = _ref.utc_time;
                var obj = {
                    "id": 30010,
                    "command": "scene_setting",
                    "name": "重启计划",
                    "action_list": [{
                        "block": 1,
                        "delay": 0,
                        "extra": {
                            "duration": 28800000,
                            "total_length": 0
                        },
                        "keyName": "重启",
                        "name": "小米路由器",
                        "thirdParty": "xmrouter",
                        "type": "normal_reboot"
                    }],
                    "launch": {
                        "timer": {
                            "enabled": true,
                            "time": "00:00:00",
                            "repeat": "",
                            "utc_time": 0
                        }
                    }
                };
                if (id) obj.id = id;
                if (command) obj.command = command;
                if (enabled) obj.launch.timer.enabled = enabled.status;
                if (time) obj.launch.timer.time = time;
                if (repeat) obj.launch.timer.repeat = repeat.value;
                if (repeat.value === "") obj.launch.timer.utc_time = utc_time;
                return obj;
            }
        }, {
            key: "_getListData",
            value: function _getListData() {
                var _this2 = this;

                var payloadDic = {
                    command: 'get_multiple_scene_setting',
                    start_id: '30010',
                    end_id: '30019'
                };
                var paramsDic = {
                    method: 'GET',
                    params: {
                        deviceId: deviceId,
                        payload: JSON.stringify(payloadDic)
                    }
                };

                _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                    try {
                        if (res.code == 0) {
                            var list = res.scene_list;

                            var newList = _this2._originToList(list);

                            _this2.setState({
                                list: newList
                            }, function () {
                                _this2.setState({
                                    dataSource: _this2.state.dataSource.cloneWithRows(_this2.state.list)
                                });
                            });
                        }

                        _CommonUtils.default.ShowToastBottom('数据读取成功');
                    } catch (e) { }
                }).catch(function (e) {
                    _CommonUtils.default.ShowToastBottom('数据读取失败');

                    _this2.props.navigation.goBack();
                });
            }
        }, {
            key: "_deleteItem",
            value: function _deleteItem() {
                var _this3 = this;

                var payloadDic = {
                    id: this.state.deleteItemId,
                    command: "scene_delete"
                };
                var paramsDic = {
                    method: 'POST',
                    params: {
                        deviceId: deviceId,
                        payload: JSON.stringify(payloadDic)
                    }
                };

                _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        var copyList = _this3.state.list.filter(function (v, i) {
                            return v.id != _this3.state.deleteItemId;
                        });

                        _this3.setState({
                            visible1: false,
                            list: copyList
                        }, function () {
                            _this3.setState({
                                dataSource: _this3.state.dataSource.cloneWithRows(_this3.state.list)
                            });
                        });
                    }

                    _CommonUtils.default.ShowToastBottom('删除成功');
                }).catch(function (e) {
                    _this3.setState({
                        visible1: false
                    });

                    _CommonUtils.default.ShowToastBottom('删除失败');
                });
            }
        }, {
            key: "_generateID",
            value: function _generateID() {
                var idList = [];
                this.state.list.map(function (v, i) {
                    idList.push(v.id);
                });
                var arr1 = [30010, 30011, 30012, 30013, 30014, 30015, 30016, 30017, 30018, 30019];
                var arr2 = [].concat(arr1).filter(function (x) {
                    return [].concat(idList).every(function (y) {
                        return y !== x;
                    });
                });
                return arr2[0];
            }
        }, {
            key: "_openTimeSetting",
            value: function _openTimeSetting(type, param) {
                var _this4 = this;

                if (type === "add") {
                    if (this.state.list.length >= 9) {
                        _reactNativeRootToast.default.show("小米WiFi：最多只能添加9个定时哦~");

                        return;
                    }

                    this.props.navigation.navigate("RestartTimeSetting", {
                        type: 'add',
                        callback: function callback(item) {
                            item.id = _this4._generateID();
                            item.enabled = true;
                            var repeat;

                            if (item.repeatSelectedArray.toString() == '0') {
                                repeat = '';
                            } else if (item.repeatSelectedArray.toString() == '1') {
                                repeat = '0,1,2,3,4,5,6';
                            } else if (item.repeatSelectedArray.toString() == '2') {
                                repeat = '1,2,3,4,5';
                            } else {
                                repeat = item.weekSelectedArray.map(function (v) {
                                    if (v == 6) {
                                        return v = 0;
                                    } else {
                                        return v = v + 1;
                                    }
                                }).toString();
                            }

                            var data = _this4._generateXHRData({
                                id: item.id,
                                command: "scene_setting",
                                repeat: {
                                    value: repeat
                                },
                                time: item.startTimeString + ':00',
                                utc_time: item.utc_time
                            });

                            var paramsDic = {
                                method: 'POST',
                                params: {
                                    deviceId: deviceId,
                                    payload: JSON.stringify(data)
                                }
                            };

                            _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                                try {
                                    if (res.code == 0) {
                                        _this4.setState(function (prev) {
                                            list: prev.list.push(item);
                                        }, function () {
                                            _this4.setState({
                                                dataSource: _this4.state.dataSource.cloneWithRows(_this4.state.list)
                                            });
                                        });
                                    }

                                    _CommonUtils.default.ShowToastBottom('添加定时成功');
                                } catch (e) { }
                            }).catch(function (e) {
                                _CommonUtils.default.ShowToastBottom('添加定时失败');
                            });
                        }
                    });
                } else {
                    this.props.navigation.navigate("RestartTimeSetting", {
                        type: 'edit',
                        currentItem: param.rowData,
                        callback: function callback(item) {
                            var repeat = item.weekSelectedArray.map(function (v) {
                                if (v == 6) {
                                    return v = 0;
                                } else {
                                    return v = v + 1;
                                }
                            }).toString();

                            if (item.repeatSelectedArray[0] == "0") {
                                repeat = "";
                            }

                            item.id = param.rowData.id;
                            item.enabled = param.rowData.enabled;

                            var data = _this4._generateXHRData({
                                id: param.rowData.id,
                                command: "scene_update",
                                enabled: {
                                    status: param.rowData.enabled
                                },
                                repeat: {
                                    value: repeat
                                },
                                time: item.startTimeString + ':00',
                                utc_time: item.utc_time
                            });

                            var paramsDic = {
                                method: 'POST',
                                params: {
                                    deviceId: deviceId,
                                    payload: JSON.stringify(data)
                                }
                            };

                            _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                                try {
                                    if (res.code == 0) {
                                        var copyList = JSON.parse(JSON.stringify(_this4.state.list));
                                        copyList.forEach(function (v, i) {
                                            if (v.id == param.rowData.id) {
                                                copyList[i] = item;
                                            }
                                        });

                                        _this4.setState({
                                            list: copyList
                                        }, function () {
                                            _this4.setState({
                                                dataSource: _this4.state.dataSource.cloneWithRows(_this4.state.list)
                                            });
                                        });
                                    }

                                    _CommonUtils.default.ShowToastBottom('编辑成功');
                                } catch (e) { }
                            }).catch(function (e) {
                                _CommonUtils.default.ShowToastBottom('编辑失败');
                            });
                        }
                    });
                }
            }
        }, {
            key: "_switchChange",
            value: function _switchChange(value, id) {
                var _this5 = this;

                var repeat, startTimeString;
                this.state.list.forEach(function (v, i) {
                    if (v.id == id) {
                        repeat = v.weekSelectedArray.map(function (v1) {
                            if (v1 == 6) {
                                return v1 = 0;
                            } else {
                                return v1 = v1 + 1;
                            }
                        }).toString();

                        if (v.repeatSelectedArray[0] == "0") {
                            repeat = "";
                        }

                        startTimeString = v.startTimeString + ':00';
                    }
                });

                var data = this._generateXHRData({
                    id: id,
                    command: "scene_update",
                    enabled: {
                        status: value
                    },
                    repeat: {
                        value: repeat
                    },
                    time: startTimeString
                });

                var paramsDic = {
                    method: 'POST',
                    params: {
                        deviceId: deviceId,
                        payload: JSON.stringify(data)
                    }
                };

                _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
                    try {
                        if (res.code == 0) {
                            var copyList = JSON.parse(JSON.stringify(_this5.state.list));
                            copyList.forEach(function (v, i) {
                                if (v.id == id) {
                                    copyList[i].enabled = value;
                                }
                            });

                            _this5.setState({
                                list: copyList
                            }, function () {
                                _this5.setState({
                                    dataSource: _this5.state.dataSource.cloneWithRows(_this5.state.list)
                                });
                            });
                        }

                        _CommonUtils.default.ShowToastBottom('开关设置成功');
                    } catch (e) { }
                }).catch(function (e) {
                    _CommonUtils.default.ShowToastBottom('开关设置失败');
                });
            }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._getListData();
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, sectionID, rowID) {
                var _this6 = this;

                return _react.default.createElement(_reactNative.TouchableHighlight, {
                    onPress: function onPress(_) {
                        _this6._openTimeSetting("edit", {
                            rowData: rowData,
                            sectionID: sectionID,
                            rowID: rowID
                        });
                    },
                    onLongPress: function onLongPress(_) {
                        _this6.setState({
                            visible1: true,
                            deleteItemId: rowData.id
                        });
                    }
                }, _react.default.createElement(_ListItemWithSwitch.default, {
                    key: sectionID,
                    title: rowData.startTimeString + '重启路由器',
                    subtitle: repeatSelectedArrayMap[rowData.repeatSelectedArray[0]],
                    value: rowData.enabled,
                    onValueChange: function onValueChange(value) {
                        _this6._switchChange(value, rowData.id);
                    },
                    titleStyle: {
                        fontSize: 14
                    },
                    subtitleStyle: {
                        fontSize: 10,
                        color: 'rgba(50,50,50,.5)'
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }));
            }
        }, {
            key: "render",
            value: function render() {
                var _this7 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.header
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[15])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.titleText
                }, "\u5B9A\u671F\u91CD\u542F\u53EF\u4EE5\u8BA9\u8DEF\u7531\u5668\u4FDD\u6301\u6700\u4F73\u72B6\u6001")), _react.default.createElement(_reactNative.View, {
                    style: {
                        height: 400
                    }
                }, _react.default.createElement(_reactNative.ScrollView, {
                    style: styles.listCont
                }, _react.default.createElement(_reactNative.ListView, {
                    style: styles.list,
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this)
                }))), _react.default.createElement(_reactNative.View, {
                    style: styles.addWrap
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        _this7._openTimeSetting("add");
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.addcont
                }, _react.default.createElement(_reactNative.Image, {
                    style: {
                        margin: 7,
                        width: 40,
                        height: 40
                    },
                    resizeMode: "contain",
                    source: _$$_REQUIRE(_dependencyMap[16])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.addText
                }, "\u6DFB\u52A0\u5B9A\u65F6")))), _react.default.createElement(_MessageDialog.default, {
                    visible: this.state.visible1,
                    message: '确认删除此定时？',
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#666666'
                        },
                        callback: function callback(_) {
                            _this7.setState({
                                visible1: false,
                                deleteItemId: null
                            });
                        }
                    }, {
                        text: '确定',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(_) {
                            _this7._deleteItem();
                        }
                    }],
                    onDismiss: function onDismiss(_) { }
                }));
            }
        }]);
        return RestartPlan;
    }(_react.default.Component);

    exports.default = RestartPlan;

    RestartPlan.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '重启计划',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        icon: {
            width: 103,
            height: 110,
            margin: 40
        },
        header: {
            backgroundColor: '#1a1b2a',
            alignItems: 'center'
        },
        titleText: {
            color: '#rgba(255,255,255,.5)',
            margin: 20
        },
        listCont: {
            padding: 7
        },
        addWrap: {
            position: 'absolute',
            bottom: 0,
            left: 6,
            right: 6,
            paddingBottom: 10,
            backgroundColor: '#fff'
        },
        addcont: {
            alignItems: 'center',
            justifyContent: 'center'
        },
        separator: {
            backgroundColor: '#000',
            marginTop: 20
        }
    });
}, 10049, [14305, 14320, 14323, 14371, 14377, 14386, 10074, 10284, 10344, 10743, 10332, 10297, 10033, 10010, 10037, 10052, 10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
        "width": 159,
        "height": 170,
        "scales": [1],
        "hash": "049f77eb649db99a1504e4b33c1a8b55",
        "name": "restart",
        "type": "png"
    });
}, 10052, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _device = _$$_REQUIRE(_dependencyMap[12]);

    var _common_password_toggle_invisible = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _common_password_toggle_visible = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _miot = _$$_REQUIRE(_dependencyMap[16]);

    var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[18]);

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

    var TITLE = '重置管理密码';
    var PLACEHOLDER = ['不得少于8位', '再次填写密码'];
    var LABEL = ['新密码', '确认新密码'];
    var BTN_TEXT = '确定';
    var TOAST_TEXT = ['密码长度不能少于8位是', '两次输入的密码不一致', '密码修改成功'];

    var ToolBox = function (_React$Component) {
        (0, _inherits2.default)(ToolBox, _React$Component);

        function ToolBox(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ToolBox);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

            _this.changeSecureHandler = function (id) {
                var status = _this.state['secure' + id];

                _this.setState((0, _defineProperty2.default)({}, 'secure' + id, !status));
            };

            _this.submitHandler = function () {
                var _this$state = _this.state,
                    pwd1 = _this$state.pwd1,
                    pwd2 = _this$state.pwd2;

                var errorMsg = _WifiSettingHelper.default.getWifiPwdInputErrorMessage(pwd1);

                if (errorMsg !== '') {
                    _CommonUtils.default.ShowToastLongCenter(errorMsg);

                    return false;
                } else if (pwd1 !== pwd2) {
                    _CommonUtils.default.ShowToastLongCenter(TOAST_TEXT[1]);

                    return false;
                }

                _this.setState({
                    'btnDisable': true
                }, function () {
                    _this.changePassword();
                });
            };

            _this.changePassword = function () {
                var newPwd = {
                    newPwd: _this.state.pwd1
                };
                var params = {
                    params: (0, _objectSpread2.default)({}, _this.paramsDic.params, newPwd)
                };
                var paramsDic = (0, _objectSpread2.default)({}, _this.paramsDic, params);

                _miot.Service.callSmartHomeAPI(_this.api, paramsDic).then(function (res) {
                    _this.setState({
                        'btnDisable': false
                    });

                    if (res.code === 0) {
                        _reactNativeRootToast.default.show(TOAST_TEXT[2], {
                            position: _reactNativeRootToast.default.positions.CENTER
                        });
                    }
                }).catch(function (e) {
                    _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
                });
            };

            _this.state = {
                secure1: false,
                secure2: false,
                pwd1: '',
                pwd2: '',
                btnDisable: false
            };
            _this.api = _API.default.changePassword.remote;
            _this.deviceId = _device.Device.deviceID.replace('miwifi.', '');
            _this.paramsDic = {
                method: 'GET',
                params: {
                    deviceId: _this.deviceId
                }
            };
            return _this;
        }

        (0, _createClass2.default)(ToolBox, [{
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.content
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text
                }, LABEL[0]), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.input,
                    defaultValue: this.state.pwd1,
                    placeholder: PLACEHOLDER[0],
                    placeholderTextColor: '#989898',
                    secureTextEntry: !this.state.secure1,
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            pwd1: text
                        });
                    }
                }), _react.default.createElement(_reactNative.TouchableOpacity, {
                    activeOpacity: 1,
                    onPress: function onPress() {
                        _this2.changeSecureHandler(1);
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.showPwdBtn,
                    source: this.state.secure1 ? _common_password_toggle_visible.default : _common_password_toggle_invisible.default
                }))), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text
                }, LABEL[1]), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.input,
                    secureTextEntry: !this.state.secure2,
                    defaultValue: this.state.pwd2,
                    placeholder: PLACEHOLDER[1],
                    placeholderTextColor: '#989898',
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            pwd2: text
                        });
                    },
                    onPress: function onPress() {
                        _this2.changeSecureHandler(2);
                    }
                }), _react.default.createElement(_reactNative.TouchableOpacity, {
                    activeOpacity: 1,
                    onPress: function onPress() {
                        _this2.changeSecureHandler(2);
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.showPwdBtn,
                    source: this.state.secure2 ? _common_password_toggle_visible.default : _common_password_toggle_invisible.default
                })))), _react.default.createElement(_reactNative.Text, {
                    style: styles.submit,
                    onPress: this.submitHandler,
                    disabled: this.state.btnDisable
                }, BTN_TEXT));
            }
        }]);
        return ToolBox;
    }(_react.default.Component);

    exports.default = ToolBox;

    ToolBox.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: TITLE,
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft() {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        content: {
            borderWidth: 1,
            borderColor: '#f1f1f1',
            margin: 10,
            padding: 10,
            borderRadius: 5,
            height: 100,
            justifyContent: 'space-between'
        },
        item: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-between'
        },
        text: {
            fontSize: 15,
            color: '#000'
        },
        input: {
            color: '#989898',
            flex: 1,
            marginLeft: 10,
            marginRight: 10,
            paddingVertical: 0
        },
        showPwdBtn: {
            width: 20,
            height: 20,
            resizeMode: 'contain'
        },
        submit: {
            borderWidth: 1,
            borderColor: '#f1f1f1',
            textAlign: 'center',
            borderRadius: 20,
            marginLeft: 10,
            marginRight: 10,
            marginTop: 20,
            padding: 10
        }
    });
}, 10055, [14305, 14314, 14317, 14320, 14323, 14371, 14377, 14386, 10033, 10297, 10284, 10058, 10935, 10064, 10067, 10010, 10074, 10070, 10076, 10037]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _Devices = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var apiPath = '/appgateway/third/miwifi/app';
    var localPath = 'http://miwifi.com/cgi-bin/luci';
    var API = {
        common_base_path: {
            MIWIFI_S_SERVER: 'https://s.miwifi.com'
        },
        common_local_path: 'http://miwifi.com/cgi-bin/luci',
        router: {
            init_info: "/appgateway/third/miwifi/app/r/api/xqsystem/init_info",
            init_info_inner: "http://miwifi.com/cgi-bin/luci/api/xqsystem/init_info"
        },
        devices: {
            device_list: "/appgateway/third/miwifi/app/s/api/device_list"
        },
        wifi_setting: {
            wifi_detail_all: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wifi_detail_all",
                local: '/api/xqnetwork/wifi_detail_all'
            },
            set_all_wifi: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_all_wifi",
                local: '/api/xqnetwork/set_all_wifi'
            }
        },
        net_work_mode: {
            wan_info: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wan_info",
                local: '/api/xqnetwork/wan_info'
            },
            set_wan: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_wan",
                local: '/api/xqnetwork/set_wan'
            },
            set_lan_ap: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_lan_ap",
                local: '/api/xqnetwork/set_lan_ap'
            },
            set_wifi_ap: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_wifi_ap",
                local: '/api/xqnetwork/set_wifi_ap'
            },
            router_scan_wifi_list: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wifi_list",
                local: '/api/xqnetwork/wifi_list'
            },
            router_pppoe_status: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/pppoe_status",
                local: '/api/xqnetwork/pppoe_status'
            },
            router_pppoe_stop: {
                remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/pppoe_stop",
                local: '/api/xqnetwork/pppoe_stop'
            }
        },
        reboot_router: {
            remote: "/appgateway/third/miwifi/app/r/api/xqsystem/reboot",
            local: '/api/xqsystem/reboot'
        },
        router_unbind: {
            remote: "/appgateway/third/miwifi/app/s/admin/dismiss"
        },
        recover_router: {
            remote: "/appgateway/third/miwifi/app/r/api/xqsystem/reset",
            local: '/api/xqsystem/reset'
        },
        router_list: {
            remote: "/appgateway/third/miwifi/app/s/admin/deviceList"
        },
        router_token: {
            remote: "/appgateway/third/miwifi/app/r/api/xqsystem/renew_token"
        },
        router_led: {
            remote: "/appgateway/third/miwifi/app/r/api/misystem/led",
            local: '/api/misystem/led'
        },
        changePassword: {
            remote: "/appgateway/third/miwifi/app/r/api/misystem/password",
            local: '/api/misystem/password'
        },
        network_diagnostics: {
            check: '/api/misystem/net_diagnose_start',
            result: '/api/misystem/net_diagnose_result'
        },
        get_qos_info: {
            remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_info_new",
            local: '/api/misystem/qos_info_new'
        },
        set_qos_mode: {
            remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_mode",
            local: '/api/misystem/qos_mode'
        },
        set_qos_switch: {
            remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_switch",
            local: '/api/misystem/qos_switch'
        },
        set_qos_band: {
            remote: "/appgateway/third/miwifi/app/r/api/misystem/set_band",
            local: '/api/misystem/set_band'
        },
        set_qos_guest: {
            remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_guest",
            local: '/api/misystem/qos_guest'
        },
        getToken: "http://miwifi.com/cgi-bin/luci/api/xqsystem/token"
    };
    var _default = API;
    exports.default = _default;
}, 10058, [14305, 10061]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.android = exports.ios = exports.OS = exports.ScreenScale = exports.ScreenH = exports.ScreenW = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var ScreenW = _reactNative.Dimensions.get('window').width;

    exports.ScreenW = ScreenW;

    var ScreenH = _reactNative.Dimensions.get('window').height;

    exports.ScreenH = ScreenH;

    var ScreenScale = _reactNative.Dimensions.get('window').scale;

    exports.ScreenScale = ScreenScale;
    var OS = _reactNative.Platform.OS;
    exports.OS = OS;
    var ios = OS == 'ios';
    exports.ios = ios;
    var android = OS == 'android';
    exports.android = android;
}, 10061, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 58,
        "height": 38,
        "scales": [1],
        "hash": "b67423263d4335e9883c1880697779b2",
        "name": "common_password_toggle_invisible",
        "type": "png"
    });
}, 10064, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 58,
        "height": 38,
        "scales": [1],
        "hash": "92bd3f704d5a1cd4391e2e73adb7190b",
        "name": "common_password_toggle_visible",
        "type": "png"
    });
}, 10067, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _WifiSettingConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _device = _$$_REQUIRE(_dependencyMap[6]);

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[7]);

    var _tr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var WifiSettingHelper = function () {
        function WifiSettingHelper() {
            (0, _classCallCheck2.default)(this, WifiSettingHelper);
        }

        (0, _createClass2.default)(WifiSettingHelper, null, [{
            key: "getSSIDString",
            value: function getSSIDString(obj, is5G) {
                if (is5G && _CommonUtils.default.isNull(obj.info[1])) {
                    return '';
                }

                if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[is5G == true ? 1 : 0].ssid)) {
                    return '';
                }

                return obj.info[is5G == true ? 1 : 0].ssid;
            }
        }, {
            key: "getPWDString",
            value: function getPWDString(obj, is5G) {
                if (is5G && _CommonUtils.default.isNull(obj.info[1])) {
                    return '';
                }

                if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[is5G == true ? 1 : 0].password)) {
                    return '';
                }

                return obj.info[is5G == true ? 1 : 0].password;
            }
        }, {
            key: "getSwitchHidden",
            value: function getSwitchHidden(obj, is5G) {
                if (is5G && _CommonUtils.default.isNull(obj.info[1])) {
                    return 0;
                }

                if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[is5G == true ? 1 : 0].hidden)) {
                    return 0;
                }

                return obj.info[is5G == true ? 1 : 0].hidden;
            }
        }, {
            key: "getSwitchStatus",
            value: function getSwitchStatus(obj, is5G) {
                if (is5G && _CommonUtils.default.isNull(obj.info[1])) {
                    return 1;
                }

                if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[is5G == true ? 1 : 0].status)) {
                    return 1;
                }

                return obj.info[is5G == true ? 1 : 0].status;
            }
        }, {
            key: "getEncryptionString",
            value: function getEncryptionString(obj, is5G) {
                if (is5G && _CommonUtils.default.isNull(obj.info[1])) {
                    return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
                }

                if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[is5G == true ? 1 : 0].encryption)) {
                    return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
                }

                var mEncyptionType = obj.info[is5G == true ? 1 : 0].encryption;

                if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_WPA2) {
                    return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2;
                } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_MIX) {
                    return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
                } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_WPA3) {
                    return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3;
                } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_MIX_WPA2_WPA3) {
                    return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
                } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_NONE) {
                    return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE;
                } else {
                    return this.getCapbilityIsWiFi6() ? _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3 : _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
                }
            }
        }, {
            key: "isSupportShowWifiMerge",
            value: function isSupportShowWifiMerge(data) {
                if (_device.Device.model === 'xiaomi.router.d01') {
                    return false;
                }

                if (this.isFrequncyMerged(data)) {
                    return data.bsd >= 0;
                } else {
                    if (_RouterInfoHelper.default.sharedInstance().isisRouterCanShowMergeSwitchByDefault()) {
                        return data.bsd >= 0;
                    }

                    return false;
                }
            }
        }, {
            key: "isFrequncyMerged",
            value: function isFrequncyMerged(data) {
                return data.bsd === 1;
            }
        }, {
            key: "getCapbilityIsWiFi6",
            value: function getCapbilityIsWiFi6() {
                return _RouterInfoHelper.default.sharedInstance().isSupportWifi6();
            }
        }, {
            key: "getEncryptionStringValue",
            value: function getEncryptionStringValue(obj) {
                if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2) {
                    return _WifiSettingConstant.default.ENCRYPTION_WPA2;
                } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2) {
                    return _WifiSettingConstant.default.ENCRYPTION_MIX;
                } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3) {
                    return _WifiSettingConstant.default.ENCRYPTION_WPA3;
                } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3) {
                    return _WifiSettingConstant.default.ENCRYPTION_MIX_WPA2_WPA3;
                } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE) {
                    return _WifiSettingConstant.default.ENCRYPTION_NONE;
                } else {
                    return this.getCapbilityIsWiFi6() ? _WifiSettingConstant.default.ENCRYPTION_MIX_WPA2_WPA3 : _WifiSettingConstant.default.ENCRYPTION_MIX;
                }
            }
        }, {
            key: "getSignalString",
            value: function getSignalString(obj, is5G) {
                if (is5G && _CommonUtils.default.isNull(obj.info[1])) {
                    return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
                }

                if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[is5G == true ? 1 : 0].txpwr)) {
                    return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
                }

                var txpwr = obj.info[is5G == true ? 1 : 0].txpwr;

                if (txpwr == _WifiSettingConstant.default.STRENGTH_MAX) {
                    return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MAX;
                } else if (txpwr == _WifiSettingConstant.default.STRENGTH_MID) {
                    return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MID;
                } else if (txpwr == _WifiSettingConstant.default.STRENGTH_MIN) {
                    return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
                } else {
                    return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
                }
            }
        }, {
            key: "getSignalStringValue",
            value: function getSignalStringValue(obj) {
                if (obj == _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MAX) {
                    return _WifiSettingConstant.default.STRENGTH_MAX;
                } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MID) {
                    return _WifiSettingConstant.default.STRENGTH_MID;
                } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN) {
                    return _WifiSettingConstant.default.STRENGTH_MIN;
                } else {
                    return _WifiSettingConstant.default.STRENGTH_MIN;
                }
            }
        }, {
            key: "containsEmoji",
            value: function containsEmoji(source) {
                var reg = /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD]|[\u2660-\u2767]\u0020)/g;
                var r = reg.test(source);
                return r;
            }
        }, {
            key: "getWifiSetiingInputErrorMessage",
            value: function getWifiSetiingInputErrorMessage(ssid, pwd, encriptionString) {
                var encripyinNone = encriptionString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE;
                var reg = /^[\u0000-\u007F]+$/;

                if (_CommonUtils.default.isTextEmpty(ssid.replace(/(^\s*)|(\s*$)/g, ""))) {
                    return _RouterLocalizedStringUtil.localStrings.wifiNameCannootEmpty;
                }

                if (pwd.replace(/(^\s*)|(\s*$)/g, "").length < 8 && !encripyinNone) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdLenthMinTip;
                }

                if (this.containsEmoji(ssid) || ssid.includes('ω') || ssid.includes('⊙')) {
                    return _RouterLocalizedStringUtil.localStrings.wifiNameContainsIllegalCharacters;
                }

                if (this.containsEmoji(pwd)) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdContainsIllegalCharacters;
                }

                if (this.StringWithCNLength(ssid) > 28) {
                    return _RouterLocalizedStringUtil.localStrings.wifiNameTooLong;
                }

                if (this.StringWithCNLength(pwd) > 63 && !encripyinNone) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdTooLong;
                }

                if (reg.test(pwd) == false && !encripyinNone) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdInvalid;
                }

                if (this.checkTextContainsNotSupportedCharact(ssid, false)) {
                    return _RouterLocalizedStringUtil.localStrings.wifiNameContainsIllegalCharacters;
                }

                if (this.checkTextContainsNotSupportedCharact(pwd, true)) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdContainsIllegalCharacters;
                }

                return '';
            }
        }, {
            key: "checkTextContainsNotSupportedCharact",
            value: function checkTextContainsNotSupportedCharact(input, isPwd) {
                var allowSomeSpecialCharact = false;

                if (_RouterInfoHelper.default.sharedInstance().isRouterAllowSomeSpecialCharater()) {
                    allowSomeSpecialCharact = true;
                }

                var reg = RegExp();
                var notSupportedCharact = [];

                if (allowSomeSpecialCharact) {
                    if (isPwd) {
                        notSupportedCharact = ['[', ']', '；', '｜', '｛', '｝', '｀', '＼', '！', '？', '，', '。', '（', '）', '、', '...', '＆', '＄'];
                    } else {
                        return false;
                    }
                } else {
                    if (isPwd) {
                        notSupportedCharact = ['[', ']', '［', '］', '`', '｀', ';', '；', '|', '｜', '$', '＄', '＆', '&', '\\', '{', '}', '｛', '｝', '＼', '！', '？', '，', '。', '（', '）', '、', '...'];
                    } else {
                        notSupportedCharact = ['[', ']', '［', '］', '`', '｀', ';', '；', '|', '｜', '$', '＄', '＆', '&', '\\', '{', '}', '｛', '｝', '\＼', '（', '）'];
                    }
                }

                var find = false;

                for (var i = 0; i < notSupportedCharact.length; i++) {
                    var item = notSupportedCharact[i];

                    if (input.indexOf(item) != -1) {
                        find = true;
                        break;
                    }
                }

                return find;
            }
        }, {
            key: "getWifiPwdInputErrorMessage",
            value: function getWifiPwdInputErrorMessage(pwd) {
                var reg = /^[\u0000-\u007F]+$/;

                if (pwd.replace(/(^\s*)|(\s*$)/g, "").length < 8) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdLenthMinTip;
                }

                if (this.containsEmoji(pwd)) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdContainsIllegalCharacters;
                }

                if (this.StringWithCNLength(pwd) > 63) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdTooLong;
                }

                if (reg.test(pwd) == false) {
                    return _RouterLocalizedStringUtil.localStrings.wifiPwdInvalid;
                }

                return '';
            }
        }, {
            key: "StringWithCNLength",
            value: function StringWithCNLength(str) {
                var realLength = 0,
                    len = str.length,
                    charCode = -1;

                for (var i = 0; i < len; i++) {
                    charCode = str.charCodeAt(i);
                    if (charCode >= 0 && charCode <= 128) realLength += 1; else realLength += 3;
                }

                return realLength;
            }
        }]);
        return WifiSettingHelper;
    }();

    exports.default = WifiSettingHelper;
}, 10070, [14305, 14320, 14323, 10037, 10073, 10079, 10935, 10076, 10968]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[0]);

    var WifiSettingConstant = {
        ENCRYPTION_WPA3: 'ccmp',
        ENCRYPTION_MIX_WPA2_WPA3: 'psk2+ccmp',
        ENCRYPTION_WPA2: 'psk2',
        ENCRYPTION_MIX: 'mixed-psk',
        ENCRYPTION_NONE: 'none',
        SETTING_WIFI_ENCYPTION_WPA3: _RouterLocalizedStringUtil.localStrings.wifiEncryptionWPA3,
        SETTING_WIFI_ENCYPTION_WPA2_WPA3: _RouterLocalizedStringUtil.localStrings.wifiEncryptionMixStrong,
        SETTING_WIFI_ENCYPTION_WPA2: _RouterLocalizedStringUtil.localStrings.wifiEncryptionWPA2,
        SETTING_WIFI_ENCYPTION_WPA_WPA2: _RouterLocalizedStringUtil.localStrings.wifiEncryptionMix,
        SETTING_WIFI_ENCYPTION_NONE: _RouterLocalizedStringUtil.localStrings.wifiEncryptionNone,
        STRENGTH_MAX: 'max',
        STRENGTH_MID: 'mid',
        STRENGTH_MIN: 'min',
        SETTING_WIFI_SIGNAL_STRENGTH_MAX: _RouterLocalizedStringUtil.localStrings.wifiSignalThroughwall,
        SETTING_WIFI_SIGNAL_STRENGTH_MID: _RouterLocalizedStringUtil.localStrings.wifiSignalStandard,
        SETTING_WIFI_SIGNAL_STRENGTH_MIN: _RouterLocalizedStringUtil.localStrings.wifiSignalEnergysaving
    };
    var _default = WifiSettingConstant;
    exports.default = _default;
}, 10073, [10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.localStrings = exports.strings = undefined;

    var _miot = _$$_REQUIRE(_dependencyMap[1]);

    var _LocalizedStrings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var strings = {
        "en": {
            homePageDeviceTab: "Devices",
            homePageToolTab: "Plug-ins",
            homePageNetConnecting: "Connecting",
            homePageNetNormal: "Network Normal",
            homePageRouterOffline: "Router is offline",
            homePagePhoneNetError: "Phone network error",
            homePagePhoneNetErrorDesc: "Check your phone's network connection",
            homePageNetError: "Network error",
            homePageCurrentConnectedDevice: "Current connected devices",
            homePageSigalStrong: "Strong",
            homePageSigalMiddle: "Mid",
            homePageSigalWeak: "Weak",
            homePageUploadText: "Upload speed",
            homePageDownloadText: "Download speed",
            homePageSigalSource: "Network signal:",
            commonSettingTitle: "Common settings",
            alertOKTitle: "OK",
            alertCancelTitle: "Cancel",
            alertTipText: "Attention",
            devicePhoneTitle: "Phones & computers",
            deviceIntelligent: "Smart devices",
            deviceOffline: "Offline",
            deviceChildProtect: "Child protection",
            deviceWanForbidden: "Deny Internet access",
            deviceParentControlTimer: "Scheduled disconnection",
            deviceGuestDevices: "Guest devices",
            deviceOnlineDevices: "Online devices",
            deviceofflineDevices: "Offline devices",
            deviceBlockDevices: "No blocklist",
            common_mins_ago: "min ago",
            common_hours_ago: "hrs ago",
            common_just_now: "Just now",
            loadingText: "Just a sec…",
            resstartRouterAlertContent: "All devices will be disconnected temporarily while router is rebooting. You may need to reconnect some devices manually after router has finished rebooting",
            recoverRouterAlertContent: "Restore router to its factory settings? You can't reverse this action!",
            wifiSettingTitle: "Wi-Fi settings",
            restartRouterTitle: "Reboot router",
            recoverRouterTitle: "Recover router",
            restartRouterSuccess: "Router rebooted",
            recoverRouterFail: "Couldn't restore router to factory settings.",
            recoverRouterSuccess: "Router restored to factory settings",
            restartRouterLoading: "Rebooting…",
            recoverRouterLoading: "Restoring to factory settings",
            wifiSignalThroughwall: "High",
            wifiSignalStandard: "Standard",
            wifiSignalEnergysaving: "Low",
            wifiMergeTitle: "Smart connect",
            wifiMergeDescText: "Merged 2.4G and 5G to choose best channel",
            wifiSsidText: "Name",
            wifiEncryptionMode: "Encryption",
            wifiSignalIntensity: "Signal strength",
            wifiPwdTitle: "Password",
            wifiHideTitle: "Hide this network",
            wifiSignalIntensity2d4g: "2.4G Signal strength",
            wifiSignalIntensity5g: "5G Signal strength",
            wifiChangeAlertContent: "This modification will restart Wi-Fi and disconnect the device from Wi-Fi network temporarily",
            wifiReconnectTipContent: "Set up successfully, please manually reconnect Wi-Fi on the phone settings page, and re-enter the application",
            wifiMergeAlertContent: "When the feature is on, 2.4G and 5G networks will share a name (use 2.4G configuration by default). The router will choose the best available signal. Brief interruptions may occur during the switch. Turn it on now?",
            wifiMergeOffAlertContent: "Dual-band Wi-Fi off. Wi-Fi 5G network name (with suffix _5G) and password is the same as 2.4G by default, you can change that in the settings.",
            wifiWPA3AlertContent: "WPA3 is a new generation encryption technology, which greatly enhances the security, but some old devices may be incompatible and thus cannot be accessed if WPA3 is selected.",
            wifiSsidInputPlaceholder: "Enter Wi-Fi name",
            wifiInfoChangeLoading: "Changing...",
            waitingLoading: "Just a sec…",
            wifiInfoChangeFail: "Setup failed",
            wifiRequestInfoFail: "Couldn't get Wi-Fi info",
            wifiEncryptionWPA3: "WPA3",
            wifiEncryptionMixStrong: "WPA3/WPA2",
            wifiEncryptionWPA2: "WPA2",
            wifiEncryptionMix: "WPA/WPA2",
            wifiEncryptionNone: "Not encrypted",
            wifiNameCannootEmpty: "Enter Wi-Fi network name",
            wifiPwdLenthMinTip: "Password must be at least 8 characters long",
            wifiNameContainsIllegalCharacters: "Wi-Fi ssid contains unsupported characters",
            wifiPwdContainsIllegalCharacters: "Password contains unsupported characters",
            wifiNameTooLong: "Name can contain up to 28 characters",
            wifiPwdTooLong: "Password can contain up to 63 characters",
            wifiPwdInvalid: "Password can't contain non-English characters",
            buttonConfirmTitle: "Confirm",
            notConnectRouter: "Please connect to current router, and then setup"
        },
        "zh": {
            homePageDeviceTab: "设备",
            homePageToolTab: "工具箱",
            homePageNetConnecting: "连接中",
            homePageNetNormal: "网络正常",
            homePageRouterOffline: "路由器已离线",
            homePagePhoneNetError: "手机网络异常",
            homePagePhoneNetErrorDesc: "请检查您的手机网络",
            homePageNetError: "网络异常",
            homePageCurrentConnectedDevice: "当前连接设备数",
            homePageSigalStrong: "强",
            homePageSigalMiddle: "中",
            homePageSigalWeak: "弱",
            homePageUploadText: "上传速度",
            homePageDownloadText: "下载速度",
            homePageSigalSource: "信号源:",
            commonSettingTitle: "通用设置",
            alertOKTitle: "确定",
            alertCancelTitle: "取消",
            alertTipText: "提示",
            devicePhoneTitle: "手机电脑",
            deviceIntelligent: "智能家居",
            deviceOffline: "离线",
            deviceChildProtect: "儿童上网",
            deviceWanForbidden: "禁止联网",
            deviceParentControlTimer: "定时断网",
            deviceGuestDevices: "访客设备",
            deviceOnlineDevices: "在线设备",
            deviceofflineDevices: "离线设备",
            deviceBlockDevices: "黑名单",
            common_mins_ago: "分钟前",
            common_hours_ago: "小时前",
            common_just_now: "刚刚",
            loadingText: "加载中...",
            resstartRouterAlertContent: "重启后将会中断当前所有连接，需要约1分钟恢复重启后可能需要手工连接Wi-Fi",
            recoverRouterAlertContent: "如果恢复路由器出厂设置，小米/Redmi路由器将清空当前所有设置回到初始状态",
            wifiSettingTitle: "Wi-Fi设置",
            restartRouterTitle: "重启路由器",
            recoverRouterTitle: "恢复出厂设置",
            restartRouterSuccess: "重启成功",
            recoverRouterFail: "恢复路由器出厂失败",
            recoverRouterSuccess: "恢复路由器出厂成功",
            restartRouterLoading: "重启中",
            recoverRouterLoading: "正在恢复路由器出厂设置",
            wifiSignalThroughwall: "穿墙",
            wifiSignalStandard: "标准",
            wifiSignalEnergysaving: "节能",
            wifiMergeTitle: "Wi-Fi双频合一",
            wifiMergeDescText: "2.4G和5G合并，自动为你切换至最佳Wi-Fi网络",
            wifiSsidText: "名称",
            wifiEncryptionMode: "加密方式",
            wifiSignalIntensity: "信号强度",
            wifiPwdTitle: "密码",
            wifiHideTitle: "隐藏网络不被发现",
            wifiSignalIntensity2d4g: "2.4G信号强度",
            wifiSignalIntensity5g: "5G信号强度",
            wifiChangeAlertContent: "该修改将重启Wi-Fi并导致Wi-Fi下设备暂时失去连接",
            wifiReconnectTipContent: "设置成功，请在手机设置页手动重连Wi-Fi，并重新进入应用",
            wifiMergeAlertContent: "开启后，2.4G和5G会使用同一名称（默认使用2.4G相关配置），路由器会自动为终端选择最佳Wi-Fi网络，但由于终端设备存在差异，可能存在：自动切换信号源时网络会短暂中断，甚至频繁掉线等问题，确认开启么？",
            wifiMergeOffAlertContent: "Wi-Fi双频合一关闭,5G会默认使用2.4G相同的网络名称（加后缀_5G）和密码,如需设成不一样,请进行修改.",
            wifiWPA3AlertContent: "WPA3为新一代加密技术，可使安全性大大加强，但选择该选项后部分旧设备会存在兼容性问题而无法接入。",
            wifiSsidInputPlaceholder: "请输入Wi-Fi名称",
            wifiInfoChangeLoading: "修改中",
            waitingLoading: "请稍后...",
            wifiInfoChangeFail: "设置失败",
            wifiRequestInfoFail: "获取Wi-Fi信息失败",
            wifiEncryptionWPA3: "超强加密(WPA3)",
            wifiEncryptionMixStrong: "强混合加密(WPA3/WPA2)",
            wifiEncryptionWPA2: "强加密(WPA2)",
            wifiEncryptionMix: "混合加密(WPA/WPA2)",
            wifiEncryptionNone: "无加密 (允许所有人连接)",
            wifiNameCannootEmpty: "Wi-Fi名称不能为空",
            wifiPwdLenthMinTip: "密码长度不得少于8位",
            wifiNameContainsIllegalCharacters: "Wi-Fi名称包含非法字符",
            wifiPwdContainsIllegalCharacters: "Wi-Fi密码包含非法字符",
            wifiNameTooLong: "Wi-Fi名称长度不能超过28位",
            wifiPwdTooLong: "Wi-Fi密码长度不能多于63位",
            wifiPwdInvalid: "密码不能包含中文和特殊字符",
            buttonConfirmTitle: "确认",
            notConnectRouter: "请连上当前路由器后，再进行设置"
        }
    };
    exports.strings = strings;
    var localStrings = new _LocalizedStrings.default(strings);
    exports.localStrings = localStrings;
}, 10076, [14305, 10074, 10209]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.RouterWorkMode = exports.RouterType = exports.RouterCapality = exports.RouterInfoManager = exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _device = _$$_REQUIRE(_dependencyMap[3]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _miot = _$$_REQUIRE(_dependencyMap[5]);

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _Host = _$$_REQUIRE(_dependencyMap[7]);

    var instance = null;
    var routerList = [];

    var RouterInfoHelper = function () {
        function RouterInfoHelper() {
            (0, _classCallCheck2.default)(this, RouterInfoHelper);

            if (!instance) {
                instance = this;
            }

            return instance;
        }

        (0, _createClass2.default)(RouterInfoHelper, [{
            key: "getRouterList",
            value: function getRouterList() {
                return this.routerList;
            }
        }, {
            key: "setRouterList",
            value: function setRouterList(routerList) {
                this.routerList = routerList;
            }
        }, {
            key: "refreshRouterList",
            value: function refreshRouterList() {
                var _this = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        showStatus: 'true'
                    }
                };
                var api = _API.default.router_list.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    alert(JSON.stringify(res));

                    if (res.code == 0) {
                        var _routerList = res.deviceList;

                        if (_CommonUtils.default.isObjectKindofArray(_routerList)) {
                            if (_routerList.length > 0) {
                                _this.setRouterList(_routerList);
                            } else { }
                        } else { }
                    } else { }
                }).catch(function (e) { });
            }
        }, {
            key: "getCurrentRouterInfo",
            value: function getCurrentRouterInfo() {
                var routerInfo = {};
                this.routerList.map(function (item) {
                    var routerId = item.id;

                    if (!_CommonUtils.default.isNull(routerId) && _CommonUtils.default.isTextEmpty(routerId)) {
                        if (routerId == _device.Device.deviceID.replace("miwifi.", "")) {
                            routerInfo = item;
                        }
                    }
                });
                return routerInfo;
            }
        }, {
            key: "getCurrentRouterWorkMode",
            value: function getCurrentRouterWorkMode() { }
        }, {
            key: "refreshRouterToken",
            value: function refreshRouterToken() {
                var _this2 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.router_token.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        _this2.routerToken = res.token;
                    }
                }).catch(function (e) { });
            }
        }, {
            key: "requestLocalWifiInfo",
            value: function requestLocalWifiInfo() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                _miot.Service.callSpecificAPI(_API.default.router.init_info_inner, 'get', {
                    "deviceId": deviceId
                }).then(function (res) {
                    var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

                    if (routerId === deviceId) {
                        _this3.isConnectCurrentRouter = true;
                    } else {
                        _this3.isConnectCurrentRouter = false;
                    }
                }).catch(function (error) {
                    _this3.isConnectCurrentRouter = false;
                });
            }
        }, {
            key: "requestCurrentRouterInfo",
            value: function requestCurrentRouterInfo() {
                var _this4 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.router_list.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        if (_CommonUtils.default.isObjectKindofArray(res.deviceList)) {
                            if (res.deviceList.length > 0) {
                                _this4.routerInfo = res.deviceList[0];
                                _this4.workMode = res.deviceList[0].work_mode;
                            }
                        }
                    }
                }).catch(function (e) { });
            }
        }, {
            key: "getCurrentRouterToken",
            value: function getCurrentRouterToken() {
                if (!_CommonUtils.default.isTextEmpty(this.routerToken)) {
                    return this.routerToken;
                } else {
                    return "";
                }
            }
        }, {
            key: "isConnectCurrentManagedRouter",
            value: function isConnectCurrentManagedRouter() {
                return this.isConnectCurrentRouter;
            }
        }, {
            key: "setIsConnectCurrentManagedRouter",
            value: function setIsConnectCurrentManagedRouter(connect) {
                this.isConnectCurrentRouter = connect;
            }
        }, {
            key: "currentRouterInfo",
            value: function currentRouterInfo() {
                return this.routerInfo;
            }
        }, {
            key: "checkCurrentCapality",
            value: function checkCurrentCapality(capality) {
                if (_CommonUtils.default.isNull(this.routerInfo)) {
                    return false;
                }

                if (this.routerInfo.capabilities.hasOwnProperty(capality) && this.routerInfo.capabilities[capality] == 1) {
                    return true;
                }

                return false;
            }
        }, {
            key: "isSupportMesh",
            value: function isSupportMesh() {
                if (_CommonUtils.default.isNull(this.routerInfo)) {
                    return false;
                }

                return this.checkCurrentCapality(RouterCapality.isSupportMiMesh);
            }
        }, {
            key: "isSupportWifi6",
            value: function isSupportWifi6() {
                if (_CommonUtils.default.isNull(this.routerInfo)) {
                    return false;
                }

                return this.checkCurrentCapality(RouterCapality.isSupportWifi6);
            }
        }, {
            key: "isSupportFrequencyMerge",
            value: function isSupportFrequencyMerge() {
                if (_CommonUtils.default.isNull(this.routerInfo)) {
                    return false;
                }

                return this.checkCurrentCapality(RouterCapality.isSupportFrequencyMerge);
            }
        }, {
            key: "isisRouterCanShowMergeSwitchByDefault",
            value: function isisRouterCanShowMergeSwitchByDefault() {
                return RouterInfoManager.isR3600() || RouterInfoManager.isRM1800() || RouterInfoManager.isR1350() || RouterInfoManager.isR2350() || RouterInfoManager.isRA67() || RouterInfoManager.isRA69();
            }
        }, {
            key: "isRouterAllowSomeSpecialCharater",
            value: function isRouterAllowSomeSpecialCharater() {
                return RouterInfoManager.isR3600() || RouterInfoManager.isRM1800() || RouterInfoManager.isR1350() || RouterInfoManager.isR2350() || RouterInfoManager.isRA67() || RouterInfoManager.isRA69() || RouterInfoManager.isR2100() || RouterInfoManager.isRM2100();
            }
        }, {
            key: "isSupportLedSwitch",
            value: function isSupportLedSwitch() {
                if (['xiaomi.router.r4', 'xiaomi.router.r4ac', 'xiaomi.router.r4a', 'xiaomi.router.r4cm', 'xiaomi.router.r4c', 'xiaomi.router.v3', 'xiaomi.router.r3a', 'xiaomi.router.r3g', 'xiaomi.router.r3d', 'xiaomi.router.r3p', 'xiaomi.router.lv3', 'xiaomi.router.mv1', 'xiaomi.router.lv1', 'xiaomi.router.v2'].includes(_device.Device.model)) {
                    return false;
                }

                return true;
            }
        }, {
            key: "isRouterWithout5G",
            value: function isRouterWithout5G() {
                if (['xiaomi.router.lv1', 'xiaomi.router.r4cm', 'xiaomi.router.r4c', 'xiaomi.router.lv3'].includes(_device.Device.model)) {
                    return true;
                }

                return false;
            }
        }, {
            key: "isWorkingInRelayMode",
            value: function isWorkingInRelayMode() {
                return this.workMode == RouterWorkMode.RelayWired || this.workMode == RouterWorkMode.RelayWireless;
            }
        }, {
            key: "isWorkingInWireRelayMode",
            value: function isWorkingInWireRelayMode() {
                return this.workMode == RouterWorkMode.RelayWired;
            }
        }, {
            key: "isWorkingInWirelessRelayMode",
            value: function isWorkingInWirelessRelayMode() {
                return this.workMode == RouterWorkMode.RelayWireless;
            }
        }], [{
            key: "sharedInstance",
            value: function sharedInstance() {
                var singleton = new RouterInfoHelper();
                return singleton;
            }
        }]);
        return RouterInfoHelper;
    }();

    exports.default = RouterInfoHelper;

    var RouterInfoManager = function () {
        function RouterInfoManager() {
            (0, _classCallCheck2.default)(this, RouterInfoManager);
        }

        (0, _createClass2.default)(RouterInfoManager, null, [{
            key: "isR3600",
            value: function isR3600() {
                return _device.Device.model === RouterType.R3600;
            }
        }, {
            key: "isRM1800",
            value: function isRM1800() {
                return _device.Device.model === RouterType.RM1800;
            }
        }, {
            key: "isR1350",
            value: function isR1350() {
                return _device.Device.model === RouterType.R1350;
            }
        }, {
            key: "isR2350",
            value: function isR2350() {
                return _device.Device.model === RouterType.R2350;
            }
        }, {
            key: "isRA67",
            value: function isRA67() {
                return _device.Device.model === RouterType.RA67;
            }
        }, {
            key: "isRA69",
            value: function isRA69() {
                return _device.Device.model === RouterType.RA69;
            }
        }, {
            key: "isR2100",
            value: function isR2100() {
                return _device.Device.model === RouterType.R2100;
            }
        }, {
            key: "isRM2100",
            value: function isRM2100() {
                return _device.Device.model === RouterType.RM2100;
            }
        }]);
        return RouterInfoManager;
    }();

    exports.RouterInfoManager = RouterInfoManager;
    var RouterCapality = {
        isSupportGuestWifi: "guest_wifi",
        isSupportBlackList: "wifi_security",
        isSupportShareFolder: "share_folder",
        isSupportOpenSSID: "open_ssid",
        isSupportBarcodePlugin: "barcode_plugin",
        isSupportCategoryView: "category_view_ultimate",
        isSupportFileTunnel: "file_tunnel",
        hasBuiltinHDD: "builtin_hdd",
        isSupportDevOptions: "dev_options",
        isSupportFormatDiskAsync: "format_disk_async",
        isSupportWhiteList: "whitelist",
        isSupportMultipleTimers: "multiple_timers",
        isSupportParentControl: "parent_control",
        isSupportParentControlV2: "parent_control_v2",
        isSupportRemoteUploadFile: "remote_upload",
        isSupportSmartVpn: "smart_vpn",
        isSupportGuestWifiSns: "guest_wifi_sns",
        isSupportGuestWifiSnsV2: "guest_wifi_sns_v2",
        isSupportRiskDeviceLog: "blocked_record",
        isSupportResetAdminPwd: "reset_pwd_without_old",
        isSupportFrequencyMerge: "band_steering",
        isSupportDiskInfo: "routerdisk_scan",
        isSupportTaskManager: "task_manager",
        isSupportTaskManagerSpeed: "task_manager_netspeed",
        isSupportLedSwitch: "led_switch",
        isSupportSecurityCenter: "security_center",
        wiFiDelayTime: "wifi_restart_time",
        isSupportWiFiMuMiMo: "wifi_mu_mimo",
        isSupportParentControlV3: "parent_control_v3",
        isSupportGuestWifiBusiness: "guest_wifi_business",
        isSupportSteeringWhitelist: "band_steering_whitelist",
        isSupportWirelessRelay: "wireless_relay",
        isSupportGalleryAlbum: "gallery_album",
        isSupportQosService: "qos_service",
        isSupportUSB30: "usb_30",
        isSupportQosDeviceSwitch: "qos_device_switch",
        isSupportReplacementAssistant: "replacement_assistant",
        isSupportWiFiScanConnect: "wifi_scan_and_connect",
        isSupportUsedAppState: "used_app_state",
        isSupportWeChatRedEnvelope: "guest_wifi_wx_pay",
        isSupportMiNet: "mi_net",
        isSupportRestartScene: "reboot_timer",
        isSupportWifiConfigSyncMiot: "wifi_config_sync_miot",
        isSupportInternalDiagnosis: "intranet_network_diagnosis",
        isSupportExternalDiagnosis: "external_network_diagnosis",
        isSupportIOTSecurityScan: "iot_security_scan",
        isSupportChildOnlineProtection: "child_online_protection",
        isSupportGuestWiFiOverSea: "guest_wifi_oversea",
        isSupportWifi6: "Wi-Fi_6",
        isSupportWifiScan: "Wi-Fi_scan",
        isSupportTimeZone2020: "2020_timezone",
        isSupportNewAboutRouter: "about_the_router_new",
        isSupportMiMesh: "MiMesh",
        isSupportEasyConnect: "easy_connect"
    };
    exports.RouterCapality = RouterCapality;
    var RouterType = {
        R3600: "xiaomi.router.r3600",
        RM1800: "xiaomi.router.rm1800",
        R1350: "xiaomi.router.r1350",
        R2350: "xiaomi.router.r2350",
        RA67: "xiaomi.router.ra67",
        RA69: "xiaomi.router.ra69",
        R2100: "xiaomi.router.r2100",
        RM2100: "xiaomi.router.rm2100"
    };
    exports.RouterType = RouterType;
    var RouterWorkMode = {
        Unknown: -1,
        Normal: 0,
        RelayWireless: 1,
        RelayWired: 2,
        Safe: 100
    };
    exports.RouterWorkMode = RouterWorkMode;
}, 10079, [14305, 14320, 14323, 10935, 10058, 10074, 10037, 10035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _miot = _$$_REQUIRE(_dependencyMap[7]);

    var _Host = _$$_REQUIRE(_dependencyMap[8]);

    var _device = _$$_REQUIRE(_dependencyMap[9]);

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _RouterStatus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _DeviceManage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _Led = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _WiFiPassword = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _RouterSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[17]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

    var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[21]);

    var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var HomePage = function (_React$Component) {
        (0, _inherits2.default)(HomePage, _React$Component);

        function HomePage(props) {
            var _this;

            (0, _classCallCheck2.default)(this, HomePage);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomePage).call(this, props));

            _this.scrollHandler = function (e) {
                _this.scrollTop = e.nativeEvent.contentOffset.y;

                _this.transTitleBarOpacity();
            };

            _this.transTitleBarOpacity = function () {
                var opacity = (_this.scrollTop - 130) / 130 * 3;
                var rgb = _this.topStatusMap[_this.state.status]['rgb'];

                if (_this.scrollTop > 130) {
                    _this.setState({
                        opacityTitle: {
                            opacity: opacity
                        },
                        'opacityStyle': {
                            backgroundColor: 'rgba(' + rgb + ',' + opacity + ')'
                        }
                    });
                } else {
                    _this.setState({
                        opacityTitle: {
                            opacity: opacity
                        },
                        'opacityStyle': {
                            backgroundColor: 'rgba(' + rgb + ',0)'
                        }
                    });
                }
            };

            _this.state = {
                connectionInfoType: 'unknown',
                device_list: {},
                status: 'check',
                curRouterName: _CommonUtils.default.isTextEmpty(_device.Device.name) ? '' : _device.Device.name,
                opacityStyle: 0,
                opacityTitle: 0
            };
            _this.topStatusMap = {
                'check': {
                    text: '正在检测网络，请稍后...',
                    bg: _$$_REQUIRE(_dependencyMap[23]),
                    rgb: '7,92,77'
                },
                'neterror': {
                    text: '手机网络不可用',
                    bg: _$$_REQUIRE(_dependencyMap[24]),
                    rgb: '118,2,13'
                },
                'ok': {
                    text: '网络连接正常',
                    bg: _$$_REQUIRE(_dependencyMap[23]),
                    rgb: '7,92,77'
                },
                'error': {
                    text: '网络连接异常',
                    bg: _$$_REQUIRE(_dependencyMap[24]),
                    rgb: '118,2,13'
                },
                'offline': {
                    text: '路由器已离线',
                    bg: _$$_REQUIRE(_dependencyMap[25]),
                    rgb: '38,41,53'
                }
            };
            _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
            return _this;
        }

        (0, _createClass2.default)(HomePage, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;

                this._deviceNameChangedListener = _device.DeviceEvent.deviceNameChanged.addListener(function (device) {
                    _this2.setState({
                        curRouterName: _CommonUtils.default.isTextEmpty(device.name) ? '' : device.name
                    });
                });

                this._checkPrivicyAgree();

                var t = new Date().getTime();
                fetch('http://www1.miwifi.com/connect/detect.json?t=' + t).then(function (response) {
                    _this2.getInitInfo();
                }).catch(function (data) {
                    _this2.setState({
                        status: 'neterror'
                    });
                });
                this.subscription = _Host.HostEvent.cellPhoneNetworkStateChanged.addListener(function (networkInfo) {
                    var routerInfoManager = _RouterInfoHelper.default.sharedInstance();

                    if (networkInfo.networkState === 0 || networkInfo.networkState === -1) {
                        _this2.setState({
                            status: 'neterror'
                        });

                        routerInfoManager.setIsConnectCurrentManagedRouter(false);
                    } else {
                        _this2.getInitInfo();

                        routerInfoManager.requestLocalWifiInfo();
                        routerInfoManager.refreshRouterToken();
                    }

                    _this2.transTitleBarOpacity();
                });
            }
        }, {
            key: "_checkPrivicyAgree",
            value: function _checkPrivicyAgree() {
                var licenseURL = _$$_REQUIRE(_dependencyMap[26]);

                var privacyURL = _$$_REQUIRE(_dependencyMap[27]);

                var options = {};
                options.agreementURL = licenseURL;
                options.privacyURL = privacyURL;
                options.hideAgreement = false;
                options.hideUserExperiencePlan = true;

                _miot.Service.smarthome.batchGetDeviceDatas([{
                    did: _device.Device.deviceID,
                    props: ["prop.s_auth_config"]
                }]).then(function (res) {
                    var alreadyAuthed = false;
                    var result = res[_device.Device.deviceID];
                    var config;

                    if (result && result['prop.s_auth_config']) {
                        config = result['prop.s_auth_config'];
                    }

                    if (config) {
                        try {
                            var authJson = JSON.parse(config);
                            alreadyAuthed = authJson.privacyAuthed && true;
                        } catch (err) { }
                    }

                    if (alreadyAuthed) {
                        return new Promise.resolve("已经授权");
                    } else {
                        return _miot.Host.ui.alertLegalInformationAuthorization(options).then(function (res) {
                            if (res) {
                                return _miot.Service.smarthome.batchSetDeviceDatas([{
                                    did: _device.Device.deviceID,
                                    props: {
                                        "prop.s_auth_config": JSON.stringify({
                                            'privacyAuthed': 'true'
                                        })
                                    }
                                }]);
                            } else {
                                return new Promise.reject("取消授权");
                            }
                        });
                    }
                }).catch(function (err) { });
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                if (this.subscription) this.subscription.remove();
                clearTimeout(this.timer);
                this._deviceNameChangedListener && this._deviceNameChangedListener.remove();
            }
        }, {
            key: "getInitInfo",
            value: function getInitInfo() {
                var _this3 = this;

                var paramsDic;
                return _regenerator.default.async(function getInitInfo$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                paramsDic = {
                                    method: 'POST',
                                    params: {
                                        "deviceId": this.deviceId
                                    }
                                };
                                this.setState({
                                    status: 'check'
                                });

                                _miot.Service.callSmartHomeAPI(_API.default.router.init_info, paramsDic).then(function (res) {
                                    if (res.code === 0) {
                                        _this3.setState({
                                            status: "ok"
                                        }, _this3.getDeviceList);
                                    } else {
                                        _miot.Service.callSpecificAPI(_API.default.router.init_info_inner, 'get', {
                                            "deviceId": _this3.deviceId
                                        }).then(function (res) {
                                            var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

                                            if (routerId === _this3.deviceId) {
                                                _this3.setState({
                                                    status: 'error'
                                                });
                                            } else {
                                                _this3.setState({
                                                    status: 'offline'
                                                });
                                            }
                                        }).catch(function (error) {
                                            _this3.setState({
                                                status: 'offline'
                                            });
                                        });
                                    }
                                }).catch(function (res) {
                                    _miot.Service.callSpecificAPI(_API.default.router.init_info_inner, 'get', {
                                        "deviceId": _this3.deviceId
                                    }).then(function (res) {
                                        var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

                                        if (routerId === _this3.deviceId) {
                                            _this3.setState({
                                                status: 'error'
                                            });
                                        } else {
                                            _this3.setState({
                                                status: 'offline'
                                            });
                                        }
                                    }).catch(function (res) {
                                        _this3.setState({
                                            status: 'offline'
                                        });
                                    });
                                });

                            case 3:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, null, this);
            }
        }, {
            key: "getDeviceList",
            value: function getDeviceList() {
                var _this4 = this;

                var paramsDic = {
                    method: 'GET',
                    params: {
                        routerID: this.deviceId,
                        locale: "zh_CN",
                        v: "2",
                        refresh: "1"
                    }
                };

                _miot.Service.callSmartHomeAPI(_API.default.devices.device_list, paramsDic).then(function (res) {
                    _this4.setState({
                        'device_list': res
                    });
                }).catch(function (res) { }).finally(function () {
                    _this4.timer = setTimeout(function () {
                        _this4.getDeviceList();
                    }, 10000);
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this5 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.wrapper
                }, _react.default.createElement(_reactNative.ImageBackground, {
                    source: this.topStatusMap[this.state.status]['bg'],
                    style: styles.bg
                }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                    style: [{
                        backgroundColor: 'transparent'
                    }, this.state.opacityStyle],
                    onPressLeft: function onPressLeft(_) {
                        return _miot.Package.exit();
                    },
                    onPressRight: function onPressRight() {
                        _this5.props.navigation.navigate('RouterPluginCommonSetting');
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: [styles.title_bar_text, this.state.opacityTitle]
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.topTitle
                }, this.state.curRouterName), _react.default.createElement(_reactNative.Text, {
                    style: styles.topSubTitle
                }, this.topStatusMap[this.state.status]['text']))), _react.default.createElement(_reactNative.ScrollView, {
                    scrollEventThrottle: 16,
                    onScroll: function onScroll(e) {
                        _this5.scrollHandler(e);
                    },
                    style: styles.sv
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.top
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.name
                }, this.state.curRouterName), _react.default.createElement(_reactNative.Text, {
                    style: styles.status
                }, this.topStatusMap[this.state.status]['text'])), _react.default.createElement(_reactNative.View, {
                    style: styles.card_container
                }, _react.default.createElement(_RouterStatus.default, {
                    value: this.state.device_list,
                    status: this.state.status
                }), _react.default.createElement(_DeviceManage.default, {
                    value: this.state.device_list,
                    navigation: this.props.navigation
                }), _react.default.createElement(_WiFiPassword.default, null), _react.default.createElement(_RouterSet.default, {
                    navigation: this.props.navigation
                }), _RouterInfoHelper.default.sharedInstance().isSupportLedSwitch() ? _react.default.createElement(_Led.default, null) : null))));
            }
        }]);
        return HomePage;
    }(_react.default.Component);

    exports.default = HomePage;

    HomePage.navigationOptions = function () {
        return {
            header: null
        };
    };

    var styles = _reactNative.StyleSheet.create({
        wrapper: {},
        title_bar_text: {
            position: 'absolute',
            top: (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true),
            zIndex: 20000,
            justifyContent: 'center',
            alignItems: 'center',
            height: 55,
            width: width - 100,
            opacity: 0,
            left: 50
        },
        topTitle: {
            fontSize: 15,
            color: '#ffffff',
            fontFamily: ''
        },
        topSubTitle: {
            fontSize: 12,
            color: '#ffffff',
            fontFamily: ''
        },
        bg: {
            backgroundColor: '#e8eaed',
            resizeMode: 'cover',
            height: '100%'
        },
        top: {
            paddingTop: 180,
            paddingBottom: 25
        },
        sv: {},
        name: {
            fontSize: 18,
            marginLeft: 32,
            color: '#fff'
        },
        status: {
            fontSize: 30,
            marginLeft: 29,
            color: '#fff'
        },
        card_container: {
            paddingLeft: 12,
            paddingRight: 12,
            paddingBottom: 12
        }
    });
}, 10082, [14305, 14674, 14320, 14323, 14371, 14377, 14386, 10074, 10035, 10935, 10284, 10297, 10085, 10088, 10106, 10112, 10115, 10033, 10058, 10010, 10037, 13696, 10079, 10127, 10130, 10133, 10136, 10139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _miot = _$$_REQUIRE(_dependencyMap[6]);

    var _device = _$$_REQUIRE(_dependencyMap[7]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var HomePage = function (_React$Component) {
        (0, _inherits2.default)(HomePage, _React$Component);

        function HomePage(props) {
            var _this;

            (0, _classCallCheck2.default)(this, HomePage);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomePage).call(this, props));
            _this.state = {
                wanRX: {
                    transformedSpeed: "0",
                    transformedUnit: 'KB/S'
                },
                wanTX: {
                    transformedSpeed: "0",
                    transformedUnit: 'KB/S'
                },
                status: ''
            };
            _this.isWIFI6 = _CommonUtils.default.isWIFI6(_device.Device.model);
            return _this;
        }

        (0, _createClass2.default)(HomePage, [{
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                this.setState({
                    wanRX: _CommonUtils.default.transformSpeedData(nextProps.value.wanRX),
                    wanTX: _CommonUtils.default.transformSpeedData(nextProps.value.wanTX),
                    status: nextProps.status
                });
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.card
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.status_content
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: {
                        uri: _device.Device.iconURL
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.infos
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.speed_info
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.speed
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.size
                }, this.state.wanTX.transformedSpeed), _react.default.createElement(_reactNative.Text, {
                    style: styles.unit
                }, this.state.wanTX.transformedUnit), _react.default.createElement(_reactNative.View, {
                    style: styles.triangle_up
                })), _react.default.createElement(_reactNative.View, {
                    style: [styles.speed, styles.speed_last]
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.size
                }, this.state.wanRX.transformedSpeed), _react.default.createElement(_reactNative.Text, {
                    style: styles.unit
                }, this.state.wanRX.transformedUnit), _react.default.createElement(_reactNative.View, {
                    style: styles.triangle_down
                }))), this.isWIFI6 && _react.default.createElement(_reactNative.View, {
                    style: styles.wifi6_content
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.c
                }, "\u8BE5\u8DEF\u7531\u5668\u652F\u6301"), _react.default.createElement(_reactNative.View, {
                    style: styles.wifi6
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.wifi6_text
                }, "Wi-Fi6"))))));
            }
        }]);
        return HomePage;
    }(_react.default.Component);

    exports.default = HomePage;

    HomePage.navigationOptions = function () {
        return {
            header: null
        };
    };

    var styles = _reactNative.StyleSheet.create({
        card: {
            backgroundColor: '#fff',
            borderRadius: 10,
            paddingTop: 10,
            paddingBottom: 10,
            marginBottom: 12,
            justifyContent: 'center'
        },
        status_content: {
            flexDirection: 'row',
            paddingLeft: 20,
            alignItems: 'center'
        },
        icon: {
            resizeMode: 'contain',
            width: 85,
            height: 85
        },
        infos: {
            paddingLeft: 20
        },
        speed_info: {
            flexDirection: 'row',
            justifyContent: 'space-around'
        },
        speed: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        speed_last: {
            marginLeft: 20
        },
        size: {
            fontSize: 22,
            fontWeight: 'bold',
            color: '#031225',
            fontFamily: ''
        },
        unit: {
            fontSize: 18,
            color: '#031225',
            fontFamily: ''
        },
        wifi6_content: {
            flexDirection: 'row'
        },
        wifi6_content_label: {
            fontSize: 12,
            color: '#999'
        },
        wifi6: {
            borderWidth: 1,
            borderColor: '#67BDFF',
            borderStyle: "solid",
            borderRadius: 4,
            paddingLeft: 5,
            paddingRight: 5,
            marginLeft: 5,
            alignItems: 'center',
            justifyContent: 'center'
        },
        wifi6_text: {
            color: '#48ABF1',
            fontFamily: '',
            fontSize: 10,
            fontWeight: 'bold'
        },
        triangle_up: {
            width: 0,
            height: 0,
            borderLeftWidth: 5,
            borderLeftColor: 'transparent',
            borderRightWidth: 5,
            borderRightColor: 'transparent',
            borderBottomWidth: 6,
            borderBottomColor: '#000',
            overflow: "hidden",
            alignSelf: 'flex-start'
        },
        triangle_down: {
            width: 0,
            height: 0,
            borderLeftWidth: 5,
            borderLeftColor: 'transparent',
            borderRightWidth: 5,
            borderRightColor: 'transparent',
            borderTopWidth: 6,
            borderTopColor: '#000',
            overflow: "hidden",
            alignSelf: 'flex-start'
        }
    });
}, 10085, [14305, 14320, 14323, 14371, 14377, 14386, 10074, 10935, 10297, 10058, 10010, 10033, 10037]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

    var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var HomePage = function (_React$Component) {
        (0, _inherits2.default)(HomePage, _React$Component);

        function HomePage(props) {
            var _this;

            (0, _classCallCheck2.default)(this, HomePage);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomePage).call(this, props));
            _this.state = {
                onlineCount: 0,
                list4: []
            };
            return _this;
        }

        (0, _createClass2.default)(HomePage, [{
            key: "componentWillMount",
            value: function componentWillMount() { }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                if (Object.keys(nextProps.value).length !== 0 && !_CommonUtils.default.isNull(nextProps.value.devices)) {
                    var onlineList = nextProps.value.devices.filter(function (item) {
                        return item.online === 1;
                    });

                    if (onlineList.length > 4) {
                        this.setState({
                            'onlineCount': onlineList.length,
                            'list4': onlineList.slice(0, 4)
                        });
                    } else {
                        this.setState({
                            'onlineCount': onlineList.length,
                            'list4': onlineList
                        });
                    }
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.card
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.top
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, "\u8BBE\u5907\u7BA1\u7406"), _react.default.createElement(_reactNative.Text, {
                    style: styles.count
                }, "\u5F53\u524D", this.state.onlineCount !== 0 ? this.state.onlineCount + '台设备已连接' : '没有设备连接')), _react.default.createElement(_reactNative.View, {
                    style: styles.devices_list
                }, this.state.list4.map(function (item, index) {
                    var isSnsHeaderValid = !_CommonUtils.default.isTextEmpty(item.sns) && !_CommonUtils.default.isTextEmpty(item.sns_head_url);
                    var image_uri = !_CommonUtils.default.isTextEmpty(item.neg480) ? item.neg480 : isSnsHeaderValid ? item.sns_head_url : _API.default.common_base_path.MIWIFI_S_SERVER + '/icon/' + item.iconUrl;

                    var default_uri = _$$_REQUIRE(_dependencyMap[13]);

                    return _react.default.createElement(_reactNative.View, {
                        key: index,
                        style: styles.item
                    }, _react.default.createElement(_PlaceholderImage.default, {
                        style: {
                            width: 56,
                            height: 56
                        },
                        placeholderSource: default_uri,
                        source: {
                            uri: image_uri
                        }
                    }), _react.default.createElement(_reactNative.View, {
                        style: styles.name_content
                    }, _react.default.createElement(_reactNative.Text, {
                        numberOfLines: 2,
                        style: styles.name
                    }, _ClientHelper.default.getDisplayName(item))));
                })), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.bottom,
                    onPress: function onPress() {
                        _this2.props.navigation.navigate('Devices');
                    }
                }, _react.default.createElement(_reactNative.Text, null, "\u67E5\u770B\u5168\u90E8\u8BBE\u5907")));
            }
        }]);
        return HomePage;
    }(_react.default.Component);

    exports.default = HomePage;

    HomePage.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "light",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                title: navigation.state.params.title,
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        card: {
            backgroundColor: '#fff',
            borderRadius: 10,
            paddingTop: 16,
            marginBottom: 12,
            justifyContent: 'center'
        },
        top: {
            paddingLeft: 20,
            paddingBottom: 16,
            flexDirection: 'row',
            alignItems: 'baseline'
        },
        title: {
            fontSize: 20,
            color: '#4C4C4C',
            fontWeight: 'bold'
        },
        count: {
            fontSize: 15,
            color: '#999',
            marginLeft: 10,
            paddingBottom: 1,
            fontFamily: ''
        },
        devices_list: {
            flexDirection: 'row'
        },
        item: {
            width: '25%',
            alignItems: 'center'
        },
        name_content: {
            justifyContent: 'center',
            alignItems: 'center',
            width: 62,
            height: 40
        },
        name: {
            textAlign: 'center',
            fontFamily: '',
            color: 'rgba(0, 0, 0, 0.5)',
            lineHeight: 15
        },
        bottom: {
            marginTop: 22,
            borderTopWidth: 1,
            borderColor: '#E5E5E5',
            justifyContent: 'center',
            alignItems: 'center',
            height: 47
        }
    });
}, 10088, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10091, 10100, 10037, 10058, 10284, 10103]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _Time = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _DevicesConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[6]);

    var ClientHelper = function () {
        function ClientHelper() {
            (0, _classCallCheck2.default)(this, ClientHelper);
        }

        (0, _createClass2.default)(ClientHelper, null, [{
            key: "getDisplayName",
            value: function getDisplayName(obj) {
                if (!_CommonUtils.default.isTextEmpty(obj.name)) {
                    return obj.name;
                } else if (!_CommonUtils.default.isTextEmpty(obj.originName)) {
                    return obj.originName;
                } else if (!_CommonUtils.default.isTextEmpty(obj.mac)) {
                    return obj.mac;
                }
            }
        }, {
            key: "shouldShowChildTag",
            value: function shouldShowChildTag(obj) {
                if (_CommonUtils.default.isTextEmpty(obj.childrenProtectionEnabled)) {
                    return false;
                }

                return obj.childrenProtectionEnabled;
            }
        }, {
            key: "getEventText",
            value: function getEventText(obj) {
                var showText = '';
                var events = obj.events;

                if (!_CommonUtils.default.isNull(events)) {
                    for (i = 0; i < events.length; i++) {
                        showText += events[i].text;
                    }
                }

                return showText;
            }
        }, {
            key: "getEvent",
            value: function getEvent(obj) {
                return obj.events[0];
            }
        }, {
            key: "getTimeDisplay",
            value: function getTimeDisplay(obj) {
                if (obj.events[0].timeDisplay == 1 && obj.events[0].originatedTime > 0) {
                    return (0, _Time.default)('2019-11-05T15:32:19Z');
                }
            }
        }, {
            key: "isPhoneOrPCDevices",
            value: function isPhoneOrPCDevices(obj) {
                if (obj.userSpecified == true) {
                    return _DevicesConstant.default.PRODUCT_TYPE_PHONE == obj.userSpecifyProduct || _DevicesConstant.default.PRODUCT_TYPE_COMPUTER == obj.userSpecifyProduct || _DevicesConstant.default.PRODUCT_TYPE_PAD == obj.userSpecifyProduct || obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_GUEST;
                } else {
                    if (!_CommonUtils.default.isTextEmpty(obj.product)) {
                        return _DevicesConstant.default.PRODUCT_TYPE_PHONE == obj.product || _DevicesConstant.default.PRODUCT_TYPE_COMPUTER == obj.product || _DevicesConstant.default.PRODUCT_TYPE_PAD == obj.product || obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_GUEST;
                    } else {
                        return this.isGuestDevice(obj);
                    }
                }
            }
        }, {
            key: "isGuestDevice",
            value: function isGuestDevice(obj) {
                return obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_GUEST;
            }
        }, {
            key: "isShowSpeed",
            value: function isShowSpeed(obj) {
                return this.isOnLine(obj) && obj.dSpeed != _DevicesConstant.default.D_SPEED_NONE;
            }
        }, {
            key: "isOnLine",
            value: function isOnLine(obj) {
                return obj.online == 1;
            }
        }, {
            key: "isOnLineExceptGuestDevices",
            value: function isOnLineExceptGuestDevices(obj) {
                return obj.online == 1 && !this.isGuestDevice(obj);
            }
        }, {
            key: "isOutLineExceptGuestDevices",
            value: function isOutLineExceptGuestDevices(obj) {
                return obj.online != 1 && !this.isGuestDevice(obj);
            }
        }, {
            key: "isLan",
            value: function isLan(obj) {
                return obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_LAN;
            }
        }, {
            key: "signalImageIndex",
            value: function signalImageIndex(obj) {
                if (this.isLan(obj)) {
                    return 3;
                } else if (obj.wifi_quality == _DevicesConstant.default.WIFI_QUALITY_MIDDLE) {
                    return 1;
                } else if (obj.wifi_quality == _DevicesConstant.default.WIFI_QUALITY_BAD) {
                    return 2;
                } else if (obj.wifi_quality == _DevicesConstant.default.WIFI_QUALITY_GOOD) {
                    return 0;
                }
            }
        }, {
            key: "getCustom",
            value: function getCustom(bytes) {
                if (bytes === 0) return '0 B/s';
                var k = 1000,
                    sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
                    i = Math.floor(Math.log(bytes) / Math.log(k));
                return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i] + '/s';
            }
        }, {
            key: "getParentControlV2Mode",
            value: function getParentControlV2Mode(obj) {
                var mode = null;
                var parentControlInfoV2 = obj.netacctl;

                if (!_CommonUtils.default.isNull(parentControlInfoV2) && parentControlInfoV2.enable === 1) {
                    mode = parentControlInfoV2.mode;
                }

                return mode;
            }
        }, {
            key: "getParentControlV2ModeText",
            value: function getParentControlV2ModeText(obj) {
                var eventText = null;
                var mode = this.getParentControlV2Mode(obj);

                if (!_CommonUtils.default.isNull(mode)) {
                    if (_DevicesConstant.default.MODE_FORBID === mode) {
                        return _RouterLocalizedStringUtil.localStrings.deviceWanForbidden;
                    }

                    if (_DevicesConstant.default.MODE_TIMER === mode) {
                        return _RouterLocalizedStringUtil.localStrings.deviceParentControlTimer;
                    }

                    return eventText;
                }
            }
        }, {
            key: "isWifi6Devices",
            value: function isWifi6Devices(obj) {
                return obj.phymode === 'ax';
            }
        }]);
        return ClientHelper;
    }();

    exports.default = ClientHelper;
}, 10091, [14305, 14320, 14323, 10037, 10094, 10097, 10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = time;

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[0]);

    function time(durationMillis, originatedTime) {
        var index = -1;
        var minute = 60000;
        var hour = 3600000;
        var day = 86400000;
        var MAX_DURATION_FORMAT = 18000000;
        var DURATION_UNITS = [day, hour, minute];
        var DURATION_UNITS_UNIT = ['0', _RouterLocalizedStringUtil.localStrings.common_hours_ago, _RouterLocalizedStringUtil.localStrings.common_mins_ago];

        if (durationMillis < 0) {
            durationMillis = 0;
        }

        var isLargeDuration = durationMillis >= MAX_DURATION_FORMAT;

        if (!isLargeDuration) {
            for (var i = 0; i < DURATION_UNITS.length; i++) {
                if (durationMillis >= DURATION_UNITS[i]) {
                    index = i;
                    break;
                }
            }
        }

        if (isLargeDuration || index != -1 && DURATION_UNITS_UNIT[index] == '0') {
            return format(originatedTime);
        }

        if (index == -1) {
            return _RouterLocalizedStringUtil.localStrings.common_just_now;
        } else {
            return parseInt(durationMillis / DURATION_UNITS[index]) + DURATION_UNITS_UNIT[index];
        }

        function format(date) {
            var dateNow = new Date();
            var YYNow = dateNow.getFullYear();
            var date = new Date(date);
            var YY = date.getFullYear() + '/';
            var MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '/';
            var DD = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
            var hh = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();
            var mm = ':' + (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());
            var ss = ':' + (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());
            return YYNow = YY ? MM + DD + ' ' + hh + mm : YY + MM + DD + ' ' + hh + mm;
        }
    }
}, 10094, [10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;
    var object = {
        PRODUCT_TYPE_CAMERA: 'camera',
        PRODUCT_TYPE_PHONE: 'phone',
        PRODUCT_TYPE_COMPUTER: 'computer',
        PRODUCT_TYPE_PAD: 'pad',
        PRODUCT_TYPE_LIGHT: 'light',
        COMPANY_YEE_LIGHT: 'yeelight',
        PRODUCT_TYPE_TV: 'tv',
        PRODUCT_TYPE_BOX: 'box',
        PRODUCT_TYPE_RELAY: 'relay',
        PRODUCT_TYPE_ROUTER: 'router',
        LOCALE_EN_US: 'en_US',
        LOCALE_ZH_CN: 'zh_CN',
        LOCALE_ZH_HK: 'zh_HK',
        LOCALE_ZH_TW: 'zh_TW',
        LOCALE_KO: 'ko',
        LOCALE_KO_KR: 'ko_KR',
        CONNECTION_TYPE_WIFI_24G: '1',
        CONNECTION_TYPE_WIFI_5G: '2',
        CONNECTION_TYPE_WIFI_GUEST: '3',
        CONNECTION_TYPE_WIFI_LAN: '4',
        CONNECTION_TYPE_WIFI_ZIGBEE: '5',
        WIFI_QUALITY_GOOD: '1',
        WIFI_QUALITY_MIDDLE: '2',
        WIFI_QUALITY_BAD: '3',
        D_SPEED_NONE: '-1',
        MODE_ALLOW: 'none',
        MODE_FORBID: 'limited',
        MODE_TIMER: 'time'
    };
    var _default = object;
    exports.default = _default;
}, 10097, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var PlaceholderImage = function (_React$PureComponent) {
        (0, _inherits2.default)(PlaceholderImage, _React$PureComponent);

        function PlaceholderImage(props) {
            var _this;

            (0, _classCallCheck2.default)(this, PlaceholderImage);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlaceholderImage).call(this, props));
            _this.state = {
                loading: true
            };
            return _this;
        }

        (0, _createClass2.default)(PlaceholderImage, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: this.props.style
                }, _react.default.createElement(_reactNative.Image, {
                    style: [this.props.style, styles.imageStyle],
                    source: this.props.source,
                    onLoad: function onLoad() {
                        return _this2.setState({
                            loading: false
                        });
                    }
                }), this.state.loading ? _react.default.createElement(_reactNative.Image, {
                    style: [this.props.style, styles.imageStyle],
                    source: this.props.placeholderSource
                }) : null);
            }
        }]);
        return PlaceholderImage;
    }(_react.default.PureComponent);

    PlaceholderImage.propTypes = {
        source: _propTypes.default.object,
        style: _reactNative.ViewPropTypes.style,
        placeholderSource: _propTypes.default.number.isRequired
    };

    var styles = _reactNative.StyleSheet.create({
        imageStyle: {
            position: 'absolute',
            top: 0,
            right: 0,
            left: 0,
            bottom: 0
        }
    });

    var _default = PlaceholderImage;
    exports.default = _default;
}, 10100, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/devices",
        "width": 160,
        "height": 160,
        "scales": [1],
        "hash": "325094178de952195c08467afab36daf",
        "name": "client_device_list_unknown",
        "type": "png"
    });
}, 10103, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _miot = _$$_REQUIRE(_dependencyMap[10]);

    var _device = _$$_REQUIRE(_dependencyMap[11]);

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var ToolBox = function (_React$Component) {
        (0, _inherits2.default)(ToolBox, _React$Component);

        function ToolBox(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ToolBox);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

            _this.getStatus = function () {
                _miot.Service.callSmartHomeAPI(_this.api, _this.paramsDic).then(function (res) {
                    if (res.code === 0) {
                        _this.setState({
                            'ledStatus': res.status === 1 ? true : false
                        });
                    }
                }).catch(function (e) { });
            };

            _this.changeStatusHandler = function () {
                var ledStatus = !_this.state.ledStatus;

                _this.setState({
                    'ledStatus': ledStatus
                }, function () {
                    _this.updateStatus();
                });
            };

            _this.updateStatus = function () {
                var on = {
                    on: _this.state.ledStatus ? 1 : 0
                };
                var params = {
                    params: (0, _objectSpread2.default)({}, _this.paramsDic.params, on)
                };
                var paramsDic = (0, _objectSpread2.default)({}, _this.paramsDic, params);

                _miot.Service.callSmartHomeAPI(_this.api, paramsDic).then(function (res) { }).catch(function (e) { });
            };

            _this.state = {
                ledStatus: 1
            };
            _this.api = _API.default.router_led.remote;
            _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
            _this.paramsDic = {
                method: 'GET',
                params: {
                    deviceId: _this.deviceId
                }
            };
            return _this;
        }

        (0, _createClass2.default)(ToolBox, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.getStatus();
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) { }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.card
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.led
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.left
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[13])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, "\u6307\u793A\u706F\u5F00\u5173")), _react.default.createElement(_Switch.default, {
                    style: {
                        width: 50,
                        height: 30
                    },
                    onTintColor: "skyblue",
                    tintColor: "#E5E5E5",
                    value: this.state.ledStatus === true ? true : false,
                    onValueChange: this.changeStatusHandler
                })));
            }
        }]);
        return ToolBox;
    }(_react.default.Component);

    exports.default = ToolBox;

    ToolBox.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: null
        };
    };

    var styles = _reactNative.StyleSheet.create({
        card: {
            backgroundColor: '#fff',
            borderRadius: 10,
            paddingTop: 20,
            paddingBottom: 20,
            paddingLeft: 20,
            paddingRight: 20,
            justifyContent: 'center'
        },
        led: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center'
        },
        left: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        icon: {
            width: 45,
            height: 45,
            resizeMode: 'contain'
        },
        title: {
            fontSize: 18,
            color: '#000',
            fontWeight: 'bold',
            marginLeft: 13
        }
    });
}, 10106, [14305, 14314, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10058, 10074, 10935, 10347, 10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "e442721a9105dae523a148a41bb9a14f",
        "name": "icon_led",
        "type": "png"
    });
}, 10109, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _device = _$$_REQUIRE(_dependencyMap[10]);

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var TIPS = '无加密(允许所有人连接)';

    var ToolBox = function (_React$Component) {
        (0, _inherits2.default)(ToolBox, _React$Component);

        function ToolBox(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ToolBox);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

            _this.transformStar = function (txt, type, is5G) {
                if (type) {
                    if (is5G) {
                        return _this.state.password_5G || TIPS;
                    } else {
                        return _this.state.password || TIPS;
                    }
                } else {
                    if (_CommonUtils.default.isTextEmpty(txt)) {
                        return TIPS;
                    } else {
                        return txt.replace(/./g, '*');
                    }
                }
            };

            _this.changeStatusHandler = function () {
                var show = !_this.state.show;

                _this.setState({
                    'show': show
                }, function () {
                    var txt = _this.transformStar(_this.state.password, show);

                    var txt_5G = _this.transformStar(_this.state.password_5G, show, true);

                    _this.setState({
                        'passwordText': txt,
                        'passwordText_5G': txt_5G
                    });
                });
            };

            _this.state = {
                show: false,
                bsd: 0,
                password: '',
                password_5G: '',
                passwordText: '',
                passwordText_5G: ''
            };
            _this.api = _API.default.router_led.remote;
            _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
            _this.paramsDic = {
                method: 'GET',
                params: {
                    deviceId: _this.deviceId
                }
            };
            return _this;
        }

        (0, _createClass2.default)(ToolBox, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;

                var api = _API.default.wifi_setting.wifi_detail_all.remote;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code === 0) {
                        _this2.setState({
                            'bsd': res.bsd,
                            'password': res.info[0]['password'],
                            'password_5G': _CommonUtils.default.isNull(res.info[1]) ? '' : res.info[1]['password']
                        }, function () {
                            var txt = _this2.transformStar(_this2.state.password, false);

                            var txt_5G = _this2.transformStar(_this2.state.password_5G, false);

                            _this2.setState({
                                'passwordText': txt,
                                'passwordText_5G': txt_5G
                            });
                        });
                    }
                }).catch(function (e) { });
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) { }
        }, {
            key: "needShow5GInfo",
            value: function needShow5GInfo() {
                return this.state.bsd === 0 && !_RouterInfoHelper.default.sharedInstance().isRouterWithout5G();
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.card
                }, this.state.bsd != 1 ? _react.default.createElement(_reactNative.View, {
                    style: styles.card_content
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.left
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.title_content
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, "2.4G Wi-Fi\u5BC6\u7801")), _react.default.createElement(_reactNative.Text, {
                    style: styles.password
                }, this.state.passwordText)), this.state.password_5G || this.state.password ? _react.default.createElement(_Switch.default, {
                    style: {
                        width: 50,
                        height: 30
                    },
                    onTintColor: "skyblue",
                    tintColor: "#E5E5E5",
                    value: this.state.show === true ? true : false,
                    onValueChange: this.changeStatusHandler
                }) : null), this.needShow5GInfo() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
                    style: styles.left
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.title_content
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, "5G Wi-Fi\u5BC6\u7801")), _react.default.createElement(_reactNative.Text, {
                    style: styles.password
                }, this.state.passwordText_5G))) : null) : _react.default.createElement(_reactNative.View, {
                    style: styles.item_bsd
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.left
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.title_content
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, "Wi-Fi\u5BC6\u7801")), _react.default.createElement(_reactNative.Text, {
                    style: styles.password
                }, this.state.passwordText)), this.state.password && _react.default.createElement(_Switch.default, {
                    style: {
                        width: 50,
                        height: 30
                    },
                    onTintColor: "skyblue",
                    tintColor: "#E5E5E5",
                    value: this.state.show === true ? true : false,
                    onValueChange: this.changeStatusHandler
                })));
            }
        }]);
        return ToolBox;
    }(_react.default.Component);

    exports.default = ToolBox;

    ToolBox.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: null
        };
    };

    var styles = _reactNative.StyleSheet.create({
        card: {
            backgroundColor: '#fff',
            borderRadius: 10,
            paddingTop: 20,
            paddingBottom: 20,
            paddingLeft: 20,
            paddingRight: 20,
            marginBottom: 12
        },
        card_content: {},
        item: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            marginBottom: 20
        },
        item_bsd: {
            flexDirection: 'row',
            justifyContent: 'space-between'
        },
        left: {},
        title_content: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        title: {
            fontSize: 18,
            color: '#000',
            fontWeight: 'bold',
            fontFamily: ''
        },
        level: {
            color: '#0FC39C',
            fontSize: 16,
            fontFamily: '',
            marginLeft: 10
        },
        password: {
            fontSize: 12,
            fontFamily: '',
            width: _Devices.ScreenW - 120
        }
    });
}, 10112, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10058, 10074, 10935, 10347, 10037, 10061, 10079]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _device = _$$_REQUIRE(_dependencyMap[10]);

    var _ui = _$$_REQUIRE(_dependencyMap[11]);

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[12]);

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
    var dialogTip = _RouterLocalizedStringUtil.localStrings.resstartRouterAlertContent;

    var ToolBox = function (_React$Component) {
        (0, _inherits2.default)(ToolBox, _React$Component);

        function ToolBox(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ToolBox);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));
            _this.state = {
                rebootAlertVisible: false,
                loading: false
            };
            _this.api = _API.default.router_led.remote;
            _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
            _this.paramsDic = {
                method: 'GET',
                params: {
                    deviceId: _this.deviceId
                }
            };
            return _this;
        }

        (0, _createClass2.default)(ToolBox, [{
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) { }
        }, {
            key: "_gotoRebootRouter",
            value: function _gotoRebootRouter() {
                var _this2 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                this.setState({
                    hasBeginStartRouter: false,
                    hasEndStartRouter: false
                });
                var api = _API.default.reboot_router.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    var code = res.code;

                    if (code == 0) {
                        _this2.timer = setInterval(function () {
                            _this2._pingrouter();
                        }, 3000);
                    }
                }).catch(function (e) {
                    _this2.setState({
                        loading: false
                    });
                });
            }
        }, {
            key: "_pingrouter",
            value: function _pingrouter() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.router.init_info;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        if (!_this3.state.hasEndStartRouter && _this3.state.hasBeginStartRouter) {
                            _this3.setState({
                                hasEndStartRouter: true,
                                loading: false
                            });

                            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.restartRouterSuccess);

                            _this3.props.navigation.popToTop();
                        }
                    } else {
                        if (!_this3.state.hasBeginStartRouter) {
                            _this3.setState({
                                hasBeginStartRouter: true
                            });
                        }
                    }
                }).catch(function (e) {
                    if (!_this3.state.hasBeginStartRouter) {
                        _this3.setState({
                            hasBeginStartRouter: true
                        });
                    }
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.card
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.top
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, "\u8DEF\u7531\u8BBE\u7F6E")), _react.default.createElement(_reactNative.View, {
                    style: styles.content
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.item,
                    onPress: function onPress() {
                        _this4.setState({
                            rebootAlertVisible: true
                        });
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[14])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.name
                }, "\u91CD\u542F\u8DEF\u7531")), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.item,
                    onPress: function onPress() {
                        _this4.props.navigation.navigate('WiFiSetting');
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[15])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.name
                }, "Wi-Fi\u8BBE\u7F6E")), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.item,
                    onPress: function onPress() {
                        _this4.props.navigation.navigate('ResetPassword');
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[16])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.name
                }, "\u7BA1\u7406\u5BC6\u7801"))), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTip,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        _this4.setState({
                            loading: true
                        });

                        _this4._gotoRebootRouter();
                    },
                    onDismiss: function onDismiss() {
                        _this4.setState({
                            rebootAlertVisible: false
                        });
                    },
                    visible: this.state.rebootAlertVisible
                }), _react.default.createElement(_ui.LoadingDialog, {
                    visible: this.state.loading,
                    message: _RouterLocalizedStringUtil.localStrings.restartRouterLoading
                }));
            }
        }]);
        return ToolBox;
    }(_react.default.Component);

    exports.default = ToolBox;

    ToolBox.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: null
        };
    };

    var styles = _reactNative.StyleSheet.create({
        card: {
            backgroundColor: '#fff',
            borderRadius: 10,
            paddingTop: 16,
            marginBottom: 12,
            justifyContent: 'center'
        },
        top: {
            paddingLeft: 20,
            paddingBottom: 16,
            flexDirection: 'row',
            alignItems: 'baseline'
        },
        content: {
            flexDirection: 'row',
            paddingLeft: 12,
            paddingRight: 12,
            justifyContent: 'space-between'
        },
        title: {
            fontSize: 20,
            color: '#4C4C4C',
            fontWeight: 'bold'
        },
        item: {
            width: '25%',
            alignItems: 'center',
            marginBottom: 20
        },
        icon: {
            width: 45,
            height: 45,
            resizeMode: 'contain',
            marginBottom: 10
        },
        name: {
            fontSize: 14,
            color: '#000',
            textAlign: 'center'
        }
    });
}, 10115, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10058, 10074, 10935, 10230, 10076, 10037, 10118, 10121, 10124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "7274fbe96d4b8acf8ce3b3ac6127bfbc",
        "name": "icon_reboot",
        "type": "png"
    });
}, 10118, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var start = Date.now();

    _$$_REQUIRE(_dependencyMap[0]);

    _$$_REQUIRE(_dependencyMap[1]);

    _$$_REQUIRE(_dependencyMap[2]);

    _$$_REQUIRE(_dependencyMap[3]);

    _$$_REQUIRE(_dependencyMap[4]);

    _$$_REQUIRE(_dependencyMap[5]);

    _$$_REQUIRE(_dependencyMap[6]);

    _$$_REQUIRE(_dependencyMap[7]);

    _$$_REQUIRE(_dependencyMap[8]);

    _$$_REQUIRE(_dependencyMap[9]);

    _$$_REQUIRE(_dependencyMap[10]);

    var GlobalPerformanceLogger = _$$_REQUIRE(_dependencyMap[11]);

    GlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));
    GlobalPerformanceLogger.markPoint('initializeCore_end');
}, 10120, [14449, 14452, 14455, 14470, 14479, 14485, 14500, 14524, 14533, 14536, 14560, 14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
        "width": 80,
        "height": 80,
        "scales": [1],
        "hash": "632c469ad9a64bd16b13d674c95f79c8",
        "name": "icon_set",
        "type": "png"
    });
}, 10121, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
        "width": 80,
        "height": 80,
        "scales": [1],
        "hash": "72b052ddcf2a944a4b7a5c7559d105fb",
        "name": "icon_pwd",
        "type": "png"
    });
}, 10124, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
        "width": 1080,
        "height": 2340,
        "scales": [1],
        "hash": "80858b526d6f0eb2305e48c552d37e47",
        "name": "1",
        "type": "png"
    });
}, 10127, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
        "width": 1080,
        "height": 2340,
        "scales": [1],
        "hash": "466d6af2d1d276763bf349ef30d08bdd",
        "name": "2",
        "type": "png"
    });
}, 10130, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
        "width": 1080,
        "height": 2340,
        "scales": [1],
        "hash": "a92f600731399a113d99d1516ad4171b",
        "name": "3",
        "type": "png"
    });
}, 10133, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/html",
        "scales": [1],
        "hash": "621617ac259f5aacfa142b17bd270fbb",
        "name": "agreement_cn",
        "type": "html"
    });
}, 10136, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/html",
        "scales": [1],
        "hash": "4c01ea46767bf9b337c177ef192ae76e",
        "name": "privacy_cn",
        "type": "html"
    });
}, 10139, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[12]);

    var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _device = _$$_REQUIRE(_dependencyMap[15]);

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        list_title: {
            height: 50,
            paddingTop: 10,
            paddingLeft: 20,
            textAlign: "left",
            textAlignVertical: 'center',
            backgroundColor: '#FFFFFF',
            color: '#8C93B0',
            fontSize: 13
        }
    });

    var DevicesList = function (_React$Component) {
        (0, _inherits2.default)(DevicesList, _React$Component);

        function DevicesList(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, DevicesList);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DevicesList).call(this, props, context));

            _this.componentWillMount = function () {
                _this.onRefreshing();
            };

            _this._renderItem = function (info) {
                return _react.default.createElement(_ListItem.default, {
                    item: info.item,
                    onPressUser: _this._onPressUser,
                    onPressContent: _this._onPressContent
                });
            };

            _this._sectionComp = function (info) {
                var txt = info.section.key;
                return _react.default.createElement(_reactNative.Text, {
                    style: styles.list_title
                }, txt);
            };

            _this.onRefreshing = function () {
                _this.setState({
                    refreshing: true
                });

                var language = _miot.Host.locale.language;
                var locale = "zh_CN";

                if (language === "zh") {
                    locale = "zh_CN";
                } else {
                    locale = "en_US";
                }

                var _this$props = _this.props,
                    api = _this$props.api,
                    deviceType = _this$props.deviceType;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        routerID: deviceId,
                        v: '2',
                        locale: locale,
                        refresh: '1'
                    }
                };

                _miot.Service.callSmartHomeAPI(_API.default.devices.device_list, paramsDic).then(function (res) {
                    if (!_CommonUtils.default.isNull(res)) {
                        var data = [];
                        var onlineDevices = res.devices.filter(function (item) {
                            return _ClientHelper.default.isOnLineExceptGuestDevices(item) == true;
                        });
                        var offlineDevices = res.devices.filter(function (item) {
                            return _ClientHelper.default.isOutLineExceptGuestDevices(item) == true;
                        });
                        var guestDevices = res.devices.filter(function (item) {
                            return _ClientHelper.default.isGuestDevice(item) == true;
                        });
                        var riskDevices = res.riskDevices;

                        if (!_CommonUtils.default.isNull(onlineDevices) && onlineDevices.length > 0) {
                            data.push({
                                data: onlineDevices,
                                key: _RouterLocalizedStringUtil.localStrings.deviceOnlineDevices
                            });
                        }

                        if (!_CommonUtils.default.isNull(guestDevices) && guestDevices.length > 0) {
                            data.push({
                                data: guestDevices,
                                key: _RouterLocalizedStringUtil.localStrings.deviceGuestDevices
                            });
                        }

                        if (!_CommonUtils.default.isNull(offlineDevices) && offlineDevices.length > 0) {
                            data.push({
                                data: offlineDevices,
                                key: _RouterLocalizedStringUtil.localStrings.deviceofflineDevices
                            });
                        }

                        if (!_CommonUtils.default.isNull(riskDevices) && riskDevices.length > 0) {
                            data.push({
                                data: riskDevices,
                                key: _RouterLocalizedStringUtil.localStrings.deviceBlockDevices
                            });
                        }

                        _this.setState({
                            refreshing: false,
                            dataSource: data
                        });
                    } else {
                        _this.setState({
                            refreshing: false,
                            dataSource: null
                        });
                    }
                }).catch(function (e) {
                    _this.setState({
                        refreshing: false
                    });
                });
            };

            _this._onPressUser = function (user) {
                _this.props.navigation.navigate('Detail', {
                    user: user
                });
            };

            _this._onPressContent = function (item) { };

            _this.state = {
                refreshing: false,
                dataSource: null
            };
            return _this;
        }

        (0, _createClass2.default)(DevicesList, [{
            key: "render",
            value: function render() {
                if (!this.state.dataSource) {
                    return _react.default.createElement(_reactNative.SafeAreaView, {
                        style: styles.container
                    }, _react.default.createElement(_reactNative.View, null));
                }

                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1,
                        backgroundColor: '#F7F6F8'
                    }
                }, _react.default.createElement(_reactNative.SectionList, {
                    renderSectionHeader: this._sectionComp,
                    showsVerticalScrollIndicator: false,
                    stickySectionHeadersEnabled: true,
                    renderItem: this._renderItem,
                    refreshing: this.state.refreshing,
                    onRefresh: this.onRefreshing,
                    sections: this.state.dataSource
                })));
            }
        }, {
            key: "renderExpenseItem",
            value: function renderExpenseItem(item, i) {
                return _react.default.createElement(_ListItem.default, {
                    item: item,
                    onPressUser: this._onPressUser,
                    onPressContent: this._onPressContent
                });
            }
        }]);
        return DevicesList;
    }(_react.default.Component);

    exports.default = DevicesList;

    DevicesList.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: _RouterLocalizedStringUtil.localStrings.homePageDeviceTab,
                style: {
                    backgroundColor: '#fff'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };
}, 10142, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10297, 10033, 10074, 10058, 10145, 10076, 10091, 10037, 10935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _Devices = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _Time = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _it = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[17]);

    var ListItem = function (_Component) {
        (0, _inherits2.default)(ListItem, _Component);

        function ListItem() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, ListItem);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));

            _this._renderDevices = function () {
                var item = _this.props.item;
                var isSnsHeaderValid = !_CommonUtils.default.isTextEmpty(item.sns) && !_CommonUtils.default.isTextEmpty(item.sns_head_url);

                var childrenProtectionEnabled = _ClientHelper.default.shouldShowChildTag(item);

                var isWifi6Devices = _ClientHelper.default.isWifi6Devices(item);

                var eventRedTagShouldShow = !_CommonUtils.default.isNull(_ClientHelper.default.getParentControlV2ModeText(item));
                var image_uri = !_CommonUtils.default.isTextEmpty(item.neg480) ? item.neg480 : isSnsHeaderValid ? item.sns_head_url : _API.default.common_base_path.MIWIFI_S_SERVER + '/icon/' + item.iconUrl;

                var default_uri = _$$_REQUIRE(_dependencyMap[18]);

                { }

                var imageSpeedIndex = _ClientHelper.default.signalImageIndex(item);

                var isTimeDisplay = _ClientHelper.default.getEvent(item).originatedTime > 0 && _ClientHelper.default.getEvent(item).timeDisplay == 1;
                return _react.default.createElement(_reactNative.View, {
                    onPress: function onPress() {
                        return _this._onPressContent(item);
                    },
                    style: styles.itemHeaderParents
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.itemHeader
                }, _react.default.createElement(_PlaceholderImage.default, {
                    style: {
                        width: 50,
                        height: 55,
                        opacity: _ClientHelper.default.isOnLine(item) ? 1 : 0.6,
                        borderRadius: 10,
                        marginHorizontal: 5
                    },
                    placeholderSource: default_uri,
                    source: {
                        uri: image_uri
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.deviceContent
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.deviceContentRowParentView
                }, isWifi6Devices ? _react.default.createElement(_reactNative.View, {
                    style: styles.deviceContentRowTopView
                }, _react.default.createElement(_reactNative.Text, {
                    numberOfLines: 1,
                    style: styles.deviceNameText
                }, _ClientHelper.default.getDisplayName(item)), _react.default.createElement(_reactNative.Text, {
                    style: styles.wifi6_tag
                }, ' Wi-Fi 6 ')) : _react.default.createElement(_reactNative.View, {
                    style: styles.deviceContentRowTopView
                }, _react.default.createElement(_reactNative.Text, {
                    numberOfLines: 1,
                    style: styles.deviceNameTextMax
                }, _ClientHelper.default.getDisplayName(item)))), _react.default.createElement(_reactNative.View, {
                    style: styles.deviceContentRowTopView
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.deviceConnectTypeText
                }, _ClientHelper.default.getEventText(item)), isTimeDisplay ? _react.default.createElement(_reactNative.Text, {
                    style: styles.deviceConnectTimeText
                }, (0, _Time.default)(_ClientHelper.default.getEvent(item).duration * 1000, _ClientHelper.default.getEvent(item).originatedTime * 1000)) : null, childrenProtectionEnabled ? _react.default.createElement(_reactNative.Text, {
                    style: styles.child_tag
                }, _RouterLocalizedStringUtil.localStrings.deviceChildProtect) : null, eventRedTagShouldShow ? _react.default.createElement(_reactNative.Text, {
                    style: styles.event_red_tag
                }, _ClientHelper.default.getParentControlV2ModeText(item)) : null))));
            };

            _this._onPressUser = function (user) {
                var onPressUser = _this.props.onPressUser;
                onPressUser && onPressUser(user);
            };

            _this._onPressContent = function (item) {
                var onPressContent = _this.props.onPressContent;
                onPressContent && onPressContent(item);
            };

            return _this;
        }

        (0, _createClass2.default)(ListItem, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, this._renderDevices());
            }
        }]);
        return ListItem;
    }(_react.Component);

    exports.default = ListItem;

    var styles = _reactNative.StyleSheet.create({
        item: {
            backgroundColor: '#fff',
            padding: 5
        },
        itemHeaderParents: {
            height: 60,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-between'
        },
        itemHeader: {
            height: 60,
            flexDirection: 'row',
            alignItems: 'center'
        },
        deviceIcon: {
            width: 50,
            height: 50,
            borderRadius: 10,
            marginHorizontal: 5
        },
        deviceSignalIcon: {
            width: 15,
            height: 15,
            marginHorizontal: 5
        },
        deviceNameText: {
            maxWidth: _Devices.ScreenW / 2,
            alignSelf: 'center',
            fontSize: 16,
            fontWeight: 'bold',
            color: '#000000'
        },
        deviceNameTextMax: {
            maxWidth: _Devices.ScreenW / 1.5,
            fontFamily: '',
            alignSelf: 'center',
            fontSize: 16,
            fontWeight: 'bold',
            color: '#000000'
        },
        deviceSignalText: {
            alignSelf: 'center',
            fontSize: 10,
            marginStart: 5,
            color: '#999999'
        },
        deviceConnectTypeText: {
            fontSize: 12,
            color: '#7F7F7F',
            marginTop: 2
        },
        deviceConnectTimeText: {
            fontSize: 12,
            color: '#7F7F7F',
            marginStart: 5,
            marginTop: 2
        },
        deviceConnectTagText: {
            fontSize: 11,
            color: '#F68A51',
            marginTop: 5,
            marginStart: 2
        },
        deviceContent: {
            marginLeft: 10,
            marginTop: 5,
            justifyContent: 'flex-start',
            height: 50
        },
        deviceContentRowSignalView: {
            flexDirection: 'row',
            marginBottom: 20
        },
        deviceContentRowTopView: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        deviceContentRowParentView: {
            flexDirection: 'row'
        },
        deviceContentColumView: {
            flexDirection: 'column',
            alignItems: 'flex-start'
        },
        child_tag: {
            fontSize: 10,
            color: '#47C9A9',
            paddingLeft: 2,
            paddingRight: 2,
            marginStart: 5,
            marginTop: 5,
            borderWidth: 0.5,
            borderRadius: 2,
            borderColor: '#D5FCF2',
            backgroundColor: '#D5FCF2'
        },
        event_red_tag: {
            fontSize: 10,
            color: '#FF746A',
            paddingLeft: 2,
            paddingRight: 2,
            marginStart: 5,
            marginTop: 5,
            borderWidth: 0.5,
            borderRadius: 2,
            borderColor: '#FFEDEC',
            backgroundColor: '#FFEDEC'
        },
        wifi6_tag: {
            fontSize: 8,
            color: '#48ABF1',
            fontWeight: 'bold',
            paddingHorizontal: 2,
            marginStart: 5,
            marginTop: 5,
            borderWidth: 0.5,
            borderRadius: 3,
            borderColor: '#48ABF1',
            backgroundColor: '#fff'
        }
    });

    ListItem.propTypes = {
        item: _propTypes.default.object.isRequired,
        onPressUser: _propTypes.default.func,
        onPressContent: _propTypes.default.func
    };
}, 10145, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10061, 10318, 10058, 10100, 10037, 10091, 10094, 10107, 10076, 10103]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _Devices = _$$_REQUIRE(_dependencyMap[10]);

    var styles = _reactNative.StyleSheet.create({
        wifiAloneItem: {
            alignItems: 'center',
            backgroundColor: 'white'
        },
        wifiItem: {
            alignItems: 'center',
            backgroundColor: 'white',
            marginTop: 10
        },
        rkbuttonItem: {
            alignItems: 'center',
            padding: 20
        },
        viewRkButton: {
            width: _Devices.ScreenW / 10 * 8
        }
    });

    var ContentDetail = function (_React$Component) {
        (0, _inherits2.default)(ContentDetail, _React$Component);

        function ContentDetail() {
            (0, _classCallCheck2.default)(this, ContentDetail);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContentDetail).apply(this, arguments));
        }

        (0, _createClass2.default)(ContentDetail, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: {
                        backgroundColor: '#f2f2f2',
                        flex: 1
                    }
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ScrollView, null, _react.default.createElement(_reactNative.Text, null, '设备详情页面')));
            }
        }]);
        return ContentDetail;
    }(_react.default.Component);

    exports.default = ContentDetail;

    ContentDetail.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: "\u8BBE\u5907\u8BE6\u60C5",
                style: {
                    backgroundColor: '#fff'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };
}, 10148, [14305, 14320, 14323, 14371, 14377, 14386, 10332, 10284, 10297, 10033, 10061]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[6]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _sizes = _$$_REQUIRE(_dependencyMap[9]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _ui = _$$_REQUIRE(_dependencyMap[13]);

    var _Devices = _$$_REQUIRE(_dependencyMap[14]);

    var _miot = _$$_REQUIRE(_dependencyMap[15]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

    var _WifiSettingConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

    var _device = _$$_REQUIRE(_dependencyMap[20]);

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[21]);

    var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

    var styles = _reactNative.StyleSheet.create({
        wifiAloneItem: {
            alignItems: 'center',
            backgroundColor: 'white'
        },
        wifiItem: {
            alignItems: 'center',
            backgroundColor: 'white',
            marginTop: 10
        },
        wifiItemWithOutMargin: {
            alignItems: 'center',
            backgroundColor: 'white'
        },
        rkbuttonItem: {
            alignItems: 'center',
            padding: 20
        },
        MessageDialog: {
            height: _Devices.ScreenH / 6
        },
        viewRkButton: {
            width: _Devices.ScreenW / 10 * 8
        },
        row_item_name_input: {
            width: _Devices.ScreenW,
            flexDirection: 'row',
            alignItems: 'center',
            marginStart: 46,
            justifyContent: 'flex-start'
        },
        text_name_input: {
            fontSize: 15,
            lineHeight: 20,
            color: '#000'
        },
        inputContainer: {
            height: 50,
            width: _Devices.ScreenW * 0.8,
            color: '#989898',
            fontSize: 13,
            marginStart: 10
        },
        separator: {
            width: _Devices.ScreenW,
            height: 1 / _reactNative.PixelRatio.get(),
            backgroundColor: 'rgba(0,0,0,0.15)',
            marginStart: 46
        }
    });

    var signalDataSource = [_RouterLocalizedStringUtil.localStrings.wifiSignalThroughwall, _RouterLocalizedStringUtil.localStrings.wifiSignalStandard, _RouterLocalizedStringUtil.localStrings.wifiSignalEnergysaving];
    var aloneItemName = [_RouterLocalizedStringUtil.localStrings.wifiMergeTitle, _RouterLocalizedStringUtil.localStrings.wifiMergeDescText];
    var wifiItemName = ['2.4G Wi-Fi', '5G Wi-Fi', _RouterLocalizedStringUtil.localStrings.wifiSsidText, _RouterLocalizedStringUtil.localStrings.wifiEncryptionMode, _RouterLocalizedStringUtil.localStrings.wifiSignalIntensity, _RouterLocalizedStringUtil.localStrings.wifiPwdTitle, _RouterLocalizedStringUtil.localStrings.wifiHideTitle];
    var wifiBsd = ['Wi-Fi', _RouterLocalizedStringUtil.localStrings.wifiSignalIntensity2d4g, _RouterLocalizedStringUtil.localStrings.wifiSignalIntensity5g];
    var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
    var dialogTip = _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent;
    var dialogTip2 = _RouterLocalizedStringUtil.localStrings.wifiReconnectTipContent;
    var dialogTipBsd = _RouterLocalizedStringUtil.localStrings.wifiMergeAlertContent;
    var dialogTipBsdClose = _RouterLocalizedStringUtil.localStrings.wifiMergeOffAlertContent;
    var dialogTipWPA3 = _RouterLocalizedStringUtil.localStrings.wifiWPA3AlertContent;

    var List = function (_React$Component) {
        (0, _inherits2.default)(List, _React$Component);

        function List(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, List);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(List).call(this, props, context));

            _this.UNSAFE_componentWillMount = function () {
                _this.onRefreshing();

                var encripDataSource = _WifiSettingHelper.default.getCapbilityIsWiFi6() ? [_WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE] : [_WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE];

                _this.setState({
                    encripDataSource: encripDataSource
                });
            };

            _this.ChangeSetting = function () {
                var api = _API.default.wifi_setting.set_all_wifi.remote;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var bsd = _this.state.bsd;
                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        bsd: bsd
                    }
                };

                if (!_CommonUtils.default.isNull(_this.state.info[0])) {
                    var on1 = _this.state.gsmStatus;
                    var ssid1 = _CommonUtils.default.isTextEmpty(_this.state.gsmWifiName) ? '' : _this.state.gsmWifiName;

                    var encryption1 = _WifiSettingHelper.default.getEncryptionStringValue(_this.state.gsmEncripString);

                    var pwd1 = _CommonUtils.default.isTextEmpty(_this.state.gsmPwd) || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE ? '' : _this.state.gsmPwd;
                    var hidden1 = _this.state.gsmHidden;

                    var txpwr1 = _WifiSettingHelper.default.getSignalStringValue(_this.state.gsmSignalString);

                    paramsDic.params['on1'] = on1;
                    paramsDic.params['ssid1'] = ssid1;
                    paramsDic.params['encryption1'] = encryption1;
                    paramsDic.params['pwd1'] = pwd1;
                    paramsDic.params['hidden1'] = hidden1;
                    paramsDic.params['txpwr1'] = txpwr1;
                }

                if (_this.needShow5GWifiInfo() && !_CommonUtils.default.isNull(_this.state.info[1])) {
                    var on2 = _this.state.fiveStatus;
                    var ssid2 = _CommonUtils.default.isTextEmpty(_this.state.fiveWifiName) ? '' : _this.state.fiveWifiName;

                    var encryption2 = _WifiSettingHelper.default.getEncryptionStringValue(_this.state.fiveEncripString);

                    var pwd2 = _CommonUtils.default.isTextEmpty(_this.state.fivePwd) || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE ? '' : _this.state.fivePwd;
                    var hidden2 = _this.state.fiveHidden;

                    var txpwr2 = _WifiSettingHelper.default.getSignalStringValue(_this.state.fiveSignalString);

                    paramsDic.params['on2'] = on2;
                    paramsDic.params['ssid2'] = ssid2;
                    paramsDic.params['encryption2'] = encryption2;
                    paramsDic.params['pwd2'] = pwd2;
                    paramsDic.params['hidden2'] = hidden2;
                    paramsDic.params['txpwr2'] = txpwr2;
                }

                if (!_CommonUtils.default.isNull(_this.state.info[2])) {
                    var on3 = _this.state.info[2].status;
                    var ssid3 = _CommonUtils.default.isTextEmpty(_this.state.info[2].ssid) ? '' : _this.state.info[2].ssid;
                    var encryption3 = _this.state.info[2].encryption;
                    var pwd3 = _CommonUtils.default.isTextEmpty(_this.state.info[2].password) ? '' : _this.state.info[2].password;
                    paramsDic.params['on3'] = on3;
                    paramsDic.params['ssid3'] = ssid3;
                    paramsDic.params['encryption3'] = encryption3;
                    paramsDic.params['pwd3'] = pwd3;
                }

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    _this.setState({
                        successChangeVisible: true,
                        loading: false
                    });
                }).catch(function (e) {
                    _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);

                    _this.setState({
                        loading: false
                    });
                });
            };

            _this._GetInputMessage = function () {
                return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '' ? _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.fiveWifiName, _this.state.fivePwd, _this.state.fiveEncripString) : _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString);
            };

            _this._CheckChangeContainWPA3 = function () {
                if (!_CommonUtils.default.isNull(_this.state.bsd) && _this.state.bsd == 1) {
                    return _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
                } else {
                    return _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3 || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
                }
            };

            _this._CheckInputValidate = function () {
                if (!_CommonUtils.default.isNull(_this.state.bsd) && _this.state.bsd == 1) {
                    return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '';
                }

                if (!_CommonUtils.default.isNull(_this.state.fiveStatus) && _this.needShow5GWifiInfo() && _this.state.fiveStatus == 1 && _this.state.gsmStatus == 1) {
                    return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '' && _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.fiveWifiName, _this.state.fivePwd, _this.state.fiveEncripString) == '';
                }

                if (_this.state.gsmStatus == 1) {
                    return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '';
                }

                if (!_CommonUtils.default.isNull(_this.state.fiveStatus) && _this.state.fiveStatus == 1 && _this.needShow5GWifiInfo()) {
                    return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.fiveWifiName, _this.state.fivePwd, _this.state.fiveEncripString) == '';
                }

                return true;
            };

            _this._CheckValues = function () {
                if (!_CommonUtils.default.isNull(_this.state.data)) {
                    if (_this.state.data.bsd != _this.state.bsd) {
                        return true;
                    }

                    if (!_CommonUtils.default.isNull(_this.state.info[0])) {
                        if (_this.state.gsmStatus != _this.state.info[0].status) {
                            return true;
                        }

                        if (_this.state.gsmHidden != _this.state.info[0].hidden) {
                            return true;
                        }

                        if (_this.state.gsmWifiName != _this.state.info[0].ssid) {
                            return true;
                        }

                        if (_WifiSettingHelper.default.getEncryptionStringValue(_this.state.gsmEncripString) != _this.state.info[0].encryption) {
                            return true;
                        }

                        if (_WifiSettingHelper.default.getSignalStringValue(_this.state.gsmSignalString) != _this.state.info[0].txpwr) {
                            return true;
                        }

                        if (_this.state.gsmPwd != (_CommonUtils.default.isNull(_this.state.info[0].password) ? '' : _this.state.info[0].password)) {
                            return true;
                        }
                    }

                    if (!_CommonUtils.default.isNull(_this.state.info[1]) && !_RouterInfoHelper.default.sharedInstance().isRouterWithout5G()) {
                        if (_this.state.fiveStatus != _this.state.info[1].status) {
                            return true;
                        }

                        if (_this.state.fiveHidden != _this.state.info[1].hidden) {
                            return true;
                        }

                        if (_this.state.fiveWifiName != _this.state.info[1].ssid) {
                            return true;
                        }

                        if (_WifiSettingHelper.default.getEncryptionStringValue(_this.state.fiveEncripString) != _this.state.info[1].encryption) {
                            return true;
                        }

                        if (_WifiSettingHelper.default.getSignalStringValue(_this.state.fiveSignalString) != _this.state.info[1].txpwr) {
                            return true;
                        }

                        if (_this.state.fivePwd != (_CommonUtils.default.isNull(_this.state.info[1].password) ? '' : _this.state.info[1].password)) {
                            return true;
                        }
                    }
                }

                return false;
            };

            _this.onRefreshing = function () {
                _this.setState({
                    loading: true
                });

                var api = _API.default.wifi_setting.wifi_detail_all.remote;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    _this.setState({
                        data: res,
                        info: res.info,
                        bsd: res.bsd,
                        gsmHidden: _WifiSettingHelper.default.getSwitchHidden(res, false),
                        gsmStatus: _WifiSettingHelper.default.getSwitchStatus(res, false),
                        gsmWifiName: _WifiSettingHelper.default.getSSIDString(res, false),
                        gsmEncripString: _WifiSettingHelper.default.getEncryptionString(res, false),
                        gsmSignalString: _WifiSettingHelper.default.getSignalString(res, false),
                        gsmPwd: _WifiSettingHelper.default.getPWDString(res, false),
                        fiveHidden: _WifiSettingHelper.default.getSwitchHidden(res, true),
                        fiveStatus: _WifiSettingHelper.default.getSwitchStatus(res, true),
                        fiveWifiName: _WifiSettingHelper.default.getSSIDString(res, true),
                        fiveEncripString: _WifiSettingHelper.default.getEncryptionString(res, true),
                        fiveSignalString: _WifiSettingHelper.default.getSignalString(res, true),
                        fivePwd: _WifiSettingHelper.default.getPWDString(res, true),
                        loading: false
                    });
                }).catch(function (e) {
                    _this.setState({
                        loading: false
                    });

                    _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiRequestInfoFail);

                    _this.props.navigation.goBack();
                });
            };

            var timer1 = null;
            _this.state = {
                data: {},
                info: [],
                bsd: 0,
                gsmHidden: 0,
                gsmStatus: 1,
                gsmWifiName: '',
                gsmEncripString: '',
                gsmSignalString: '',
                gsmPwd: '',
                fiveHidden: 0,
                fiveStatus: 1,
                fiveWifiName: '',
                fiveEncripString: '',
                fiveSignalString: '',
                fivePwd: '',
                encripSingle: false,
                signalSingle: false,
                signalTypeIsGsm: true,
                encripTypeIsGSM: true,
                signalLocation: 0,
                encripLocation: 0,
                confirmDisabled: false,
                sueChangeVisible: false,
                bsdChangeVisible: false,
                bsdChangeCloseVisible: false,
                successChangeVisible: false,
                loading: false,
                valueChanged: false,
                WPA3Open: false,
                encripDataSource: []
            };
            return _this;
        }

        (0, _createClass2.default)(List, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: {
                        backgroundColor: '#f2f2f2',
                        flex: 1
                    }
                }, _react.default.createElement(_reactNative.ScrollView, null, _WifiSettingHelper.default.isSupportShowWifiMerge(this.state.data) ? _react.default.createElement(_reactNative.View, {
                    style: styles.wifiAloneItem
                }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
                    title: aloneItemName[0],
                    value: this.state.bsd == 1,
                    showSeparator: false,
                    disabled: false,
                    subtitle: aloneItemName[1],
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            bsd: value ? 1 : 0,
                            bsdChangeVisible: value,
                            bsdChangeCloseVisible: !value,
                            fiveStatus: value ? 0 : _this2.state.data.info[1].status,
                            gsmStatus: 1
                        });
                    }
                })) : null, _react.default.createElement(_reactNative.View, {
                    style: styles.wifiItem
                }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
                    title: this.state.bsd != 1 ? wifiItemName[0] : wifiBsd[0],
                    value: this.state.gsmStatus == 1,
                    showSeparator: true,
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            gsmStatus: value ? 1 : 0
                        });
                    }
                })), this.state.gsmStatus == 1 ? _react.default.createElement(_reactNative.View, {
                    style: styles.wifiItemWithOutMargin
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_name_input
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_name_input
                }, wifiItemName[2]), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.inputContainer,
                    defaultValue: this.state.gsmWifiName,
                    placeholder: _RouterLocalizedStringUtil.localStrings.wifiSsidInputPlaceholder,
                    placeholderTextColor: '#989898',
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            gsmWifiName: text
                        });
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.separator
                }), _react.default.createElement(_ListItem.ListItem, {
                    title: wifiItemName[3],
                    showSeparator: true,
                    subtitle: this.state.gsmEncripString,
                    onPress: function onPress() {
                        _this2.setState({
                            encripTypeIsGSM: true,
                            encripSingle: true
                        });
                    }
                }), _react.default.createElement(_ListItem.ListItem, {
                    title: this.state.bsd != 1 ? wifiItemName[4] : _device.Device.model != 'xiaomi.router.d01' ? wifiBsd[1] : wifiItemName[4],
                    subtitle: this.state.gsmSignalString,
                    showDot: false,
                    onPress: function onPress() {
                        _this2.setState({
                            signalTypeIsGsm: true,
                            signalSingle: true
                        });
                    }
                }), this.state.bsd == 1 && _device.Device.model != 'xiaomi.router.d01' ? _react.default.createElement(_ListItem.ListItem, {
                    title: wifiBsd[2],
                    subtitle: this.state.fiveSignalString,
                    showDot: false,
                    onPress: function onPress() {
                        _this2.setState({
                            signalTypeIsGsm: false,
                            signalSingle: true
                        });
                    }
                }) : null, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_name_input
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_name_input
                }, wifiItemName[5]), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.inputContainer,
                    defaultValue: this.state.gsmPwd,
                    editable: this.state.gsmEncripString != _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE,
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            gsmPwd: text
                        });
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.separator
                }), this.needShowHiddenWifi() ? _react.default.createElement(_ListItem.ListItemWithSwitch, {
                    title: wifiItemName[6],
                    value: this.state.gsmHidden == 1,
                    showSeparator: true,
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            gsmHidden: value ? 1 : 0
                        });
                    }
                }) : null) : null, this.state.bsd != 1 && this.needShow5GWifiInfo() ? _react.default.createElement(_reactNative.View, {
                    style: styles.wifiItem
                }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
                    title: wifiItemName[1],
                    value: this.state.fiveStatus == 1 && this.state.bsd == 0,
                    showSeparator: true,
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            fiveStatus: value ? 1 : 0
                        });
                    }
                })) : null, this.state.fiveStatus == 1 && this.state.bsd == 0 && this.needShow5GWifiInfo() ? _react.default.createElement(_reactNative.View, {
                    style: styles.wifiItemWithOutMargin
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_name_input
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_name_input
                }, wifiItemName[2]), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.inputContainer,
                    defaultValue: this.state.fiveWifiName,
                    placeholder: _RouterLocalizedStringUtil.localStrings.wifiSsidInputPlaceholder,
                    placeholderTextColor: '#989898',
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            fiveWifiName: text
                        });
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.separator
                }), _react.default.createElement(_ListItem.ListItem, {
                    title: wifiItemName[3],
                    subtitle: this.state.fiveEncripString,
                    onPress: function onPress() {
                        _this2.setState({
                            encripTypeIsGSM: false,
                            encripSingle: true
                        });
                    }
                }), _react.default.createElement(_ListItem.ListItem, {
                    title: wifiItemName[4],
                    subtitle: this.state.fiveSignalString,
                    showDot: false,
                    onPress: function onPress() {
                        _this2.setState({
                            signalTypeIsGsm: false,
                            signalSingle: true
                        });
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_name_input
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_name_input
                }, wifiItemName[5]), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.inputContainer,
                    editable: this.state.fiveEncripString != _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE,
                    defaultValue: this.state.fivePwd,
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            fivePwd: text
                        });
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.separator
                }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
                    title: wifiItemName[6],
                    value: this.state.fiveHidden == 1,
                    showSeparator: true,
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            fiveHidden: value ? 1 : 0
                        });
                    }
                })) : null, _react.default.createElement(_reactNative.View, {
                    style: styles.rkbuttonItem
                }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
                    onPress: function onPress() {
                        return _this2._CheckValues() && _this2._CheckChangeContainWPA3() ? _this2.setState({
                            WPA3Open: true
                        }) : _this2._CheckInputValidate() ? _this2._CheckValues() ? _this2.setState({
                            sueChangeVisible: true
                        }) : _this2.props.navigation.goBack() : _CommonUtils.default.ShowToastBottom(_this2._GetInputMessage());
                    },
                    rkType: "rounded",
                    disabled: this.state.confirmDisabled,
                    style: styles.viewRkButton
                }, _RouterLocalizedStringUtil.localStrings.buttonConfirmTitle)), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTip,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        _this2.setState({
                            loading: true
                        });

                        _this2.ChangeSetting();
                    },
                    onDismiss: function onDismiss() {
                        _this2.setState({
                            sueChangeVisible: false
                        });
                    },
                    visible: this.state.sueChangeVisible
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTipBsd,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) {
                        _this2.setState({
                            bsdChangeVisible: false,
                            bsd: ~_this2.state.bsd + 2,
                            fiveStatus: ~_this2.state.bsd + 2 == 1 ? 0 : _this2.state.data.info[1].status
                        });
                    },
                    onConfirm: function onConfirm(e) {
                        _this2.setState({
                            loading: true
                        });

                        _this2.ChangeSetting();
                    },
                    visible: this.state.bsdChangeVisible
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTipBsdClose,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) {
                        _this2.setState({
                            bsdChangeCloseVisible: false,
                            bsd: ~_this2.state.bsd + 2,
                            gsmStatus: 1
                        });
                    },
                    onConfirm: function onConfirm(e) {
                        _this2.setState({
                            loading: true
                        });

                        _this2.ChangeSetting();
                    },
                    visible: this.state.bsdChangeCloseVisible
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTip2,
                    cancelable: false,
                    confirm: dialogButtonName[0],
                    onConfirm: function onConfirm(e) {
                        _this2.props.navigation.goBack();
                    },
                    onDismiss: function onDismiss() {
                        _this2.setState({
                            successChangeVisible: false
                        });
                    },
                    visible: this.state.successChangeVisible
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTipWPA3,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        _this2._CheckInputValidate() ? _this2._CheckValues() ? _this2.setState({
                            sueChangeVisible: true
                        }) : _this2.props.navigation.goBack() : _CommonUtils.default.ShowToastBottom(_this2._GetInputMessage());
                    },
                    onDismiss: function onDismiss() {
                        _this2.setState({
                            WPA3Open: false
                        });
                    },
                    visible: this.state.WPA3Open
                }), _react.default.createElement(_ui.LoadingDialog, {
                    visible: this.state.loading,
                    message: _RouterLocalizedStringUtil.localStrings.waitingLoading
                }), _react.default.createElement(_ui.SingleChoseDialog, {
                    title: wifiItemName[3],
                    dataSource: this.state.encripDataSource,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    cancelable: false,
                    timeout: 0,
                    check: _CommonUtils.default.getArrayPosition(this.state.encripDataSource, this.state.encripTypeIsGSM == true ? this.state.gsmEncripString : this.state.fiveEncripString),
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        if (_this2.state.encripTypeIsGSM) {
                            _this2.setState({
                                gsmEncripString: _this2.state.encripDataSource[e.position]
                            });
                        } else {
                            _this2.setState({
                                fiveEncripString: _this2.state.encripDataSource[e.position]
                            });
                        }
                    },
                    onCheck: function onCheck(e) { },
                    onDismiss: function onDismiss() {
                        _this2.setState({
                            encripSingle: false
                        });
                    },
                    visible: this.state.encripSingle
                }), _react.default.createElement(_ui.SingleChoseDialog, {
                    title: wifiItemName[4],
                    dataSource: signalDataSource,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    cancelable: false,
                    timeout: 0,
                    check: _CommonUtils.default.getArrayPosition(signalDataSource, this.state.signalTypeIsGsm == true ? this.state.gsmSignalString : this.state.fiveSignalString),
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        if (_this2.state.signalTypeIsGsm) {
                            _this2.setState({
                                gsmSignalString: signalDataSource[e.position]
                            });
                        } else {
                            _this2.setState({
                                fiveSignalString: signalDataSource[e.position]
                            });
                        }
                    },
                    onCheck: function onCheck(e) { },
                    onDismiss: function onDismiss() {
                        _this2.setState({
                            signalSingle: false
                        });
                    },
                    visible: this.state.signalSingle
                })));
            }
        }, {
            key: "needShowHiddenWifi",
            value: function needShowHiddenWifi() {
                var result = true;

                if (_device.Device.model === 'xiaomi.router.d01' || this.state.gsmHidden === -1) {
                    result = false;
                }

                return result;
            }
        }, {
            key: "needShow5GWifiInfo",
            value: function needShow5GWifiInfo() {
                if (this.state.bsd != 1) {
                    if (!_CommonUtils.default.isNull(this.state.data.info) && this.state.data.info.length > 1 && !_RouterInfoHelper.default.sharedInstance().isRouterWithout5G()) {
                        return true;
                    } else {
                        return false;
                    }
                }

                return false;
            }
        }]);
        return List;
    }(_react.default.Component);

    exports.default = List;

    List.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: _RouterLocalizedStringUtil.localStrings.wifiSettingTitle,
                style: {
                    backgroundColor: '#fff'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };
}, 10151, [14305, 14320, 14323, 14371, 14377, 14386, 10338, 10332, 10284, 10776, 10297, 11251, 10033, 10230, 10061, 10074, 10058, 10070, 10037, 10073, 10935, 10076, 10079]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[8]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _Devices = _$$_REQUIRE(_dependencyMap[12]);

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var RestartRouter = function (_React$Component) {
        (0, _inherits2.default)(RestartRouter, _React$Component);

        function RestartRouter(props) {
            var _this;

            (0, _classCallCheck2.default)(this, RestartRouter);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RestartRouter).call(this, props));
            _this.state = {};
            return _this;
        }

        (0, _createClass2.default)(RestartRouter, [{
            key: "_restart_router",
            value: function _restart_router() { }
        }, {
            key: "_fetchListData",
            value: function _fetchListData() { }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._fetchListData();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.header
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[14])
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.listCont
                }, _react.default.createElement(_reactNative.View, {
                    style: _styles.default.row_container_first
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon_remind,
                    source: _$$_REQUIRE(_dependencyMap[15])
                }), _react.default.createElement(_reactNative.Text, {
                    style: _styles.default.text_description_margin_start
                }, "\u91CD\u542F\u540E\u5C06\u4E2D\u65AD\u5F53\u524D\u6240\u6709\u8FDE\u63A5\uFF0C\u5927\u7EA6\u9700\u89811\u5206\u949F\u6062\u590D\uFF0C\u91CD\u542F\u540E\u5F53\u524D\u624B\u673A\u53EF\u80FD\u9700\u8981\u624B\u5DE5\u8FDE\u63A5Wi-Fi."))), _react.default.createElement(_reactNative.View, {
                    style: styles.addWrap
                }, _react.default.createElement(_reactNative.TouchableHighlight, {
                    style: styles.button,
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        return _this2._restart_router();
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.button_text
                }, "\u7ACB\u5373\u91CD\u542F\u8DEF\u7531\u5668"))));
            }
        }]);
        return RestartRouter;
    }(_react.default.Component);

    exports.default = RestartRouter;

    RestartRouter.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "light",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                title: '重启路由器',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        icon: {
            width: 100,
            height: 100
        },
        icon_remind: {
            width: 16,
            height: 13.6
        },
        viewRkButton: {
            width: _Devices.ScreenW / 10 * 8
        },
        listCont: {
            flex: 1
        },
        list: {
            position: 'absolute',
            top: 0,
            bottom: 60
        },
        header: {
            backgroundColor: '#1a1b2a',
            alignItems: 'center',
            justifyContent: 'center',
            height: 200
        },
        button_text: {
            fontSize: 16,
            color: '#FF3D3D'
        },
        addWrap: {
            position: 'absolute',
            alignItems: 'center',
            bottom: 10,
            left: 6,
            right: 6
        },
        addcont: {
            alignItems: 'center',
            justifyContent: 'center',
            height: 60
        },
        separator: {
            backgroundColor: '#000',
            marginTop: 20
        },
        button: {
            alignItems: "center",
            justifyContent: "center",
            height: 44,
            marginBottom: 10,
            width: _Devices.ScreenW * 0.9,
            borderRadius: 22,
            borderWidth: 0.5,
            borderColor: '#E5E5E5'
        }
    });
}, 10154, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10374, 11251, 10297, 10033, 10157, 10061, 10010, 10160, 10163]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var _Devices = _$$_REQUIRE(_dependencyMap[1]);

    var _default = _reactNative.StyleSheet.create({
        column_container: {
            alignItems: 'center',
            flexDirection: 'column'
        },
        column_container_margin_first: {
            alignItems: 'center',
            margin: 20,
            flexDirection: 'column'
        },
        column_container_margin_second: {
            alignItems: 'center',
            marginStart: 20,
            marginEnd: 20,
            flexDirection: 'column'
        },
        row_container: {
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
        },
        row_container_first: {
            alignItems: 'center',
            margin: 20,
            flexDirection: 'row'
        },
        row_container_second: {
            alignItems: 'center',
            marginTop: 20,
            marginBottom: 20,
            flexDirection: 'row'
        },
        text_title: {
            fontSize: 16,
            textAlign: 'center',
            color: '#333333'
        },
        text_title_white: {
            fontSize: 16,
            textAlign: 'center',
            color: '#fff'
        },
        text_description: {
            fontSize: 14,
            color: '#999999'
        },
        text_description_white: {
            fontSize: 14,
            color: '#fff'
        },
        text_description_margin_start: {
            marginStart: 10,
            fontSize: 14,
            color: '#999999'
        },
        text_description_white_margin_start: {
            marginStart: 10,
            fontSize: 14,
            color: '#fff'
        },
        separator: {
            width: _Devices.ScreenW,
            height: 1 / _reactNative.PixelRatio.get(),
            backgroundColor: 'rgba(0,0,0,0.15)'
        },
        separator_margin_start: {
            width: _Devices.ScreenW,
            height: 1 / _reactNative.PixelRatio.get(),
            backgroundColor: 'rgba(0,0,0,0.15)',
            marginStart: 46
        }
    });

    exports.default = _default;
}, 10157, [10033, 10061]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/setting",
        "width": 310,
        "height": 310,
        "scales": [1],
        "hash": "06ceede3a6301ee37fb3a57ffa2bb2be",
        "name": "setting_tip_icon_reboot",
        "type": "png"
    });
}, 10160, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/common",
        "width": 48,
        "height": 41,
        "scales": [1],
        "hash": "596adecff5159b1a42dabffd05542716",
        "name": "common_icon_remind",
        "type": "png"
    });
}, 10163, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _reactNavigation = _$$_REQUIRE(_dependencyMap[9]);

    var _LoadingView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var canGoBack = false;

    var MpkWebPage = function (_React$Component) {
        (0, _inherits2.default)(MpkWebPage, _React$Component);

        function MpkWebPage() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, MpkWebPage);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MpkWebPage)).call.apply(_getPrototypeOf2, [this].concat(args)));

            _this.onNavigationStateChange = function (navState) { };

            _this.renderLoading = function () {
                return _react.default.createElement(_LoadingView.default, null);
            };

            return _this;
        }

        (0, _createClass2.default)(MpkWebPage, [{
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var params = this.props.navigation.state.params;
                return _react.default.createElement(_reactNavigation.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.WebView, {
                    ref: function ref(_ref) {
                        _this2.webview = _ref;
                    },
                    style: styles.base,
                    source: {
                        uri: params.url
                    },
                    javaScriptEnabled: true,
                    domStorageEnabled: true,
                    startInLoadingState: true,
                    scalesPageToFit: true,
                    decelerationRate: "normal",
                    onShouldStartLoadWithRequest: function onShouldStartLoadWithRequest() {
                        var shouldStartLoad = true;
                        return shouldStartLoad;
                    },
                    onNavigationStateChange: this.onNavigationStateChange,
                    renderLoading: this.renderLoading
                }));
            }
        }]);
        return MpkWebPage;
    }(_react.default.Component);

    exports.default = MpkWebPage;

    MpkWebPage.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "light",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                title: navigation.state.params.title,
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        base: {
            flex: 1
        },
        container: {
            flex: 1,
            flexDirection: 'column',
            backgroundColor: '#FFF'
        }
    });
}, 10166, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10033, 10918, 10169]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[3]);

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[4]);

    var LoadingView = function LoadingView() {
        return _react.default.createElement(_Dialog.LoadingDialog, {
            visible: true,
            message: _RouterLocalizedStringUtil.localStrings.loadingText
        });
    };

    var styles = _reactNative.StyleSheet.create({
        loading: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            backgroundColor: 'white'
        },
        loadingText: {
            marginTop: 10,
            textAlign: 'center'
        }
    });

    var _default = LoadingView;
    exports.default = _default;
}, 10169, [14305, 10297, 10033, 10755, 10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[11]);

    var _Devices = _$$_REQUIRE(_dependencyMap[12]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var options = [{
        title: '自动分配',
        subtitle: '系统根据设备需要自动调整网速'
    }, {
        title: '游戏优先',
        subtitle: '优先保证游戏的网速，不卡顿不掉线'
    }, {
        title: '视频优先',
        subtitle: '优先保证看视频的网速，高清也流畅'
    }, {
        title: '网页优先',
        subtitle: '优先保证浏览网页的速度，大图秒打开'
    }];

    var QosEntry = function (_React$Component) {
        (0, _inherits2.default)(QosEntry, _React$Component);

        function QosEntry(props) {
            var _this;

            (0, _classCallCheck2.default)(this, QosEntry);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QosEntry).call(this, props));
            _this.state = {
                qosGuestTitle: '红包Wi-Fi限速',
                visible_qos_setting_dialog: false,
                visible_priority_dialog: false,
                selectedIndex: 0,
                selectedIndexArray: [0],
                qosSettingOptions: [{
                    upload: 100,
                    download: 200
                }]
            };
            return _this;
        }

        (0, _createClass2.default)(QosEntry, [{
            key: "_fetchListData",
            value: function _fetchListData() { }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._fetchListData();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "_pressQosGuest",
            value: function _pressQosGuest(title) {
                this.props.navigation.navigate('QosGuest', {
                    title: title
                });
            }
        }, {
            key: "_onPriorityDismiss",
            value: function _onPriorityDismiss() {
                this.setState({
                    visible_priority_dialog: false
                });
            }
        }, {
            key: "_onQosSettingDismiss",
            value: function _onQosSettingDismiss() {
                this.setState({
                    visible_qos_setting_dialog: false
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.header
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[15])
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.row_container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_container
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon_speed,
                    source: _$$_REQUIRE(_dependencyMap[16])
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.column_container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_speed
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_speed
                }, " 88.88"), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_speed_unit
                }, " MB/s")), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_speed_des
                }, "\u5916\u7F51\u6700\u9AD8\u4E0B\u8F7D\u901F\u5EA6"))), _react.default.createElement(_reactNative.View, {
                    style: styles.infoDivider
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_container
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon_speed,
                    source: _$$_REQUIRE(_dependencyMap[16])
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.column_container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_speed
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_speed
                }, " 88.88"), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_speed_unit
                }, " MB/s")), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_speed_des
                }, "\u5916\u7F51\u6700\u9AD8\u4E0A\u4F20\u901F\u5EA6")))), _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_speed
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_speed_tip
                }, "\u76F8\u5F53\u4E8E20M\u5BBD\u5E26"), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_qos_setting,
                    onPress: function onPress(_) {
                        return _this2.setState({
                            visible_qos_setting_dialog: true
                        });
                    }
                }, "\u9650\u901F\u8BBE\u7F6E"))), _react.default.createElement(_reactNative.View, {
                    style: styles.listCont
                }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
                    title: "\u7F51\u7EDC\u667A\u80FD\u5206\u914D",
                    value: false,
                    titleStyle: {
                        marginTop: 20
                    },
                    subtitleStyle: {
                        fontSize: 12,
                        marginTop: 22
                    },
                    subtitle: "\u6839\u636E\u7F51\u7EDC\u5BBD\u5E26\u548C\u8BBE\u5B9A\u7684\u670D\u52A1\u4F18\u5148\u7EA7\u8C03\u914D\u7F51\u901F",
                    onValueChange: function onValueChange(value) {
                        return undefined;
                    }
                }), _react.default.createElement(_ListItem.ListItem, {
                    title: "\u6309\u7167\u5E94\u7528\u4F18\u5148\u7EA7\u5206\u914D\u7F51\u901F",
                    value: options[this.state.selectedIndex].title,
                    showDot: false,
                    onPress: function onPress(_) {
                        return _this2.setState({
                            visible_priority_dialog: true
                        });
                    }
                }), _react.default.createElement(_ListItem.ListItem, {
                    title: this.state.qosGuestTitle,
                    showDot: false,
                    onPress: function onPress(_) {
                        return _this2._pressQosGuest(_this2.state.qosGuestTitle);
                    }
                })), _react.default.createElement(_Dialog.ChoiceDialog, {
                    visible: this.state.visible_priority_dialog,
                    title: '按照应用优先级分配网速',
                    options: options,
                    selectedIndexArray: this.state.selectedIndexArray,
                    onDismiss: function onDismiss(_) {
                        return _this2._onPriorityDismiss();
                    },
                    onSelect: function onSelect(result) {
                        return _this2.setState({
                            selectedIndex: result,
                            selectedIndexArray: result
                        });
                    }
                }), _react.default.createElement(_Dialog.AbstractDialog, {
                    visible: this.state.visible_qos_setting_dialog,
                    title: '设置上传和下载带宽',
                    style: {
                        bottom: ~~(_Devices.ScreenH * 0.4)
                    },
                    onDismiss: function onDismiss(_) {
                        return _this2._onQosSettingDismiss();
                    },
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#666666'
                        },
                        callback: function callback(_) {
                            return _this2._onQosSettingDismiss();
                        }
                    }, {
                        text: '确定',
                        style: {
                            color: '#4778FF'
                        },
                        callback: function callback(_) {
                            return _this2._onQosSettingDismiss();
                        }
                    }]
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1,
                        height: 120,
                        backgroundColor: 'white',
                        alignItems: 'center',
                        justifyContent: 'center'
                    }
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    activeOpacity: 1,
                    style: styles.inputContainer,
                    onPress: function onPress() {
                        return _this2.TextInput.focus();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_qos_input
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_qos_setting_input
                }, "\u4E0A\u4F20\u5BBD\u5E26"), _react.default.createElement(_reactNative.TextInput, {
                    style: {
                        height: 40,
                        width: _Devices.ScreenW * 0.4,
                        color: '#989898',
                        fontSize: 13
                    },
                    placeholder: "0.0",
                    autoFocus: "true",
                    placeholderTextColor: "#989898",
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            text: text
                        });
                    }
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_qos_setting_input_right
                }, "Mbps"))), _react.default.createElement(_reactNative.TouchableOpacity, {
                    activeOpacity: 1,
                    style: styles.inputContainer,
                    onPress: function onPress() {
                        return _this2.TextInput.focus();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item_qos_input
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_qos_setting_input
                }, "\u4E0B\u8F7D\u5BBD\u5E26"), _react.default.createElement(_reactNative.TextInput, {
                    style: {
                        height: 40,
                        width: _Devices.ScreenW * 0.4,
                        color: '#989898',
                        fontSize: 13
                    },
                    placeholder: "0.0",
                    placeholderTextColor: "#989898",
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            text: text
                        });
                    }
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_qos_setting_input_right
                }, "Mbps")))), _react.default.createElement(_Separator.default, null)));
            }
        }]);
        return QosEntry;
    }(_react.default.Component);

    exports.default = QosEntry;

    QosEntry.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "light",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                title: navigation.state.params.title,
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        inputContainer: {
            borderWidth: 0.5,
            marginBottom: 10,
            borderColor: '#F9F9F9',
            borderRadius: 5
        },
        icon: {
            marginTop: 15,
            width: 100,
            height: 100
        },
        icon_remind: {
            width: 16,
            height: 13.6
        },
        icon_speed: {
            marginTop: 10,
            width: 10,
            height: 15
        },
        viewRkButton: {
            width: _Devices.ScreenW / 10 * 8
        },
        listCont: {
            flex: 1
        },
        list: {
            position: 'absolute',
            top: 0,
            bottom: 60
        },
        header: {
            flexDirection: 'column',
            backgroundColor: '#1a1b2a',
            alignItems: 'center',
            justifyContent: 'center',
            height: 260
        },
        text_speed: {
            color: '#fff',
            fontSize: 27,
            textAlign: 'left'
        },
        text_speed_unit: {
            color: 'rgba(255, 255, 255, 0.8)',
            fontSize: 10,
            marginBottom: 5
        },
        text_speed_tip: {
            color: 'rgba(255, 255, 255,1.0)',
            fontSize: 12,
            marginBottom: 10,
            textAlign: 'center'
        },
        text_qos_setting: {
            color: 'rgba(255, 255, 255,0.5)',
            fontSize: 12,
            marginStart: 10,
            textDecorationLine: 'underline',
            marginBottom: 10,
            textAlign: 'center'
        },
        text_qos_setting_input: {
            color: '#000000',
            fontSize: 13,
            marginHorizontal: 10
        },
        text_qos_setting_input_right: {
            color: '#989898',
            fontSize: 13,
            marginHorizontal: 10
        },
        text_speed_des: {
            color: 'rgba(255, 255, 255,0.5)',
            marginStart: 10,
            fontSize: 12
        },
        addcont: {
            alignItems: 'center',
            justifyContent: 'center',
            height: 60
        },
        separator: {
            backgroundColor: '#000',
            marginTop: 20
        },
        infoDivider: {
            backgroundColor: 'rgba(255, 255, 255, 0.5)',
            height: 40,
            marginTop: 7,
            marginLeft: 10,
            marginRight: 10,
            width: 3 / _reactNative.PixelRatio.get()
        },
        row_container: {
            alignItems: 'center',
            flexDirection: 'row',
            flex: 1
        },
        column_container: {
            flexDirection: 'column',
            alignItems: 'flex-start'
        },
        row_item_container: {
            flexDirection: 'row',
            alignItems: 'flex-start',
            justifyContent: 'center',
            flex: 1
        },
        row_item_speed: {
            flexDirection: 'row',
            alignItems: 'flex-end'
        },
        row_item_qos_input: {
            backgroundColor: '#F9F9F9',
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center'
        },
        column_item_container: {
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
            borderRadius: 5,
            flex: 1
        }
    });
}, 10172, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10297, 10338, 10033, 11251, 10755, 10061, 10332, 10010, 10175, 10178]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 280,
        "height": 280,
        "scales": [1],
        "hash": "49ab9aebd2d2bc9e4e508e096a661e4a",
        "name": "toolbox_qos_icon",
        "type": "png"
    });
}, 10175, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
        "width": 36,
        "height": 36,
        "scales": [1],
        "hash": "475b36054e2133b63313ae5732024822",
        "name": "titlebar_client_details_icon_speed",
        "type": "png"
    });
}, 10178, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _Devices = _$$_REQUIRE(_dependencyMap[10]);

    var _Slider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var QosGuest = function (_React$Component) {
        (0, _inherits2.default)(QosGuest, _React$Component);

        function QosGuest(props) {
            var _this;

            (0, _classCallCheck2.default)(this, QosGuest);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QosGuest).call(this, props));
            _this.state = {
                upload_value: 60,
                download_value: 60
            };
            return _this;
        }

        (0, _createClass2.default)(QosGuest, [{
            key: "_fetchListData",
            value: function _fetchListData() { }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._fetchListData();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.column_container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.parents
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h1
                }, "\u7EA2\u5305Wi-Fi\u4E0A\u4F20\u7F51\u901F\u9650\u5236"), _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h2
                }, "\u9650\u5236\u4E3A\u6574\u4F53\u4E0A\u4F20\u7F51\u901F\u7684"), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h4
                }, this.state.upload_value, "%")), _react.default.createElement(_Slider.default, {
                    minimumValue: 0,
                    maximumValue: 100,
                    trackStyle: styles.track,
                    thumbStyle: styles.thumb,
                    minimumTrackTintColor: "#1073ff",
                    maximumTrackTintColor: "#b7b7b7",
                    value: this.state.upload_value,
                    step: 1,
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            upload_value: value
                        });
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.row_item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h3
                }, "\u4E0A\u4F20\u9650\u901F"), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h4
                }, this.state.upload_value, "%")))), _react.default.createElement(_reactNative.View, {
                    style: styles.parents
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h1
                }, "\u7EA2\u5305Wi-Fi\u4E0B\u8F7D\u7F51\u901F\u9650\u5236"), _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.row_item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h2
                }, "\u7EA2\u9650\u5236\u4E3A\u6574\u4F53\u4E0B\u8F7D\u7F51\u901F\u7684"), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h4
                }, this.state.download_value, "%")), _react.default.createElement(_Slider.default, {
                    minimumValue: 0,
                    maximumValue: 100,
                    trackStyle: styles.track,
                    thumbStyle: styles.thumb,
                    minimumTrackTintColor: "#1073ff",
                    maximumTrackTintColor: "#b7b7b7",
                    value: this.state.download_value,
                    step: 1,
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            download_value: value
                        });
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.row_item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h3
                }, "\u4E0B\u8F7D\u9650\u901F"), _react.default.createElement(_reactNative.Text, {
                    style: styles.text_h4
                }, this.state.download_value, "%")))), _react.default.createElement(_reactNative.View, {
                    style: styles.parents
                }));
            }
        }]);
        return QosGuest;
    }(_react.default.Component);

    exports.default = QosGuest;

    QosGuest.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "light",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                title: navigation.state.params.title,
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            width: _Devices.ScreenW / 10 * 9,
            alignItems: "stretch",
            justifyContent: 'center'
        },
        parents: {
            flex: 1,
            width: _Devices.ScreenW / 10 * 9,
            marginLeft: 10,
            marginRight: 10,
            alignItems: "stretch",
            justifyContent: 'flex-start'
        },
        column_container: {
            flexDirection: 'column',
            alignItems: 'center',
            flex: 1
        },
        row_item: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center'
        },
        track: {
            height: 2,
            borderRadius: 1
        },
        thumb: {
            width: 30,
            height: 30,
            borderRadius: 15,
            backgroundColor: 'white',
            shadowColor: 'black',
            shadowOffset: {
                width: 0,
                height: 2
            },
            shadowRadius: 2,
            shadowOpacity: 0.35
        },
        text_h1: {
            marginTop: 30,
            fontSize: 12,
            color: '#989898'
        },
        text_h2: {
            marginVertical: 20,
            textAlign: 'center',
            fontSize: 14,
            color: '#000000'
        },
        text_h3: {
            marginVertical: 20,
            textAlign: 'center',
            fontSize: 14,
            color: '#989898'
        },
        text_h4: {
            marginHorizontal: 10,
            textAlign: 'center',
            fontSize: 14,
            color: '#4778FF'
        }
    });
}, 10181, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10297, 10338, 10033, 10061, 10184, 10010]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var TRACK_SIZE = 4;
    var THUMB_SIZE = 20;

    function Rect(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }

    Rect.prototype.containsPoint = function (x, y) {
        return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;
    };

    var DEFAULT_ANIMATION_CONFIGS = {
        spring: {
            friction: 7,
            tension: 100
        },
        timing: {
            duration: 150,
            easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
            delay: 0
        }
    };

    var Slider = function (_PureComponent) {
        (0, _inherits2.default)(Slider, _PureComponent);

        function Slider() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, Slider);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Slider)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                containerSize: {
                    width: 0,
                    height: 0
                },
                trackSize: {
                    width: 0,
                    height: 0
                },
                thumbSize: {
                    width: 0,
                    height: 0
                },
                allMeasured: false,
                value: new _reactNative.Animated.Value(_this.props.value)
            };

            _this._handleStartShouldSetPanResponder = function (e) {
                return _this._thumbHitTest(e);
            };

            _this._handlePanResponderGrant = function () {
                _this._previousLeft = _this._getThumbLeft(_this._getCurrentValue());

                _this._fireChangeEvent('onSlidingStart');
            };

            _this._handlePanResponderMove = function (e, gestureState) {
                if (_this.props.disabled) {
                    return;
                }

                _this._setCurrentValue(_this._getValue(gestureState));

                _this._fireChangeEvent('onValueChange');
            };

            _this._handlePanResponderEnd = function (e, gestureState) {
                if (_this.props.disabled) {
                    return;
                }

                _this._setCurrentValue(_this._getValue(gestureState));

                _this._fireChangeEvent('onSlidingComplete');
            };

            _this._measureContainer = function (x) {
                _this._handleMeasure('containerSize', x);
            };

            _this._measureTrack = function (x) {
                _this._handleMeasure('trackSize', x);
            };

            _this._measureThumb = function (x) {
                _this._handleMeasure('thumbSize', x);
            };

            _this._handleMeasure = function (name, x) {
                var _x$nativeEvent$layout = x.nativeEvent.layout,
                    width = _x$nativeEvent$layout.width,
                    height = _x$nativeEvent$layout.height;
                var size = {
                    width: width,
                    height: height
                };
                var storeName = "_" + name;
                var currentSize = _this[storeName];

                if (currentSize && width === currentSize.width && height === currentSize.height) {
                    return;
                }

                _this[storeName] = size;

                if (_this._containerSize && _this._trackSize && _this._thumbSize) {
                    _this.setState({
                        containerSize: _this._containerSize,
                        trackSize: _this._trackSize,
                        thumbSize: _this._thumbSize,
                        allMeasured: true
                    });
                }
            };

            _this._getRatio = function (value) {
                return (value - _this.props.minimumValue) / (_this.props.maximumValue - _this.props.minimumValue);
            };

            _this._getThumbLeft = function (value) {
                var nonRtlRatio = _this._getRatio(value);

                var ratio = _reactNative.I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;
                return ratio * (_this.state.containerSize.width - _this.state.thumbSize.width);
            };

            _this._getValue = function (gestureState) {
                var length = _this.state.containerSize.width - _this.state.thumbSize.width;
                var thumbLeft = _this._previousLeft + gestureState.dx;
                var nonRtlRatio = thumbLeft / length;
                var ratio = _reactNative.I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;

                if (_this.props.step) {
                    return Math.max(_this.props.minimumValue, Math.min(_this.props.maximumValue, _this.props.minimumValue + Math.round(ratio * (_this.props.maximumValue - _this.props.minimumValue) / _this.props.step) * _this.props.step));
                }

                return Math.max(_this.props.minimumValue, Math.min(_this.props.maximumValue, ratio * (_this.props.maximumValue - _this.props.minimumValue) + _this.props.minimumValue));
            };

            _this._getCurrentValue = function () {
                return _this.state.value.__getValue();
            };

            _this._setCurrentValue = function (value) {
                _this.state.value.setValue(value);
            };

            _this._setCurrentValueAnimated = function (value) {
                var animationType = _this.props.animationType;
                var animationConfig = (0, _extends2.default)({}, DEFAULT_ANIMATION_CONFIGS[animationType], _this.props.animationConfig, {
                    toValue: value
                });

                _reactNative.Animated[animationType](_this.state.value, animationConfig).start();
            };

            _this._fireChangeEvent = function (event) {
                if (_this.props[event]) {
                    _this.props[event](_this._getCurrentValue());
                }
            };

            _this._getTouchOverflowSize = function () {
                var state = _this.state;
                var props = _this.props;
                var size = {};

                if (state.allMeasured === true) {
                    size.width = Math.max(0, props.thumbTouchSize.width - state.thumbSize.width);
                    size.height = Math.max(0, props.thumbTouchSize.height - state.containerSize.height);
                }

                return size;
            };

            _this._getTouchOverflowStyle = function () {
                var _this$_getTouchOverfl = _this._getTouchOverflowSize(),
                    width = _this$_getTouchOverfl.width,
                    height = _this$_getTouchOverfl.height;

                var touchOverflowStyle = {};

                if (width !== undefined && height !== undefined) {
                    var verticalMargin = -height / 2;
                    touchOverflowStyle.marginTop = verticalMargin;
                    touchOverflowStyle.marginBottom = verticalMargin;
                    var horizontalMargin = -width / 2;
                    touchOverflowStyle.marginLeft = horizontalMargin;
                    touchOverflowStyle.marginRight = horizontalMargin;
                }

                if (_this.props.debugTouchArea === true) {
                    touchOverflowStyle.backgroundColor = 'orange';
                    touchOverflowStyle.opacity = 0.5;
                }

                return touchOverflowStyle;
            };

            _this._thumbHitTest = function (e) {
                var nativeEvent = e.nativeEvent;

                var thumbTouchRect = _this._getThumbTouchRect();

                return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);
            };

            _this._getThumbTouchRect = function () {
                var state = _this.state;
                var props = _this.props;

                var touchOverflowSize = _this._getTouchOverflowSize();

                return new Rect(touchOverflowSize.width / 2 + _this._getThumbLeft(_this._getCurrentValue()) + (state.thumbSize.width - props.thumbTouchSize.width) / 2, touchOverflowSize.height / 2 + (state.containerSize.height - props.thumbTouchSize.height) / 2, props.thumbTouchSize.width, props.thumbTouchSize.height);
            };

            _this._renderDebugThumbTouchRect = function (thumbLeft) {
                var thumbTouchRect = _this._getThumbTouchRect();

                var positionStyle = {
                    left: thumbLeft,
                    top: thumbTouchRect.y,
                    width: thumbTouchRect.width,
                    height: thumbTouchRect.height
                };
                return _react.default.createElement(_reactNative.Animated.View, {
                    style: [defaultStyles.debugThumbTouchArea, positionStyle],
                    pointerEvents: "none"
                });
            };

            _this._renderThumbImage = function () {
                var thumbImage = _this.props.thumbImage;
                if (!thumbImage) return;
                return _react.default.createElement(_reactNative.Image, {
                    source: thumbImage
                });
            };

            return _this;
        }

        (0, _createClass2.default)(Slider, [{
            key: "componentWillMount",
            value: function componentWillMount() {
                this._panResponder = _reactNative.PanResponder.create({
                    onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,
                    onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,
                    onPanResponderGrant: this._handlePanResponderGrant,
                    onPanResponderMove: this._handlePanResponderMove,
                    onPanResponderRelease: this._handlePanResponderEnd,
                    onPanResponderTerminationRequest: this._handlePanResponderRequestEnd,
                    onPanResponderTerminate: this._handlePanResponderEnd
                });
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                var newValue = nextProps.value;

                if (this.props.value !== newValue) {
                    if (this.props.animateTransitions) {
                        this._setCurrentValueAnimated(newValue);
                    } else {
                        this._setCurrentValue(newValue);
                    }
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    minimumValue = _this$props.minimumValue,
                    maximumValue = _this$props.maximumValue,
                    minimumTrackTintColor = _this$props.minimumTrackTintColor,
                    maximumTrackTintColor = _this$props.maximumTrackTintColor,
                    thumbTintColor = _this$props.thumbTintColor,
                    thumbImage = _this$props.thumbImage,
                    styles = _this$props.styles,
                    style = _this$props.style,
                    trackStyle = _this$props.trackStyle,
                    thumbStyle = _this$props.thumbStyle,
                    debugTouchArea = _this$props.debugTouchArea,
                    onValueChange = _this$props.onValueChange,
                    thumbTouchSize = _this$props.thumbTouchSize,
                    animationType = _this$props.animationType,
                    animateTransitions = _this$props.animateTransitions,
                    other = (0, _objectWithoutProperties2.default)(_this$props, ["minimumValue", "maximumValue", "minimumTrackTintColor", "maximumTrackTintColor", "thumbTintColor", "thumbImage", "styles", "style", "trackStyle", "thumbStyle", "debugTouchArea", "onValueChange", "thumbTouchSize", "animationType", "animateTransitions"]);
                var _this$state = this.state,
                    value = _this$state.value,
                    containerSize = _this$state.containerSize,
                    trackSize = _this$state.trackSize,
                    thumbSize = _this$state.thumbSize,
                    allMeasured = _this$state.allMeasured;
                var mainStyles = styles || defaultStyles;
                var thumbLeft = value.interpolate({
                    inputRange: [minimumValue, maximumValue],
                    outputRange: _reactNative.I18nManager.isRTL ? [0, -(containerSize.width - thumbSize.width)] : [0, containerSize.width - thumbSize.width]
                });
                var minimumTrackWidth = value.interpolate({
                    inputRange: [minimumValue, maximumValue],
                    outputRange: [0, containerSize.width - thumbSize.width]
                });
                var valueVisibleStyle = {};

                if (!allMeasured) {
                    valueVisibleStyle.opacity = 0;
                }

                var minimumTrackStyle = (0, _objectSpread2.default)({
                    position: 'absolute',
                    width: _reactNative.Animated.add(minimumTrackWidth, thumbSize.width / 2),
                    backgroundColor: minimumTrackTintColor
                }, valueVisibleStyle);

                var touchOverflowStyle = this._getTouchOverflowStyle();

                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, other, {
                    style: [mainStyles.container, style],
                    onLayout: this._measureContainer
                }), _react.default.createElement(_reactNative.View, {
                    style: [{
                        backgroundColor: maximumTrackTintColor
                    }, mainStyles.track, trackStyle],
                    renderToHardwareTextureAndroid: true,
                    onLayout: this._measureTrack
                }), _react.default.createElement(_reactNative.Animated.View, {
                    renderToHardwareTextureAndroid: true,
                    style: [mainStyles.track, trackStyle, minimumTrackStyle]
                }), _react.default.createElement(_reactNative.Animated.View, {
                    onLayout: this._measureThumb,
                    renderToHardwareTextureAndroid: true,
                    style: [{
                        backgroundColor: thumbTintColor
                    }, mainStyles.thumb, thumbStyle, (0, _objectSpread2.default)({
                        transform: [{
                            translateX: thumbLeft
                        }, {
                            translateY: 0
                        }]
                    }, valueVisibleStyle)]
                }, this._renderThumbImage()), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    renderToHardwareTextureAndroid: true,
                    style: [defaultStyles.touchArea, touchOverflowStyle]
                }, this._panResponder.panHandlers), debugTouchArea === true && this._renderDebugThumbTouchRect(minimumTrackWidth)));
            }
        }, {
            key: "_getPropsForComponentUpdate",
            value: function _getPropsForComponentUpdate(props) {
                var value = props.value,
                    onValueChange = props.onValueChange,
                    onSlidingStart = props.onSlidingStart,
                    onSlidingComplete = props.onSlidingComplete,
                    style = props.style,
                    trackStyle = props.trackStyle,
                    thumbStyle = props.thumbStyle,
                    otherProps = (0, _objectWithoutProperties2.default)(props, ["value", "onValueChange", "onSlidingStart", "onSlidingComplete", "style", "trackStyle", "thumbStyle"]);
                return otherProps;
            }
        }, {
            key: "_handleMoveShouldSetPanResponder",
            value: function _handleMoveShouldSetPanResponder() {
                return false;
            }
        }, {
            key: "_handlePanResponderRequestEnd",
            value: function _handlePanResponderRequestEnd(e, gestureState) {
                return false;
            }
        }]);
        return Slider;
    }(_react.PureComponent);

    exports.default = Slider;
    Slider.propTypes = {
        value: _propTypes.default.number,
        disabled: _propTypes.default.bool,
        minimumValue: _propTypes.default.number,
        maximumValue: _propTypes.default.number,
        step: _propTypes.default.number,
        minimumTrackTintColor: _propTypes.default.string,
        maximumTrackTintColor: _propTypes.default.string,
        thumbTintColor: _propTypes.default.string,
        thumbTouchSize: _propTypes.default.shape({
            width: _propTypes.default.number,
            height: _propTypes.default.number
        }),
        onValueChange: _propTypes.default.func,
        onSlidingStart: _propTypes.default.func,
        onSlidingComplete: _propTypes.default.func,
        style: _reactNative.ViewPropTypes.style,
        trackStyle: _reactNative.ViewPropTypes.style,
        thumbStyle: _reactNative.ViewPropTypes.style,
        thumbImage: _reactNative.Image.propTypes.source,
        debugTouchArea: _propTypes.default.bool,
        animateTransitions: _propTypes.default.bool,
        animationType: _propTypes.default.oneOf(['spring', 'timing']),
        animationConfig: _propTypes.default.object
    };
    Slider.defaultProps = {
        value: 0,
        minimumValue: 0,
        maximumValue: 1,
        step: 0,
        minimumTrackTintColor: '#3f3f3f',
        maximumTrackTintColor: '#b3b3b3',
        thumbTintColor: '#343434',
        thumbTouchSize: {
            width: 40,
            height: 40
        },
        debugTouchArea: false,
        animationType: 'timing'
    };

    var defaultStyles = _reactNative.StyleSheet.create({
        container: {
            height: 40,
            justifyContent: 'center'
        },
        track: {
            height: TRACK_SIZE,
            borderRadius: 2
        },
        thumb: {
            position: 'absolute',
            width: THUMB_SIZE,
            height: THUMB_SIZE,
            borderRadius: 10
        },
        touchArea: {
            position: 'absolute',
            backgroundColor: 'transparent',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0
        },
        debugThumbTouchArea: {
            position: 'absolute',
            backgroundColor: 'green',
            opacity: 0.5
        }
    });
}, 10184, [14308, 14305, 14314, 14407, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _Devices = _$$_REQUIRE(_dependencyMap[10]);

    var _AnimateNumber = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var NetworkOptimizeTool = function (_React$Component) {
        (0, _inherits2.default)(NetworkOptimizeTool, _React$Component);

        function NetworkOptimizeTool(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetworkOptimizeTool);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetworkOptimizeTool).call(this, props));
            _this.state = {};
            return _this;
        }

        (0, _createClass2.default)(NetworkOptimizeTool, [{
            key: "_restart_router",
            value: function _restart_router() { }
        }, {
            key: "_fetchListData",
            value: function _fetchListData() { }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._fetchListData();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.header
                }, _react.default.createElement(_AnimateNumber.default, {
                    value: 100,
                    interval: 333,
                    countBy: 1,
                    timing: "linear"
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.listCont
                }, _react.default.createElement(_reactNative.View, {
                    style: _styles.default.row_container_first
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon_remind,
                    source: _$$_REQUIRE(_dependencyMap[13])
                }), _react.default.createElement(_reactNative.Text, {
                    style: _styles.default.text_description_margin_start
                }, "\u91CD\u542F\u540E\u5C06\u4E2D\u65AD\u5F53\u524D\u6240\u6709\u8FDE\u63A5\uFF0C\u5927\u7EA6\u9700\u89811\u5206\u949F\u6062\u590D\uFF0C\u91CD\u542F\u540E\u5F53\u524D\u624B\u673A\u53EF\u80FD\u9700\u8981\u624B\u5DE5\u8FDE\u63A5Wi-Fi."))), _react.default.createElement(_reactNative.View, {
                    style: styles.addWrap
                }, _react.default.createElement(_reactNative.TouchableHighlight, {
                    style: styles.button,
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        return _this2._restart_router();
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.button_text
                }, "\u53D6\u6D88\u68C0\u6D4B"))));
            }
        }]);
        return NetworkOptimizeTool;
    }(_react.default.Component);

    exports.default = NetworkOptimizeTool;

    NetworkOptimizeTool.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "light",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                title: navigation.state.params.title,
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        icon: {
            width: 100,
            height: 100
        },
        icon_remind: {
            width: 16,
            height: 13.6
        },
        viewRkButton: {
            width: _Devices.ScreenW / 10 * 8
        },
        listCont: {
            flex: 1
        },
        list: {
            position: 'absolute',
            top: 0,
            bottom: 60
        },
        header: {
            backgroundColor: '#1a1b2a',
            alignItems: 'center',
            justifyContent: 'center',
            height: 200
        },
        button_text: {
            fontSize: 16,
            color: '#2C7DFA'
        },
        addWrap: {
            position: 'absolute',
            alignItems: 'center',
            bottom: 10,
            left: 6,
            right: 6
        },
        addcont: {
            alignItems: 'center',
            justifyContent: 'center',
            height: 60
        },
        separator: {
            backgroundColor: '#000',
            marginTop: 20
        },
        button: {
            alignItems: "center",
            justifyContent: "center",
            height: 44,
            marginBottom: 10,
            width: _Devices.ScreenW * 0.9,
            borderRadius: 22,
            borderWidth: 0.5,
            borderColor: '#E5E5E5'
        }
    });
}, 10187, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10297, 10033, 10157, 10061, 10190, 10010, 10163]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _reactTimerMixin = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var HALF_RAD = Math.PI / 2;
    var NUM_ID = [_$$_REQUIRE(_dependencyMap[10]), _$$_REQUIRE(_dependencyMap[11]), _$$_REQUIRE(_dependencyMap[12]), _$$_REQUIRE(_dependencyMap[13]), _$$_REQUIRE(_dependencyMap[14]), _$$_REQUIRE(_dependencyMap[15]), _$$_REQUIRE(_dependencyMap[16]), _$$_REQUIRE(_dependencyMap[17]), _$$_REQUIRE(_dependencyMap[18]), _$$_REQUIRE(_dependencyMap[19])];

    var styles = _reactNative.StyleSheet.create({
        row_container: {
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
        },
        icon: {
            width: 30,
            height: 50
        }
    });

    var AnimateNumber = function (_Component) {
        (0, _inherits2.default)(AnimateNumber, _Component);

        function AnimateNumber(props) {
            var _this;

            (0, _classCallCheck2.default)(this, AnimateNumber);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimateNumber).call(this, props));
            _this.state = {
                value: 0,
                displayValue: 0,
                progressOne: 0,
                progressTen: -1
            };
            _this.dirty = false;
            _this.startFrom = 0;
            _this.endWith = 0;
            return _this;
        }

        (0, _createClass2.default)(AnimateNumber, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.startFrom = this.state.value;
                this.endWith = this.props.value;
                this.dirty = true;
                this.startAnimate();
            }
        }, {
            key: "componentWillUpdate",
            value: function componentWillUpdate(nextProps, nextState) {
                if (this.props.value !== nextProps.value) {
                    this.startFrom = this.props.value;
                    this.endWith = nextProps.value;
                    this.dirty = true;
                    this.startAnimate();
                    return;
                }

                if (!this.dirty) {
                    return;
                }

                if (this.direction === true) {
                    if (parseFloat(this.state.value) <= parseFloat(this.props.value)) {
                        this.startAnimate();
                    }
                } else if (this.direction === false) {
                    if (parseFloat(this.state.value) >= parseFloat(this.props.value)) {
                        this.startAnimate();
                    }
                }
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
                    style: styles.row_container
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: NUM_ID[this.state.progressTen]
                }), _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: NUM_ID[this.state.progressOne]
                })));
            }
        }, {
            key: "startAnimate",
            value: function startAnimate() {
                var _this2 = this;

                var progress = this.getAnimationProgress();

                _reactTimerMixin.default.setTimeout(function () {
                    var value = (_this2.endWith - _this2.startFrom) / _this2.props.steps;
                    var sign = value >= 0 ? 1 : -1;
                    if (_this2.props.countBy) value = sign * Math.abs(_this2.props.countBy);
                    var total = parseFloat(_this2.state.value) + parseFloat(value);
                    _this2.direction = value > 0;

                    if ((_this2.direction ^ total <= _this2.endWith) === 1) {
                        _this2.dirty = false;
                        total = _this2.endWith;

                        _this2.props.onFinish(total, _this2.props.formatter(total));
                    }

                    if (_this2.props.onProgress) _this2.props.onProgress(_this2.state.value, total);

                    _this2.setState({
                        value: total,
                        displayValue: _this2.props.formatter(total),
                        var: num = _this2.props.formatter(total),
                        var: finalNum = num > 99 ? 99 : num,
                        var: isLowNine = num <= 9,
                        progressTen: isLowNine ? -1 : Math.floor(finalNum / 10),
                        progressOne: isLowNine ? finalNum : finalNum % 10
                    });
                }, this.getTimingFunction(this.props.interval, progress));
            }
        }, {
            key: "getAnimationProgress",
            value: function getAnimationProgress() {
                return (this.state.value - this.startFrom) / (this.endWith - this.startFrom);
            }
        }, {
            key: "getTimingFunction",
            value: function getTimingFunction(interval, progress) {
                if (typeof this.props.timing === 'string') {
                    var fn = AnimateNumber.TimingFunctions[this.props.timing];
                    return fn(interval, progress);
                } else if (typeof this.props.timing === 'function') return this.props.timing(interval, progress); else return AnimateNumber.TimingFunctions['linear'](interval, progress);
            }
        }]);
        return AnimateNumber;
    }(_react.Component);

    exports.default = AnimateNumber;
    AnimateNumber.defaultProps = {
        interval: 14,
        timing: 'linear',
        steps: 45,
        value: 0,
        formatter: function formatter(val) {
            return val;
        },
        onFinish: function onFinish() { }
    };
    AnimateNumber.TimingFunctions = {
        linear: function linear(interval, progress) {
            return interval;
        },
        easeOut: function easeOut(interval, progress) {
            return interval * Math.sin(HALF_RAD * progress) * 5;
        },
        easeIn: function easeIn(interval, progress) {
            return interval * Math.sin(HALF_RAD - HALF_RAD * progress) * 5;
        }
    };
}, 10190, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10513, 10193, 10196, 10199, 10202, 10205, 10208, 10211, 10214, 10217, 10220]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "50c39f64b54a0eded4d8c3cd2011191a",
        "name": "digit_zero",
        "type": "png"
    });
}, 10193, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "2e438479666cf059d546e44c45a0166c",
        "name": "digit_one",
        "type": "png"
    });
}, 10196, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "9001326f122894bbd5f27d0eddbe5dc6",
        "name": "digit_two",
        "type": "png"
    });
}, 10199, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "e28f34c164a6134425019a1cff4fa910",
        "name": "digit_three",
        "type": "png"
    });
}, 10202, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "c790ff90f9f7c16e727c9cad6ab56fbe",
        "name": "digit_four",
        "type": "png"
    });
}, 10205, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "07e8eca27709bbbacf1126f615f10a4e",
        "name": "digit_five",
        "type": "png"
    });
}, 10208, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "b1f568800be5843df6325f32a3e210f7",
        "name": "digit_six",
        "type": "png"
    });
}, 10211, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "d5cc59450fa75549c50e33e8ec4599a8",
        "name": "digit_seven",
        "type": "png"
    });
}, 10214, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "e80f197306e2c70c691f9f8a7a33034a",
        "name": "digit_eight",
        "type": "png"
    });
}, 10217, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/digit",
        "width": 156,
        "height": 263,
        "scales": [1],
        "hash": "da5f6c967eabb220d98ea31840578845",
        "name": "digit_nine",
        "type": "png"
    });
}, 10220, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _miot = _$$_REQUIRE(_dependencyMap[7]);

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    var repeatSelectedArrayMap = ["执行一次", "每天", "周一至周五"];
    var weekendMap = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];

    var RestartTimeSetting = function (_React$Component) {
        (0, _inherits2.default)(RestartTimeSetting, _React$Component);

        function RestartTimeSetting(props) {
            var _this;

            (0, _classCallCheck2.default)(this, RestartTimeSetting);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RestartTimeSetting).call(this, props));
            _this.state = {
                visible1: false,
                visible2: false,
                visible3: false,
                visible4: false,
                repeatSelectedArray: [0],
                weekSelectedArray: [5, 6],
                startTimeArray: ["00", "00"],
                startTimeString: "00:00"
            };
            return _this;
        }

        (0, _createClass2.default)(RestartTimeSetting, [{
            key: "_submit",
            value: function _submit() {
                if (this.state.repeatSelectedArray[0] == 3 && this.state.weekSelectedArray.length == 0) {
                    this.setState({
                        visible4: true
                    });
                    return;
                } else {
                    this.props.navigation.navigate('RestartPlan', {
                        'param': this.state
                    });
                    this.props.navigation.state.params.callback(this.state);
                }
            }
        }, {
            key: "_onRepeatSelectChange",
            value: function _onRepeatSelectChange(result) {
                this.state.repeatSelectedArray = result;

                if (result == 3) {
                    this.setState({
                        visible3: true
                    });
                }

                if (this.state.repeatSelectedArray[0] == 0) {
                    this.setState({
                        weekSelectedArray: [5, 6]
                    });
                } else if (this.state.repeatSelectedArray[0] == 1) {
                    this.setState({
                        weekSelectedArray: [0, 1, 2, 3, 4, 5, 6]
                    });
                } else if (this.state.repeatSelectedArray[0] == 2) {
                    this.setState({
                        weekSelectedArray: [0, 1, 2, 3, 4]
                    });
                }
            }
        }, {
            key: "_getSubtitle",
            value: function _getSubtitle() {
                var repeatSubtitle;

                if (repeatSelectedArrayMap[this.state.repeatSelectedArray[0]]) {
                    repeatSubtitle = repeatSelectedArrayMap[this.state.repeatSelectedArray[0]];
                } else {
                    repeatSubtitle = this.state.weekSelectedArray.map(function (o) {
                        return weekendMap[o];
                    }).join(",");
                }

                return repeatSubtitle;
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                if (this.props.navigation.state.params.type == 'edit') {
                    var _this$props$navigatio = this.props.navigation.state.params.currentItem,
                        repeatSelectedArray = _this$props$navigatio.repeatSelectedArray,
                        weekSelectedArray = _this$props$navigatio.weekSelectedArray,
                        startTimeArray = _this$props$navigatio.startTimeArray,
                        startTimeString = _this$props$navigatio.startTimeString;
                    this.setState({
                        repeatSelectedArray: repeatSelectedArray,
                        weekSelectedArray: weekSelectedArray,
                        startTimeArray: startTimeArray,
                        startTimeString: startTimeString
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_ListItem.default, {
                    title: "\u91CD\u590D",
                    containerStyle: {
                        width: width
                    },
                    subtitle: this._getSubtitle(),
                    subtitleStyle: {
                        color: '#a4aaae'
                    },
                    onPress: function onPress(_) {
                        _this2.setState({
                            visible1: true
                        });
                    },
                    separator: _react.default.createElement(_Separator.default, {
                        style: styles.separator
                    })
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.timeText
                }, "\u65F6\u95F4\u8BBE\u7F6E"), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u5F00\u59CB\u65F6\u95F4",
                    subtitle: this.state.startTimeString,
                    subtitleStyle: {
                        color: '#a4aaae'
                    },
                    onPress: function onPress(_) {
                        _this2.setState({
                            visible2: true
                        });
                    },
                    separator: _react.default.createElement(_Separator.default, {
                        style: styles.separator
                    })
                }), _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        return _this2._submit();
                    },
                    style: styles.buttonWrapper
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.compleText
                }, "\u786E\u8BA4"))), _react.default.createElement(_ChoiceDialog.default, {
                    visible: this.state.visible1,
                    title: '重复频率',
                    options: [{
                        title: '执行一次'
                    }, {
                        title: '每天'
                    }, {
                        title: '周一至周五'
                    }, {
                        title: '自定义'
                    }],
                    selectedIndexArray: this.state.repeatSelectedArray,
                    onDismiss: function onDismiss(_) {
                        return _this2.setState({
                            visible1: false
                        });
                    },
                    onSelect: function onSelect(result) {
                        _this2._onRepeatSelectChange(result);
                    }
                }), _react.default.createElement(_ChoiceDialog.default, {
                    type: _ChoiceDialog.default.TYPE.MULTIPLE,
                    visible: this.state.visible3,
                    title: '重复',
                    options: [{
                        title: '星期一'
                    }, {
                        title: '星期二'
                    }, {
                        title: '星期三'
                    }, {
                        title: '星期四'
                    }, {
                        title: '星期五'
                    }, {
                        title: '星期六'
                    }, {
                        title: '星期日'
                    }],
                    selectedIndexArray: this.state.weekSelectedArray,
                    color: "#f0ac3d",
                    buttons: [{
                        text: '确定',
                        style: {
                            color: 'lightblue'
                        },
                        callback: function callback(result) {
                            if (result.length == 0) {
                                _this2.setState({
                                    visible4: true,
                                    weekSelectedArray: []
                                });

                                return;
                            }

                            _this2.setState({
                                visible3: false,
                                weekSelectedArray: result
                            });
                        }
                    }],
                    onDismiss: function onDismiss(_) { }
                }), _react.default.createElement(_MessageDialog.default, {
                    visible: this.state.visible4,
                    message: "\u5C0F\u7C73WiFi:\u8BF7\u81F3\u5C11\u9009\u62E9\u4E00\u9879",
                    buttons: [{
                        text: '确认',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(_) {
                            return _this2.setState({
                                visible4: false
                            });
                        }
                    }],
                    onDismiss: function onDismiss(_) { }
                }), _react.default.createElement(_MHDatePicker.default, {
                    visible: this.state.visible2,
                    title: "\u9009\u62E9\u65F6\u95F4",
                    type: _MHDatePicker.default.TYPE.TIME24,
                    current: this.state.startTimeArray,
                    onDismiss: function onDismiss(_) {
                        return _this2.setState({
                            visible2: false
                        });
                    },
                    onSelect: function onSelect(res) {
                        _this2.setState({
                            startTimeString: res.rawString,
                            startTimeArray: res.rawArray
                        });
                    }
                }));
            }
        }]);
        return RestartTimeSetting;
    }(_react.default.Component);

    exports.default = RestartTimeSetting;

    RestartTimeSetting.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '时间设置',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        buttonWrapper: {
            position: "absolute",
            width: width,
            bottom: 20,
            alignItems: "center",
            justifyContent: "center"
        },
        button: {
            alignItems: "center",
            justifyContent: "center",
            backgroundColor: '#4778FF',
            height: 44,
            width: width * 0.9,
            borderRadius: 22
        },
        compleText: {
            color: '#fff'
        },
        timeText: {
            padding: 5,
            fontSize: 12,
            marginLeft: 20,
            color: '#a4aaae'
        },
        separator: {
            height: 1 / _reactNative.PixelRatio.get(),
            marginLeft: 20,
            marginRight: 20
        }
    });
}, 10223, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10074, 10284, 10329, 10734, 10716, 10332, 10743, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _miot = _$$_REQUIRE(_dependencyMap[7]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _Dialog = _$$_REQUIRE(_dependencyMap[11]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var GeneralSettings = function (_React$Component) {
        (0, _inherits2.default)(GeneralSettings, _React$Component);

        function GeneralSettings(props) {
            var _this;

            (0, _classCallCheck2.default)(this, GeneralSettings);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(GeneralSettings).call(this, props));
            var ds = new _reactNative.ListView.DataSource({
                rowHasChanged: function rowHasChanged(r1, r2) {
                    return r1 !== r2;
                }
            });
            _this.state = {
                dataSource: ds.cloneWithRows([{
                    name: '位置管理',
                    router: 'LocationManage'
                }, {
                    name: '设备共享',
                    router: 'DeviceShare'
                }, {
                    name: '固件升级',
                    router: 'FirmwareUpdate'
                }, {
                    name: '更多设置',
                    router: 'MoreSettings'
                }, {
                    name: '使用帮助',
                    router: 'UsingHelp'
                }, {
                    name: '法律信息',
                    router: 'LawInfo'
                }]),
                visible1: false,
                visible2: false,
                deviceName: 'XiaomiRouter',
                deleteText: '删除设备后，设备将从子列表中移除'
            };
            return _this;
        }

        (0, _createClass2.default)(GeneralSettings, [{
            key: "_onDelete",
            value: function _onDelete() {
                this.setState({
                    visible1: false
                });
            }
        }, {
            key: "_modifyRouterName",
            value: function _modifyRouterName(name) {
                if (this.state.deviceName == name) {
                    return;
                }

                this.setState({
                    visible2: false,
                    deviceName: name
                });
            }
        }, {
            key: "_getListData",
            value: function _getListData() { }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._getListData();
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.subtitle
                }, _react.default.createElement(_reactNative.Text, null, "\u901A\u7528\u8BBE\u7F6E")), _react.default.createElement(_Separator.default, {
                    style: styles.separator2
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u8BBE\u5907\u540D\u79F0",
                    value: this.state.deviceName,
                    hideArrow: false,
                    style: styles.name,
                    onPress: function onPress(_) {
                        _this2.setState({
                            visible2: true
                        });
                    }
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u901A\u75281",
                    hideArrow: false,
                    style: styles.name,
                    onPress: function onPress(_) {
                        _miot.Host.ui.openRoomManagementPage();
                    }
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u901A\u75282",
                    hideArrow: false,
                    style: styles.name,
                    onPress: function onPress(_) {
                        _miot.Host.ui.openShareDevicePage();
                    }
                }), _react.default.createElement(_reactNative.ListView, {
                    style: styles.list,
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this)
                }), _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        return _this2.setState({
                            visible1: true
                        });
                    },
                    style: styles.buttonWrapper
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.deleteText
                }, "\u5220\u9664\u8BBE\u5907"))), _react.default.createElement(_Dialog.MessageDialog, {
                    visible: this.state.visible1,
                    message: this.state.deleteText,
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#666666'
                        },
                        callback: function callback(_) {
                            return _this2.setState({
                                visible1: false
                            });
                        }
                    }, {
                        text: '确定',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(_) {
                            _this2._onDelete();
                        }
                    }],
                    onDismiss: function onDismiss(_) {
                        return _this2.setState({
                            visible1: false
                        });
                    }
                }), _react.default.createElement(_Dialog.InputDialog, {
                    visible: this.state.visible2,
                    title: "\u8BBE\u5907\u540D\u79F0",
                    inputs: [{
                        placeholder: '请输入设备名称',
                        defaultValue: this.state.deviceName,
                        textInputProps: {
                            autoFocus: true
                        }
                    }],
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#666666'
                        },
                        callback: function callback(_) {
                            return _this2.setState({
                                visible2: false
                            });
                        }
                    }, {
                        text: '确认',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(result) {
                            _this2._modifyRouterName(result.textInputArray[0]);
                        }
                    }],
                    onDismiss: function onDismiss(_) {
                        return _this2.setState({
                            visible2: false
                        });
                    }
                }));
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, sectionID, rowID) {
                var _this3 = this;

                return _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress() {
                        _this3.props.navigation.navigate(rowData.router);
                    }
                }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
                    style: styles.rowContainer
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, rowData.name), _react.default.createElement(_reactNative.Image, {
                    style: styles.subArrow,
                    source: _$$_REQUIRE(_dependencyMap[14])
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.separator
                })));
            }
        }]);
        return GeneralSettings;
    }(_react.default.Component);

    exports.default = GeneralSettings;

    GeneralSettings.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '设置',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            borderTopColor: '#f1f1f1',
            borderTopWidth: 1,
            flexDirection: 'column',
            justifyContent: 'center',
            alignItems: 'center',
            backgroundColor: '#ffffff'
        },
        subtitle: {
            padding: 10,
            width: _Devices.ScreenW,
            paddingLeft: 23
        },
        name: {
            height: 52,
            fontSize: 15,
            color: '#333333'
        },
        list: {
            alignSelf: 'stretch',
            flex: 1
        },
        button: {
            alignItems: "center",
            justifyContent: "center",
            height: 44,
            marginBottom: 20,
            width: _Devices.ScreenW * 0.9,
            borderRadius: 22,
            borderWidth: 1,
            borderColor: '#FF3D3D'
        },
        deleteText: {
            color: '#FF3D3D'
        },
        rowContainer: {
            height: 52,
            alignSelf: 'stretch',
            flexDirection: 'row',
            paddingLeft: 23,
            paddingRight: 23,
            alignItems: 'center',
            flex: 1
        },
        title: {
            fontSize: 15,
            color: '#333333',
            alignItems: 'center',
            flex: 1
        },
        subArrow: {
            width: 7,
            height: 14
        },
        separator: {
            height: 1 / _reactNative.PixelRatio.get(),
            backgroundColor: '#e5e5e5',
            marginLeft: 20
        },
        separator2: {
            width: _Devices.ScreenW,
            marginLeft: 43
        }
    });
}, 10226, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10074, 10332, 10284, 10329, 10755, 10033, 10061, 10229]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
        "width": 22,
        "height": 41,
        "scales": [1],
        "hash": "2a12f112e01f0379378b28ee14a04959",
        "name": "sub_arrow",
        "type": "png"
    });
}, 10229, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "DeviceName", {
        enumerable: true,
        get: function get() {
            return _DeviceName.default;
        }
    });
    Object.defineProperty(exports, "DeviceShare", {
        enumerable: true,
        get: function get() {
            return _DeviceShare.default;
        }
    });
    Object.defineProperty(exports, "LocationManage", {
        enumerable: true,
        get: function get() {
            return _LocationManage.default;
        }
    });
    Object.defineProperty(exports, "FirmwareUpdate", {
        enumerable: true,
        get: function get() {
            return _FirmwareUpdate.default;
        }
    });
    Object.defineProperty(exports, "UsingHelp", {
        enumerable: true,
        get: function get() {
            return _UsingHelp.default;
        }
    });
    Object.defineProperty(exports, "LawInfo", {
        enumerable: true,
        get: function get() {
            return _LawInfo.default;
        }
    });
    Object.defineProperty(exports, "SafeCenter", {
        enumerable: true,
        get: function get() {
            return _SafeCenter.default;
        }
    });
    Object.defineProperty(exports, "SafeDetail", {
        enumerable: true,
        get: function get() {
            return _SafeDetail.default;
        }
    });
    Object.defineProperty(exports, "MoreSettings", {
        enumerable: true,
        get: function get() {
            return _MoreSettings.default;
        }
    });
    Object.defineProperty(exports, "Setting", {
        enumerable: true,
        get: function get() {
            return _test.default;
        }
    });
    Object.defineProperty(exports, "Feedback", {
        enumerable: true,
        get: function get() {
            return _Feedback.default;
        }
    });
    Object.defineProperty(exports, "ProblemType", {
        enumerable: true,
        get: function get() {
            return _ProblemType.default;
        }
    });
    Object.defineProperty(exports, "SelectProblem", {
        enumerable: true,
        get: function get() {
            return _SelectProblem.default;
        }
    });
    Object.defineProperty(exports, "ZoneList", {
        enumerable: true,
        get: function get() {
            return _ZoneList.default;
        }
    });
    Object.defineProperty(exports, "TimeZone", {
        enumerable: true,
        get: function get() {
            return _TimeZone.default;
        }
    });

    var _DeviceName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _DeviceShare = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _LocationManage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _FirmwareUpdate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _UsingHelp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _LawInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _SafeCenter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _SafeDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _MoreSettings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _test = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _Feedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _ProblemType = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _SelectProblem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _ZoneList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _TimeZone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
}, 10232, [14305, 10235, 10238, 10247, 10286, 10289, 10292, 10295, 10355, 10364, 10367, 10370, 10382, 10385, 10391, 10394]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    var DeviceName = function (_React$Component) {
        (0, _inherits2.default)(DeviceName, _React$Component);

        function DeviceName(props) {
            var _this;

            (0, _classCallCheck2.default)(this, DeviceName);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceName).call(this, props));
            _this.state = {
                name: '小米净水器'
            };
            return _this;
        }

        (0, _createClass2.default)(DeviceName, [{
            key: "_onChangeText",
            value: function _onChangeText(text) {
                this.setState({
                    name: text
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
                    style: styles.rowContainer
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.name
                }, "\u540D\u79F0"), _react.default.createElement(_reactNative.TextInput, {
                    style: {
                        flex: 1
                    },
                    underlineColorAndroid: "transparent",
                    value: this.state.name,
                    placeholder: '请输入名称',
                    onChangeText: function onChangeText(text) {
                        return _this2._onChangeText(text);
                    }
                })), _react.default.createElement(_Separator.default, null));
            }
        }]);
        return DeviceName;
    }(_react.default.Component);

    exports.default = DeviceName;

    DeviceName.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '设备名称',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        rowContainer: {
            height: 52,
            alignSelf: 'stretch',
            flexDirection: 'row',
            marginLeft: 23,
            paddingRight: 23,
            alignItems: 'center'
        },
        name: {
            fontSize: 14
        }
    });
}, 10235, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10329, 10344, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var DeviceShare = function (_React$Component) {
        (0, _inherits2.default)(DeviceShare, _React$Component);

        function DeviceShare(props) {
            var _this;

            (0, _classCallCheck2.default)(this, DeviceShare);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceShare).call(this, props));
            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    }
                }),
                visible1: false,
                visible2: false,
                member: {
                    account: '1234567',
                    name: '潘潘'
                },
                shareList: [{
                    name: '小鱼',
                    time: '2019-10-14',
                    count: '12345676'
                }, {
                    name: '晓晓',
                    time: '2019-10-14',
                    count: '12345676'
                }]
            };
            return _this;
        }

        (0, _createClass2.default)(DeviceShare, [{
            key: "_refreshData",
            value: function _refreshData() {
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(this.state.shareList)
                });
            }
        }, {
            key: "_getListData",
            value: function _getListData() { }
        }, {
            key: "_addMember",
            value: function _addMember(account) {
                if (!account) {
                    alert('账号不能为空');
                    return;
                }

                this.setState({
                    visible1: false,
                    visible2: true
                });
            }
        }, {
            key: "_deleteMember",
            value: function _deleteMember(account) { }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._getListData();

                this._refreshData();
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, sectionID, rowID) {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
                    style: styles.rowContainer
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.avater,
                    source: _$$_REQUIRE(_dependencyMap[12])
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.info
                }, _react.default.createElement(_reactNative.Text, {
                    style: {
                        fontSize: 16
                    }
                }, rowData.name), _react.default.createElement(_reactNative.Text, {
                    style: {
                        fontSize: 12
                    }
                }, rowData.time)), _react.default.createElement(_reactNativeUiKitten.RkButton, {
                    rkType: "rounded",
                    disabled: false,
                    color: "#000000",
                    onPress: function onPress() {
                        _this2._deleteMember(rowData);
                    },
                    style: styles.viewRkButton
                }, "\u5220\u9664")), _react.default.createElement(_Separator.default, null));
            }
        }, {
            key: "render",
            value: function render() {
                var _this3 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
                    style: styles.list
                }, _react.default.createElement(_reactNative.ListView, {
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this)
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.addWrap
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        _this3.setState({
                            visible1: true
                        });
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.addcont
                }, _react.default.createElement(_reactNative.Image, {
                    style: {
                        width: 25,
                        height: 25,
                        margin: 10
                    },
                    resizeMode: "contain",
                    source: _$$_REQUIRE(_dependencyMap[13])
                }), _react.default.createElement(_reactNative.Text, null, "\u6DFB\u52A0")))), _react.default.createElement(_Dialog.AbstractDialog, {
                    visible: this.state.visible2,
                    title: "\u8BBE\u5907\u5206\u4EAB",
                    onDismiss: function onDismiss(_) { },
                    buttons: [{
                        text: '立即分享',
                        style: {
                            color: '#000'
                        },
                        callback: function callback(_) {
                            return _this3.setState({
                                visible2: false
                            });
                        }
                    }]
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1,
                        height: 200,
                        alignItems: 'center',
                        justifyContent: 'center',
                        borderBottomWidth: 1 / _reactNative.PixelRatio.get(),
                        borderTopWidth: 1 / _reactNative.PixelRatio.get(),
                        borderColor: '#e5e5e5'
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: {
                        width: 70,
                        height: 70,
                        marginBottom: 10
                    },
                    resizeMode: "contain",
                    source: _$$_REQUIRE(_dependencyMap[12])
                }), _react.default.createElement(_reactNative.Text, {
                    style: {
                        fontSize: 16,
                        color: '#000000'
                    }
                }, this.state.member.name), _react.default.createElement(_reactNative.Text, null, "\u5173\u8054\u5C0F\u7C73\u8D26\u53F7\uFF1A", this.state.member.account), _react.default.createElement(_reactNative.Text, {
                    style: {
                        marginTop: 20
                    }
                }, "\u5206\u4EAB\u540E\uFF0C\u8BF7TA\u4F7F\u7528\u8DEF\u7531\u5668\u5BA2\u6237\u7AEF\u767B\u5F55\u5E76\u63A5\u53D7\u9080\u8BF7"))), _react.default.createElement(_Dialog.InputDialog, {
                    visible: this.state.visible1,
                    title: "\u8F93\u5165\u5C0F\u7C73\u8D26\u53F7",
                    inputs: [{
                        placeholder: '邮箱/手机账号/小米账号',
                        textInputProps: {
                            autoFocus: true
                        }
                    }],
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#666666'
                        },
                        callback: function callback(_) {
                            return _this3.setState({
                                visible1: false
                            });
                        }
                    }, {
                        text: '确定',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(result) {
                            _this3._addMember(result.textInputArray[0]);
                        }
                    }],
                    onDismiss: function onDismiss(_) { }
                }));
            }
        }]);
        return DeviceShare;
    }(_react.default.Component);

    exports.default = DeviceShare;

    DeviceShare.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '设备共享',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        avater: {
            width: 40,
            height: 40
        },
        addWrap: {
            position: 'absolute',
            bottom: 10,
            left: 0,
            right: 0
        },
        addcont: {
            alignItems: 'center',
            justifyContent: 'center'
        },
        rowContainer: {
            height: 52,
            alignSelf: 'stretch',
            flexDirection: 'row',
            paddingLeft: 23,
            paddingRight: 23,
            alignItems: 'center',
            flex: 1
        },
        info: {
            flex: 1,
            marginLeft: 10
        },
        viewRkButton: {
            width: 60,
            height: 30
        }
    });
}, 10238, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10755, 11251, 10033, 10241, 10244]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 86,
        "height": 86,
        "scales": [1],
        "hash": "72bcf251a5e2d7b0e74c85fe1fbf8842",
        "name": "avater",
        "type": "png"
    });
}, 10241, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 17,
        "height": 17,
        "scales": [1],
        "hash": "43bb07c3a75cd39ce5438ede2f91a197",
        "name": "addTo",
        "type": "png"
    });
}, 10244, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _Devices = _$$_REQUIRE(_dependencyMap[12]);

    var LocationManage = function (_React$Component) {
        (0, _inherits2.default)(LocationManage, _React$Component);

        function LocationManage(props) {
            var _this;

            (0, _classCallCheck2.default)(this, LocationManage);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LocationManage).call(this, props));
            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    }
                }),
                visible1: false,
                selected: 0,
                locationList: [{
                    imgSrc: _$$_REQUIRE(_dependencyMap[13]),
                    name: '客厅',
                    select: true
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[14]),
                    name: '主卧',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[14]),
                    name: '次卧',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[15]),
                    name: '客房',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[16]),
                    name: '厨房',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[17]),
                    name: '办公室',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[18]),
                    name: '书房',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[19]),
                    name: '卫生间',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[20]),
                    name: '阁楼'
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[21]),
                    name: '阳台',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[22]),
                    name: '餐厅',
                    select: false
                }, {
                    imgSrc: _$$_REQUIRE(_dependencyMap[23]),
                    name: '添加'
                }]
            };
            return _this;
        }

        (0, _createClass2.default)(LocationManage, [{
            key: "_onSelectChange",
            value: function _onSelectChange(rowID) {
                var _this2 = this;

                if (rowID == this.state.locationList.length - 1) {
                    this.setState({
                        visible1: true
                    });
                } else {
                    var newList = JSON.parse(JSON.stringify(this.state.locationList));
                    newList[rowID]['select'] = true;
                    newList[this.state.selected]['select'] = false;
                    this.setState({
                        selected: rowID,
                        locationList: newList
                    }, function () {
                        _this2._cloneData();
                    });
                }
            }
        }, {
            key: "_cloneData",
            value: function _cloneData() {
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(this.state.locationList)
                });
            }
        }, {
            key: "_addSubmit",
            value: function _addSubmit(result) {
                var _this3 = this;

                var locate = result.textInputArray[0];

                if (!locate) {
                    alert('自定义位置不能为空');
                    return;
                }

                var newList = JSON.parse(JSON.stringify(this.state.locationList));
                var i = newList.length;
                newList[i] = newList[i - 1];
                newList[i - 1] = {
                    imgSrc: _$$_REQUIRE(_dependencyMap[13]),
                    name: locate,
                    select: false
                };
                this.setState({
                    visible1: false,
                    locationList: newList
                }, function () {
                    _this3._cloneData();
                });
            }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() {
                this._cloneData();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, sectionID, rowID) {
                var _this4 = this;

                var v = rowData.select ? _react.default.createElement(_reactNative.Image, {
                    style: styles.selected,
                    resizeMode: "contain",
                    source: _$$_REQUIRE(_dependencyMap[24])
                }) : null;
                return _react.default.createElement(_reactNative.TouchableHighlight, {
                    underlayColor: "transparent",
                    onPress: function onPress(_) {
                        _this4._onSelectChange(rowID);
                    },
                    style: styles.sub
                }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
                    style: styles.ig,
                    resizeMode: "contain",
                    source: rowData.imgSrc
                }), v, _react.default.createElement(_reactNative.Text, {
                    style: styles.text
                }, rowData.name)));
            }
        }, {
            key: "render",
            value: function render() {
                var _this5 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ListView, {
                    contentContainerStyle: styles.list,
                    initialListSize: 12,
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this)
                }), _react.default.createElement(_InputDialog.default, {
                    visible: this.state.visible1,
                    title: "\u8BF7\u8F93\u5165\u4F4D\u7F6E",
                    inputs: [{
                        placeholder: '请自定义位置名称',
                        textInputProps: {
                            autoFocus: true
                        }
                    }],
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#666666'
                        },
                        callback: function callback(_) {
                            return _this5.setState({
                                visible1: false
                            });
                        }
                    }, {
                        text: '确定',
                        style: {
                            color: '#2C7DFA'
                        },
                        callback: function callback(result) {
                            _this5._addSubmit(result);
                        }
                    }],
                    onDismiss: function onDismiss(_) { }
                }));
            }
        }]);
        return LocationManage;
    }(_react.default.Component);

    exports.default = LocationManage;

    LocationManage.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '位置管理',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        list: {
            flexDirection: "row",
            flexWrap: "wrap",
            paddingRight: 20
        },
        sub: {
            width: (_Devices.ScreenW - 100) / 4,
            marginLeft: 20
        },
        ig: {
            width: (_Devices.ScreenW - 100) / 4
        },
        selected: {
            position: 'absolute',
            width: 20,
            right: 2,
            bottom: 34
        },
        text: {
            alignSelf: 'center'
        }
    });
}, 10247, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10737, 11251, 10033, 10061, 10250, 10253, 10256, 10259, 10262, 10265, 10268, 10271, 10274, 10277, 10280, 10283]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "bce8eb8b1f76378c4bc2a050592795c8",
        "name": "location_keting",
        "type": "png"
    });
}, 10250, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "9d2b209e4d6f4e21fde070d87cd38413",
        "name": "location_zhuwo",
        "type": "png"
    });
}, 10253, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "04f9de72493d35323fc8ad01d88a275d",
        "name": "location_kefang",
        "type": "png"
    });
}, 10256, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "3a5af0ba1f481ff74e30d9b223684baa",
        "name": "location_chufang",
        "type": "png"
    });
}, 10259, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "d22da93846063ece1536310202eb869c",
        "name": "location_bangongshi",
        "type": "png"
    });
}, 10262, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "8c2a03231f5b0f696ee9784820e46b8b",
        "name": "location_shufang",
        "type": "png"
    });
}, 10265, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "deacd1230b995ede486e1bece9022477",
        "name": "location_weishengjian",
        "type": "png"
    });
}, 10268, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "70306858e7e52816643e4ff0c97a9510",
        "name": "location_gelou",
        "type": "png"
    });
}, 10271, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "05944b6081fb7d4452cca446dcf20f78",
        "name": "location_yangtai",
        "type": "png"
    });
}, 10274, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "7ded8a35abad76515f473dcf932196c7",
        "name": "location_canting",
        "type": "png"
    });
}, 10277, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "deeca844b0ad4221c42c209e6f898676",
        "name": "location_add",
        "type": "png"
    });
}, 10280, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 36,
        "height": 36,
        "scales": [1],
        "hash": "080ed2309fde94101747205b8b144415",
        "name": "selected",
        "type": "png"
    });
}, 10283, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var FirmwareUpdate = function (_React$Component) {
        (0, _inherits2.default)(FirmwareUpdate, _React$Component);

        function FirmwareUpdate(props) {
            var _this;

            (0, _classCallCheck2.default)(this, FirmwareUpdate);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FirmwareUpdate).call(this, props));
            _this.state = {
                visible1: false,
                auto: true,
                timeString: '下午 06:00',
                date: ['18', '00']
            };
            return _this;
        }

        (0, _createClass2.default)(FirmwareUpdate, [{
            key: "_onDateSelectChange",
            value: function _onDateSelectChange(time) {
                this.setState({
                    visible1: false,
                    timeString: time.rawString,
                    date: time.date
                });
            }
        }, {
            key: "componentWillMount",
            value: function componentWillMount() { }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var v = this.state.auto ? _react.default.createElement(_ListItem.default, {
                    title: "\u8BBE\u7F6E\u65F6\u95F4",
                    value: this.state.timeString,
                    hideArrow: false,
                    onPress: function onPress(_) {
                        _this2.setState({
                            visible1: true
                        });
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }) : null;
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItemWithSwitch.default, {
                    title: "\u8DEF\u7531\u5668\u56FA\u4EF6\u81EA\u52A8\u5347\u7EA7",
                    subtitle: "\u53EA\u80FD\u9009\u62E9\u65F6\u95F4\u8FDB\u884C\u81EA\u52A8\u5347\u7EA7",
                    subtitleStyle: {
                        fontSize: 10,
                        color: 'rgba(50,50,50,.5)',
                        marginTop: 10
                    },
                    containerStyle: {
                        marginTop: 10
                    },
                    value: this.state.auto,
                    onValueChange: function onValueChange(value) {
                        return _this2.setState({
                            auto: value
                        });
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), v, _react.default.createElement(_MHDatePicker.default, {
                    visible: this.state.visible1,
                    title: "\u5F00\u59CB\u65F6\u95F4",
                    current: this.state.date,
                    type: _MHDatePicker.default.TYPE.TIME12,
                    onDismiss: function onDismiss(_) {
                        _this2.setState({
                            visible1: false
                        });
                    },
                    onSelect: function onSelect(res) {
                        return _this2._onDateSelectChange(res);
                    }
                }));
            }
        }]);
        return FirmwareUpdate;
    }(_react.default.Component);

    exports.default = FirmwareUpdate;

    FirmwareUpdate.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '固件升级',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        }
    });
}, 10286, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10716, 10329, 10344, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var UsingHelp = function (_React$Component) {
        (0, _inherits2.default)(UsingHelp, _React$Component);

        function UsingHelp(props) {
            var _this;

            (0, _classCallCheck2.default)(this, UsingHelp);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UsingHelp).call(this, props));
            _this.state = {};
            return _this;
        }

        (0, _createClass2.default)(UsingHelp, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                });
            }
        }]);
        return UsingHelp;
    }(_react.default.Component);

    exports.default = UsingHelp;

    UsingHelp.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '使用帮助',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        }
    });
}, 10289, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var LawInfo = function (_React$Component) {
        (0, _inherits2.default)(LawInfo, _React$Component);

        function LawInfo(props) {
            var _this;

            (0, _classCallCheck2.default)(this, LawInfo);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LawInfo).call(this, props));
            _this.state = {};
            return _this;
        }

        (0, _createClass2.default)(LawInfo, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.default, {
                    title: "\u7528\u6237\u534F\u8BAE",
                    hideArrow: false,
                    onPress: function onPress(_) {
                        return undefined;
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u9690\u79C1\u534F\u8BAE",
                    hideArrow: false,
                    onPress: function onPress(_) {
                        return undefined;
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }));
            }
        }]);
        return LawInfo;
    }(_react.default.Component);

    exports.default = LawInfo;

    LawInfo.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '法律信息',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        }
    });
}, 10292, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10329, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _Devices = _$$_REQUIRE(_dependencyMap[11]);

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

    var circle = _$$_REQUIRE(_dependencyMap[13]);

    var circle1 = _$$_REQUIRE(_dependencyMap[14]);

    var safe = _$$_REQUIRE(_dependencyMap[15]);

    var icon1 = _$$_REQUIRE(_dependencyMap[16]);

    var icon2 = _$$_REQUIRE(_dependencyMap[17]);

    var icon3 = _$$_REQUIRE(_dependencyMap[18]);

    var icon4 = _$$_REQUIRE(_dependencyMap[19]);

    var icon5 = _$$_REQUIRE(_dependencyMap[20]);

    var icon6 = _$$_REQUIRE(_dependencyMap[21]);

    var icon7 = _$$_REQUIRE(_dependencyMap[22]);

    var icon8 = _$$_REQUIRE(_dependencyMap[23]);

    var icon11 = _$$_REQUIRE(_dependencyMap[24]);

    var icon12 = _$$_REQUIRE(_dependencyMap[25]);

    var icon13 = _$$_REQUIRE(_dependencyMap[26]);

    var icon14 = _$$_REQUIRE(_dependencyMap[27]);

    var icon15 = _$$_REQUIRE(_dependencyMap[28]);

    var icon16 = _$$_REQUIRE(_dependencyMap[29]);

    var icon17 = _$$_REQUIRE(_dependencyMap[30]);

    var icon18 = _$$_REQUIRE(_dependencyMap[31]);

    var SafeCenter = function (_Component) {
        (0, _inherits2.default)(SafeCenter, _Component);

        function SafeCenter(props) {
            var _this;

            (0, _classCallCheck2.default)(this, SafeCenter);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SafeCenter).call(this, props));

            _this.spin = function (timeInterval) {
                _this.spinValue.setValue(0);

                _reactNative.Animated.timing(_this.spinValue, {
                    toValue: 1,
                    duration: _this.timeInterval,
                    easing: _reactNative.Easing.linear
                }).start(function () {
                    if (_this.timeInterval < 200) {
                        _this.timeInterval += 10;
                    } else if (_this.timeInterval < 500) {
                        _this.timeInterval += 200;
                    } else if (_this.timeInterval < 600) {
                        _this.timeInterval = 6000;
                    } else if (_this.timeInterval = 6000) {
                        _this.timeInterval = 6500;
                    } else if (_this.timeInterval = 6500) {
                        _this.timeInterval = 7000;
                    }

                    _this.spin(_this.timeInterval);
                });
            };

            _this.spinValue = new _reactNative.Animated.Value(0);
            _this.timeInterval = 100;
            _this.color = true;
            _this.state = {
                safeStatus: true,
                dataSource: [{
                    icon: icon1,
                    icon2x: icon11,
                    keyword: 'malicious_url_firewall',
                    title: '恶意网址防火墙',
                    content: '自动检测各终端访问的网站是否存在病毒/木马风险',
                    description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
                    status: false
                }, {
                    icon: icon2,
                    icon2x: icon12,
                    keyword: 'virus_file_firewall',
                    title: '文件下载防火墙',
                    content: '自动检测各终端访下载的文件是否存在病毒风险',
                    description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
                    status: true
                }, {
                    icon: icon3,
                    icon2x: icon13,
                    keyword: 'iot_firewall',
                    title: '智能家居防火墙',
                    content: '自动拦截恶意访问、后台漏洞和网络攻击',
                    description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
                    status: false
                }, {
                    icon: icon4,
                    icon2x: icon14,
                    keyword: 'anti_intrusion_firewall',
                    title: '防入侵防火墙',
                    content: '自动拦截恶意访问、后台漏洞和网络攻击',
                    description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
                    status: false
                }, {
                    icon: icon5,
                    icon2x: icon15,
                    keyword: 'wifi_arn',
                    title: '防蹭网防火墙',
                    content: '自动拦截恶意访问、后台漏洞和网络攻击',
                    description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
                    status: false
                }, {
                    icon: icon6,
                    icon2x: icon16,
                    keyword: 'app_security_v2',
                    title: '安全应用下载防火墙',
                    content: '自动拦截恶意访问、后台漏洞和网络攻击',
                    description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
                    status: false
                }, {
                    icon: icon8,
                    icon2x: icon18,
                    keyword: 'privacy_protection',
                    title: '信息泄露防火墙',
                    content: '检查路由器磁盘文件是否存在病毒',
                    description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
                    status: false
                }]
            };
            return _this;
        }

        (0, _createClass2.default)(SafeCenter, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.spin();
                this.getSafeStatus();
            }
        }, {
            key: "getSafeStatus",
            value: function getSafeStatus() {
                var status = false;
                this.state.dataSource.map(function (v) {
                    if (v.status == true) {
                        status = true;
                    }
                });
                this.setState({
                    safeStatus: status
                });
            }
        }, {
            key: "_onItemClick",
            value: function _onItemClick(item, index) {
                this.props.navigation.navigate('SafeDetail', {
                    item: item,
                    index: index,
                    callback: this._setItemCallback.bind(this)
                });
            }
        }, {
            key: "_setItemCallback",
            value: function _setItemCallback(_ref) {
                var _this2 = this;

                var index = _ref.index,
                    key = _ref.key,
                    status = _ref.status;
                this.state.dataSource[index].status = status;
                this.setState({
                    dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
                }, function () {
                    _this2.getSafeStatus();
                });
            }
        }, {
            key: "_changeSafeStatus",
            value: function _changeSafeStatus() {
                this.state.dataSource.map(function (v) {
                    v.status = true;
                });
                this.setState({
                    safeStatus: true,
                    dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
                });
            }
        }, {
            key: "_ListItem",
            value: function _ListItem(item, index) {
                var _this3 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.rowContainer
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.row,
                    onPress: function onPress() {
                        return _this3._onItemClick(item, index);
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.rowLeft,
                    source: item.icon
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.rowRight
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.rowTop
                }, _react.default.createElement(_reactNative.Text, {
                    style: {
                        fontSize: 14
                    }
                }, item.title), _react.default.createElement(_reactNative.Text, {
                    style: item.status ? [styles.status, styles.status1] : [styles.status, styles.status2]
                }, item.status ? '已开启' : '未开启')), _react.default.createElement(_reactNative.View, {
                    style: styles.rowBottom
                }, _react.default.createElement(_reactNative.Text, {
                    style: {
                        fontSize: 12
                    }
                }, item.content)))));
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                var spin = this.spinValue.interpolate({
                    inputRange: [0, 1],
                    outputRange: ['0deg', '360deg']
                });
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: this.state.safeStatus ? [styles.topContent, styles.topContent1] : [styles.topContent, styles.topContent2]
                }, this.state.safeStatus ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Animated.Image, {
                    style: [styles.circle, {
                        transform: [{
                            rotate: spin
                        }]
                    }],
                    source: circle
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.loaderWrapper
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.loaderTop
                }, "\u5DF2\u9632\u5FA1\u6B21\u6570"), _react.default.createElement(_reactNative.Text, {
                    style: styles.loaderCenter
                }, "321")), _react.default.createElement(_reactNative.View, {
                    style: styles.baiduWrapper
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.baidu,
                    source: safe
                }), _react.default.createElement(_reactNative.Text, {
                    style: {
                        fontSize: 12,
                        color: '#ffffff'
                    }
                }, "\u767E\u5EA6\u5B89\u5168\u63D0\u4F9B\u5F15\u64CE\u652F\u6301"))) : _react.default.createElement(_reactNative.View, {
                    style: {
                        alignItems: 'center'
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.circle,
                    source: circle1
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.circleText
                }, "\u5B89\u5168\u4FDD\u62A4\u672A\u5F00\u542F\u5B58\u5728\u5B89\u5168\u9690\u60A3"), _react.default.createElement(_reactNativeUiKitten.RkButton, {
                    rkType: "rounded",
                    color: "#000000",
                    onPress: function onPress() {
                        _this4._changeSafeStatus();
                    },
                    style: styles.viewRkButton
                }, "\u4E00\u952E\u5F00\u542F"))), _react.default.createElement(_reactNative.View, {
                    style: styles.BottomContent
                }, _react.default.createElement(_reactNative.FlatList, {
                    keyExtractor: function keyExtractor(item, index) {
                        return index + '1';
                    },
                    data: this.state.dataSource,
                    renderItem: function renderItem(_ref2) {
                        var item = _ref2.item,
                            index = _ref2.index;
                        return _this4._ListItem(item, index);
                    }
                })));
            }
        }]);
        return SafeCenter;
    }(_react.Component);

    exports.default = SafeCenter;

    SafeCenter.navigationOptions = function (_ref3) {
        var navigation = _ref3.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '安全中心',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#FCFCFC'
        },
        topContent: {
            height: 340,
            width: _Devices.ScreenW,
            paddingBottom: 40,
            alignItems: 'center',
            justifyContent: 'center'
        },
        topContent1: {
            backgroundColor: '#27C07E'
        },
        topContent2: {
            backgroundColor: '#FF7701'
        },
        viewRkButton: {
            width: 100,
            height: 30,
            marginTop: 20,
            borderWidth: 1,
            borderColor: 'rgba(255,255,255,0.50)',
            backgroundColor: 'rgba(255,255,255,0.05)'
        },
        BottomContent: {
            position: 'absolute',
            top: 302,
            bottom: 0,
            left: 0,
            right: 0
        },
        circle: {
            width: 200,
            height: 200
        },
        loaderWrapper: {
            position: 'absolute',
            top: 0,
            left: 0,
            width: 200,
            height: 200,
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center'
        },
        baiduWrapper: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
            marginTop: 10
        },
        baidu: {
            width: 7,
            height: 10,
            marginRight: 5
        },
        loaderTop: {
            fontSize: 12,
            color: 'rgba(255,255,255,0.50)'
        },
        loaderCenter: {
            fontSize: 36,
            color: '#ffffff'
        },
        loaderBottom: {
            fontSize: 12,
            width: 80,
            textAlign: 'center',
            color: 'rgba(255,255,255,0.50)'
        },
        circleText: {
            position: 'absolute',
            top: 120,
            left: 50,
            fontSize: 12,
            width: 100,
            textAlign: 'center',
            color: '#ffffff'
        },
        rowContainer: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
        },
        row: {
            height: 76,
            width: _Devices.ScreenW * 0.9,
            paddingLeft: 15,
            paddingRight: 5,
            backgroundColor: '#FFFFFF',
            borderRadius: 10,
            borderColor: '#AAAAAA',
            shadowColor: '#000000',
            shadowOffset: {
                w: 10,
                h: 10
            },
            shadowOpacity: 0.5,
            shadowRadius: 10,
            elevation: 2,
            marginBottom: 15,
            flexDirection: 'row',
            justifyContent: 'center',
            alignItems: 'center'
        },
        rowLeft: {
            width: 28,
            height: 28,
            resizeMode: 'contain',
            marginRight: 12
        },
        rowRight: {
            flex: 1,
            flexDirection: 'column'
        },
        rowTop: {
            flexDirection: 'row'
        },
        status: {
            fontSize: 12,
            borderRadius: 10,
            marginLeft: 10,
            paddingLeft: 7,
            paddingRight: 7,
            textAlignVertical: 'center'
        },
        status1: {
            color: '#ffffff',
            backgroundColor: '#27C07E'
        },
        status2: {
            color: '#FF3D3D',
            borderWidth: 1,
            borderColor: '#FF3D3D'
        },
        rowBottom: {
            opacity: 0.5,
            marginTop: 3
        }
    });
}, 10295, [14308, 14305, 14359, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10033, 10061, 11251, 10298, 10301, 10304, 10307, 10310, 10313, 10316, 10319, 10322, 10325, 10328, 10331, 10334, 10337, 10340, 10343, 10346, 10349, 10352]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 348,
        "height": 348,
        "scales": [1],
        "hash": "b379f342f85f534b47a946ec5d139e05",
        "name": "status2",
        "type": "png"
    });
}, 10298, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 348,
        "height": 348,
        "scales": [1],
        "hash": "d9f30e03113238444ca27b320393843b",
        "name": "status1",
        "type": "png"
    });
}, 10301, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 17,
        "height": 20,
        "scales": [1],
        "hash": "f101ab9c7379a06a367337d1929e895f",
        "name": "safe",
        "type": "png"
    });
}, 10304, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 54,
        "height": 54,
        "scales": [1],
        "hash": "d64e9ef749273bb9c581af0355886d1a",
        "name": "icon1",
        "type": "png"
    });
}, 10307, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 54,
        "height": 47,
        "scales": [1],
        "hash": "c16f5e1d8cbc6273ca62327c38e58b53",
        "name": "icon2",
        "type": "png"
    });
}, 10310, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 57,
        "height": 48,
        "scales": [1],
        "hash": "697b09117087bb08ad0795b30e22843d",
        "name": "icon3",
        "type": "png"
    });
}, 10313, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 51,
        "height": 54,
        "scales": [1],
        "hash": "09e1fae04814d2d1b07f3657ee1f2beb",
        "name": "icon4",
        "type": "png"
    });
}, 10316, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    {
        module.exports = _$$_REQUIRE(_dependencyMap[0])();
    }
}, 10318, [10321]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 60,
        "height": 61,
        "scales": [1],
        "hash": "ece2a81d69155ffcea4348419d6c5142",
        "name": "icon5",
        "type": "png"
    });
}, 10319, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ReactPropTypesSecret = _$$_REQUIRE(_dependencyMap[0]);

    function emptyFunction() { }

    function emptyFunctionWithReset() { }

    emptyFunctionWithReset.resetWarningCache = emptyFunction;

    module.exports = function () {
        function shim(props, propName, componentName, location, propFullName, secret) {
            if (secret === ReactPropTypesSecret) {
                return;
            }

            var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            err.name = 'Invariant Violation';
            throw err;
        }

        ;
        shim.isRequired = shim;

        function getShim() {
            return shim;
        }

        ;
        var ReactPropTypes = {
            array: shim,
            bool: shim,
            func: shim,
            number: shim,
            object: shim,
            string: shim,
            symbol: shim,
            any: shim,
            arrayOf: getShim,
            element: shim,
            elementType: shim,
            instanceOf: getShim,
            node: shim,
            objectOf: getShim,
            oneOf: getShim,
            oneOfType: getShim,
            shape: getShim,
            exact: getShim,
            checkPropTypes: emptyFunctionWithReset,
            resetWarningCache: emptyFunction
        };
        ReactPropTypes.PropTypes = ReactPropTypes;
        return ReactPropTypes;
    };
}, 10321, [10324]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 51,
        "height": 61,
        "scales": [1],
        "hash": "f48c01a4395a0aa082f4a39357f1a6f9",
        "name": "icon6",
        "type": "png"
    });
}, 10322, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
    module.exports = ReactPropTypesSecret;
}, 10324, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 58,
        "height": 42,
        "scales": [1],
        "hash": "a9584a8a73cf162b5451ec30874404af",
        "name": "icon7",
        "type": "png"
    });
}, 10325, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 57,
        "height": 51,
        "scales": [1],
        "hash": "8f8d1c3c704d78b0c8867fe8d13954e9",
        "name": "icon8",
        "type": "png"
    });
}, 10328, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 108,
        "height": 108,
        "scales": [1],
        "hash": "1e746d8284a743ee5908dec41c15b28e",
        "name": "icon1_2x",
        "type": "png"
    });
}, 10331, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 324,
        "height": 280,
        "scales": [1],
        "hash": "65ec75141f6627fdaf4294797b107913",
        "name": "icon2_2x",
        "type": "png"
    });
}, 10334, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 115,
        "height": 96,
        "scales": [1],
        "hash": "7c8e14111984205f26356a31816742fe",
        "name": "icon3_2x",
        "type": "png"
    });
}, 10337, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 101,
        "height": 108,
        "scales": [1],
        "hash": "2774edb6e0e1b62bf3eabaedf7a08fa5",
        "name": "icon4_2x",
        "type": "png"
    });
}, 10340, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 120,
        "height": 121,
        "scales": [1],
        "hash": "443ffc5bf666c84bbb0d0d8074af19b3",
        "name": "icon5_2x",
        "type": "png"
    });
}, 10343, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 103,
        "height": 121,
        "scales": [1],
        "hash": "d7dda122db9dda09205a88ac279b4c8e",
        "name": "icon6_2x",
        "type": "png"
    });
}, 10346, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 116,
        "height": 84,
        "scales": [1],
        "hash": "a7eda19f4c59b9c50e80b775259ad925",
        "name": "icon7_2x",
        "type": "png"
    });
}, 10349, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 113,
        "height": 103,
        "scales": [1],
        "hash": "5066d87f579a6d7bd9d8f715e7f76daa",
        "name": "icon8_2x",
        "type": "png"
    });
}, 10352, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _Devices = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var imageOpen = _$$_REQUIRE(_dependencyMap[11]);

    var imageClose = _$$_REQUIRE(_dependencyMap[12]);

    var SafeDetail = function (_React$Component) {
        (0, _inherits2.default)(SafeDetail, _React$Component);

        function SafeDetail(props) {
            var _this;

            (0, _classCallCheck2.default)(this, SafeDetail);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SafeDetail).call(this, props));
            _this.state = {
                icon2x: null,
                title: '',
                keyword: '',
                content: '',
                description: '',
                status: false
            };
            return _this;
        }

        (0, _createClass2.default)(SafeDetail, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this$props$navigatio = this.props.navigation.state.params.item,
                    icon2x = _this$props$navigatio.icon2x,
                    title = _this$props$navigatio.title,
                    content = _this$props$navigatio.content,
                    keyword = _this$props$navigatio.keyword,
                    description = _this$props$navigatio.description,
                    status = _this$props$navigatio.status;
                this.setState({
                    icon2x: icon2x,
                    title: title,
                    content: content,
                    keyword: keyword,
                    description: description,
                    status: status
                });
            }
        }, {
            key: "_editItemStatus",
            value: function _editItemStatus() {
                var _this2 = this;

                this.setState({
                    status: !this.state.status
                }, function () {
                    _this2.props.navigation.state.params.callback({
                        index: _this2.props.navigation.state.params.index,
                        key: _this2.state.keyword,
                        status: _this2.state.status
                    });
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this3 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: this.state.icon2x
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.title
                }, this.state.title), _react.default.createElement(_reactNative.Text, {
                    style: styles.content
                }, this.state.content), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.row,
                    onPress: function onPress() {
                        return _this3._editItemStatus();
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.status,
                    source: this.state.status ? imageOpen : imageClose
                })), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
                    style: styles.description
                }, this.state.description)));
            }
        }]);
        return SafeDetail;
    }(_react.default.Component);

    exports.default = SafeDetail;

    SafeDetail.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: '安全中心',
                style: {
                    backgroundColor: '#27C07E'
                },
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#FFFFFF',
            flexDirection: 'column',
            alignItems: 'center',
            padding: 15
        },
        icon: {
            width: 100,
            height: 100,
            marginTop: 50,
            resizeMode: 'contain'
        },
        title: {
            marginTop: 30,
            marginBottom: 10,
            fontSize: 20
        },
        content: {
            color: 'rgba(0,0,0,0.5)'
        },
        status: {
            width: 160,
            height: 70,
            resizeMode: 'contain',
            marginTop: 15,
            marginBottom: 15
        },
        description: {
            flex: 1,
            fontSize: 14,
            borderTopWidth: 1,
            padding: 15,
            lineHeight: 20,
            borderTopColor: 'rgba(0,0,0,0.2)',
            color: 'rgba(0,0,0,0.5)'
        }
    });
}, 10355, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10061, 10033, 10358, 10361]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 230,
        "height": 95,
        "scales": [1],
        "hash": "6d2f4eb07fc98ad2f6b3d1ae7b6082a0",
        "name": "open1",
        "type": "png"
    });
}, 10358, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
        "width": 230,
        "height": 95,
        "scales": [1],
        "hash": "cc51798fe15e43ed072dbb19b7ba3ae2",
        "name": "close1",
        "type": "png"
    });
}, 10361, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _miot = _$$_REQUIRE(_dependencyMap[7]);

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var MoreSetting = function (_React$Component) {
        (0, _inherits2.default)(MoreSetting, _React$Component);

        function MoreSetting(props) {
            var _this;

            (0, _classCallCheck2.default)(this, MoreSetting);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MoreSetting).call(this, props));
            _this.state = {};
            return _this;
        }

        (0, _createClass2.default)(MoreSetting, [{
            key: "_creatDeskShotcut",
            value: function _creatDeskShotcut() {
                this.props.navigation.navigate('MpkWebPage', {
                    title: '添加桌面快捷方式',
                    url: 'http://www.baidu.com'
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.default, {
                    title: "\u8BBE\u7F6E\u65F6\u533A",
                    onPress: function onPress(_) {
                        return _this2.props.navigation.navigate('TimeZone');
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u53CD\u9988\u95EE\u9898",
                    onPress: function onPress(_) {
                        return _this2.props.navigation.navigate('Feedback');
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u6DFB\u52A0\u684C\u9762\u5FEB\u6377\u65B9\u5F0F",
                    onPress: function onPress(_) {
                        return _this2._creatDeskShotcut();
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }));
            }
        }]);
        return MoreSetting;
    }(_react.default.Component);

    exports.default = MoreSetting;

    MoreSetting.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '更多设置',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        }
    });
}, 10364, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10074, 10284, 10332, 10329, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _miot = _$$_REQUIRE(_dependencyMap[6]);

    var _resources = _$$_REQUIRE(_dependencyMap[7]);

    var _CommonSetting = _$$_REQUIRE(_dependencyMap[8]);

    var _CommonSetting2 = _$$_REQUIRE(_dependencyMap[9]);

    var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

    var first_options = _CommonSetting.SETTING_KEYS.first_options,
        second_options = _CommonSetting.SETTING_KEYS.second_options;

    var Setting = function (_React$Component) {
        (0, _inherits2.default)(Setting, _React$Component);

        function Setting(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, Setting);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Setting).call(this, props, context));
            _this.state = {
                showDot: []
            };
            return _this;
        }

        (0, _createClass2.default)(Setting, [{
            key: "render",
            value: function render() {
                var firstOptions = [];
                var secondOptions = [second_options.TIMEZONE];
                var extraOptions = {
                    showUpgrade: true,
                    deleteDeviceMessage: 'test',
                    excludeRequiredOptions: [_CommonSetting2.firstAllOptions.LOCATION, _CommonSetting2.secondAllOptions.SECURITY],
                    option: {
                        experiencePlanURL: '',
                        hideAgreement: true
                    },
                    syncDevice: true
                };
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ScrollView, {
                    showsVerticalScrollIndicator: false
                }, _react.default.createElement(_CommonSetting.CommonSetting, {
                    navigation: this.props.navigation,
                    showDot: this.state.showDot,
                    extraOptions: extraOptions
                }), _react.default.createElement(_reactNative.View, {
                    style: {
                        height: 20
                    }
                })));
            }
        }, {
            key: "onValueChange",
            value: function onValueChange(value) { }
        }, {
            key: "onSlidingComplete",
            value: function onSlidingComplete(value) { }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;

                setTimeout(function (_) {
                    return _this2.setState({
                        switchValue: true,
                        sliderValue: 75,
                        showDot: [first_options.FIRMWARE_UPGRADE]
                    });
                }, 2000);
            }
        }]);
        return Setting;
    }(_react.default.Component);

    exports.default = Setting;

    Setting.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: _resources.strings.setting,
                style: {
                    backgroundColor: '#fff'
                },
                onPressLeft: function onPressLeft() {
                    if (_miot.Package.entrance !== _miot.Entrance.Main && !_miot.Package.pageParams.isBackToMainPage) {
                        _miot.Package.exit();
                    } else {
                        navigation.goBack();
                    }
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: _resources.Styles.common.backgroundColor,
            flex: 1
        },
        featureSetting: {
            backgroundColor: '#fff'
        },
        blank: {
            height: 8,
            backgroundColor: _resources.Styles.common.backgroundColor,
            borderTopColor: _resources.Styles.common.hairlineColor,
            borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
            borderBottomColor: _resources.Styles.common.hairlineColor,
            borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
        },
        titleContainer: {
            height: 32,
            backgroundColor: '#fff',
            justifyContent: 'center',
            paddingLeft: _resources.Styles.common.padding
        },
        title: {
            fontSize: 11,
            color: 'rgba(0,0,0,0.5)',
            lineHeight: 14
        }
    });
}, 10367, [14305, 14320, 14323, 14371, 14377, 14386, 10074, 10077, 10353, 10326, 10338, 10332, 10284, 10297, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _Devices = _$$_REQUIRE(_dependencyMap[11]);

    var _reactNativeImagePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[13]);

    var itemImgWidth = _Devices.ScreenW / 3 * 0.4;
    var itemWidth = _Devices.ScreenW / 3;
    var itemImgMarginLeft = itemImgWidth * 0.75;

    var Feedback = function (_React$Component) {
        (0, _inherits2.default)(Feedback, _React$Component);

        function Feedback(props) {
            var _this;

            (0, _classCallCheck2.default)(this, Feedback);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Feedback).call(this, props));
            _this.state = {
                height: 30,
                textArea: '',
                avatarSource: [{
                    uri: ''
                }],
                confirmDisabled: false,
                problemText: null,
                phoneNumber: null,
                status: false
            };
            return _this;
        }

        (0, _createClass2.default)(Feedback, [{
            key: "selectPhotoTapped",
            value: function selectPhotoTapped() {
                var _this2 = this;

                var options = {
                    title: '选择图片',
                    cancelButtonTitle: '取消',
                    takePhotoButtonTitle: '拍照',
                    chooseFromLibraryButtonTitle: '选择照片',
                    cameraType: 'back',
                    mediaType: 'photo',
                    videoQuality: 'high',
                    durationLimit: 10,
                    maxWidth: 300,
                    maxHeight: 300,
                    quality: 0.8,
                    angle: 0,
                    allowsEditing: false,
                    noData: false,
                    storageOptions: {
                        skipBackup: true
                    },
                    imagesrc: []
                };

                _reactNativeImagePicker.default.showImagePicker(options, function (response) {
                    if (response.didCancel) { } else if (response.error) { } else {
                        var source = {
                            uri: response.uri
                        };

                        _this2.state.avatarSource.unshift(source);

                        if (_this2.state.avatarSource.length == 5) {
                            alert(JSON.stringify(_this2.state.avatarSource));
                        }

                        _this2.setState({
                            avatarSource: (0, _toConsumableArray2.default)(_this2.state.avatarSource)
                        });
                    }
                });
            }
        }, {
            key: "cauculateHeight",
            value: function cauculateHeight(e) {
                var height = e.nativeEvent.contentSize.height > 30 ? e.nativeEvent.contentSize.height : this.state.height;
                this.setState({
                    height: height
                });
            }
        }, {
            key: "uploadlog",
            value: function uploadlog() {
                var status = !this.state.status;
                this.setState({
                    status: status
                });
            }
        }, {
            key: "submitFeedback",
            value: function submitFeedback() {
                var obj = {
                    textArea: this.state.textArea,
                    avatarSource: this.state.avatarSource,
                    problemType: this.state.problemText,
                    phoneNumber: this.state.phoneNumber,
                    radio: this.state.status
                };
                alert(JSON.stringify(obj));
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.subscription = _reactNative.DeviceEventEmitter.addListener('UPDATE_USER_DATA', this.refreshData.bind(this));
            }
        }, {
            key: "refreshData",
            value: function refreshData(data) {
                this.setState({
                    problemText: data
                });
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.subscription.remove();
            }
        }, {
            key: "_onPressItem",
            value: function _onPressItem(item, index) {
                this.state.avatarSource.splice(index, 1);
                this.setState({
                    avatarSource: (0, _toConsumableArray2.default)(this.state.avatarSource)
                });
            }
        }, {
            key: "_renderItem",
            value: function _renderItem(item, index) {
                var _this3 = this;

                if (this.state.avatarSource.length == 5 && index == 4) {
                    return;
                }

                if (index == this.state.avatarSource.length - 1) {
                    return _react.default.createElement(_reactNative.TouchableOpacity, {
                        onPress: this.selectPhotoTapped.bind(this),
                        style: styles.avatarContainer
                    }, _react.default.createElement(_reactNative.View, {
                        style: {
                            alignItems: 'center'
                        }
                    }, _react.default.createElement(_reactNative.Image, {
                        style: {
                            width: 20,
                            height: 20,
                            marginBottom: 5
                        },
                        source: _$$_REQUIRE(_dependencyMap[14])
                    }), _react.default.createElement(_reactNative.Text, null, "\u6DFB\u52A0\u56FE\u7247")));
                } else {
                    return _react.default.createElement(_reactNative.View, {
                        style: [styles.listItem]
                    }, _react.default.createElement(_reactNative.Image, {
                        style: styles.imageIcon,
                        source: item
                    }), _react.default.createElement(_reactNative.TouchableOpacity, {
                        style: styles.deleteIcon,
                        onPress: function onPress() {
                            return _this3._onPressItem(item, index);
                        },
                        hitSlop: {
                            left: 5,
                            right: 5,
                            top: 5,
                            bottom: 5
                        }
                    }, _react.default.createElement(_reactNative.Image, {
                        style: styles.deleteImage,
                        source: _$$_REQUIRE(_dependencyMap[15])
                    })));
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    activeOpacity: 1,
                    style: styles.inputContainer,
                    onPress: function onPress() {
                        return _this4.TextInput.focus();
                    }
                }, _react.default.createElement(_reactNative.TextInput, {
                    placeholder: '请详细描述您的问题，以帮助我们尽快为您解决',
                    placeholderTextColor: '#bbbbbb',
                    underlineColorAndroid: 'transparent',
                    multiline: true,
                    ref: function ref(textInput) {
                        return _this4.TextInput = textInput;
                    },
                    onChangeText: function onChangeText(text) {
                        _this4.setState({
                            textArea: text
                        });
                    },
                    onContentSizeChange: function onContentSizeChange(e) {
                        return _this4.cauculateHeight(e);
                    },
                    style: [{
                        paddingVertical: 0,
                        maxHeight: 105
                    }, {
                        height: this.state.height
                    }]
                })), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.problem,
                    onPress: function onPress() {
                        _this4.props.navigation.navigate('ProblemType');
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.problemText
                }, this.state.problemText ? this.state.problemText : '问题类型（必选）'), _react.default.createElement(_reactNative.Image, {
                    style: styles.subArrow,
                    source: _$$_REQUIRE(_dependencyMap[16])
                })), _react.default.createElement(_reactNative.View, {
                    style: {
                        height: 100
                    }
                }, _react.default.createElement(_reactNative.FlatList, {
                    contentContainerStyle: styles.listContainer,
                    data: this.state.avatarSource,
                    renderItem: function renderItem(_ref) {
                        var item = _ref.item,
                            index = _ref.index;
                        return _this4._renderItem(item, index);
                    },
                    numColumns: 4,
                    horizontal: false
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.telephone
                }, _react.default.createElement(_reactNative.TextInput, {
                    placeholder: '请输入您的手机号码',
                    placeholderTextColor: '#bbbbbb',
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        _this4.setState({
                            phoneNumber: text
                        });
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.uploadlog
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    onPress: this.uploadlog.bind(this),
                    hitSlop: {
                        left: 10,
                        right: 10,
                        top: 10,
                        bottom: 10
                    }
                }, this.state.status ? _react.default.createElement(_reactNative.Image, {
                    style: styles.logCheckbox,
                    source: _$$_REQUIRE(_dependencyMap[17])
                }) : _react.default.createElement(_reactNative.Image, {
                    style: styles.logCheckbox,
                    source: _$$_REQUIRE(_dependencyMap[18])
                })), _react.default.createElement(_reactNative.Text, null, " \u4E0A\u4F20\u95EE\u9898\u65E5\u5FD7")), _react.default.createElement(_reactNative.View, {
                    style: styles.rkbuttonItem
                }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
                    rkType: "rounded",
                    disabled: this.state.confirmDisabled,
                    onPress: function onPress() {
                        _this4.submitFeedback();
                    },
                    style: styles.viewRkButton
                }, "\u786E\u8BA4")));
            }
        }]);
        return Feedback;
    }(_react.default.Component);

    exports.default = Feedback;

    Feedback.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '问题反馈',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff',
            borderTopWidth: 1 / _reactNative.PixelRatio.get(),
            borderColor: '#C1C1C1'
        },
        inputContainer: {
            borderColor: "#C1C1C1",
            borderWidth: 1 / _reactNative.PixelRatio.get(),
            height: 150,
            margin: 15,
            paddingLeft: 5
        },
        problem: {
            borderColor: '#C1C1C1',
            borderWidth: 1 / _reactNative.PixelRatio.get(),
            flexDirection: 'row',
            height: 50,
            margin: 15,
            padding: 15,
            paddingLeft: 5,
            justifyContent: 'space-between',
            alignItems: 'center'
        },
        problemText: {
            flex: 1
        },
        subArrow: {
            width: 7,
            height: 14
        },
        listContainer: {
            height: 90
        },
        avatarContainer: {
            borderColor: '#C1C1C1',
            backgroundColor: '#FAFAFA',
            borderWidth: 1 / _reactNative.PixelRatio.get(),
            justifyContent: 'center',
            alignItems: 'center',
            borderRadius: 5,
            width: 80,
            height: 80,
            marginLeft: 15
        },
        avatar: {
            borderRadius: 5,
            width: 60,
            height: 60
        },
        rkbuttonItem: {
            position: 'absolute',
            bottom: 20,
            left: 10,
            right: 10,
            alignItems: 'center'
        },
        viewRkButton: {
            width: _Devices.ScreenW / 10 * 9
        },
        uploadlog: {
            flexDirection: 'row',
            margin: 15,
            marginTop: 0
        },
        logCheckbox: {
            width: 20,
            height: 20
        },
        telephone: {
            borderWidth: 1 / _reactNative.PixelRatio.get(),
            borderColor: '#C1C1C1',
            height: 50,
            margin: 15,
            marginTop: 0,
            paddingLeft: 5,
            justifyContent: 'center'
        },
        listItem: {
            height: _Devices.ScreenW / 4,
            width: _Devices.ScreenW / 4,
            alignItems: 'center',
            position: 'relative'
        },
        deleteIcon: {
            position: 'absolute',
            top: 0,
            right: 10,
            width: 16,
            height: 16,
            borderRadius: 8,
            backgroundColor: '#fff'
        },
        deleteImage: {
            width: 16,
            height: 16
        },
        imageIcon: {
            width: _Devices.ScreenW / 4 * 0.8,
            height: _Devices.ScreenW / 4 * 0.8,
            borderRadius: 10,
            resizeMode: 'cover'
        }
    });
}, 10370, [14305, 14359, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10033, 10061, 10373, 11251, 10244, 10376, 10229, 10379, 10283]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

    var _require = _$$_REQUIRE(_dependencyMap[1]),
        NativeModules = _require.NativeModules;

    var ImagePickerManager = NativeModules.ImagePickerManager;
    var DEFAULT_OPTIONS = {
        title: 'Select a Photo',
        cancelButtonTitle: 'Cancel',
        takePhotoButtonTitle: 'Take Photo…',
        chooseFromLibraryButtonTitle: 'Choose from Library…',
        quality: 1.0,
        allowsEditing: false,
        permissionDenied: {
            title: 'Permission denied',
            text: 'To be able to take pictures with your camera and choose images from your library.',
            reTryTitle: 're-try',
            okTitle: 'I\'m sure'
        }
    };
    module.exports = _objectSpread({}, ImagePickerManager, {
        showImagePicker: function showImagePicker(options, callback) {
            if (typeof options === 'function') {
                callback = options;
                options = {};
            }

            return ImagePickerManager.showImagePicker(_objectSpread({}, DEFAULT_OPTIONS, options), callback);
        }
    });
}, 10373, [14314, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 200,
        "height": 200,
        "scales": [1],
        "hash": "744bef10c2a3ec585504788ffde81826",
        "name": "delete3",
        "type": "png"
    });
}, 10376, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 37,
        "height": 33,
        "scales": [1],
        "hash": "e76efb1117304a4b49256b0ba2fa06c9",
        "name": "unselected",
        "type": "png"
    });
}, 10379, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var ProblemType = function (_React$Component) {
        (0, _inherits2.default)(ProblemType, _React$Component);

        function ProblemType(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ProblemType);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProblemType).call(this, props));
            _this.state = {
                list: [{
                    "wideTagSort": 1,
                    "wideTagId": "1489",
                    "wideTag": "网络状况",
                    "customInfo": "",
                    "tags": [{
                        "tagContent": "外网连接异常",
                        "tagId": 7303,
                        "sort": 1
                    }, {
                        "tagContent": "网络延迟高",
                        "tagId": 7307,
                        "sort": 2
                    }, {
                        "tagContent": "有线网络速度慢",
                        "tagId": 7308,
                        "sort": 3
                    }, {
                        "tagContent": "有线设备频繁断网",
                        "tagId": 7309,
                        "sort": 4
                    }, {
                        "tagContent": "其他高级功能（VPN/DDNS/DMZ/端口转发）",
                        "tagId": 7310,
                        "sort": 5
                    }, {
                        "tagContent": "其他网络状况问题",
                        "tagId": 7311,
                        "sort": 6
                    }]
                }, {
                    "wideTagSort": 2,
                    "wideTagId": "1490",
                    "wideTag": "WIFI",
                    "customInfo": "",
                    "tags": [{
                        "tagContent": "WiFi无法上网（有线也无法上网）",
                        "tagId": 7296,
                        "sort": 1
                    }, {
                        "tagContent": "WiFi无法上网（有线可以上网）",
                        "tagId": 7297,
                        "sort": 2
                    }, {
                        "tagContent": "WiFi无法连接",
                        "tagId": 7298,
                        "sort": 3
                    }, {
                        "tagContent": "WiFi速度慢",
                        "tagId": 7299,
                        "sort": 4
                    }, {
                        "tagContent": "WiFi频繁掉线",
                        "tagId": 7300,
                        "sort": 5
                    }, {
                        "tagContent": "无线信号弱",
                        "tagId": 7301,
                        "sort": 6
                    }, {
                        "tagContent": "其他WIFI问题",
                        "tagId": 7302,
                        "sort": 7
                    }]
                }]
            };
            return _this;
        }

        (0, _createClass2.default)(ProblemType, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
                    style: styles.flatList,
                    data: this.state.list,
                    renderItem: function renderItem(_ref) {
                        var item = _ref.item,
                            index = _ref.index;
                        return _react.default.createElement(_ListItem.default, {
                            title: item.wideTag,
                            onPress: function onPress() {
                                _this2.props.navigation.navigate('SelectProblem', {
                                    tags: item.tags
                                });
                            }
                        });
                    }
                }));
            }
        }]);
        return ProblemType;
    }(_react.default.Component);

    exports.default = ProblemType;

    ProblemType.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '问题类型',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        }
    });
}, 10382, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10329, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var SelectProblem = function (_React$Component) {
        (0, _inherits2.default)(SelectProblem, _React$Component);

        function SelectProblem(props) {
            var _this;

            (0, _classCallCheck2.default)(this, SelectProblem);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SelectProblem).call(this, props));

            _this._renderItem = function (_ref) {
                var item = _ref.item,
                    index = _ref.index;
                var show = _this.state.selectIndex == index;
                return _react.default.createElement(_reactNative.View, {
                    style: {
                        position: 'relative'
                    }
                }, _react.default.createElement(_ListItem.default, {
                    title: item.tagContent,
                    hideArrow: true,
                    onPress: function onPress(_) {
                        return _this._select(item, index);
                    }
                }), show && _react.default.createElement(_reactNative.Image, {
                    style: {
                        position: 'absolute',
                        right: 10,
                        top: 15,
                        width: 20,
                        height: 20
                    },
                    source: _$$_REQUIRE(_dependencyMap[12])
                }));
            };

            _this.state = {
                listData: [],
                selectIndex: null
            };
            return _this;
        }

        (0, _createClass2.default)(SelectProblem, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var tags = this.props.navigation.state.params.tags;
                this.setState({
                    listData: tags
                });
            }
        }, {
            key: "_select",
            value: function _select(item, index) {
                this.setState({
                    selectIndex: index,
                    listData: (0, _toConsumableArray2.default)(this.state.listData)
                });

                _reactNative.DeviceEventEmitter.emit('UPDATE_USER_DATA', item.tagContent);

                this.props.navigation.navigate('Feedback');
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
                    data: this.state.listData,
                    renderItem: this._renderItem
                }));
            }
        }]);
        return SelectProblem;
    }(_react.default.Component);

    exports.default = SelectProblem;

    SelectProblem.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '选择问题',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        }
    });
}, 10385, [14305, 14359, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10329, 10033, 10388]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
        "width": 200,
        "height": 200,
        "scales": [1],
        "hash": "770a6e3834d3192164058d32908b86ca",
        "name": "gou",
        "type": "png"
    });
}, 10388, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _Devices = _$$_REQUIRE(_dependencyMap[11]);

    var ZoneList = function (_React$Component) {
        (0, _inherits2.default)(ZoneList, _React$Component);

        function ZoneList(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ZoneList);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ZoneList).call(this, props));
            _this.state = {
                item: 'hello',
                dataSource: [{
                    text: '台北',
                    value: 'UTC+28'
                }, {
                    text: '首尔',
                    value: 'UTC+9'
                }, {
                    text: '北京，重庆，香港特别行政区，乌鲁木齐',
                    value: 'UTC+8'
                }, {
                    text: '吉隆坡，新加坡',
                    value: 'UTC+18'
                }, {
                    text: '新西伯利亚',
                    value: 'UTC+7'
                }],
                selectIndex: null
            };
            return _this;
        }

        (0, _createClass2.default)(ZoneList, [{
            key: "_onItemClick",
            value: function _onItemClick(item, index) {
                this.setState({
                    selectIndex: index,
                    dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
                });
                this.props.navigation.state.params.refresh(item);
                this.props.navigation.navigate('TimeZone');
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                var zoneKey = this.props.navigation.state.params.id;
                var index;
                this.state.dataSource.map(function (v, i) {
                    if (v.value == zoneKey) {
                        index = i;
                    }
                });
                this.setState({
                    selectIndex: index,
                    dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
                });
            }
        }, {
            key: "_createListItem",
            value: function _createListItem(item, index) {
                var _this2 = this;

                return _react.default.createElement(_reactNative.TouchableOpacity, {
                    activeOpacity: 0.5,
                    onPress: function onPress() {
                        return _this2._onItemClick(item, index);
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        flexDirection: 'row',
                        alignItems: 'center',
                        padding: 15
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.text
                }, "(", item.value, ") ", item.text, " "), this.state.selectIndex == index && _react.default.createElement(_reactNative.Image, {
                    style: {
                        width: 20,
                        height: 20
                    },
                    source: _$$_REQUIRE(_dependencyMap[12])
                })), _react.default.createElement(_Separator.default, null));
            }
        }, {
            key: "render",
            value: function render() {
                var _this3 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
                    keyExtractor: function keyExtractor(item, index) {
                        return index + '1';
                    },
                    data: this.state.dataSource,
                    renderItem: function renderItem(_ref) {
                        var item = _ref.item,
                            index = _ref.index;
                        return _this3._createListItem(item, index);
                    }
                }));
            }
        }]);
        return ZoneList;
    }(_react.default.Component);

    exports.default = ZoneList;

    ZoneList.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '选择时区',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        text: {
            flex: 1
        }
    });
}, 10391, [14305, 14359, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10033, 10061, 10388]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var TimeZone = function (_React$Component) {
        (0, _inherits2.default)(TimeZone, _React$Component);

        function TimeZone(props) {
            var _this;

            (0, _classCallCheck2.default)(this, TimeZone);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeZone).call(this, props));
            _this.state = {
                visible1: false,
                visible2: false,
                dateArray: [2019, 10, 23],
                dateString: "2019年10月23日",
                timeArray: ["08", "00"],
                timeString: '上午 08:00',
                zoneKey: 'UTC+8',
                zoneValue: '北京，重庆，香港特别行政区，乌鲁木齐'
            };
            return _this;
        }

        (0, _createClass2.default)(TimeZone, [{
            key: "componentWillMount",
            value: function componentWillMount() {
                var data = {
                    "time": {
                        "min": 20,
                        "day": 23,
                        "index": 0,
                        "month": 10,
                        "year": 2019,
                        "sec": 33,
                        "hour": 18,
                        "timezone": "CST-8"
                    },
                    "code": 0
                };
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() { }
        }, {
            key: "_onpress",
            value: function _onpress() {
                var _this2 = this;

                this.props.navigation.navigate('ZoneList', {
                    id: this.state.zoneKey,
                    refresh: function refresh(item) {
                        _this2.setState({
                            zoneKey: item.value,
                            zoneValue: item.text
                        });
                    }
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this3 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.default, {
                    title: "\u8BBE\u5907\u65F6\u533A",
                    value: '(' + this.state.zoneKey + ')' + this.state.zoneValue,
                    onPress: function onPress(_) {
                        return _this3._onpress();
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u8BBE\u7F6E\u65E5\u671F",
                    value: this.state.dateString,
                    onPress: function onPress(_) {
                        _this3.setState({
                            visible1: true
                        });
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), _react.default.createElement(_ListItem.default, {
                    title: "\u8BBE\u7F6E\u65F6\u95F4",
                    value: this.state.timeString,
                    onPress: function onPress(_) {
                        _this3.setState({
                            visible2: true
                        });
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), _react.default.createElement(_MHDatePicker.default, {
                    visible: this.state.visible1,
                    title: "\u5F00\u542F\u65E5\u671F",
                    type: _MHDatePicker.default.TYPE.DATE,
                    current: this.state.dateArray,
                    onDismiss: function onDismiss(_) {
                        return _this3.setState({
                            visible1: false
                        });
                    },
                    onSelect: function onSelect(res) {
                        _this3.setState({
                            dateArray: res.rawArray,
                            dateString: res.rawString
                        });
                    }
                }), _react.default.createElement(_MHDatePicker.default, {
                    visible: this.state.visible2,
                    title: "\u5F00\u59CB\u65F6\u95F4",
                    type: _MHDatePicker.default.TYPE.TIME12,
                    current: this.state.timeArray,
                    onDismiss: function onDismiss(_) {
                        return _this3.setState({
                            visible2: false
                        });
                    },
                    onSelect: function onSelect(res) {
                        _this3.setState({
                            timeArray: res.date,
                            timeString: res.rawString
                        });
                    }
                }));
            }
        }]);
        return TimeZone;
    }(_react.default.Component);

    exports.default = TimeZone;

    TimeZone.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: '时区设置',
                onPressLeft: function onPressLeft() {
                    navigation.goBack();
                }
            }))
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        }
    });
}, 10394, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10284, 10332, 10716, 10329, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _Host = _$$_REQUIRE(_dependencyMap[9]);

    var _miot = _$$_REQUIRE(_dependencyMap[10]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

    var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[14]);

    var _device = _$$_REQUIRE(_dependencyMap[15]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[19]);

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        icon: {
            margin: 20
        },
        header: {
            backgroundColor: '#1a1b2a',
            alignItems: 'center'
        },
        titleText: {
            color: '#fff',
            margin: 20
        },
        contentTitle: {
            color: 'black',
            fontSize: 14,
            marginLeft: -10
        }
    });

    var NetworkMode = function (_React$Component) {
        (0, _inherits2.default)(NetworkMode, _React$Component);

        function NetworkMode(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetworkMode);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetworkMode).call(this, props));

            _this._showSwitchActionSheet = function () {
                _this.setState({
                    visibleSwitchActionSheet: true
                });
            };

            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    }
                }),
                visibleSwitchActionSheet: false,
                currentMode: _NetWorkModeConstant.NetModeType.Unknown,
                currentGateWay: '',
                currentIp: '',
                loadingWifiInfo: false,
                routerToken: ''
            };
            _this.hadRequestRouterToken = false;
            _this.isDialingHappened = false;
            _this.isRequestingPppoeStatus = false;
            _this.routerInfoManager = _RouterInfoHelper.default.sharedInstance();
            return _this;
        }

        (0, _createClass2.default)(NetworkMode, [{
            key: "_changeCurrentMode",
            value: function _changeCurrentMode(mode) {
                newFunction(mode);
                this.setState({
                    currentMode: mode
                });
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                clearTimeout(this.timer);
                clearTimeout(this.timerPppoe);
                clearTimeout(this.timerStaticIp);
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                this._requestWanInfo(true);

                if (!this.hadRequestRouterToken) { }

                this._requestPppoeStatus();
            }
        }, {
            key: "_renderRow",
            value: function _renderRow() {
                var currentModeName = this._getCurrentModeName();

                return _react.default.createElement(_ListItem.ListItem, {
                    title: '当前模式',
                    value: currentModeName,
                    hideArrow: false,
                    showDot: false,
                    containerStyle: {
                        backgroundColor: 'white'
                    },
                    titleStyle: styles.contentTitle,
                    valueStyle: {
                        fontSize: 14,
                        color: 'black'
                    },
                    onPress: function onPress(_) {
                        return undefined;
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var currentModeName = this._getCurrentModeName();

                var ipAndGateway = this._getIpAndGatewayText();

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_TitleBar.default, {
                    type: "light",
                    title: "\u4E0A\u7F51\u6A21\u5F0F\u8BBE\u7F6E",
                    style: {
                        backgroundColor: '#1a1b2a'
                    },
                    onPressLeft: function onPressLeft() {
                        return _this2.props.navigation.goBack();
                    },
                    rightText: "\u5207\u6362\u6A21\u5F0F",
                    rightTextStyle: "light",
                    onPressRight: function onPressRight() {
                        if (!_this2.routerInfoManager.isConnectCurrentManagedRouter()) {
                            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.notConnectRouter);

                            return;
                        }

                        _this2._showSwitchActionSheet();
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.header
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _$$_REQUIRE(_dependencyMap[20])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.titleText
                }, ipAndGateway)), _react.default.createElement(_ListItem.ListItem, {
                    title: '当前模式',
                    value: currentModeName,
                    hideArrow: false,
                    showDot: false,
                    containerStyle: {
                        backgroundColor: 'white'
                    },
                    titleStyle: styles.contentTitle,
                    valueStyle: {
                        fontSize: 14,
                        color: 'black'
                    },
                    onPress: function onPress(_) {
                        return _this2._gotoModeSetting();
                    },
                    separator: _react.default.createElement(_Separator.default, null)
                }), _react.default.createElement(_Dialog.ActionSheet, {
                    visible: this.state.visibleSwitchActionSheet,
                    options: this._getAvilableModes(),
                    buttons: [{
                        text: '取消',
                        style: {
                            color: '#000'
                        }
                    }],
                    onDismiss: function onDismiss(_) {
                        _this2.setState({
                            visibleSwitchActionSheet: false
                        });
                    }
                }), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.loadingWifiInfo,
                    message: ""
                }));
            }
        }, {
            key: "_requestLocalWifiInfo",
            value: function _requestLocalWifiInfo() {
                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                _miot.Service.callSpecificAPI(_API.default.router.init_info_inner, 'get', {
                    "deviceId": deviceId
                }).then(function (res) {
                    var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

                    if (routerId === deviceId) { } else { }
                }).catch(function (error) { });
            }
        }, {
            key: "_requestWanInfo",
            value: function _requestWanInfo(isFirstRequest) {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };

                if (this.routerInfoManager.isConnectCurrentManagedRouter()) {
                    if (this.routerInfoManager.getCurrentRouterToken().length === 0) {
                        return;
                    }

                    var api = _API.default.common_local_path + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.wan_info.local;

                    _miot.Service.callSpecificAPI(api, 'get', {
                        "deviceId": deviceId
                    }).then(function (res) {
                        _this3.setState({
                            loadingWifiInfo: false
                        });

                        _this3.orinizeWaninfoData(res);
                    }).catch(function (e) {
                        _this3.setState({
                            loadingWifiInfo: false
                        });

                        if (isFirstRequest) {
                            _CommonUtils.default.ShowToastBottom('获取路由器上网模式信息失败');

                            _this3.props.navigation.goBack();
                        }
                    });
                } else {
                    var _api = _API.default.net_work_mode.wan_info.remote;
                    this.setState({
                        loadingWifiInfo: true
                    });

                    _miot.Service.callSmartHomeAPI(_api, paramsDic).then(function (res) {
                        _this3.setState({
                            loadingWifiInfo: false
                        });

                        _this3.orinizeWaninfoData(res);
                    }).catch(function (e) {
                        _this3.setState({
                            loadingWifiInfo: false
                        });

                        if (isFirstRequest) {
                            _CommonUtils.default.ShowToastBottom('获取路由器上网模式信息失败');

                            _this3.props.navigation.goBack();
                        }
                    });
                }
            }
        }, {
            key: "orinizeWaninfoData",
            value: function orinizeWaninfoData(res) {
                var result = typeof res === "object" ? res : JSON.parse(res);
                var detail = result.info.details;
                var mode;

                if (detail.wanType == 'dhcp') {
                    mode = _NetWorkModeConstant.NetModeType.Dhcp;
                } else if (detail.wanType == 'pppoe') {
                    mode = _NetWorkModeConstant.NetModeType.Pppoe;

                    this._requestPppoeStatus();
                } else if (detail.wanType == 'static') {
                    mode = _NetWorkModeConstant.NetModeType.Static;
                }

                var gateway = result.info.gateWay;
                var ipv4Info = result.info.ipv4;
                var ip = ipv4Info[0].ip;
                this.setState({
                    currentGateWay: gateway,
                    currentIp: ip,
                    currentMode: mode,
                    data: result
                });
            }
        }, {
            key: "_requestToken",
            value: function _requestToken() {
                var _this4 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.router_token.remote;
                this.setState({
                    loadingWifiInfo: true
                });

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        _this4.hadRequestRouterToken = true;

                        _this4.setState({
                            routerToken: res.token
                        });

                        if (_this4.state.currentMode == _NetWorkModeConstant.NetModeType.Pppoe) {
                            _this4._requestPppoeStatus();
                        }
                    }
                }).catch(function (e) { });
            }
        }, {
            key: "_requestPppoeStatus",
            value: function _requestPppoeStatus() {
                var _this5 = this;

                if (this.isRequestingPppoeStatus) {
                    return;
                }

                this.isRequestingPppoeStatus = true;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };

                if (this.routerInfoManager.isConnectCurrentManagedRouter()) {
                    if (this.routerInfoManager.getCurrentRouterToken.length === 0) {
                        return;
                    }

                    var api = _API.default.common_local_path + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.router_pppoe_status.local;

                    _miot.Service.callSpecificAPI(api, 'get', {
                        "deviceId": deviceId
                    }).then(function (res) {
                        _this5.isRequestingPppoeStatus = false;

                        _this5._pppoeStatusHandler(res);
                    }).catch(function (e) {
                        _this5.isRequestingPppoeStatus = false;
                    });
                } else {
                    var _api2 = _API.default.net_work_mode.router_pppoe_status.remote;

                    _miot.Service.callSmartHomeAPI(_api2, paramsDic).then(function (res) {
                        _this5.isRequestingPppoeStatus = false;

                        _this5._pppoeStatusHandler(res);
                    }).catch(function (e) {
                        _this5.isRequestingPppoeStatus = false;
                    });
                }
            }
        }, {
            key: "_stopPppoeDial",
            value: function _stopPppoeDial() {
                var _this6 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };

                if (this.routerInfoManager.isConnectCurrentManagedRouter()) {
                    if (this.routerInfoManager.getCurrentRouterToken.length === 0) {
                        return;
                    }

                    var api = _API.default.common_local_path + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.router_pppoe_stop.local;

                    _miot.Service.callSpecificAPI(api, 'get', {
                        "deviceId": deviceId
                    }).then(function (res) {
                        _this6.isRequestingPppoeStatus = false;
                    }).catch(function (e) { });
                } else {
                    var _api3 = _API.default.net_work_mode.router_pppoe_stop.remote;

                    _miot.Service.callSmartHomeAPI(_api3, paramsDic).then(function (res) { }).catch(function (e) { });
                }
            }
        }, {
            key: "_pppoeStatusHandler",
            value: function _pppoeStatusHandler(statusInfo) {
                var pppoeStatus = typeof statusInfo === "object" ? statusInfo.status : JSON.parse(statusInfo).status;

                if (pppoeStatus != _NetWorkModeConstant.MiRouterPppoeDialingStatus.Dialing) {
                    if (pppoeStatus == _NetWorkModeConstant.MiRouterPppoeDialingStatus.Error) {
                        if (this.isDialingHappened) {
                            this._stopPppoeDial();
                        }
                    } else if (pppoeStatus == _NetWorkModeConstant.MiRouterPppoeDialingStatus.Success) {
                        if (this.isDialingHappened) {
                            this._requestWanInfo(false);
                        }
                    }
                }
            }
        }, {
            key: "_gotoModeSetting",
            value: function _gotoModeSetting() {
                if (!this.routerInfoManager.isConnectCurrentManagedRouter()) {
                    _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.notConnectRouter);

                    return;
                }

                var currentMode = this._getCurrentMode();

                if (currentMode === _NetWorkModeConstant.NetModeType.Dhcp) {
                    this._gotoDhcp();
                } else if (currentMode === _NetWorkModeConstant.NetModeType.Pppoe) {
                    this._gotoPppoe();
                } else if (currentMode === _NetWorkModeConstant.NetModeType.Static) {
                    this._gotoStaticIP();
                } else if (currentMode === _NetWorkModeConstant.NetModeType.WireRelay) {
                    this._gotoWireRelay();
                } else {
                    this._gotoWirelessRelay();
                }
            }
        }, {
            key: "_gotoWireRelay",
            value: function _gotoWireRelay() {
                this.props.navigation.navigate('NetModeWireRelay', {
                    title: '有线中继'
                });
            }
        }, {
            key: "_gotoWirelessRelay",
            value: function _gotoWirelessRelay() {
                this.props.navigation.navigate('NetModeWirelessRelay', {
                    title: '无线中继'
                });
            }
        }, {
            key: "_gotoPppoe",
            value: function _gotoPppoe() {
                var _this7 = this;

                this.props.navigation.navigate('NetModePppoe', {
                    title: '宽带上网',
                    wanInfo: this.state.data,
                    callback: function callback(success) {
                        _this7.setState({
                            currentMode: _NetWorkModeConstant.NetModeType.Pppoe
                        });

                        _this7.isDialingHappened = true;
                        _this7.timerPppoe = setTimeout(function () {
                            _this7._requestPppoeStatus();
                        }, 1500);
                    }
                });
            }
        }, {
            key: "_gotoDhcp",
            value: function _gotoDhcp() {
                var _this8 = this;

                this.props.navigation.navigate('NetModeDhcp', {
                    title: '动态IP上网',
                    wanInfo: this.state.data,
                    callback: function callback(success) {
                        _this8.timer = setTimeout(function () {
                            _this8._requestWanInfo(false);
                        }, 2500);
                    }
                });
            }
        }, {
            key: "_gotoStaticIP",
            value: function _gotoStaticIP() {
                var _this9 = this;

                this.props.navigation.navigate('NetModeStaticIP', {
                    title: '静态IP上网',
                    wanInfo: this.state.data,
                    callback: function callback(success) {
                        _this9.timerStaticIp = setTimeout(function () {
                            _this9._requestWanInfo(false);
                        }, 2500);
                    }
                });
            }
        }, {
            key: "_getAvilableModes",
            value: function _getAvilableModes() {
                var _this10 = this;

                var modes = [];

                var currentMode = this._getCurrentMode();

                if (currentMode !== _NetWorkModeConstant.NetModeType.Dhcp) {
                    modes.push({
                        title: '动态IP上网',
                        subtitle: '自动从网络服务商获取IP地址(DHCP)',
                        onPress: function onPress(_) {
                            return _this10._gotoDhcp();
                        }
                    });
                }

                if (currentMode !== _NetWorkModeConstant.NetModeType.Pppoe) {
                    modes.push({
                        title: '宽带上网',
                        subtitle: '输入宽带账号、密码，路由器进行虚拟拨号上网',
                        onPress: function onPress(_) {
                            return _this10._gotoPppoe();
                        }
                    });
                }

                if (currentMode !== _NetWorkModeConstant.NetModeType.Static) {
                    modes.push({
                        title: '静态IP上网',
                        subtitle: '网络服务商提供固定IP地址，多适用于专用网络',
                        onPress: function onPress(_) {
                            return _this10._gotoStaticIP();
                        }
                    });
                }

                if (currentMode !== _NetWorkModeConstant.NetModeType.WireRelay) {
                    modes.push({
                        title: '有线中继',
                        subtitle: '通过有线延展信号源，与信号源同一子网',
                        onPress: function onPress(_) {
                            return _this10._gotoWireRelay();
                        }
                    });
                }

                if (currentMode !== _NetWorkModeConstant.NetModeType.WirelessRelay) {
                    modes.push({
                        title: '无线中继',
                        subtitle: '通过无线延展信号源，与信号源同一子网',
                        onPress: function onPress(_) {
                            return _this10._gotoWirelessRelay();
                        }
                    });
                }

                return modes;
            }
        }, {
            key: "_getCurrentMode",
            value: function _getCurrentMode() {
                return this.state.currentMode;
            }
        }, {
            key: "_getCurrentModeName",
            value: function _getCurrentModeName() {
                if (this.state.currentMode === _NetWorkModeConstant.NetModeType.Dhcp) {
                    return '动态IP上网';
                } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.Pppoe) {
                    return '宽带上网';
                } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.Static) {
                    return '静态IP上网';
                } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.WirelessRelay) {
                    return '无线中继';
                } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.WireRelay) {
                    return '有线中继';
                } else {
                    return '未知';
                }
            }
        }, {
            key: "_getIpAndGatewayText",
            value: function _getIpAndGatewayText() {
                return '当前连接正常 IP:' + this.state.currentIp + '  网关:' + this.state.currentGateWay;
            }
        }]);
        return NetworkMode;
    }(_react.default.Component);

    exports.default = NetworkMode;

    NetworkMode.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: null
        };
    };

    function newFunction(mode) { }
}, 10397, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10035, 10074, 10332, 10297, 10033, 10400, 10935, 10058, 10079, 10037, 10076, 10403]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.MiRouterPppoeDialingStatus = exports.MiRouterDhcpType = exports.NetModeType = undefined;
    var NetModeType = {
        Unknown: -1,
        Dhcp: 0,
        Pppoe: 1,
        Static: 2,
        WirelessRelay: 3,
        WireRelay: 4
    };
    exports.NetModeType = NetModeType;
    var MiRouterDhcpType = {
        None: 0,
        Auto: 1,
        Manual: 2
    };
    exports.MiRouterDhcpType = MiRouterDhcpType;
    var MiRouterPppoeDialingStatus = {
        Dialing: 1,
        Success: 2,
        Error: 3,
        Stopped: 4
    };
    exports.MiRouterPppoeDialingStatus = MiRouterPppoeDialingStatus;
}, 10400, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
        "width": 179,
        "height": 170,
        "scales": [1],
        "hash": "df564ec83e3db195c8fb5c8424bd851b",
        "name": "networkMode_setup",
        "type": "png"
    });
}, 10403, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _miot = _$$_REQUIRE(_dependencyMap[11]);

    var _Devices = _$$_REQUIRE(_dependencyMap[12]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _device = _$$_REQUIRE(_dependencyMap[15]);

    var NetModeWireRelay = function (_React$Component) {
        (0, _inherits2.default)(NetModeWireRelay, _React$Component);

        function NetModeWireRelay(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetModeWireRelay);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeWireRelay).call(this, props));
            _this.state = {
                waitingActivityShow: false
            };
            return _this;
        }

        (0, _createClass2.default)(NetModeWireRelay, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
                    style: styles.topText
                }, "\u6709\u7EBF\u4E2D\u7EE7\uFF0C\u53EF\u6709\u6548\u6269\u5C55\u6E90\u4FE1\u53F7\uFF0C\u4E0E\u4FE1\u53F7\u4FDD\u6301\u540C\u4E00\u7F51\u6BB5\uFF0C\u8FDE\u63A5\u7684\u7EC8\u7AEF\u65E0\u7F1D\u8BBF\u95EE\u4E3B\u7F51\u7684\u6570\u636E\uFF0C\u4F46\u5207\u6362\u6709\u7EBF\u4E2D\u7EE7\u6A21\u5F0F\u540E\uFF0C\u90E8\u5206\u529F\u80FD\u5C06\u4E0D\u53EF\u7528\u3002"), _react.default.createElement(_reactNative.Text, {
                    style: styles.midText
                }, "\u4F8B\u5982\uFF1A"), _react.default.createElement(_reactNative.View, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.bottomTextContainer
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.bottomText
                }, "\xB7\u667A\u80FD\u9650\u901F"), _react.default.createElement(_reactNative.Text, {
                    style: styles.bottomText
                }, "\xB7\u8BBF\u5BA2Wi-Fi"), _react.default.createElement(_reactNative.Text, {
                    style: styles.bottomText
                }, "\xB7\u7F51\u7EDC\u7C7B\u6216\u52A0\u901F\u7C7B\u63D2\u4EF6"))), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.rkbuttonItem,
                    onPress: function onPress(_) {
                        return _this2._onButtonPressed();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.viewRkButton
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.buttonText
                }, "\u786E\u8BA4"))), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.waitingActivityShow,
                    message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E...",
                    timeout: 3000
                }));
            }
        }, {
            key: "_onButtonPressed",
            value: function _onButtonPressed() {
                this.setState({
                    waitingActivityShow: true
                });

                this._setLanAp();
            }
        }, {
            key: "_setLanAp",
            value: function _setLanAp() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.net_work_mode.set_lan_ap.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    var code = res.code;
                    var ip = res.ip;

                    _this3.setState({
                        waitingActivityShow: false
                    });

                    if (res.code == 0) {
                        if (!_CommonUtils.default.isTextEmpty(ip) && _CommonUtils.default.isValidIp(ip)) {
                            _this3.props.navigation.popToTop();
                        } else {
                            _CommonUtils.default.ShowToastBottom('切换至有线中继模式失败');
                        }
                    } else if (res.code == -1011) {
                        _CommonUtils.default.ShowToastBottom('设置生效过程中，可能需要等待1-2分钟才能获得正确状态信息');

                        _this3.props.navigation.popToTop();
                    } else {
                        _CommonUtils.default.ShowToastBottom('切换至有线中继模式失败');
                    }
                }).catch(function (e) {
                    _this3.setState({
                        waitingActivityShow: false
                    });

                    _CommonUtils.default.ShowToastBottom('切换至有线中继模式失败');
                });
            }
        }]);
        return NetModeWireRelay;
    }(_react.default.Component);

    exports.default = NetModeWireRelay;

    NetModeWireRelay.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "\u6709\u7EBF\u4E2D\u7EE7",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        topText: {
            paddingTop: 20,
            paddingLeft: 20,
            paddingRight: 20
        },
        midText: {
            paddingTop: 20,
            paddingLeft: 20,
            paddingRight: 20
        },
        separator: {
            marginTop: 10,
            marginLeft: 15,
            marginRight: 15,
            height: 1,
            backgroundColor: '#f1f1f1',
            width: _Devices.ScreenW - 30
        },
        bottomTextContainer: {
            marginTop: 10
        },
        bottomText: {
            paddingTop: 5,
            paddingLeft: 20,
            paddingRight: 20
        },
        rkbuttonItem: {
            position: "absolute",
            bottom: 20,
            paddingLeft: _Devices.ScreenW / 10,
            paddingRight: _Devices.ScreenW / 10
        },
        viewRkButton: {
            width: _Devices.ScreenW / 10 * 8,
            backgroundColor: '#4778FF',
            height: 44,
            borderRadius: 22,
            alignItems: "center",
            justifyContent: "center"
        },
        buttonText: {
            color: '#fff'
        }
    });
}, 10406, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10297, 10033, 10074, 10061, 10058, 10037, 10935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _miot = _$$_REQUIRE(_dependencyMap[11]);

    var _Devices = _$$_REQUIRE(_dependencyMap[12]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _device = _$$_REQUIRE(_dependencyMap[15]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[17]);

    var NetModePppoe = function (_React$Component) {
        (0, _inherits2.default)(NetModePppoe, _React$Component);

        function NetModePppoe(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetModePppoe);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModePppoe).call(this, props));
            _this.state = {
                waitingActivityShow: false,
                passwdInputSecurity: true,
                wanInfo: props.navigation.state.params.wanInfo,
                pppoeAccount: '',
                pppoePwd: '',
                pppoeAccountText: '',
                pppoePwdText: ''
            };
            return _this;
        }

        (0, _createClass2.default)(NetModePppoe, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var wanInfo = this.state.wanInfo;
                var pppoeInfo = wanInfo.info.details;

                if (!_CommonUtils.default.isNull(pppoeInfo)) {
                    var pppoeAccount = pppoeInfo.username;
                    var passwd = pppoeInfo.password;
                    this.setState({
                        pppoeAccount: pppoeAccount,
                        pppoePwd: passwd,
                        pppoeAccountText: pppoeAccount,
                        pppoePwdText: passwd
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.itemContainer
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, '宽带账号'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: '请输入宽带账号',
                    placeholderTextColor: "#ccc",
                    defaultValue: this.state.pppoeAccountText,
                    autoFocus: true,
                    underlineColorAndroid: 'transparent',
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            pppoeAccountText: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, '宽带密码'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: '请输入宽带密码',
                    placeholderTextColor: "#ccc",
                    defaultValue: this.state.pppoePwdText,
                    secureTextEntry: this.state.passwdInputSecurity,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            pppoePwdText: text
                        });
                    }
                }), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.itemImageContainer,
                    onPress: function onPress(_) {
                        return _this2._changePwdInputSecurity();
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.imageItem,
                    source: this.state.passwdInputSecurity ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19])
                }))), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                })), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.buttonItem,
                    onPress: function onPress(_) {
                        return _this2._onButtonPressed();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.buttonText
                }, '确定'))), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.waitingActivityShow,
                    message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E..."
                }));
            }
        }, {
            key: "_onButtonPressed",
            value: function _onButtonPressed() {
                if (!this._isSettingValid(true)) {
                    return;
                }

                if (!this._isSettingModified()) {
                    this.props.navigation.goBack();
                    return;
                }

                this.setState({
                    waitingActivityShow: true
                });

                this._setNewPppoeInfo();
            }
        }, {
            key: "_setNewPppoeInfo",
            value: function _setNewPppoeInfo() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        wanType: 'pppoe',
                        pppoeName: this._getEditAccout(),
                        pppoePwd: this.state.pppoePwdText
                    }
                };
                var api = _API.default.net_work_mode.set_wan.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    _this3.setState({
                        waitingActivityShow: false
                    });

                    if (res.code == 0) {
                        _CommonUtils.default.ShowToastBottom('设置成功');

                        _this3.props.navigation.state.params.callback(true);

                        _this3.props.navigation.goBack();
                    } else {
                        var msg = res.msg;

                        _CommonUtils.default.ShowToastBottom('设置失败' + _CommonUtils.default.isTextEmpty(msg) ? '' : msg);
                    }
                }).catch(function (e) {
                    _this3.setState({
                        changeLoading: false
                    });

                    _CommonUtils.default.ShowToastBottom('设置失败');
                });
            }
        }, {
            key: "_changePwdInputSecurity",
            value: function _changePwdInputSecurity() {
                var currentState = this.state.passwdInputSecurity;
                this.setState({
                    passwdInputSecurity: !currentState
                });
            }
        }, {
            key: "_isSettingValid",
            value: function _isSettingValid(showToast) {
                if (_CommonUtils.default.isTextEmpty(this._getEditAccout())) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastCenter('账号为空');
                    }

                    return false;
                }

                if (_CommonUtils.default.isTextEmpty(this.state.pppoePwdText)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastCenter('密码为空');
                    }

                    return false;
                }

                return true;
            }
        }, {
            key: "_isSettingModified",
            value: function _isSettingModified() {
                if (this._getCurrentWanType == _NetWorkModeConstant.NetModeType.Pppoe) {
                    if (this._isSettingValid(false)) {
                        var editedAccount = this._getEditAccout();

                        if (editedAccount == this.state.pppoeAccount && this.state.pppoePwdText == this.state.pppoePwd) {
                            return false;
                        } else {
                            return true;
                        }
                    } else {
                        return true;
                    }
                } else {
                    if (!_CommonUtils.default.isTextEmpty(this._getEditAccout()) || !_CommonUtils.default.isTextEmpty(this.state.pppoePwdText)) {
                        return true;
                    } else {
                        return false;
                    }
                }
            }
        }, {
            key: "_getEditAccout",
            value: function _getEditAccout() {
                var editAccount = this.state.pppoeAccountText.trim();
                return editAccount;
            }
        }, {
            key: "_getCurrentWanType",
            value: function _getCurrentWanType() {
                var mode;

                if (_CommonUtils.default.isNull(this.state.wanInfo)) {
                    return _NetWorkModeConstant.NetModeType.Unknown;
                } else {
                    if (_CommonUtils.default.isNull(this.state.wanInfo)) {
                        return _NetWorkModeConstant.NetModeType.Unknown;
                    }
                }

                var detail = this.state.wanInfo.info.details;

                if (detail.wanType == 'dhcp') {
                    mode = _NetWorkModeConstant.NetModeType.Dhcp;
                } else if (detail.wanType == 'pppoe') {
                    mode = _NetWorkModeConstant.NetModeType.Pppoe;
                } else if (detail.wanType == 'static') {
                    mode = _NetWorkModeConstant.NetModeType.Static;
                } else {
                    mode = _NetWorkModeConstant.NetModeType.Unknown;
                }

                return mode;
            }
        }]);
        return NetModePppoe;
    }(_react.default.Component);

    exports.default = NetModePppoe;

    NetModePppoe.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: '宽带上网',
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        itemContainer: {
            flexDirection: 'column',
            height: 102
        },
        item: {
            flexDirection: 'row',
            height: 50,
            justifyContent: 'flex-start',
            width: _Devices.ScreenW
        },
        itemText: {
            color: '#000',
            marginLeft: 20,
            marginTop: 15,
            justifyContent: "center",
            fontSize: 15
        },
        itemInput: {
            fontSize: 13,
            height: 50,
            width: _Devices.ScreenW - 45 - 20 - 20 - 100,
            marginStart: 10
        },
        itemImageContainer: {
            height: 34,
            width: 34,
            position: 'absolute',
            right: 15,
            marginTop: 8
        },
        imageItem: {
            height: 34,
            width: 34
        },
        separator: {
            marginLeft: 20,
            height: 1,
            backgroundColor: '#f1f1f1',
            width: _Devices.ScreenW - 20
        },
        buttonItem: {
            position: "absolute",
            bottom: 20,
            paddingLeft: _Devices.ScreenW / 10,
            paddingRight: _Devices.ScreenW / 10
        },
        button: {
            width: _Devices.ScreenW / 10 * 8,
            backgroundColor: '#4778FF',
            height: 44,
            borderRadius: 22,
            alignItems: "center",
            justifyContent: "center"
        },
        buttonText: {
            color: '#fff'
        }
    });
}, 10409, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10297, 10033, 10074, 10061, 10332, 10037, 10935, 10058, 10400, 10412, 10415]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/common",
        "width": 68,
        "height": 68,
        "scales": [1],
        "hash": "d7faf915a4388b186037f666aebaa2ca",
        "name": "common_icon_pwd_off",
        "type": "png"
    });
}, 10412, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/common",
        "width": 68,
        "height": 68,
        "scales": [1],
        "hash": "2bfda9ae31c75aa30368d0a209d80489",
        "name": "common_icon_pwd_on",
        "type": "png"
    });
}, 10415, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _ui = _$$_REQUIRE(_dependencyMap[10]);

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _miot = _$$_REQUIRE(_dependencyMap[13]);

    var _Devices = _$$_REQUIRE(_dependencyMap[14]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[18]);

    var _device = _$$_REQUIRE(_dependencyMap[19]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

    var NetModeDhcp = function (_React$Component) {
        (0, _inherits2.default)(NetModeDhcp, _React$Component);

        function NetModeDhcp(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetModeDhcp);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeDhcp).call(this, props));
            _this.state = {
                actionSheetVisiabe: false,
                currentDhcpType: _NetWorkModeConstant.MiRouterDhcpType.None,
                originDhcpType: _NetWorkModeConstant.MiRouterDhcpType.None,
                currentSelectIndexArr: [0],
                selectedIndex: 0,
                dns1: '',
                dns2: '',
                dns1Text: '',
                dns2Text: '',
                wanInfo: props.navigation.state.params.wanInfo,
                changeLoading: false
            };
            return _this;
        }

        (0, _createClass2.default)(NetModeDhcp, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                var showListItem = this.state.selectedIndex == 0 ? false : true;
                var isAutoMode = this.isAutoMode();
                var currentModeStr = this.getSelectedMode();
                var dns1 = this.state.dns1;
                var dns2 = this.state.dns2;
                var currentSelectIndexArr = this.state.currentSelectIndexArr;
                var selectedIndex = this.state.selectedIndex;
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_ListItem.ListItem, {
                    title: '配置方式',
                    value: currentModeStr,
                    showDot: false,
                    onPress: function onPress() {
                        _this2._showActionSheet();
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: !isAutoMode ? styles.itemContainer : styles.itemContainerHidden
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, 'DNS1'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: '必填',
                    placeholderTextColor: "#ccc",
                    defaultValue: dns1,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            dns1Text: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, 'DNS2'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: '选填',
                    placeholderTextColor: "#ccc",
                    defaultValue: dns2,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            dns2Text: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                })), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.buttonItem,
                    onPress: function onPress(_) {
                        return _this2._onButtonPressed();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.buttonText
                }, "\u786E\u5B9A"))), _react.default.createElement(_ChoiceDialog.default, {
                    visible: this.state.actionSheetVisiabe,
                    title: '配置方式',
                    options: [{
                        title: '自动(推荐)'
                    }, {
                        title: '手动'
                    }],
                    selectedIndexArray: currentSelectIndexArr,
                    onDismiss: function onDismiss(_) {
                        return _this2.onDismissActionSheet('1');
                    },
                    onSelect: function onSelect(result) {
                        return _this2._selectedMode(result);
                    }
                }), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.changeLoading,
                    message: "\u8BBE\u7F6E\u4E2D\uFF0C\u8BF7\u7A0D\u540E..."
                }));
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                var result = this.state.wanInfo;
                var detail = result.info.details;
                var manualDns = detail.dns;
                var isAuto = true;
                var dns1Str = '';
                var dns2Str = '';
                var selectedIndex = 0;

                if (_CommonUtils.default.isNull(manualDns)) {
                    isAuto = true;
                    selectedIndex = 0;
                } else {
                    if (manualDns.length > 0) {
                        isAuto = false;
                        dns1Str = manualDns[0];

                        if (manualDns.length > 1) {
                            dns2Str = manualDns[1];
                        }

                        selectedIndex = 1;
                    } else {
                        isAuto = true;
                        selectedIndex = 0;
                    }
                }

                this.setState({
                    originDhcpType: isAuto ? _NetWorkModeConstant.MiRouterDhcpType.Auto : _NetWorkModeConstant.MiRouterDhcpType.Manual,
                    currentDhcpType: isAuto ? _NetWorkModeConstant.MiRouterDhcpType.Auto : _NetWorkModeConstant.MiRouterDhcpType.Manual,
                    dns1: dns1Str,
                    dns2: dns2Str,
                    currentSelectIndexArr: selectedIndex == 0 ? [0] : [1],
                    selectedIndex: selectedIndex,
                    dns1Text: _CommonUtils.default.isTextEmpty(dns1Str) ? '' : dns1Str,
                    dns2Text: _CommonUtils.default.isTextEmpty(dns2Str) ? '' : dns2Str
                });
            }
        }, {
            key: "_showActionSheet",
            value: function _showActionSheet() {
                this.setState({
                    actionSheetVisiabe: true
                });
            }
        }, {
            key: "_onButtonPressed",
            value: function _onButtonPressed() {
                var _this3 = this;

                if (!this.isSettingValid(true)) {
                    return;
                }

                if (!this.isSettingModified()) {
                    this.props.navigation.goBack();
                    return;
                }

                this.setState({
                    changeLoading: true
                });

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        wanType: 'dhcp'
                    }
                };

                if (!this.isAutoMode()) {
                    paramsDic.params.dns1 = this.state.dns1Text;

                    if (!_CommonUtils.default.isTextEmpty(this.state.dns2Text)) {
                        paramsDic.params.dns2 = this.state.dns2Text;
                    }
                }

                var api = _API.default.net_work_mode.set_wan.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        _this3.setState({
                            changeLoading: false
                        });

                        _this3.props.navigation.state.params.callback(true);

                        _this3.props.navigation.goBack();
                    }
                }).catch(function (e) {
                    _this3.setState({
                        changeLoading: false
                    });

                    _CommonUtils.default.ShowToastBottom('设置失败');
                });
            }
        }, {
            key: "handleResponsObject",
            value: function handleResponsObject(result) {
                alert(JSON.stringify(result));

                if (result.code == 0) {
                    this.setState({
                        changeLoading: false
                    });
                    this.props.navigation.state.params.callback(true);
                    this.props.navigation.goBack();
                }
            }
        }, {
            key: "onDismissActionSheet",
            value: function onDismissActionSheet(param) {
                this.setState({
                    actionSheetVisiabe: false
                });
            }
        }, {
            key: "_selectedMode",
            value: function _selectedMode(result) {
                var mode;
                var selectedIndexArray;
                var index;

                if (result == 0) {
                    mode = _NetWorkModeConstant.MiRouterDhcpType.Auto;
                    selectedIndexArray = [0];
                    index = 0;
                } else {
                    mode = _NetWorkModeConstant.MiRouterDhcpType.Manual;
                    selectedIndexArray = [1];
                    index = 1;
                }

                this.setState({
                    currentDhcpType: mode,
                    currentSelectIndexArr: selectedIndexArray,
                    selectedIndex: index
                });
            }
        }, {
            key: "isSettingModified",
            value: function isSettingModified() {
                if (this._getCurrentWanType() == _NetWorkModeConstant.NetModeType.Dhcp) {
                    if (this.isSettingValid(false)) {
                        if (this.state.currentDhcpType != this.state.originDhcpType) {
                            return true;
                        } else {
                            if (this.state.currentDhcpType == _NetWorkModeConstant.MiRouterDhcpType.Manual) {
                                if (this.state.dns1 != this.state.dns1Text) {
                                    return true;
                                }

                                if (_CommonUtils.default.isTextEmpty(this.state.dns2)) {
                                    return !_CommonUtils.default.isTextEmpty(this.state.dns2Text);
                                } else {
                                    if (_CommonUtils.default.isTextEmpty(this.state.dns2Text)) {
                                        return true;
                                    } else {
                                        return this.state.dns2 != this.state.dns2Text;
                                    }
                                }
                            }
                        }
                    } else {
                        return true;
                    }
                } else {
                    if (this.state.originDhcpType != _NetWorkModeConstant.MiRouterDhcpType.None) {
                        return true;
                    }
                }

                return false;
            }
        }, {
            key: "isSettingValid",
            value: function isSettingValid(showToast) {
                if (this.state.currentDhcpType == _NetWorkModeConstant.MiRouterDhcpType.None) {
                    if (showToast) {
                        _reactNativeRootToast.default.show("配置方式未设置");
                    }

                    return false;
                }

                if (!this.isAutoMode()) {
                    if (_CommonUtils.default.isTextEmpty(this.state.dns1Text)) {
                        if (showToast) {
                            _reactNativeRootToast.default.show("DNS1为空");
                        }

                        return false;
                    }

                    if (!_CommonUtils.default.isValidIp(this.state.dns1Text)) {
                        if (showToast) {
                            _reactNativeRootToast.default.show("DNS1不合法");
                        }

                        return false;
                    }

                    if (!_CommonUtils.default.isTextEmpty(this.state.dns2Text)) {
                        if (!_CommonUtils.default.isValidIp(this.state.dns2Text)) {
                            if (showToast) {
                                _reactNativeRootToast.default.show("DNS2不合法");
                            }

                            return false;
                        }
                    }
                }

                return true;
            }
        }, {
            key: "isAutoMode",
            value: function isAutoMode() {
                return this.state.currentDhcpType == _NetWorkModeConstant.MiRouterDhcpType.Auto;
            }
        }, {
            key: "getOriginDhcpMode",
            value: function getOriginDhcpMode() { }
        }, {
            key: "getSelectedMode",
            value: function getSelectedMode() {
                if (this.state.currentDhcpType == _NetWorkModeConstant.MiRouterDhcpType.None) {
                    return '请选择配置方式';
                }

                if (this.isAutoMode()) {
                    return '自动(推荐)';
                } else {
                    return '手动';
                }
            }
        }, {
            key: "_getCurrentWanType",
            value: function _getCurrentWanType() {
                var mode;

                if (_CommonUtils.default.isNull(this.state.wanInfo)) {
                    return _NetWorkModeConstant.NetModeType.Unknown;
                } else {
                    if (_CommonUtils.default.isNull(this.state.wanInfo)) {
                        return _NetWorkModeConstant.NetModeType.Unknown;
                    }
                }

                var detail = this.state.wanInfo.info.details;

                if (detail.wanType == 'dhcp') {
                    mode = _NetWorkModeConstant.NetModeType.Dhcp;
                } else if (detail.wanType == 'pppoe') {
                    mode = _NetWorkModeConstant.NetModeType.Pppoe;
                } else if (detail.wanType == 'static') {
                    mode = _NetWorkModeConstant.NetModeType.Static;
                } else {
                    mode = _NetWorkModeConstant.NetModeType.Unknown;
                }

                return mode;
            }
        }]);
        return NetModeDhcp;
    }(_react.default.Component);

    exports.default = NetModeDhcp;

    NetModeDhcp.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "\u52A8\u6001IP\u4E0A\u7F51",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        itemContainer: {
            flexDirection: 'column',
            height: 102
        },
        itemContainerHidden: {
            flexDirection: 'column',
            height: 102,
            opacity: 0
        },
        item: {
            flexDirection: 'row',
            height: 50
        },
        itemText: {
            color: '#000',
            marginLeft: 20,
            marginTop: 15,
            justifyContent: "center",
            fontSize: 15
        },
        itemInput: {
            marginLeft: 20,
            marginRight: 45,
            color: '#333333',
            fontSize: 13,
            width: _Devices.ScreenW - 45 - 20 - 20,
            paddingLeft: 5,
            height: 50
        },
        separator: {
            marginLeft: 20,
            height: 1,
            backgroundColor: '#f1f1f1',
            width: _Devices.ScreenW - 20
        },
        buttonItem: {
            position: "absolute",
            bottom: 20,
            paddingLeft: _Devices.ScreenW / 10,
            paddingRight: _Devices.ScreenW / 10
        },
        button: {
            width: _Devices.ScreenW / 10 * 8,
            backgroundColor: '#4778FF',
            height: 44,
            borderRadius: 22,
            alignItems: "center",
            justifyContent: "center"
        },
        buttonText: {
            color: '#fff'
        }
    });
}, 10418, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10734, 10230, 10297, 10033, 10074, 10061, 10332, 10037, 10010, 10400, 10935, 10058]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _miot = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[16]);

    var _device = _$$_REQUIRE(_dependencyMap[17]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

    var NetModeStaticIp = function (_React$Component) {
        (0, _inherits2.default)(NetModeStaticIp, _React$Component);

        function NetModeStaticIp(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetModeStaticIp);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeStaticIp).call(this, props));
            _this.state = {
                wanInfo: props.navigation.state.params.wanInfo,
                ip: '',
                ipMask: '',
                gateway: '',
                dns1: '',
                dns2: '',
                ipText: '',
                ipMaskText: '',
                gatewayText: '',
                dns1Text: '',
                dns2Text: '',
                waitingActivityShow: false
            };
            return _this;
        }

        (0, _createClass2.default)(NetModeStaticIp, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var wanInfo = this.state.wanInfo;
                var staticIpInfo = wanInfo.info.details;

                if (!_CommonUtils.default.isNull(staticIpInfo)) {
                    var manualDns = staticIpInfo.dns;
                    var ip = staticIpInfo.ipaddr;
                    var ipMask = staticIpInfo.netmask;
                    var gateway = staticIpInfo.gateway;
                    var dns1 = '';
                    var dns2 = '';

                    if (!_CommonUtils.default.isNull(manualDns)) {
                        if (_CommonUtils.default.isObjectKindofArray(manualDns)) {
                            dns1 = manualDns[0];

                            if (manualDns.length > 1) {
                                dns2 = manualDns[1];
                            }
                        }
                    }

                    this.setState({
                        ip: ip,
                        ipMask: ipMask,
                        gateway: gateway,
                        dns1: dns1,
                        dns2: dns2,
                        ipText: ip,
                        ipMaskText: ipMask,
                        gatewayText: gateway,
                        dns1Text: dns1,
                        dns2Text: dns2
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.itemContainer
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, 'IP地址'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: "\u5FC5\u586B",
                    placeholderTextColor: "#ccc",
                    defaultValue: this.state.ip,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            ipText: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, '子网掩码'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: "\u5FC5\u586B",
                    placeholderTextColor: "#ccc",
                    defaultValue: this.state.ipMask,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            ipMaskText: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, '网关'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: "\u5FC5\u586B",
                    placeholderTextColor: "#ccc",
                    defaultValue: this.state.gateway,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            gatewayText: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, 'DNS1'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: "\u5FC5\u586B",
                    placeholderTextColor: "#ccc",
                    defaultValue: this.state.dns1,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            dns1Text: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, 'DNS2'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput,
                    placeholder: "\u9009\u586B",
                    placeholderTextColor: "#ccc",
                    defaultValue: this.state.dns2,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            dns2Text: text
                        });
                    }
                })), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                })), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.buttonItem,
                    onPress: function onPress(_) {
                        return _this2._onButtonPressed();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.buttonText
                }, '确定'))), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.waitingActivityShow,
                    message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E..."
                }));
            }
        }, {
            key: "_onButtonPressed",
            value: function _onButtonPressed() {
                if (!this._isSetiingValid(true)) {
                    return;
                }

                if (!this._isSetiingModified()) {
                    this.props.navigation.goBack();
                    return;
                }

                this.setState({
                    waitingActivityShow: true
                });

                this._setNewStaticInfo();
            }
        }, {
            key: "_setNewStaticInfo",
            value: function _setNewStaticInfo() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        wanType: 'static',
                        staticIp: this.state.ipText.trim(),
                        staticMask: this.state.ipMaskText.trim(),
                        staticGateway: this.state.gatewayText.trim(),
                        dns1: this.state.dns1Text.trim()
                    }
                };

                if (!_CommonUtils.default.isTextEmpty(this.state.dns2Text.trim())) {
                    paramsDic.params.dns2 = this.state.dns2Text.trim();
                }

                var api = _API.default.net_work_mode.set_wan.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    _this3.setState({
                        waitingActivityShow: false
                    });

                    if (res.code == 0) {
                        _CommonUtils.default.ShowToastBottom('设置成功');

                        _this3.props.navigation.state.params.callback(true);

                        _this3.props.navigation.goBack();
                    } else {
                        _CommonUtils.default.ShowToastBottom('设置失败');
                    }
                }).catch(function (e) {
                    var msg = res.msg;

                    _this3.setState({
                        waitingActivityShow: false
                    });

                    _CommonUtils.default.ShowToastBottom('设置失败' + _CommonUtils.default.isTextEmpty(msg) ? '' : msg);
                });
            }
        }, {
            key: "_isSetiingValid",
            value: function _isSetiingValid(showToast) {
                var ipText = this.state.ipText;

                if (_CommonUtils.default.isTextEmpty(ipText)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('IP地址为空');
                    }

                    return false;
                }

                if (!_CommonUtils.default.isValidIp(ipText)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('IP地址不合法');
                    }

                    return false;
                }

                var ipMaskText = this.state.ipMaskText;

                if (_CommonUtils.default.isTextEmpty(ipMaskText)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('子网掩码为空');
                    }

                    return false;
                }

                if (!_CommonUtils.default.isValidIp(ipMaskText)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('子网掩码不合法');
                    }

                    return false;
                }

                var gatewayText = this.state.gatewayText;

                if (_CommonUtils.default.isTextEmpty(gatewayText)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('网关为空');
                    }

                    return false;
                }

                if (!_CommonUtils.default.isValidIp(gatewayText)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('网关不合法');
                    }

                    return false;
                }

                var dns1Text = this.state.dns1Text;

                if (_CommonUtils.default.isTextEmpty(dns1Text)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('DNS1为空');
                    }

                    return false;
                }

                if (!_CommonUtils.default.isValidIp(dns1Text)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('DNS1不合法');
                    }

                    return false;
                }

                var dns2Text = this.state.dns2Text;

                if (!_CommonUtils.default.isTextEmpty(dns2Text)) {
                    if (!_CommonUtils.default.isValidIp(dns2Text)) {
                        if (showToast) {
                            _CommonUtils.default.ShowToastBottom('DNS2不合法');
                        }

                        return false;
                    }
                }

                return true;
            }
        }, {
            key: "_isSetiingModified",
            value: function _isSetiingModified() {
                var ipText = this.state.ipText.trim();
                var ipMaskText = this.state.ipMaskText.trim();
                var gatewayText = this.state.gatewayText.trim();
                var dns1Text = this.state.dns1Text.trim();
                var dns2Text = this.state.dns2Text.trim();

                if (this._getCurrentWanType() == _NetWorkModeConstant.NetModeType.Static) {
                    if (this._isSetiingValid(false) && _CommonUtils.default.isNull(this.state.wanInfo) && this._getCurrentWanType != _NetWorkModeConstant.NetModeType.Static) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(ipText) && ipText != this.state.ip) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(ipMaskText) && ipMaskText != this.state.ipMask) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(gatewayText) && gatewayText != this.state.gateway) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(dns1Text) && dns1Text != this.state.dns1) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(dns2Text) && dns2Text != this.state.dns2) {
                        return true;
                    }

                    return false;
                } else {
                    if (!_CommonUtils.default.isTextEmpty(ipText)) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(ipMaskText)) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(gatewayText)) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(dns1Text)) {
                        return true;
                    }

                    if (!_CommonUtils.default.isTextEmpty(dns2Text)) {
                        return true;
                    }

                    return false;
                }
            }
        }, {
            key: "_getCurrentWanType",
            value: function _getCurrentWanType() {
                var mode;

                if (_CommonUtils.default.isNull(this.state.wanInfo)) {
                    return _NetWorkModeConstant.NetModeType.Unknown;
                } else {
                    if (_CommonUtils.default.isNull(this.state.wanInfo)) {
                        return _NetWorkModeConstant.NetModeType.Unknown;
                    }
                }

                var detail = this.state.wanInfo.info.details;

                if (detail.wanType == 'dhcp') {
                    mode = _NetWorkModeConstant.NetModeType.Dhcp;
                } else if (detail.wanType == 'pppoe') {
                    mode = _NetWorkModeConstant.NetModeType.Pppoe;
                } else if (detail.wanType == 'static') {
                    mode = _NetWorkModeConstant.NetModeType.Static;
                } else {
                    mode = _NetWorkModeConstant.NetModeType.Unknown;
                }

                return mode;
            }
        }]);
        return NetModeStaticIp;
    }(_react.default.Component);

    exports.default = NetModeStaticIp;

    NetModeStaticIp.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "\u9759\u6001IP\u4E0A\u7F51",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        itemContainer: {
            flexDirection: 'column',
            height: 102
        },
        item: {
            flexDirection: 'row',
            height: 50
        },
        itemText: {
            color: '#000',
            marginLeft: 20,
            marginTop: 15,
            justifyContent: "center",
            fontSize: 15
        },
        itemInput: {
            fontSize: 13,
            width: _Devices.ScreenW - 45 - 20 - 20 - 100,
            paddingLeft: 5
        },
        separator: {
            marginLeft: 20,
            height: 1,
            backgroundColor: '#f1f1f1',
            width: _Devices.ScreenW - 20
        },
        buttonItem: {
            position: "absolute",
            bottom: 20,
            paddingLeft: _Devices.ScreenW / 10,
            paddingRight: _Devices.ScreenW / 10
        },
        button: {
            width: _Devices.ScreenW / 10 * 8,
            backgroundColor: '#4778FF',
            height: 44,
            borderRadius: 22,
            alignItems: "center",
            justifyContent: "center"
        },
        buttonText: {
            color: '#fff'
        }
    });
}, 10421, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10734, 10297, 10033, 10074, 10061, 10332, 10037, 10400, 10935, 10058]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _miot = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _device = _$$_REQUIRE(_dependencyMap[17]);

    var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

    var BAND_5G_POSTFIX = '(5G)';

    var NetModeWirelessRelay = function (_React$Component) {
        (0, _inherits2.default)(NetModeWirelessRelay, _React$Component);

        function NetModeWirelessRelay(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetModeWirelessRelay);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeWirelessRelay).call(this, props));
            _this.state = {
                loadingWifiList: false,
                changingSetting: false,
                currentParentSsid: '',
                passwdInputSecurity: true,
                isShowingWiFiList: false,
                selectedWifi: '',
                selectedWifiInfo: {},
                wifiList: [],
                selectedWifiPwd: '',
                waitingActivityShow: false
            };
            return _this;
        }

        (0, _createClass2.default)(NetModeWirelessRelay, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.setState({
                    loadingWifiList: true
                });

                this._requestWifiList();
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var currentPwdInoutState = this.state.passwdInputSecurity;
                return _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.itemContainer
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.item,
                    onPress: function onPress(_) {
                        return _this2._showWifiList();
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, '信号源'), _react.default.createElement(_reactNative.Text, {
                    style: _CommonUtils.default.isTextEmpty(this.state.selectedWifi) ? styles.itemText2 : styles.itemText3
                }, _CommonUtils.default.isTextEmpty(this.state.selectedWifi) ? '请选择信号源' : this.state.selectedWifi), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.itemImageContainer,
                    onPress: function onPress(_) {
                        return _this2._showWifiList();
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.imageItem,
                    source: _$$_REQUIRE(_dependencyMap[19])
                }))), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                }), _react.default.createElement(_reactNative.View, {
                    style: styles.item
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, '信号源密码'), _react.default.createElement(_reactNative.TextInput, {
                    style: styles.itemInput1,
                    placeholder: '请输入信号源密码',
                    placeholderTextColor: '#ccc',
                    defaultValue: this.state.selectedWifiPwd,
                    secureTextEntry: this.state.passwdInputSecurity,
                    onChangeText: function onChangeText(text) {
                        return _this2.setState({
                            selectedWifiPwd: text
                        });
                    }
                }), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.itemImageContainer1,
                    onPress: function onPress(_) {
                        return _this2._changePwdInputSecurity();
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.imageItem1,
                    source: this.state.passwdInputSecurity ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21])
                }))), _react.default.createElement(_Separator.default, {
                    style: styles.separator
                })), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.buttonItem,
                    onPress: function onPress(_) {
                        return _this2._onButtonPressed();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.buttonText
                }, '保存设置'))), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.loadingWifiList,
                    message: "\u6B63\u5728\u626B\u63CF\u9644\u8FD1\u7684Wi-Fi"
                }), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.changingSetting,
                    message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E"
                }), _react.default.createElement(_Dialog.LoadingDialog, {
                    visible: this.state.waitingActivityShow,
                    message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E..."
                }));
            }
        }, {
            key: "_requestWifiList",
            value: function _requestWifiList() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.net_work_mode.router_scan_wifi_list.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    _this3.setState({
                        loadingWifiList: false
                    });

                    if (res.code == 0) {
                        _this3.setState({
                            wifiList: res.list
                        });
                    } else {
                        _CommonUtils.default.ShowToastBottom('获取WiFi列表失败');
                    }
                }).catch(function (e) {
                    _this3.setState({
                        loadingWifiList: false
                    });

                    _CommonUtils.default.ShowToastBottom('获取WiFi列表失败');
                });
            }
        }, {
            key: "_onButtonPressed",
            value: function _onButtonPressed() {
                if (!this._isSettingValid(true)) {
                    return;
                }

                if (!this._isSettingModified()) {
                    this.props.navigation.goBack();
                    return;
                }

                this.setState({
                    waitingActivityShow: true
                });

                this._setWifiAp();
            }
        }, {
            key: "_setWifiAp",
            value: function _setWifiAp() {
                var _this4 = this;

                var channel = '';

                if (!_CommonUtils.default.isNull(this.state.selectedWifiInfo.channel)) {
                    channel = String(this.state.selectedWifiInfo.channel);
                }

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        ssid: this.state.selectedWifi.trim(),
                        password: this.state.selectedWifiPwd,
                        encryption: _CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.encryption) ? '' : this.state.selectedWifiInfo.encryption,
                        enctype: _CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.enctype) ? '' : this.state.selectedWifiInfo.enctype,
                        channel: _CommonUtils.default.isTextEmpty(channel) ? '' : channel,
                        bandwidth: _CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.bandwidth) ? '' : this.state.selectedWifiInfo.bandwidth
                    }
                };

                if (!_CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.band)) {
                    paramsDic.params.band = this.state.selectedWifiInfo.band;
                }

                var api = _API.default.net_work_mode.set_wifi_ap.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    _this4.setState({
                        waitingActivityShow: false
                    });

                    var code = res.code;
                    var ip = res.ip;

                    if (res.code == 0) {
                        if (!_CommonUtils.default.isTextEmpty(ip) && _CommonUtils.default.isValidIp(ip)) {
                            _this4.props.navigation.popToTop();
                        } else {
                            _CommonUtils.default.ShowToastBottom('切换至无线中继模式失败');
                        }
                    } else if (res.code == -1011) {
                        _CommonUtils.default.ShowToastBottom('设置生效过程中，可能需要等待1-2分钟才能获得正确状态信息');

                        _this4.props.navigation.popToTop();
                    } else {
                        _CommonUtils.default.ShowToastBottom('切换至无线中继模式失败');
                    }
                }).catch(function (e) {
                    _this4.setState({
                        waitingActivityShow: false
                    });

                    _CommonUtils.default.ShowToastBottom('切换至无线中继模式失败');
                });
            }
        }, {
            key: "_showWifiList",
            value: function _showWifiList() {
                var _this5 = this;

                this.props.navigation.navigate('NetworkModeWirelessSelectWifi', {
                    title: '选择路由',
                    wifiList: this.state.wifiList,
                    callback: function callback(item) {
                        _this5.setState({
                            selectedWifi: item.ssid,
                            selectedWifiInfo: item
                        });
                    }
                });
            }
        }, {
            key: "_changePwdInputSecurity",
            value: function _changePwdInputSecurity() {
                var currentState = this.state.passwdInputSecurity;
                this.setState({
                    passwdInputSecurity: !currentState
                });
            }
        }, {
            key: "_isSettingValid",
            value: function _isSettingValid(showToast) {
                if (_CommonUtils.default.isTextEmpty(this.state.selectedWifi.trim())) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('信号源为空');
                    }

                    return false;
                }

                if (_WifiSettingHelper.default.containsEmoji(this.state.selectedWifi)) {
                    if (showToast) {
                        _CommonUtils.default.ShowToastBottom('信号源包含非法字符');
                    }

                    return false;
                }

                return true;
            }
        }, {
            key: "_isSettingModified",
            value: function _isSettingModified() {
                if (!_CommonUtils.default.isTextEmpty(this.state.selectedWifi.trim())) {
                    return true;
                }

                if (!_CommonUtils.default.isTextEmpty(this.state.selectedWifiPwd)) {
                    return true;
                }

                return false;
            }
        }, {
            key: "_getAvailableWifiList",
            value: function _getAvailableWifiList() {
                var _this6 = this;

                if (this.state.wifiList.length > 0) {
                    var wifiItems = [];
                    this.state.wifiList.map(function (item) {
                        var ssid = item.ssid;

                        if (!_CommonUtils.default.isTextEmpty(ssid)) {
                            var bandType = item.band;

                            if (!_CommonUtils.default.isTextEmpty(bandType)) {
                                if (bandType.toLowerCase() == '5g') {
                                    ssid = ssid + '(5G)';
                                }
                            }

                            wifiItems.push({
                                title: ssid,
                                onPress: function onPress(_) {
                                    return _this6.selectedWifi(ssid, item);
                                }
                            });
                        }
                    });
                    return wifiItems;
                } else {
                    return [];
                }
            }
        }]);
        return NetModeWirelessRelay;
    }(_react.default.Component);

    exports.default = NetModeWirelessRelay;

    NetModeWirelessRelay.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "\u65E0\u7EBF\u4E2D\u7EE7",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff'
        },
        itemContainer: {
            flexDirection: 'column',
            height: 102
        },
        item: {
            flexDirection: 'row',
            height: 50
        },
        itemText: {
            color: '#000',
            marginLeft: 20,
            marginTop: 15,
            justifyContent: "center",
            fontSize: 15
        },
        itemText2: {
            marginLeft: 40,
            marginRight: 45,
            marginTop: 15,
            marginBottom: 15,
            width: _Devices.ScreenW - 45 - 20 - 20 - 100,
            paddingLeft: 5,
            color: '#ccc'
        },
        itemText3: {
            marginLeft: 40,
            marginRight: 45,
            marginTop: 15,
            marginBottom: 15,
            width: _Devices.ScreenW - 45 - 20 - 20 - 100,
            paddingLeft: 5,
            color: 'black'
        },
        itemInput1: {
            marginLeft: 20,
            marginRight: 45,
            color: '#333333',
            fontSize: 13,
            width: _Devices.ScreenW - 45 - 20 - 20,
            paddingLeft: 5,
            height: 50
        },
        itemImageContainer: {
            height: 18,
            width: 9,
            position: 'absolute',
            right: 20,
            marginTop: 16
        },
        imageItem: {
            height: 18,
            width: 9
        },
        itemImageContainer1: {
            height: 34,
            width: 34,
            position: 'absolute',
            right: 8,
            marginTop: 8
        },
        imageItem1: {
            height: 34,
            width: 34
        },
        separator: {
            marginLeft: 20,
            height: 1,
            backgroundColor: '#f1f1f1',
            width: _Devices.ScreenW - 20
        },
        buttonItem: {
            position: "absolute",
            bottom: 20,
            paddingLeft: _Devices.ScreenW / 10,
            paddingRight: _Devices.ScreenW / 10
        },
        button: {
            width: _Devices.ScreenW / 10 * 8,
            backgroundColor: '#4778FF',
            height: 44,
            borderRadius: 22,
            alignItems: "center",
            justifyContent: "center"
        },
        buttonText: {
            color: '#fff'
        },
        wifiList: {
            height: _Devices.ScreenH - 200
        }
    });
}, 10424, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10734, 10297, 10033, 10074, 10061, 10332, 10037, 10058, 10935, 10070, 10229, 10412, 10415]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _Devices = _$$_REQUIRE(_dependencyMap[12]);

    var _miot = _$$_REQUIRE(_dependencyMap[13]);

    var _it = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _ui = _$$_REQUIRE(_dependencyMap[15]);

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _device = _$$_REQUIRE(_dependencyMap[18]);

    var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[19]);

    var _toolbox_icon_setting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

    var _toolbox_icon_wifisetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

    var _toolbox_icon_upgrade = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

    var _toolbox_icon_safe = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

    var _toolbox_child_protection_icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

    var _toolbox_icon_guess_wifi_ren = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

    var _toolbox_details_icon_feedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

    var _toolbox_icon_security = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

    var _toolbox_icon_wifioptimize = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

    var _toolbox_icon_speedTest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

    var _toolbox_details_icon_timer_wifi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

    var _toolbox_icon_indicator_light = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

    var _toolbox_details_icon_fkwifi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

    var _toolbox_details_icon_qos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

    var _toolbox_icon_report = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

    var _toolbox_details_icon_task = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));

    var _toolbox_details_icon_photobac = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[36]));

    var _toolbox_details_icon_timer_reboot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[37]));

    var _toolbox_icon_more = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[38]));

    var _toolbox_icon_reboot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[39]));

    var _toolbox_icon_recovery = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[40]));

    var itemImgWidth = _Devices.ScreenW / 3 * 0.4;
    var itemWidth = _Devices.ScreenW / 3;
    var itemImgMarginLeft = itemImgWidth * 0.75;

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            flex: 1
        },
        listItem: {
            backgroundColor: '#fff',
            height: itemWidth,
            width: itemWidth,
            borderTopColor: '#f1f1f1',
            borderTopWidth: 0.5,
            borderRightColor: '#f1f1f1',
            borderRightWidth: 0.5,
            borderBottomColor: '#f1f1f1',
            borderBottomWidth: 0.5
        },
        text: {
            maxWidth: itemWidth,
            maxHeight: 15,
            color: 'black',
            fontSize: 12,
            marginTop: 10,
            textAlign: 'center'
        },
        imageIcon: {
            width: itemImgWidth,
            height: itemImgWidth,
            resizeMode: 'contain',
            marginTop: itemImgWidth * 0.5,
            marginLeft: itemImgMarginLeft
        }
    });

    var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
    var dialogTip = _RouterLocalizedStringUtil.localStrings.resstartRouterAlertContent;
    var recoverDialogTip = _RouterLocalizedStringUtil.localStrings.recoverRouterAlertContent;

    var ToolBox = function (_React$Component) {
        (0, _inherits2.default)(ToolBox, _React$Component);

        function ToolBox(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ToolBox);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

            _this._onPressItem = function (item) {
                if (item.value.title === _this.state.dataSource[0].value.title) {
                    _this.props.navigation.navigate('WiFiSetting', {
                        title: _RouterLocalizedStringUtil.localStrings.wifiSettingTitle
                    });
                } else if (item.value.title === _this.state.dataSource[1].value.title) {
                    _this.setState({
                        rebootAlertVisible: true
                    });
                } else if (item.value.title === _this.state.dataSource[2].value.title) {
                    _this.setState({
                        recoverRouterAlertVisible: true
                    });
                }
            };

            _this.state = {
                dataSource: [{
                    title: _RouterLocalizedStringUtil.localStrings.wifiSettingTitle,
                    imgUrl: _toolbox_icon_wifisetting.default
                }, {
                    title: _RouterLocalizedStringUtil.localStrings.restartRouterTitle,
                    imgUrl: _toolbox_icon_reboot.default
                }, {
                    title: _RouterLocalizedStringUtil.localStrings.recoverRouterTitle,
                    imgUrl: _toolbox_icon_recovery.default
                }],
                rebootAlertVisible: false,
                loading: false,
                hasBeginStartRouter: false,
                hasEndStartRouter: false,
                recoverRouterLoading: false,
                recoverRouterAlertVisible: false,
                recoverRouterSuccess: false
            };
            return _this;
        }

        (0, _createClass2.default)(ToolBox, [{
            key: "componentWillMount",
            value: function componentWillMount() {
                var data = [];
                this.state.dataSource.map(function (item, i) {
                    var newItem = {
                        key: i,
                        value: item
                    };
                    data.push(newItem);
                });
                this.setState({
                    dataSource: data
                });
            }
        }, {
            key: "_gotoRebootRouter",
            value: function _gotoRebootRouter() {
                var _this2 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                this.setState({
                    hasBeginStartRouter: false,
                    hasEndStartRouter: false
                });
                var api = _API.default.reboot_router.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    var code = res.code;

                    if (code == 0) {
                        _this2.timer = setInterval(function () {
                            _this2._pingrouter();
                        }, 3000);
                    }
                }).catch(function (e) {
                    _this2.setState({
                        loading: false
                    });
                });
            }
        }, {
            key: "_pingrouter",
            value: function _pingrouter() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.router.init_info;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        if (!_this3.state.hasEndStartRouter && _this3.state.hasBeginStartRouter) {
                            _this3.setState({
                                hasEndStartRouter: true,
                                loading: false
                            });

                            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.restartRouterSuccess);

                            _this3.props.navigation.popToTop();
                        }
                    } else {
                        if (!_this3.state.hasBeginStartRouter) {
                            _this3.setState({
                                hasBeginStartRouter: true
                            });
                        }
                    }
                }).catch(function (e) {
                    if (!_this3.state.hasBeginStartRouter) {
                        _this3.setState({
                            hasBeginStartRouter: true
                        });
                    }
                });
            }
        }, {
            key: "_gotoRecoverRouter",
            value: function _gotoRecoverRouter() {
                var _this4 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        format: '0'
                    }
                };
                var api = _API.default.recover_router.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        _this4.setState({
                            recoverRouterSuccess: true
                        });

                        _this4._unbindRouter();
                    }
                }).catch(function (e) {
                    _this4.setState({
                        recoverRouterLoading: false
                    });

                    if (!_this4.state.recoverRouterSuccess) {
                        _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.recoverRouterFail);
                    }
                });
            }
        }, {
            key: "_unbindRouter",
            value: function _unbindRouter() {
                var _this5 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceID: deviceId
                    }
                };
                var api = _API.default.router_unbind.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        _this5.setState({
                            recoverRouterLoading: false
                        });

                        _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.recoverRouterSuccess);

                        _miot.Package.exit();
                    }
                }).catch(function (e) {
                    _this5.setState({
                        recoverRouterLoading: false
                    });

                    _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.operationFailed);
                });
            }
        }, {
            key: "_renderItem",
            value: function _renderItem(item) {
                var _this6 = this;

                return _react.default.createElement(_reactNative.TouchableOpacity, {
                    onPress: function onPress() {
                        return _this6._onPressItem(item);
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.listItem
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.imageIcon,
                    source: item.value.imgUrl
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.text
                }, item.value.title)));
            }
        }, {
            key: "render",
            value: function render() {
                var _this7 = this;

                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.FlatList, {
                    data: this.state.dataSource,
                    renderItem: function renderItem(_ref) {
                        var item = _ref.item;
                        return _this7._renderItem(item);
                    },
                    numColumns: 3,
                    horizontal: false
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTip,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        _this7.setState({
                            loading: true
                        });

                        _this7._gotoRebootRouter();
                    },
                    onDismiss: function onDismiss() {
                        _this7.setState({
                            rebootAlertVisible: false
                        });
                    },
                    visible: this.state.rebootAlertVisible
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: recoverDialogTip,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        _this7.setState({
                            recoverRouterLoading: true
                        });

                        _this7._gotoRecoverRouter();
                    },
                    onDismiss: function onDismiss() {
                        _this7.setState({
                            recoverRouterAlertVisible: false
                        });
                    },
                    visible: this.state.recoverRouterAlertVisible
                }), _react.default.createElement(_ui.LoadingDialog, {
                    visible: this.state.loading,
                    message: _RouterLocalizedStringUtil.localStrings.restartRouterLoading
                }), _react.default.createElement(_ui.LoadingDialog, {
                    visible: this.state.recoverRouterLoading,
                    message: _RouterLocalizedStringUtil.localStrings.recoverRouterLoading
                }));
            }
        }]);
        return ToolBox;
    }(_react.default.Component);

    exports.default = ToolBox;

    ToolBox.navigationOptions = function (_ref2) {
        var navigation = _ref2.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: _RouterLocalizedStringUtil.localStrings.homePageToolTab,
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };
}, 10427, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10332, 10297, 10033, 10061, 10074, 10107, 10230, 10037, 10058, 10935, 10076, 10430, 10433, 10436, 10439, 10442, 10445, 10448, 10451, 10454, 10457, 10460, 10463, 10466, 10469, 10472, 10475, 10478, 10481, 10484, 10487, 10490]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "fdcb5d037c029aeb1ccec0ded61eb990",
        "name": "toolbox_icon_setting",
        "type": "png"
    });
}, 10430, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "68b946d51b1404c2e6b310c22c1edebd",
        "name": "toolbox_icon_wifisetting",
        "type": "png"
    });
}, 10433, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "d3ed3ec8ad72f44d508a9915133d0e7c",
        "name": "toolbox_icon_upgrade",
        "type": "png"
    });
}, 10436, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 89,
        "scales": [1],
        "hash": "e64eb08bc03a78a089d7fae20cd5160c",
        "name": "toolbox_icon_safe",
        "type": "png"
    });
}, 10439, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "9776fde03310d85fff4beeaac950b7c6",
        "name": "toolbox_child_protection_icon",
        "type": "png"
    });
}, 10442, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "f781b3cc744724521bf9b0c26ff7ba57",
        "name": "toolbox_icon_guess_wifi_ren",
        "type": "png"
    });
}, 10445, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "cb46fcf142997d1275c38e889fba4b97",
        "name": "toolbox_details_icon_feedback",
        "type": "png"
    });
}, 10448, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 89,
        "scales": [1],
        "hash": "16286696b8efb195633f68075decd993",
        "name": "toolbox_icon_security",
        "type": "png"
    });
}, 10451, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "48fe78be834b38af4c7df3ffac664a23",
        "name": "toolbox_icon_wifioptimize",
        "type": "png"
    });
}, 10454, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "33c6679c780aedb50c5fbb5e541da29f",
        "name": "toolbox_icon_speedTest",
        "type": "png"
    });
}, 10457, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "832575ec51457657b72cda59fedbf287",
        "name": "toolbox_details_icon_timer_wifi",
        "type": "png"
    });
}, 10460, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 106,
        "height": 88,
        "scales": [1],
        "hash": "eda0044d462a8957b483fc17260bb10e",
        "name": "toolbox_icon_indicator_light",
        "type": "png"
    });
}, 10463, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "70fb330b7ec716e87d1bbff2af140af8",
        "name": "toolbox_details_icon_fkwifi",
        "type": "png"
    });
}, 10466, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "1f19add478ed375275735697823a2b3c",
        "name": "toolbox_details_icon_qos",
        "type": "png"
    });
}, 10469, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "52f15a240362fcd5d63a492d954f13dd",
        "name": "toolbox_icon_report",
        "type": "png"
    });
}, 10472, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "86fa9fd05a372eab70ba3496e9fcf8d6",
        "name": "toolbox_details_icon_task",
        "type": "png"
    });
}, 10475, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "6236bdafe1efb2d86273b7dbf9c707fc",
        "name": "toolbox_details_icon_photobac",
        "type": "png"
    });
}, 10478, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 88,
        "height": 88,
        "scales": [1],
        "hash": "5d2e68e334cd53b3e92e6fcee5812007",
        "name": "toolbox_details_icon_timer_reboot",
        "type": "png"
    });
}, 10481, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 200,
        "height": 200,
        "scales": [1],
        "hash": "7c5e0d8a71567ba3c2acb272a4bab38f",
        "name": "toolbox_icon_more",
        "type": "png"
    });
}, 10484, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 200,
        "height": 200,
        "scales": [1],
        "hash": "b9ebdebe73bb637ea86598d632bcb4a7",
        "name": "toolbox_icon_reboot",
        "type": "png"
    });
}, 10487, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
        "width": 200,
        "height": 200,
        "scales": [1],
        "hash": "da39c710394090d8ae3901a3ed6c4042",
        "name": "toolbox_icon_recovery",
        "type": "png"
    });
}, 10490, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'user strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var _device = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var ChildProtectHomePage = function (_React$Component) {
        (0, _inherits2.default)(ChildProtectHomePage, _React$Component);

        function ChildProtectHomePage(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ChildProtectHomePage);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChildProtectHomePage).call(this, props));

            _this._getSectionHeaderData = function (dataBlob, sectionID) {
                return dataBlob[sectionID];
            };

            _this._getRowData = function (dataBlob, sectionID, rowID) {
                var sectionData = dataBlob[sectionID];
                return sectionData.deviceList[rowID];
            };

            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    },
                    sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
                        return s1 !== s2;
                    },
                    getSectionHeaderData: _this._getSectionHeaderData,
                    getRowData: _this._getRowData
                })
            };
            return _this;
        }

        (0, _createClass2.default)(ChildProtectHomePage, [{
            key: "componentWillMount",
            value: function componentWillMount() {
                this.fetchReportListData();
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.header,
                    onPress: function onPress() {
                        return _this2._onPressHeader();
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.headerTitle
                }, "\u513F\u7AE5\u4E0A\u7F51\u4FDD\u62A4"), _react.default.createElement(_reactNative.Text, {
                    style: styles.headerDesc
                }, "\u513F\u7AE5\u5B88\u62A4\u80FD\u81EA\u52A8\u963B\u65AD\u8FC7\u6EE4\uFF0C\u540C\u65F6\u5728\u6DF1\u591C\u4E0A\u7F51\u65F6\u63D0\u9192"), _react.default.createElement(_reactNative.Image, {
                    style: styles.headerIndicator,
                    source: _$$_REQUIRE(_dependencyMap[15])
                })), _react.default.createElement(_reactNative.ListView, {
                    style: styles.listContainer,
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this),
                    renderSectionHeader: this._renderSectionHeader.bind(this),
                    stickySectionHeadersEnabled: false
                }));
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, Sectionid, rowid) {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.listRow
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.rowContainer
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.rowTextContainer
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.rowText
                }, rowData.name)), _react.default.createElement(_reactNative.Image, {
                    style: styles.rowIcon,
                    source: _device.default
                }), _react.default.createElement(_reactNative.Image, {
                    style: styles.rowIndicator,
                    source: _$$_REQUIRE(_dependencyMap[15])
                })));
            }
        }, {
            key: "_renderSectionHeader",
            value: function _renderSectionHeader(sectionData, sectionId) {
                return _react.default.createElement(_reactNative.View, {
                    style: styles.sectionHeader
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.sectionText
                }, sectionData.date + ' ' + '设备日报'));
            }
        }, {
            key: "fetchReportListData",
            value: function fetchReportListData() {
                var list = [{
                    date: '11月4日',
                    deviceList: [{
                        iconUrl: '123',
                        name: '手机1',
                        originName: '手机1',
                        date: '11月4日',
                        mac: 'aa:bb:cc:dd:ee:ff'
                    }, {
                        iconUrl: 'aaa',
                        name: '手机2',
                        originName: '手机2',
                        date: '11月4日',
                        mac: 'aa:bb:cc:dd:ee:fa'
                    }, {
                        iconUrl: 'bbb',
                        name: '手机3',
                        originName: '手机3',
                        date: '11月4日',
                        mac: 'aa:bb:cc:dd:ee:fb'
                    }]
                }, {
                    date: '11月3日',
                    deviceList: [{
                        iconUrl: '123',
                        name: '手机1',
                        originName: '手机1',
                        date: '11月3日',
                        mac: 'aa:bb:cc:dd:ee:ff'
                    }, {
                        iconUrl: 'aaa',
                        name: '手机2',
                        originName: '手机2',
                        date: '11月3日',
                        mac: 'aa:bb:cc:dd:ee:fa'
                    }, {
                        iconUrl: 'bbb',
                        name: '手机3',
                        originName: '手机3',
                        date: '11月3日',
                        mac: 'aa:bb:cc:dd:ee:fb'
                    }]
                }, {
                    date: '11月1日',
                    deviceList: [{
                        iconUrl: '123',
                        name: '手机1',
                        originName: '手机1',
                        date: '11月1日',
                        mac: 'aa:bb:cc:dd:ee:ff'
                    }, {
                        iconUrl: 'aaa',
                        name: '手机2',
                        originName: '手机2',
                        date: '11月1日',
                        mac: 'aa:bb:cc:dd:ee:fa'
                    }, {
                        iconUrl: 'bbb',
                        name: '手机3',
                        originName: '手机3',
                        date: '11月1日',
                        mac: 'aa:bb:cc:dd:ee:fb'
                    }]
                }];
                var sectionHeaders = [];
                var section = [];
                list.map(function (item, i) {
                    sectionHeaders.push(i);
                    var newSection = [];
                    item.deviceList.map(function (rowItem, j) {
                        newSection.push(j);
                    });
                    section.push(newSection);
                });
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRowsAndSections(list, sectionHeaders, section)
                });
            }
        }, {
            key: "_onPressHeader",
            value: function _onPressHeader() {
                this.props.navigation.navigate('CPDeviceList', {
                    title: ''
                });
            }
        }]);
        return ChildProtectHomePage;
    }(_react.default.Component);

    exports.default = ChildProtectHomePage;

    ChildProtectHomePage.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: "\u513F\u7AE5\u4E0A\u7F51\u4FDD\u62A4",
                style: {
                    backgroundColor: '#fff'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff',
            flexDirection: 'column'
        },
        header: {
            height: 90,
            width: _Devices.ScreenW - 30,
            marginTop: 15,
            marginLeft: 15,
            marginRight: 15,
            backgroundColor: '#28d188',
            borderRadius: 10,
            shadowColor: '#0fffae',
            shadowRadius: 10,
            shadowOffset: {
                height: 1,
                width: 0
            },
            shadowOpacity: 0.8,
            elevation: 10
        },
        headerIndicator: {
            position: 'absolute',
            right: 20,
            height: 22,
            width: 11,
            marginTop: 34
        },
        headerTitle: {
            color: '#fff',
            fontSize: 20,
            fontWeight: "bold",
            marginTop: 15,
            marginLeft: 20,
            height: 22
        },
        headerDesc: {
            color: '#fff',
            fontSize: 12,
            marginTop: 15,
            marginLeft: 20,
            marginRight: 40,
            maxHeight: 26,
            lineHeight: 13
        },
        listContainer: {
            marginTop: 10,
            width: _Devices.ScreenW,
            height: _Devices.ScreenH - 180
        },
        listRow: {
            height: 85,
            backgroundColor: '#fff',
            flexDirection: 'column',
            width: _Devices.ScreenW
        },
        rowContainer: {
            height: 75,
            width: _Devices.ScreenW - 30,
            borderRadius: 10,
            borderColor: '#ddd',
            borderWidth: 0.5,
            backgroundColor: '#fff',
            marginLeft: 15,
            marginTop: 5
        },
        rowIcon: {
            position: 'absolute',
            left: 20,
            top: 12,
            width: 52,
            height: 52,
            resizeMode: 'contain'
        },
        rowIndicator: {
            position: 'absolute',
            right: 20,
            height: 18,
            width: 9,
            marginTop: 29
        },
        rowTextContainer: {
            marginLeft: 100,
            marginTop: 0,
            maxWidth: _Devices.ScreenW - 100,
            height: 75,
            alignItems: 'center',
            justifyContent: 'center'
        },
        rowText: {
            position: 'absolute',
            left: 0,
            maxWidth: _Devices.ScreenW - 100,
            maxHeight: 75,
            fontSize: 15,
            textAlign: 'left'
        },
        sectionHeader: {
            height: 30,
            width: _Devices.ScreenW,
            backgroundColor: '#fff'
        },
        sectionText: {
            marginTop: 5,
            marginLeft: 20,
            maxWidth: _Devices.ScreenW - 40,
            height: 20,
            fontSize: 14
        }
    });
}, 10493, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10074, 10332, 10297, 10033, 10061, 10496, 10229]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
        "width": 120,
        "height": 120,
        "scales": [1],
        "hash": "63c315613da376751b8de952a4f30313",
        "name": "device",
        "type": "png"
    });
}, 10496, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'user strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var CPDeviceList = function (_React$Component) {
        (0, _inherits2.default)(CPDeviceList, _React$Component);

        function CPDeviceList(props) {
            var _this;

            (0, _classCallCheck2.default)(this, CPDeviceList);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CPDeviceList).call(this, props));
            _this.state = {};
            return _this;
        }

        (0, _createClass2.default)(CPDeviceList, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.headerContainer
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.headerImage,
                    source: _$$_REQUIRE(_dependencyMap[14])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.headerTitle
                }, "\u513F\u7AE5\u4E0A\u7F51\u4FDD\u62A4\u6A21\u5F0F"), _react.default.createElement(_reactNative.Text, {
                    style: styles.headerDesc
                }, "\u5B69\u5B50\u5BB9\u6613\u88AB\u624B\u673A\u4E2D\u6709\u5BB3\u4FE1\u606F\u8BEF\u5BFC\uFF0C\u513F\u7AE5\u5B88\u62A4\u80FD\u81EA\u52A8\u963B\u65AD\u8FC7\u6EE4\u9EC4\u8272\u3001\u6050\u6016\u66B4\u529B\u7B49\u6709\u5BB3\u8BBF\u95EE\uFF0C\u540C\u65F6\u5728 \u6DF1\u591C\u4E0A\u7F51\u65F6\u63D0\u9192\uFF0C\u6BCF\u65F6\u6BCF\u523B\u5B88\u62A4\u60A8\u7684\u5B69\u5B50\u3002")), _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.bottomButton,
                    onPress: function onPress() {
                        return _this2.addDevice();
                    }
                }, _react.default.createElement(_reactNative.Text, {
                    style: styles.buttonTitle
                }, "\u6DFB\u52A0\u8BBE\u5907")));
            }
        }, {
            key: "addDevice",
            value: function addDevice() {
                this.props.navigation.navigate('CPDLAddDevice', {
                    title: ''
                });
            }
        }]);
        return CPDeviceList;
    }(_react.default.Component);

    exports.default = CPDeviceList;

    CPDeviceList.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "",
                style: {
                    backgroundColor: '#28d188'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff',
            flexDirection: 'column'
        },
        headerContainer: {
            backgroundColor: '#28d188',
            height: 200,
            width: _Devices.ScreenW
        },
        headerImage: {
            height: 61,
            width: 70,
            marginTop: 10,
            marginLeft: (_Devices.ScreenW - 70) * 0.5
        },
        headerTitle: {
            color: '#fff',
            fontSize: 16,
            textAlign: 'center',
            marginTop: 10
        },
        headerDesc: {
            color: '#fff',
            fontSize: 12,
            textAlign: 'left',
            maxWidth: _Devices.ScreenW - 20,
            marginTop: 10,
            marginLeft: 15,
            lineHeight: 18
        },
        bottomButton: {
            position: 'absolute',
            bottom: 25,
            height: 50,
            left: 15,
            width: _Devices.ScreenW - 30,
            borderRadius: 25,
            borderColor: '#ddd',
            borderWidth: 0.5,
            alignItems: "center",
            justifyContent: "center"
        },
        buttonTitle: {
            fontSize: 14,
            color: '#000',
            textAlign: 'center'
        }
    });
}, 10499, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10074, 10332, 10297, 10033, 10061, 10502]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox/childProtect",
        "width": 209,
        "height": 183,
        "scales": [1],
        "hash": "a6d74d5dab4a0e9269a55b5f376ee3a0",
        "name": "cp_dl_header",
        "type": "png"
    });
}, 10502, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'user strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var CPDLAddDevice = function (_React$Component) {
        (0, _inherits2.default)(CPDLAddDevice, _React$Component);

        function CPDLAddDevice(props) {
            var _this;

            (0, _classCallCheck2.default)(this, CPDLAddDevice);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CPDLAddDevice).call(this, props));

            _this._getRowData = function (dataBlob, rowID) {
                return dataBlob[rowID];
            };

            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    },
                    getRowData: _this._getRowData
                })
            };
            return _this;
        }

        (0, _createClass2.default)(CPDLAddDevice, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.fetchDevices();
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, rowId) {
                return _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.itemContainer
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.itemIcon,
                    source: _$$_REQUIRE(_dependencyMap[14])
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.itemName
                }, "rowData.value.name"), _react.default.createElement(_reactNative.Text, {
                    style: styles.itemDesc
                }, "rowData.value.time"), _react.default.createElement(_reactNative.View, {
                    style: styles.itemSeprator
                }));
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.ListView, {
                    style: styles.listContainer,
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this)
                }));
            }
        }, {
            key: "fetchDevices",
            value: function fetchDevices() {
                var devices = [{
                    name: '1233333',
                    time: '5分钟之前'
                }, {
                    name: '333444555',
                    time: '6分钟之前'
                }];
                var data = [];
                devices.map(function (item, i) {
                    var newItem = {
                        key: i,
                        value: item
                    };
                    data.push(newItem);
                });
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(data)
                });
            }
        }]);
        return CPDLAddDevice;
    }(_react.default.Component);

    exports.default = CPDLAddDevice;

    CPDLAddDevice.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "\u8BF7\u9009\u62E9\u9879\u76EE",
                style: {
                    backgroundColor: '#1d1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff',
            flexDirection: 'column'
        },
        listContainer: {
            marginTop: 0,
            marginLeft: 0,
            marginRight: 0,
            marginBottom: 0,
            width: _Devices.ScreenW
        },
        itemContainer: {
            flexDirection: 'column',
            height: 75,
            width: _Devices.ScreenW
        },
        itemSeprator: {
            position: 'absolute',
            bottom: 0.1,
            marginLeft: 82,
            width: _Devices.ScreenW - 82,
            height: 0.5,
            backgroundColor: '#e6e6e6'
        },
        itemIcon: {
            position: 'absolute',
            left: 15,
            top: 12,
            width: 52,
            height: 52,
            resizeMode: 'contain'
        },
        itemName: {
            left: 82,
            height: 19,
            fontSize: 15,
            color: '#000',
            marginTop: 21,
            maxWidth: _Devices.ScreenW - 82 - 15,
            textAlign: 'left'
        },
        itemDesc: {
            left: 82,
            height: 15,
            fontSize: 12,
            color: '#666',
            marginTop: 5,
            maxWidth: _Devices.ScreenW - 82 - 15,
            textAlign: 'left'
        }
    });
}, 10505, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10074, 10332, 10297, 10033, 10061, 10496]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _Devices = _$$_REQUIRE(_dependencyMap[12]);

    var _miot = _$$_REQUIRE(_dependencyMap[13]);

    var _CommonSetting = _$$_REQUIRE(_dependencyMap[14]);

    var RouterPluginCommonSetting = function (_React$Component) {
        (0, _inherits2.default)(RouterPluginCommonSetting, _React$Component);

        function RouterPluginCommonSetting(props) {
            var _this;

            (0, _classCallCheck2.default)(this, RouterPluginCommonSetting);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RouterPluginCommonSetting).call(this, props));
            _this.state = {};
            return _this;
        }

        (0, _createClass2.default)(RouterPluginCommonSetting, [{
            key: "render",
            value: function render() {
                var firstOptions = [];
                var secondOptions = [];
                var extraOptions = {
                    option: {
                        privacyURL: _$$_REQUIRE(_dependencyMap[15]),
                        agreementURL: _$$_REQUIRE(_dependencyMap[16]),
                        hideUserExperiencePlan: true,
                        showUpgrade: false
                    }
                };
                return _react.default.createElement(_CommonSetting.CommonSetting, {
                    navigation: this.props.navigation,
                    firstOptions: firstOptions,
                    secondOptions: secondOptions,
                    extraOptions: extraOptions
                });
            }
        }]);
        return RouterPluginCommonSetting;
    }(_react.default.Component);

    exports.default = RouterPluginCommonSetting;

    RouterPluginCommonSetting.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "dark",
                title: "\u8BBE\u7F6E",
                style: {
                    backgroundColor: '#fff'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };
}, 10508, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10332, 10297, 10033, 10061, 10074, 10353, 10139, 10136]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _device = _$$_REQUIRE(_dependencyMap[15]);

    var _ui = _$$_REQUIRE(_dependencyMap[16]);

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _reactNavigation = _$$_REQUIRE(_dependencyMap[18]);

    var _setting_icon_internet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

    var _setting_icon_restart = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

    var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

    var dialogButtonName = ['确定', '取消', '提示'];
    var dialogTip = '重启后将会中断当前所有连接，需要约1分钟恢复重启后可能需要手工连接Wi-Fi,是否立即重启路由器？';
    var recoverDialogTip = '如果恢复路由器出厂设置，小米/Redmi路由器将清空当前所有设置回到初始状态,是否立即清空数据并恢复出厂设置？';

    var ToolBox = function (_React$Component) {
        (0, _inherits2.default)(ToolBox, _React$Component);

        function ToolBox(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ToolBox);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

            _this._onPressItem = function (item, rowID, sectionID) {
                if (sectionID == 0) {
                    if (item.title === '上网模式设置') {
                        _this.props.navigation.navigate('NetworkMode', {
                            title: '上网模式设置'
                        });
                    }
                } else if (sectionID == 1) {
                    if (item.title == "重启路由器") {
                        _this.setState({
                            rebootAlertVisible: true
                        });
                    }
                } else if (sectionID == 2) {
                    if (item.title == "恢复路由器出厂设置") {
                        _this.setState({
                            recoverRouterAlertVisible: true
                        });
                    }
                }
            };

            _this._getSectionHeaderData = function (dataBlob, sectionID) {
                return dataBlob[sectionID];
            };

            _this._getRowData = function (dataBlob, sectionID, rowID) {
                var sectionData = dataBlob[sectionID];
                return sectionData[rowID];
            };

            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    },
                    sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
                        return s1 !== s2;
                    },
                    getSectionHeaderData: _this._getSectionHeaderData,
                    getRowData: _this._getRowData,
                    rebootAlertVisible: false,
                    loading: false,
                    hasBeginStartRouter: false,
                    hasEndStartRouter: false,
                    recoverRouterLoading: false,
                    recoverRouterAlertVisible: false
                })
            };
            return _this;
        }

        (0, _createClass2.default)(ToolBox, [{
            key: "componentWillMount",
            value: function componentWillMount() {
                var list = [[{
                    title: '上网模式设置',
                    imgUrl: _setting_icon_internet.default
                }], [{
                    title: '重启路由器',
                    imgUrl: _setting_icon_restart.default
                }], [{
                    title: '恢复路由器出厂设置',
                    imgUrl: _setting_icon_restart.default
                }]];
                var sectionHeaders = [];
                var data = [];
                var section = [];
                list.map(function (secItem, i) {
                    sectionHeaders.push(i);
                    var newSection = [];
                    secItem.map(function (rowItem, j) {
                        newSection.push(j);
                    });
                    section.push(newSection);
                });
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRowsAndSections(list, sectionHeaders, section)
                });
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                clearInterval(this.timer);
            }
        }, {
            key: "_gotoRebootRouter",
            value: function _gotoRebootRouter() {
                var _this2 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.reboot_router.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    var code = res.code;

                    if (code == 0) {
                        _this2.timer = setInterval(function () {
                            _this2._pingrouter();
                        }, 3000);
                    }
                }).catch(function (e) {
                    _this2.setState({
                        loading: false
                    });
                });
            }
        }, {
            key: "_pingrouter",
            value: function _pingrouter() {
                var _this3 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId
                    }
                };
                var api = _API.default.router.init_info;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        if (!_this3.state.hasEndStartRouter && _this3.state.hasBeginStartRouter) {
                            _this3.setState({
                                hasEndStartRouter: true,
                                loading: false
                            });

                            _CommonUtils.default.ShowToastBottom('重启成功');

                            _this3.props.navigation.popToTop();
                        }
                    }
                }).catch(function (e) {
                    if (!_this3.state.hasBeginStartRouter) {
                        _this3.setState({
                            hasBeginStartRouter: true
                        });
                    }
                });
            }
        }, {
            key: "_gotoRecoverRouter",
            value: function _gotoRecoverRouter() {
                var _this4 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'GET';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceId: deviceId,
                        format: '0'
                    }
                };
                var api = _API.default.recover_router.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        _this4._unbindRouter();
                    }
                }).catch(function (e) {
                    _this4.setState({
                        recoverRouterLoading: false
                    });

                    _CommonUtils.default.ShowToastBottom('操作失败');
                });
            }
        }, {
            key: "_unbindRouter",
            value: function _unbindRouter() {
                var _this5 = this;

                var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                var method = 'POST';
                var paramsDic = {
                    method: method,
                    params: {
                        deviceID: deviceId
                    }
                };
                var api = _API.default.router_unbind.remote;

                _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                    if (res.code == 0) {
                        _this5.setState({
                            recoverRouterLoading: false
                        });

                        _CommonUtils.default.ShowToastBottom('操作成功，该设备已解绑');

                        _miot.Package.exit();
                    }
                }).catch(function (e) {
                    _this5.setState({
                        recoverRouterLoading: false
                    });

                    _CommonUtils.default.ShowToastBottom('操作失败');
                });
            }
        }, {
            key: "_renderSectionHeader",
            value: function _renderSectionHeader(sectionData, sectionId) {
                if (sectionId == 0) {
                    return null;
                } else {
                    return _react.default.createElement(_reactNative.View, {
                        style: styles.sectionHeader
                    });
                }
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, sectionID, rowID) {
                var _this6 = this;

                return _react.default.createElement(_reactNative.TouchableOpacity, {
                    style: styles.listItem,
                    onPress: function onPress() {
                        return _this6._onPressItem(rowData, rowID, sectionID);
                    }
                }, _react.default.createElement(_reactNative.Image, {
                    style: styles.itemImageIcon,
                    source: rowData.imgUrl
                }), _react.default.createElement(_reactNative.Text, {
                    style: styles.itemText
                }, rowData.title), _react.default.createElement(_reactNative.Image, {
                    style: styles.itemIndicator,
                    source: _$$_REQUIRE(_dependencyMap[22])
                }));
            }
        }, {
            key: "render",
            value: function render() {
                var _this7 = this;

                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.ListView, {
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this),
                    renderSectionHeader: this._renderSectionHeader.bind(this),
                    stickySectionHeadersEnabled: false
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: dialogTip,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        _this7.setState({
                            loading: true
                        });

                        _this7._gotoRebootRouter();
                    },
                    onDismiss: function onDismiss() {
                        _this7.setState({
                            rebootAlertVisible: false
                        });
                    },
                    visible: this.state.rebootAlertVisible
                }), _react.default.createElement(_ui.MessageDialog, {
                    title: dialogButtonName[2],
                    message: recoverDialogTip,
                    cancelable: false,
                    cancel: dialogButtonName[1],
                    confirm: dialogButtonName[0],
                    onCancel: function onCancel(e) { },
                    onConfirm: function onConfirm(e) {
                        _this7.setState({
                            recoverRouterLoading: true
                        });

                        _this7._gotoRecoverRouter();
                    },
                    onDismiss: function onDismiss() {
                        _this7.setState({
                            recoverRouterAlertVisible: false
                        });
                    },
                    visible: this.state.recoverRouterAlertVisible
                }), _react.default.createElement(_ui.LoadingDialog, {
                    visible: this.state.loading,
                    message: "\u91CD\u542F\u4E2D\uFF0C\u8BF7\u7A0D\u540E..."
                }), _react.default.createElement(_ui.LoadingDialog, {
                    visible: this.state.recoverRouterLoading,
                    message: "\u8DEF\u7531\u5668\u6062\u590D\u51FA\u5382\u8BBE\u7F6E\u4E2D\uFF0C\u8BF7\u7A0D\u540E..."
                }));
            }
        }]);
        return ToolBox;
    }(_react.default.Component);

    exports.default = ToolBox;

    ToolBox.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "\u8DEF\u7531\u8BBE\u7F6E",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var itemImgWidth = 22;
    var itemWidth = _Devices.ScreenW;
    var itemHeight = 60;
    var itemImgMarginLeft = 15;
    var itemTextMarginLeft = 15;
    var itemTextMarginRight = 30;

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#f6f6f6',
            flex: 1
        },
        listItem: {
            backgroundColor: '#fff',
            height: itemHeight,
            flexDirection: 'row',
            width: itemWidth
        },
        itemImageIcon: {
            position: 'absolute',
            width: itemImgWidth,
            height: itemImgWidth,
            resizeMode: 'contain',
            top: 19,
            left: 15
        },
        itemText: {
            position: 'absolute',
            marginLeft: 52,
            maxWidth: itemWidth - itemImgMarginLeft - itemImgWidth - itemTextMarginLeft - itemTextMarginRight,
            maxHeight: 16,
            color: 'black',
            fontSize: 14,
            marginTop: 23,
            textAlign: 'left'
        },
        itemIndicator: {
            position: 'absolute',
            right: 10,
            height: 13,
            width: 7,
            marginTop: 23
        },
        sectionHeader: {
            height: 20,
            width: _Devices.ScreenW,
            backgroundColor: '#f6f6f6'
        }
    });
}, 10511, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10074, 10332, 10297, 10033, 10061, 10058, 10935, 10230, 10037, 10918, 10514, 10517, 10010, 10520]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var GLOBAL = typeof window === 'undefined' ? global : window;

    var setter = function setter(_setter, _clearer, array) {
        return function (callback, delta) {
            var id = _setter(function () {
                _clearer.call(this, id);

                callback.apply(this, arguments);
            }.bind(this), delta);

            if (!this[array]) {
                this[array] = [id];
            } else {
                this[array].push(id);
            }

            return id;
        };
    };

    var clearer = function clearer(_clearer, array) {
        return function (id) {
            if (this[array]) {
                var index = this[array].indexOf(id);

                if (index !== -1) {
                    this[array].splice(index, 1);
                }
            }

            _clearer(id);
        };
    };

    var _timeouts = 'TimerMixin_timeouts';

    var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);

    var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

    var _intervals = 'TimerMixin_intervals';

    var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);

    var _setInterval = setter(GLOBAL.setInterval, function () { }, _intervals);

    var _immediates = 'TimerMixin_immediates';

    var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);

    var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

    var _rafs = 'TimerMixin_rafs';

    var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);

    var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

    var TimerMixin = {
        componentWillUnmount: function componentWillUnmount() {
            this[_timeouts] && this[_timeouts].forEach(function (id) {
                GLOBAL.clearTimeout(id);
            });
            this[_timeouts] = null;
            this[_intervals] && this[_intervals].forEach(function (id) {
                GLOBAL.clearInterval(id);
            });
            this[_intervals] = null;
            this[_immediates] && this[_immediates].forEach(function (id) {
                GLOBAL.clearImmediate(id);
            });
            this[_immediates] = null;
            this[_rafs] && this[_rafs].forEach(function (id) {
                GLOBAL.cancelAnimationFrame(id);
            });
            this[_rafs] = null;
        },
        setTimeout: _setTimeout,
        clearTimeout: _clearTimeout,
        setInterval: _setInterval,
        clearInterval: _clearInterval,
        setImmediate: _setImmediate,
        clearImmediate: _clearImmediate,
        requestAnimationFrame: _requestAnimationFrame,
        cancelAnimationFrame: _cancelAnimationFrame
    };
    module.exports = TimerMixin;
}, 10513, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/routerSetting",
        "width": 46,
        "height": 46,
        "scales": [1],
        "hash": "1bd10023c49f82b5b7a0f16f5128d354",
        "name": "setting_icon_internet",
        "type": "png"
    });
}, 10514, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/routerSetting",
        "width": 46,
        "height": 47,
        "scales": [1],
        "hash": "9bd7708936293337bb4ccf5a7c675736",
        "name": "setting_icon_restart",
        "type": "png"
    });
}, 10517, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/routerSetting",
        "width": 14,
        "height": 26,
        "scales": [1],
        "hash": "e83fcbcb44ffdd2a97d4c2f14f2b3d9c",
        "name": "setting_cell_arrow",
        "type": "png"
    });
}, 10520, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

    var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

    var _miot = _$$_REQUIRE(_dependencyMap[9]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _Devices = _$$_REQUIRE(_dependencyMap[13]);

    var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _device = _$$_REQUIRE(_dependencyMap[15]);

    var _ui = _$$_REQUIRE(_dependencyMap[16]);

    var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

    var _reactNavigation = _$$_REQUIRE(_dependencyMap[18]);

    var NetworkModeWirelessSelectWifi = function (_React$Component) {
        (0, _inherits2.default)(NetworkModeWirelessSelectWifi, _React$Component);

        function NetworkModeWirelessSelectWifi(props) {
            var _this;

            (0, _classCallCheck2.default)(this, NetworkModeWirelessSelectWifi);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetworkModeWirelessSelectWifi).call(this, props));
            _this.state = {
                dataSource: new _reactNative.ListView.DataSource({
                    rowHasChanged: function rowHasChanged(r1, r2) {
                        return r1 !== r2;
                    }
                }),
                wifiList: props.navigation.state.params.wifiList
            };
            return _this;
        }

        (0, _createClass2.default)(NetworkModeWirelessSelectWifi, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(this.state.wifiList)
                });
            }
        }, {
            key: "_onSelectItem",
            value: function _onSelectItem(item) {
                this.props.navigation.state.params.callback(item);
                this.props.navigation.goBack();
            }
        }, {
            key: "_renderRow",
            value: function _renderRow(rowData, rowID) {
                var _this2 = this;

                return _react.default.createElement(_ListItem.ListItem, {
                    title: rowData.ssid,
                    hideArrow: true,
                    showSeparator: true,
                    onPress: function onPress(_) {
                        return _this2._onSelectItem(rowData);
                    }
                });
            }
        }, {
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.SafeAreaView, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.ListView, {
                    dataSource: this.state.dataSource,
                    renderRow: this._renderRow.bind(this)
                }));
            }
        }]);
        return NetworkModeWirelessSelectWifi;
    }(_react.default.Component);

    exports.default = NetworkModeWirelessSelectWifi;

    NetworkModeWirelessSelectWifi.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            header: _react.default.createElement(_TitleBar.default, {
                type: "light",
                title: "\u9009\u62E9\u8DEF\u7531",
                style: {
                    backgroundColor: '#1a1b2a'
                },
                onPressLeft: function onPressLeft(_) {
                    return navigation.goBack();
                }
            })
        };
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#ffffff',
            flexDirection: 'column'
        },
        listItemContainer: {
            height: 50,
            backgroundColor: '#ffffff',
            width: _Devices.ScreenW
        },
        itemText: {
            position: 'absolute',
            left: 15,
            maxWidth: _Devices.ScreenW - 15 - 30,
            maxHeight: 16,
            color: 'black',
            fontSize: 14,
            top: 17,
            textAlign: 'left'
        },
        itemIndicator: {
            position: 'absolute',
            right: 20,
            height: 18,
            width: 9,
            marginTop: 16
        },
        itemSeparator: {
            position: 'absolute',
            left: 15,
            top: 49.5,
            width: _Devices.ScreenW - 15,
            height: 0.5,
            color: 'rgba(0,0,0,0.15)'
        }
    });
}, 10523, [14305, 14320, 14323, 14371, 14377, 14386, 10284, 10338, 10755, 10074, 10332, 10297, 10033, 10061, 10058, 10935, 10230, 10037, 10918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.isIphoneX = isIphoneX;
    exports.ifIphoneX = ifIphoneX;
    exports.getStatusBarHeight = getStatusBarHeight;
    exports.getBottomSpace = getBottomSpace;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    function isIphoneX() {
        var dimen = _reactNative.Dimensions.get('window');

        return _reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && !_reactNative.Platform.isTVOS && (dimen.height === 812 || dimen.width === 812 || dimen.height === 896 || dimen.width === 896);
    }

    function ifIphoneX(iphoneXStyle, regularStyle) {
        if (isIphoneX()) {
            return iphoneXStyle;
        }

        return regularStyle;
    }

    function getStatusBarHeight(safe) {
        return _reactNative.Platform.select({
            ios: ifIphoneX(safe ? 44 : 30, 20),
            android: _reactNative.StatusBar.currentHeight,
            default: 0
        });
    }

    function getBottomSpace() {
        return isIphoneX() ? 34 : 0;
    }
}, 13696, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            "default": obj
        };
    }

    module.exports = _interopRequireDefault;
}, 14305, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _typeof = _$$_REQUIRE(_dependencyMap[0]);

    function _getRequireWildcardCache() {
        if (typeof WeakMap !== "function") return null;
        var cache = new WeakMap();

        _getRequireWildcardCache = function _getRequireWildcardCache() {
            return cache;
        };

        return cache;
    }

    function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
            return obj;
        }

        if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
            return {
                "default": obj
            };
        }

        var cache = _getRequireWildcardCache();

        if (cache && cache.has(obj)) {
            return cache.get(obj);
        }

        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

        for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

                if (desc && (desc.get || desc.set)) {
                    Object.defineProperty(newObj, key, desc);
                } else {
                    newObj[key] = obj[key];
                }
            }
        }

        newObj["default"] = obj;

        if (cache) {
            cache.set(obj, newObj);
        }

        return newObj;
    }

    module.exports = _interopRequireWildcard;
}, 14308, [14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _typeof(obj) {
        if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
            module.exports = _typeof = function _typeof(obj) {
                return typeof obj;
            };
        } else {
            module.exports = _typeof = function _typeof(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
            };
        }

        return _typeof(obj);
    }

    module.exports = _typeof;
}, 14311, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

    function _objectSpread(target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(Object(source));

            if (typeof Object.getOwnPropertySymbols === 'function') {
                ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                }));
            }

            ownKeys.forEach(function (key) {
                defineProperty(target, key, source[key]);
            });
        }

        return target;
    }

    module.exports = _objectSpread;
}, 14314, [14317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _defineProperty(obj, key, value) {
        if (key in obj) {
            Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            obj[key] = value;
        }

        return obj;
    }

    module.exports = _defineProperty;
}, 14317, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    module.exports = _classCallCheck;
}, 14320, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }

    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        return Constructor;
    }

    module.exports = _createClass;
}, 14323, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var invariant = function invariant(condition, format, a, b, c, d, e, f) {
        if (!condition) {
            var error;

            if (format === undefined) {
                error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            } else {
                var args = [a, b, c, d, e, f];
                var argIndex = 0;
                error = new Error(format.replace(/%s/g, function () {
                    return args[argIndex++];
                }));
                error.name = 'Invariant Violation';
            }

            error.framesToPop = 1;
            throw error;
        }
    };

    module.exports = invariant;
}, 14326, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var warning = _$$_REQUIRE(_dependencyMap[0]);

    var warnedKeys = {};

    function warnOnce(key, message) {
        if (warnedKeys[key]) {
            return;
        }

        warning(false, message);
        warnedKeys[key] = true;
    }

    module.exports = warnOnce;
}, 14329, [14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

    var warning = emptyFunction;
    module.exports = warning;
}, 14332, [14335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    "use strict";

    function makeEmptyFunction(arg) {
        return function () {
            return arg;
        };
    }

    var emptyFunction = function emptyFunction() { };

    emptyFunction.thatReturns = makeEmptyFunction;
    emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
    emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
    emptyFunction.thatReturnsNull = makeEmptyFunction(null);

    emptyFunction.thatReturnsThis = function () {
        return this;
    };

    emptyFunction.thatReturnsArgument = function (arg) {
        return arg;
    };

    module.exports = emptyFunction;
}, 14335, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('AccessibilityInfo');

    exports.default = _default;
}, 14338, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.get = get;
    exports.getEnforcing = getEnforcing;

    var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

    var turboModuleProxy = global.__turboModuleProxy;

    function get(name) {
        if (!global.RN$Bridgeless) {
            var legacyModule = NativeModules[name];

            if (legacyModule != null) {
                return legacyModule;
            }
        }

        if (turboModuleProxy != null) {
            var module = turboModuleProxy(name);
            return module;
        }

        return null;
    }

    function getEnforcing(name) {
        var module = get(name);
        (0, _invariant.default)(module != null, "TurboModuleRegistry.getEnforcing(...): '" + name + "' could not be found. " + 'Verify that a module by this name is registered in the native binary.');
        return module;
    }
}, 14341, [14305, 14326, 10042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _extends() {
        module.exports = _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }

            return target;
        };

        return _extends.apply(this, arguments);
    }

    module.exports = _extends;
}, 14344, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

    var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

    var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

    function _slicedToArray(arr, i) {
        return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
    }

    module.exports = _slicedToArray;
}, 14347, [14350, 14353, 14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _arrayWithHoles(arr) {
        if (Array.isArray(arr)) return arr;
    }

    module.exports = _arrayWithHoles;
}, 14350, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _iterableToArrayLimit(arr, i) {
        if (!((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
            return;
        }

        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = undefined;

        try {
            for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                _arr.push(_s.value);

                if (i && _arr.length === i) break;
            }
        } catch (err) {
            _d = true;
            _e = err;
        } finally {
            try {
                if (!_n && _i["return"] != null) _i["return"]();
            } finally {
                if (_d) throw _e;
            }
        }

        return _arr;
    }

    module.exports = _iterableToArrayLimit;
}, 14353, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }

    module.exports = _nonIterableRest;
}, 14356, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

    var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

    var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

    function _toConsumableArray(arr) {
        return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
    }

    module.exports = _toConsumableArray;
}, 14359, [14362, 14365, 14368]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr)) {
            for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
                arr2[i] = arr[i];
            }

            return arr2;
        }
    }

    module.exports = _arrayWithoutHoles;
}, 14362, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _iterableToArray(iter) {
        if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
    }

    module.exports = _iterableToArray;
}, 14365, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
    }

    module.exports = _nonIterableSpread;
}, 14368, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _typeof = _$$_REQUIRE(_dependencyMap[0]);

    var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

    function _possibleConstructorReturn(self, call) {
        if (call && (_typeof(call) === "object" || typeof call === "function")) {
            return call;
        }

        return assertThisInitialized(self);
    }

    module.exports = _possibleConstructorReturn;
}, 14371, [14311, 14374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _assertThisInitialized(self) {
        if (self === undefined) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return self;
    }

    module.exports = _assertThisInitialized;
}, 14374, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _getPrototypeOf(o) {
        module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
        };
        return _getPrototypeOf(o);
    }

    module.exports = _getPrototypeOf;
}, 14377, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var superPropBase = _$$_REQUIRE(_dependencyMap[0]);

    function _get(target, property, receiver) {
        if (typeof Reflect !== "undefined" && Reflect.get) {
            module.exports = _get = Reflect.get;
        } else {
            module.exports = _get = function _get(target, property, receiver) {
                var base = superPropBase(target, property);
                if (!base) return;
                var desc = Object.getOwnPropertyDescriptor(base, property);

                if (desc.get) {
                    return desc.get.call(receiver);
                }

                return desc.value;
            };
        }

        return _get(target, property, receiver || target);
    }

    module.exports = _get;
}, 14380, [14383]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

    function _superPropBase(object, property) {
        while (!Object.prototype.hasOwnProperty.call(object, property)) {
            object = getPrototypeOf(object);
            if (object === null) break;
        }

        return object;
    }

    module.exports = _superPropBase;
}, 14383, [14377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                writable: true,
                configurable: true
            }
        });
        if (superClass) setPrototypeOf(subClass, superClass);
    }

    module.exports = _inherits;
}, 14386, [14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _setPrototypeOf(o, p) {
        module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        };

        return _setPrototypeOf(o, p);
    }

    module.exports = _setPrototypeOf;
}, 14389, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    module.exports = {
        getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
            return null;
        },
        getConstants: function getConstants() {
            return {};
        },
        getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) { },
        getDefaultEventTypes: function getDefaultEventTypes() {
            return [];
        },
        playTouchSound: function playTouchSound() { },
        lazilyLoadView: function lazilyLoadView(name) { },
        createView: function createView(reactTag, viewName, rootTag, props) { },
        updateView: function updateView(reactTag, viewName, props) { },
        focus: function focus(reactTag) { },
        blur: function blur(reactTag) { },
        findSubviewIn: function findSubviewIn(reactTag, point, callback) { },
        dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) { },
        measure: function measure(reactTag, callback) { },
        measureInWindow: function measureInWindow(reactTag, callback) { },
        viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) { },
        measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) { },
        measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) { },
        setJSResponder: function setJSResponder(reactTag, blockNativeResponder) { },
        clearJSResponder: function clearJSResponder() { },
        configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) { },
        removeSubviewsFromContainerWithID: function removeSubviewsFromContainerWithID(containerID) { },
        replaceExistingNonRootView: function replaceExistingNonRootView(reactTag, newReactTag) { },
        setChildren: function setChildren(containerTag, reactTags) { },
        manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) { },
        setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) { },
        sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) { },
        showPopupMenu: function showPopupMenu(reactTag, items, error, success) { },
        dismissPopupMenu: function dismissPopupMenu() { }
    };
}, 14392, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

    var Platform = _$$_REQUIRE(_dependencyMap[4]);

    var UIManagerProperties = _$$_REQUIRE(_dependencyMap[5]);

    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[6]);

    var viewManagerConfigs = {};
    var triedLoadingConfig = new Set();
    var NativeUIManagerConstants = {};
    var isNativeUIManagerConstantsSet = false;

    function _getConstants() {
        if (!isNativeUIManagerConstantsSet) {
            NativeUIManagerConstants = _NativeUIManager.default.getConstants();
            isNativeUIManagerConstantsSet = true;
        }

        return NativeUIManagerConstants;
    }

    var UIManagerJS = (0, _objectSpread2.default)({}, _NativeUIManager.default, {
        getConstants: function getConstants() {
            return _getConstants();
        },
        getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
            if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
                try {
                    viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
                } catch (e) {
                    viewManagerConfigs[viewManagerName] = null;
                }
            }

            var config = viewManagerConfigs[viewManagerName];

            if (config) {
                return config;
            }

            if (!global.nativeCallSyncHook) {
                return config;
            }

            if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
                var result = _NativeUIManager.default.lazilyLoadView(viewManagerName);

                triedLoadingConfig.add(viewManagerName);

                if (result.viewConfig) {
                    _getConstants()[viewManagerName] = result.viewConfig;
                    lazifyViewManagerConfig(viewManagerName);
                }
            }

            return viewManagerConfigs[viewManagerName];
        }
    });
    _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;

    function lazifyViewManagerConfig(viewName) {
        var viewConfig = _getConstants()[viewName];

        viewManagerConfigs[viewName] = viewConfig;

        if (viewConfig.Manager) {
            defineLazyObjectProperty(viewConfig, 'Constants', {
                get: function get() {
                    var viewManager = NativeModules[viewConfig.Manager];
                    var constants = {};
                    viewManager && Object.keys(viewManager).forEach(function (key) {
                        var value = viewManager[key];

                        if (typeof value !== 'function') {
                            constants[key] = value;
                        }
                    });
                    return constants;
                }
            });
            defineLazyObjectProperty(viewConfig, 'Commands', {
                get: function get() {
                    var viewManager = NativeModules[viewConfig.Manager];
                    var commands = {};
                    var index = 0;
                    viewManager && Object.keys(viewManager).forEach(function (key) {
                        var value = viewManager[key];

                        if (typeof value === 'function') {
                            commands[key] = index++;
                        }
                    });
                    return commands;
                }
            });
        }
    }

    if (_getConstants().ViewManagerNames) {
        _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
            defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
                get: function get() {
                    return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
                }
            });
        });
    }

    if (!global.nativeCallSyncHook) {
        Object.keys(_getConstants()).forEach(function (viewManagerName) {
            if (!UIManagerProperties.includes(viewManagerName)) {
                if (!viewManagerConfigs[viewManagerName]) {
                    viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
                }

                defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
                    get: function get() {
                        return UIManagerJS.getViewManagerConfig(viewManagerName);
                    }
                });
            }
        });
    }

    module.exports = UIManagerJS;
}, 14395, [14305, 14314, 14398, 10042, 10066, 14404, 10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('UIManager');

    exports.default = _default;
}, 14398, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('PlatformConstants');

    exports.default = _default;
}, 14401, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
}, 14404, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

    function _objectWithoutProperties(source, excluded) {
        if (source == null) return {};
        var target = objectWithoutPropertiesLoose(source, excluded);
        var key, i;

        if (Object.getOwnPropertySymbols) {
            var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

            for (i = 0; i < sourceSymbolKeys.length; i++) {
                key = sourceSymbolKeys[i];
                if (excluded.indexOf(key) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
                target[key] = source[key];
            }
        }

        return target;
    }

    module.exports = _objectWithoutProperties;
}, 14407, [14410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _objectWithoutPropertiesLoose(source, excluded) {
        if (source == null) return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i;

        for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
        }

        return target;
    }

    module.exports = _objectWithoutPropertiesLoose;
}, 14410, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
    var NativeDeviceInfo = NativeModule;
    var _default = NativeDeviceInfo;
    exports.default = _default;
}, 14413, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

    var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

    var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

    var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

    var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

    var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

    var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
        resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
        backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
        backgroundColor: DeprecatedColorPropType,
        borderColor: DeprecatedColorPropType,
        borderWidth: ReactPropTypes.number,
        borderRadius: ReactPropTypes.number,
        overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
        tintColor: DeprecatedColorPropType,
        opacity: ReactPropTypes.number,
        overlayColor: ReactPropTypes.string,
        borderTopLeftRadius: ReactPropTypes.number,
        borderTopRightRadius: ReactPropTypes.number,
        borderBottomLeftRadius: ReactPropTypes.number,
        borderBottomRightRadius: ReactPropTypes.number
    });

    module.exports = ImageStylePropTypes;
}, 14416, [14314, 14419, 14425, 14428, 14431, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

    var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
        var color = props[propName];

        if (color === undefined || color === null) {
            if (isRequired) {
                return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
            }

            return;
        }

        if (typeof color === 'number') {
            return;
        }

        if (normalizeColor(color) === null) {
            return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
        }
    };

    var ColorPropType = colorPropType.bind(null, false);
    ColorPropType.isRequired = colorPropType.bind(null, true);
    module.exports = ColorPropType;
}, 14419, [14422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _utils = _$$_REQUIRE(_dependencyMap[2]);

    var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    function shouldUseAutoDarkmode() {
        if (_native.default.isIOS && _native.default.MIOTService.currentDarkMode == "dark" && !_index.default.darkModeStore.setDarkMode) {
            return true;
        } else {
            return false;
        }
    }

    function changeColor(color, flag, isText) {
        if (!shouldUseAutoDarkmode() || flag) {
            return color;
        }

        var tmp = color.toString(16);

        if (tmp.length < 8) {
            if (tmp.length == 1) {
                tmp = "0000000" + tmp;
            } else if (tmp.length == 2) {
                tmp = "000000" + tmp;
            } else if (tmp.length == 3) {
                tmp = "00000" + tmp;
            } else if (tmp.length == 4) {
                tmp = "0000" + tmp;
            } else if (tmp.length == 5) {
                tmp = "000" + tmp;
            } else if (tmp.length == 6) {
                tmp = "00" + tmp;
            } else if (tmp.length == 7) {
                tmp = "0" + tmp;
            } else {
                tmp = '00000000';
            }
        }

        var alpha = tmp.substr(6, 2);
        var first = "0x" + tmp.substr(0, 6);
        var finalColor = getAntiColor(parseInt(first, 16), parseInt(alpha, 16), isText);
        var finalAlpha = getAntiAlpha(parseInt(first, 16), parseInt(alpha, 16));
        var final = parseInt(finalColor.toString(16) + alpha, 16) >>> 0;
        return final;
    }

    function getAntiAlpha(originColor, alpha, isText) {
        if (alpha <= 0x65 && alpha >= 0x4c && originColor === 0x000000) {
            return 0x99;
        }

        return alpha;
    }

    function getAntiColor(originColor, alpha, isText) {
        if (originColor === 0x32bac0) {
            return 0x25A9AF;
        } else if (originColor === 0x25A9AF) {
            return 0x158B90;
        } else if (originColor === 0xF43F31) {
            return 0xD92719;
        } else if (originColor === 0xD53C32) {
            return 0xB62920;
        }

        if (!isText) {
            if (originColor === 0xf6f7f8 || originColor === 0xe9e9ef || originColor === 0xEBEBEC || originColor === 0xefeff0) {
                return 0x000000;
            }

            if (originColor === 0xE3E6E7) {
                return 0x1a1a1a;
            }

            if (originColor === 0xb0b0b0) {
                return 0x1a1a1a;
            }
        } else {
            if (originColor === 0x23262a || originColor === 0x404346 || originColor === 0x454553) {
                return 0xffffff;
            }
        }

        var rgbColor = hexToRgb(originColor.toString(16));
        var hsvColor = rgbToHsv(rgbColor[0], rgbColor[1], rgbColor[2]);
        var h = hsvColor.h;
        var s = hsvColor.s;
        var v = hsvColor.v;
        var flag = false;

        if (isText) {
            if (hsvColor.h === 0 && hsvColor.s === 0) {
                flag = true;

                if (v >= 0 && v < 20) {
                    hsvColor.v = 90;
                } else if (v >= 20 && v < 30) {
                    hsvColor.v = 80;
                } else if (v >= 30 && v < 40) {
                    hsvColor.v = 70;
                } else if (v >= 40 && v < 50) {
                    hsvColor.v = 60;
                } else if (v >= 50 && v < 60) {
                    hsvColor.v = 50;
                } else if (v >= 60 && v < 90) {
                    hsvColor.v = 40;
                } else if (v >= 90 && v <= 100) {
                    hsvColor.v = 90;
                } else {
                    flag = false;
                }
            } else { }
        } else {
            if (hsvColor.h === 0 && hsvColor.s === 0) {
                flag = true;

                if (v >= 90 && v < 97) {
                    hsvColor.v = 15;
                } else if (v >= 97 && v < 100) {
                    hsvColor.v = 0;
                } else if (v === 100) {
                    hsvColor.v = 10;
                } else {
                    flag = false;
                }
            }
        }

        if (!flag) {
            hsvColor.s += 8;
            hsvColor.v -= 10;
        }

        return hsvToHex(hsvColor.h, Math.min(Math.max(hsvColor.s, 0), 100), Math.min(Math.max(hsvColor.v, 0), 100));
    }

    function hexToRgb(color) {
        var sColorChange = [];
        var tmp = color.toString(16);

        if (tmp.length < 8) {
            if (tmp.length == 1) {
                tmp = "#00000" + tmp;
            } else if (tmp.length == 2) {
                tmp = "#0000" + tmp;
            } else if (tmp.length == 3) {
                tmp = "#000" + tmp;
            } else if (tmp.length == 4) {
                tmp = "#00" + tmp;
            } else if (tmp.length == 5) {
                tmp = "#0" + tmp;
            } else if (tmp.length == 6) {
                tmp = "#" + tmp;
            } else {
                tmp = '#000000';
            }
        }

        var rgbString = "" + tmp.slice(1).match(/.{2}/g).map(function (x) {
            return parseInt(x, 16);
        }).join();
        sColorChange = rgbString.split(",");
        return sColorChange;
    }

    function rgbToHsv(r, g, b) {
        r = r / 255;
        g = g / 255;
        b = b / 255;
        var h, s, v;
        var min = Math.min(r, g, b);
        var max = v = Math.max(r, g, b);
        var l = (min + max) / 2;
        var difference = max - min;

        if (max == min) {
            h = 0;
        } else {
            switch (max) {
                case r:
                    h = (g - b) / difference + (g < b ? 6 : 0);
                    break;

                case g:
                    h = 2.0 + (b - r) / difference;
                    break;

                case b:
                    h = 4.0 + (r - g) / difference;
                    break;
            }

            h = Math.round(h * 60);
        }

        if (max == 0) {
            s = 0;
        } else {
            s = 1 - min / max;
        }

        s = Math.round(s * 100);
        v = Math.round(v * 100);
        return {
            "h": h,
            "s": s,
            "v": v
        };
    }

    function hsvToHex(h, s, v) {
        s = s / 100;
        v = v / 100;
        var r = 0,
            g = 0,
            b = 0;
        var i = parseInt(h / 60 % 6);
        var f = h / 60 - i;
        var p = v * (1 - s);
        var q = v * (1 - f * s);
        var t = v * (1 - (1 - f) * s);

        switch (i) {
            case 0:
                r = v;
                g = t;
                b = p;
                break;

            case 1:
                r = q;
                g = v;
                b = p;
                break;

            case 2:
                r = p;
                g = v;
                b = t;
                break;

            case 3:
                r = p;
                g = q;
                b = v;
                break;

            case 4:
                r = t;
                g = p;
                b = v;
                break;

            case 5:
                r = v;
                g = p;
                b = q;
                break;

            default:
                break;
        }

        r = parseInt(r * 255.0);
        g = parseInt(g * 255.0);
        b = parseInt(b * 255.0);
        var color = (0, _utils.rgbToHex)(r, g, b);
        return color;
    }

    function normalizeColor(color) {
        var matchers = getMatchers();
        var match;

        if (typeof color === 'number') {
            if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
                return changeColor(color, false, false);
            }

            return null;
        }

        var isText = false;

        if (color.indexOf('text') != -1) {
            isText = true;
            color = color.replace(new RegExp("text", "gm"), '');
        }

        var flag = false;

        if (color.indexOf('xm') != -1) {
            flag = true;
            color = color.replace(new RegExp("xm", "gm"), '');
        }

        if (match = matchers.hex6.exec(color)) {
            var tmp = parseInt(match[1] + "ff", 16) >>> 0;
            return changeColor(tmp, flag, isText);
        }

        if (names.hasOwnProperty(color)) {
            return changeColor(names[color], flag, isText);
        }

        if (match = matchers.rgb.exec(color)) {
            var _tmp = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;

            return changeColor(_tmp, flag, isText);
        }

        if (match = matchers.rgba.exec(color)) {
            var _tmp2 = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;

            return changeColor(_tmp2, flag, isText);
        }

        if (match = matchers.hex3.exec(color)) {
            var _tmp3 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + "ff", 16) >>> 0;

            return changeColor(_tmp3, flag, isText);
        }

        if (match = matchers.hex8.exec(color)) {
            var _tmp4 = parseInt(match[1], 16) >>> 0;

            return changeColor(_tmp4, flag, isText);
        }

        if (match = matchers.hex4.exec(color)) {
            var _tmp5 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;

            return changeColor(_tmp5, flag, isText);
        }

        if (match = matchers.hsl.exec(color)) {
            var _tmp6 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;

            return changeColor(_tmp6, flag, isText);
        }

        if (match = matchers.hsla.exec(color)) {
            var _tmp7 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;

            return changeColor(_tmp7, flag, isText);
        }

        return null;
    }

    function hue2rgb(p, q, t) {
        if (t < 0) {
            t += 1;
        }

        if (t > 1) {
            t -= 1;
        }

        if (t < 0.16666666666666666) {
            return p + (q - p) * 6 * t;
        }

        if (t < 0.5) {
            return q;
        }

        if (t < 0.6666666666666666) {
            return p + (q - p) * (0.6666666666666666 - t) * 6;
        }

        return p;
    }

    function hslToRgb(h, s, l) {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        var r = hue2rgb(p, q, h + 0.3333333333333333);
        var g = hue2rgb(p, q, h);
        var b = hue2rgb(p, q, h - 0.3333333333333333);
        return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
    }

    var NUMBER = '[-+]?\\d*\\.?\\d+';
    var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

    function call() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return "\\(\\s*(" + args.join(')\\s*,\\s*(') + ")\\s*\\)";
    }

    var cachedMatchers;

    function getMatchers() {
        if (cachedMatchers === undefined) {
            cachedMatchers = {
                rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
                rgba: new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER)),
                hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
                hsla: new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
                hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                hex6: /^#([0-9a-fA-F]{6})$/,
                hex8: /^#([0-9a-fA-F]{8})$/
            };
        }

        return cachedMatchers;
    }

    function parse255(str) {
        var int = parseInt(str, 10);

        if (int < 0) {
            return 0;
        }

        if (int > 255) {
            return 255;
        }

        return int;
    }

    function parse360(str) {
        var int = parseFloat(str);
        return (int % 360 + 360) % 360 / 360;
    }

    function parse1(str) {
        var num = parseFloat(str);

        if (num < 0) {
            return 0;
        }

        if (num > 1) {
            return 255;
        }

        return Math.round(num * 255);
    }

    function parsePercentage(str) {
        var int = parseFloat(str);

        if (int < 0) {
            return 0;
        }

        if (int > 100) {
            return 1;
        }

        return int / 100;
    }

    var names = {
        transparent: 0x00000000,
        aliceblue: 0xf0f8ffff,
        antiquewhite: 0xfaebd7ff,
        aqua: 0x00ffffff,
        aquamarine: 0x7fffd4ff,
        azure: 0xf0ffffff,
        beige: 0xf5f5dcff,
        bisque: 0xffe4c4ff,
        black: 0x000000ff,
        blanchedalmond: 0xffebcdff,
        blue: 0x0000ffff,
        blueviolet: 0x8a2be2ff,
        brown: 0xa52a2aff,
        burlywood: 0xdeb887ff,
        burntsienna: 0xea7e5dff,
        cadetblue: 0x5f9ea0ff,
        chartreuse: 0x7fff00ff,
        chocolate: 0xd2691eff,
        coral: 0xff7f50ff,
        cornflowerblue: 0x6495edff,
        cornsilk: 0xfff8dcff,
        crimson: 0xdc143cff,
        cyan: 0x00ffffff,
        darkblue: 0x00008bff,
        darkcyan: 0x008b8bff,
        darkgoldenrod: 0xb8860bff,
        darkgray: 0xa9a9a9ff,
        darkgreen: 0x006400ff,
        darkgrey: 0xa9a9a9ff,
        darkkhaki: 0xbdb76bff,
        darkmagenta: 0x8b008bff,
        darkolivegreen: 0x556b2fff,
        darkorange: 0xff8c00ff,
        darkorchid: 0x9932ccff,
        darkred: 0x8b0000ff,
        darksalmon: 0xe9967aff,
        darkseagreen: 0x8fbc8fff,
        darkslateblue: 0x483d8bff,
        darkslategray: 0x2f4f4fff,
        darkslategrey: 0x2f4f4fff,
        darkturquoise: 0x00ced1ff,
        darkviolet: 0x9400d3ff,
        deeppink: 0xff1493ff,
        deepskyblue: 0x00bfffff,
        dimgray: 0x696969ff,
        dimgrey: 0x696969ff,
        dodgerblue: 0x1e90ffff,
        firebrick: 0xb22222ff,
        floralwhite: 0xfffaf0ff,
        forestgreen: 0x228b22ff,
        fuchsia: 0xff00ffff,
        gainsboro: 0xdcdcdcff,
        ghostwhite: 0xf8f8ffff,
        gold: 0xffd700ff,
        goldenrod: 0xdaa520ff,
        gray: 0x808080ff,
        green: 0x008000ff,
        greenyellow: 0xadff2fff,
        grey: 0x808080ff,
        honeydew: 0xf0fff0ff,
        hotpink: 0xff69b4ff,
        indianred: 0xcd5c5cff,
        indigo: 0x4b0082ff,
        ivory: 0xfffff0ff,
        khaki: 0xf0e68cff,
        lavender: 0xe6e6faff,
        lavenderblush: 0xfff0f5ff,
        lawngreen: 0x7cfc00ff,
        lemonchiffon: 0xfffacdff,
        lightblue: 0xadd8e6ff,
        lightcoral: 0xf08080ff,
        lightcyan: 0xe0ffffff,
        lightgoldenrodyellow: 0xfafad2ff,
        lightgray: 0xd3d3d3ff,
        lightgreen: 0x90ee90ff,
        lightgrey: 0xd3d3d3ff,
        lightpink: 0xffb6c1ff,
        lightsalmon: 0xffa07aff,
        lightseagreen: 0x20b2aaff,
        lightskyblue: 0x87cefaff,
        lightslategray: 0x778899ff,
        lightslategrey: 0x778899ff,
        lightsteelblue: 0xb0c4deff,
        lightyellow: 0xffffe0ff,
        lime: 0x00ff00ff,
        limegreen: 0x32cd32ff,
        linen: 0xfaf0e6ff,
        magenta: 0xff00ffff,
        maroon: 0x800000ff,
        mediumaquamarine: 0x66cdaaff,
        mediumblue: 0x0000cdff,
        mediumorchid: 0xba55d3ff,
        mediumpurple: 0x9370dbff,
        mediumseagreen: 0x3cb371ff,
        mediumslateblue: 0x7b68eeff,
        mediumspringgreen: 0x00fa9aff,
        mediumturquoise: 0x48d1ccff,
        mediumvioletred: 0xc71585ff,
        midnightblue: 0x191970ff,
        mintcream: 0xf5fffaff,
        mistyrose: 0xffe4e1ff,
        moccasin: 0xffe4b5ff,
        navajowhite: 0xffdeadff,
        navy: 0x000080ff,
        oldlace: 0xfdf5e6ff,
        olive: 0x808000ff,
        olivedrab: 0x6b8e23ff,
        orange: 0xffa500ff,
        orangered: 0xff4500ff,
        orchid: 0xda70d6ff,
        palegoldenrod: 0xeee8aaff,
        palegreen: 0x98fb98ff,
        paleturquoise: 0xafeeeeff,
        palevioletred: 0xdb7093ff,
        papayawhip: 0xffefd5ff,
        peachpuff: 0xffdab9ff,
        peru: 0xcd853fff,
        pink: 0xffc0cbff,
        plum: 0xdda0ddff,
        powderblue: 0xb0e0e6ff,
        purple: 0x800080ff,
        rebeccapurple: 0x663399ff,
        red: 0xff0000ff,
        rosybrown: 0xbc8f8fff,
        royalblue: 0x4169e1ff,
        saddlebrown: 0x8b4513ff,
        salmon: 0xfa8072ff,
        sandybrown: 0xf4a460ff,
        seagreen: 0x2e8b57ff,
        seashell: 0xfff5eeff,
        sienna: 0xa0522dff,
        silver: 0xc0c0c0ff,
        skyblue: 0x87ceebff,
        slateblue: 0x6a5acdff,
        slategray: 0x708090ff,
        slategrey: 0x708090ff,
        snow: 0xfffafaff,
        springgreen: 0x00ff7fff,
        steelblue: 0x4682b4ff,
        tan: 0xd2b48cff,
        teal: 0x008080ff,
        thistle: 0xd8bfd8ff,
        tomato: 0xff6347ff,
        turquoise: 0x40e0d0ff,
        violet: 0xee82eeff,
        wheat: 0xf5deb3ff,
        white: 0xffffffff,
        whitesmoke: 0xf5f5f5ff,
        yellow: 0xffff00ff,
        yellowgreen: 0x9acd32ff
    };
    module.exports = normalizeColor;
}, 14422, [14305, 10005, 10014, 10998]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

    var LayoutPropTypes = {
        display: ReactPropTypes.oneOf(['none', 'flex']),
        width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        borderWidth: ReactPropTypes.number,
        borderTopWidth: ReactPropTypes.number,
        borderStartWidth: ReactPropTypes.number,
        borderEndWidth: ReactPropTypes.number,
        borderRightWidth: ReactPropTypes.number,
        borderBottomWidth: ReactPropTypes.number,
        borderLeftWidth: ReactPropTypes.number,
        position: ReactPropTypes.oneOf(['absolute', 'relative']),
        flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
        flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
        justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
        alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
        alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
        alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
        overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
        flex: ReactPropTypes.number,
        flexGrow: ReactPropTypes.number,
        flexShrink: ReactPropTypes.number,
        flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
        aspectRatio: ReactPropTypes.number,
        zIndex: ReactPropTypes.number,
        direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
    };
    module.exports = LayoutPropTypes;
}, 14425, [10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

    var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

    var DeprecatedShadowPropTypesIOS = {
        shadowColor: DeprecatedColorPropType,
        shadowOffset: ReactPropTypes.shape({
            width: ReactPropTypes.number,
            height: ReactPropTypes.number
        }),
        shadowOpacity: ReactPropTypes.number,
        shadowRadius: ReactPropTypes.number
    };
    module.exports = DeprecatedShadowPropTypesIOS;
}, 14428, [14419, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

    var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

    var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
        if (props[propName]) {
            return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
        }
    };

    var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
        if (props[propName]) {
            return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
        }
    };

    var DeprecatedTransformPropTypes = {
        transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
            perspective: ReactPropTypes.number
        }), ReactPropTypes.shape({
            rotate: ReactPropTypes.string
        }), ReactPropTypes.shape({
            rotateX: ReactPropTypes.string
        }), ReactPropTypes.shape({
            rotateY: ReactPropTypes.string
        }), ReactPropTypes.shape({
            rotateZ: ReactPropTypes.string
        }), ReactPropTypes.shape({
            scale: ReactPropTypes.number
        }), ReactPropTypes.shape({
            scaleX: ReactPropTypes.number
        }), ReactPropTypes.shape({
            scaleY: ReactPropTypes.number
        }), ReactPropTypes.shape({
            translateX: ReactPropTypes.number
        }), ReactPropTypes.shape({
            translateY: ReactPropTypes.number
        }), ReactPropTypes.shape({
            skewX: ReactPropTypes.string
        }), ReactPropTypes.shape({
            skewY: ReactPropTypes.string
        })])),
        transformMatrix: TransformMatrixPropType,
        decomposedMatrix: DecomposedMatrixPropType,
        scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
        scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
        rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
        translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
        translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
    };
    module.exports = DeprecatedTransformPropTypes;
}, 14431, [10318, 10366]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

    var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

    var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

    var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

    var DeprecatedTextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
        color: DeprecatedColorPropType,
        fontFamily: ReactPropTypes.string,
        fontSize: ReactPropTypes.number,
        fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
        fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
        fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
        textShadowOffset: ReactPropTypes.shape({
            width: ReactPropTypes.number,
            height: ReactPropTypes.number
        }),
        textShadowRadius: ReactPropTypes.number,
        textShadowColor: DeprecatedColorPropType,
        letterSpacing: ReactPropTypes.number,
        lineHeight: ReactPropTypes.number,
        textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
        textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
        includeFontPadding: ReactPropTypes.bool,
        textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
        textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
        textDecorationColor: DeprecatedColorPropType,
        textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
        writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
    });

    module.exports = DeprecatedTextStylePropTypes;
}, 14434, [14314, 14419, 14437, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

    var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

    var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

    var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

    var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

    var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

    var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
        backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
        backgroundColor: DeprecatedColorPropType,
        borderColor: DeprecatedColorPropType,
        borderTopColor: DeprecatedColorPropType,
        borderRightColor: DeprecatedColorPropType,
        borderBottomColor: DeprecatedColorPropType,
        borderLeftColor: DeprecatedColorPropType,
        borderStartColor: DeprecatedColorPropType,
        borderEndColor: DeprecatedColorPropType,
        borderRadius: ReactPropTypes.number,
        borderTopLeftRadius: ReactPropTypes.number,
        borderTopRightRadius: ReactPropTypes.number,
        borderTopStartRadius: ReactPropTypes.number,
        borderTopEndRadius: ReactPropTypes.number,
        borderBottomLeftRadius: ReactPropTypes.number,
        borderBottomRightRadius: ReactPropTypes.number,
        borderBottomStartRadius: ReactPropTypes.number,
        borderBottomEndRadius: ReactPropTypes.number,
        borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
        borderWidth: ReactPropTypes.number,
        borderTopWidth: ReactPropTypes.number,
        borderRightWidth: ReactPropTypes.number,
        borderBottomWidth: ReactPropTypes.number,
        borderLeftWidth: ReactPropTypes.number,
        opacity: ReactPropTypes.number,
        elevation: ReactPropTypes.number
    });

    module.exports = DeprecatedViewStylePropTypes;
}, 14437, [14314, 14419, 14425, 14428, 14431, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;

    var Platform = _$$_REQUIRE(_dependencyMap[0]);

    var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

    var ReactNativeViewViewConfigAndroid = _$$_REQUIRE(_dependencyMap[2]);

    var registerGeneratedViewConfig = _$$_REQUIRE(_dependencyMap[3]);

    var requireNativeComponent = _$$_REQUIRE(_dependencyMap[4]);

    var NativeViewComponent;
    var viewConfig;
    {
        NativeViewComponent = requireNativeComponent('RCTView');
    }
    var __INTERNAL_VIEW_CONFIG = viewConfig;
    exports.__INTERNAL_VIEW_CONFIG = __INTERNAL_VIEW_CONFIG;
    var _default = NativeViewComponent;
    exports.default = _default;
}, 14440, [10066, 10114, 14581, 14584, 10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    "use strict";

    var _extends = _$$_REQUIRE(_dependencyMap[0]);

    _$$_REQUIRE(_dependencyMap[1]);

    var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
        React = _$$_REQUIRE(_dependencyMap[3]),
        Scheduler = _$$_REQUIRE(_dependencyMap[4]);

    function ReactError(error) {
        error.name = "Invariant Violation";
        return error;
    }

    var eventPluginOrder = null,
        namesToPlugins = {};

    function recomputePluginOrdering() {
        if (eventPluginOrder) for (var pluginName in namesToPlugins) {
            var pluginModule = namesToPlugins[pluginName],
                pluginIndex = eventPluginOrder.indexOf(pluginName);
            if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

            if (!plugins[pluginIndex]) {
                if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
                plugins[pluginIndex] = pluginModule;
                pluginIndex = pluginModule.eventTypes;

                for (var eventName in pluginIndex) {
                    var JSCompiler_inline_result = undefined;
                    var dispatchConfig = pluginIndex[eventName],
                        pluginModule$jscomp$0 = pluginModule,
                        eventName$jscomp$0 = eventName;
                    if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
                    eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
                    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

                    if (phasedRegistrationNames) {
                        for (JSCompiler_inline_result in phasedRegistrationNames) {
                            phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
                        }

                        JSCompiler_inline_result = true;
                    } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

                    if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
                }
            }
        }
    }

    function publishRegistrationName(registrationName, pluginModule) {
        if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
        registrationNameModules[registrationName] = pluginModule;
    }

    var plugins = [],
        eventNameDispatchConfigs = {},
        registrationNameModules = {};

    function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);

        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }

    var hasError = false,
        caughtError = null,
        hasRethrowError = false,
        rethrowError = null,
        reporter = {
            onError: function onError(error) {
                hasError = true;
                caughtError = error;
            }
        };

    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl.apply(reporter, arguments);
    }

    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);

        if (hasError) {
            if (hasError) {
                var error = caughtError;
                hasError = false;
                caughtError = null;
            } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

            hasRethrowError || (hasRethrowError = true, rethrowError = error);
        }
    }

    var getFiberCurrentPropsFromNode = null,
        getInstanceFromNode = null,
        getNodeFromInstance = null;

    function executeDispatch(event, listener, inst) {
        var type = event.type || "unknown-event";
        event.currentTarget = getNodeFromInstance(inst);
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }

    function executeDirectDispatch(event) {
        var dispatchListener = event._dispatchListeners,
            dispatchInstance = event._dispatchInstances;
        if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
        event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
        dispatchListener = dispatchListener ? dispatchListener(event) : null;
        event.currentTarget = null;
        event._dispatchListeners = null;
        event._dispatchInstances = null;
        return dispatchListener;
    }

    function accumulateInto(current, next) {
        if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
        if (null == current) return next;

        if (Array.isArray(current)) {
            if (Array.isArray(next)) return current.push.apply(current, next), current;
            current.push(next);
            return current;
        }

        return Array.isArray(next) ? [current].concat(next) : [current, next];
    }

    function forEachAccumulated(arr, cb, scope) {
        Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
    }

    var eventQueue = null;

    function executeDispatchesAndReleaseTopLevel(e) {
        if (e) {
            var dispatchListeners = e._dispatchListeners,
                dispatchInstances = e._dispatchInstances;
            if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
                executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
            } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
            e._dispatchListeners = null;
            e._dispatchInstances = null;
            e.isPersistent() || e.constructor.release(e);
        }
    }

    var injection = {
        injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
            if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
            eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
            recomputePluginOrdering();
        },
        injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
            var isOrderingDirty = false,
                pluginName;

            for (pluginName in injectedNamesToPlugins) {
                if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                    var pluginModule = injectedNamesToPlugins[pluginName];

                    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
                        if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
                        namesToPlugins[pluginName] = pluginModule;
                        isOrderingDirty = true;
                    }
                }
            }

            isOrderingDirty && recomputePluginOrdering();
        }
    };

    function getListener(inst, registrationName) {
        var listener = inst.stateNode;
        if (!listener) return null;
        var props = getFiberCurrentPropsFromNode(listener);
        if (!props) return null;
        listener = props[registrationName];

        a: switch (registrationName) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
                (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
                inst = !props;
                break a;

            default:
                inst = false;
        }

        if (inst) return null;
        if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
        return listener;
    }

    function getParent(inst) {
        do {
            inst = inst.return;
        } while (inst && 5 !== inst.tag);

        return inst ? inst : null;
    }

    function traverseTwoPhase(inst, fn, arg) {
        for (var path = []; inst;) {
            path.push(inst), inst = getParent(inst);
        }

        for (inst = path.length; 0 < inst--;) {
            fn(path[inst], "captured", arg);
        }

        for (inst = 0; inst < path.length; inst++) {
            fn(path[inst], "bubbled", arg);
        }
    }

    function accumulateDirectionalDispatches(inst, phase, event) {
        if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }

    function accumulateTwoPhaseDispatchesSingle(event) {
        event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
    }

    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
        if (event && event.dispatchConfig.phasedRegistrationNames) {
            var targetInst = event._targetInst;
            targetInst = targetInst ? getParent(targetInst) : null;
            traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
        }
    }

    function accumulateDirectDispatchesSingle(event) {
        if (event && event.dispatchConfig.registrationName) {
            var inst = event._targetInst;

            if (inst && event && event.dispatchConfig.registrationName) {
                var listener = getListener(inst, event.dispatchConfig.registrationName);
                listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
            }
        }
    }

    function functionThatReturnsTrue() {
        return true;
    }

    function functionThatReturnsFalse() {
        return false;
    }

    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
        this.dispatchConfig = dispatchConfig;
        this._targetInst = targetInst;
        this.nativeEvent = nativeEvent;
        dispatchConfig = this.constructor.Interface;

        for (var propName in dispatchConfig) {
            dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
        }

        this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
        this.isPropagationStopped = functionThatReturnsFalse;
        return this;
    }

    _extends(SyntheticEvent.prototype, {
        preventDefault: function preventDefault() {
            this.defaultPrevented = true;
            var event = this.nativeEvent;
            event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
        },
        stopPropagation: function stopPropagation() {
            var event = this.nativeEvent;
            event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
        },
        persist: function persist() {
            this.isPersistent = functionThatReturnsTrue;
        },
        isPersistent: functionThatReturnsFalse,
        destructor: function destructor() {
            var Interface = this.constructor.Interface,
                propName;

            for (propName in Interface) {
                this[propName] = null;
            }

            this.nativeEvent = this._targetInst = this.dispatchConfig = null;
            this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
            this._dispatchInstances = this._dispatchListeners = null;
        }
    });

    SyntheticEvent.Interface = {
        type: null,
        target: null,
        currentTarget: function currentTarget() {
            return null;
        },
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function timeStamp(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: null,
        isTrusted: null
    };

    SyntheticEvent.extend = function (Interface) {
        function E() { }

        function Class() {
            return Super.apply(this, arguments);
        }

        var Super = this;
        E.prototype = Super.prototype;
        var prototype = new E();

        _extends(prototype, Class.prototype);

        Class.prototype = prototype;
        Class.prototype.constructor = Class;
        Class.Interface = _extends({}, Super.Interface, Interface);
        Class.extend = Super.extend;
        addEventPoolingTo(Class);
        return Class;
    };

    addEventPoolingTo(SyntheticEvent);

    function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
        if (this.eventPool.length) {
            var instance = this.eventPool.pop();
            this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
            return instance;
        }

        return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
    }

    function releasePooledEvent(event) {
        if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
        event.destructor();
        10 > this.eventPool.length && this.eventPool.push(event);
    }

    function addEventPoolingTo(EventConstructor) {
        EventConstructor.eventPool = [];
        EventConstructor.getPooled = getPooledEvent;
        EventConstructor.release = releasePooledEvent;
    }

    var ResponderSyntheticEvent = SyntheticEvent.extend({
        touchHistory: function touchHistory() {
            return null;
        }
    });

    function isStartish(topLevelType) {
        return "topTouchStart" === topLevelType;
    }

    function isMoveish(topLevelType) {
        return "topTouchMove" === topLevelType;
    }

    var startDependencies = ["topTouchStart"],
        moveDependencies = ["topTouchMove"],
        endDependencies = ["topTouchCancel", "topTouchEnd"],
        touchBank = [],
        touchHistory = {
            touchBank: touchBank,
            numberActiveTouches: 0,
            indexOfSingleActiveTouch: -1,
            mostRecentTimeStamp: 0
        };

    function timestampForTouch(touch) {
        return touch.timeStamp || touch.timestamp;
    }

    function getTouchIdentifier(_ref) {
        _ref = _ref.identifier;
        if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
        return _ref;
    }

    function recordTouchStart(touch) {
        var identifier = getTouchIdentifier(touch),
            touchRecord = touchBank[identifier];
        touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
            touchActive: true,
            startPageX: touch.pageX,
            startPageY: touch.pageY,
            startTimeStamp: timestampForTouch(touch),
            currentPageX: touch.pageX,
            currentPageY: touch.pageY,
            currentTimeStamp: timestampForTouch(touch),
            previousPageX: touch.pageX,
            previousPageY: touch.pageY,
            previousTimeStamp: timestampForTouch(touch)
        }, touchBank[identifier] = touchRecord);
        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
    }

    function recordTouchMove(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
    }

    function recordTouchEnd(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
    }

    var ResponderTouchHistoryStore = {
        recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
            if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove); else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier); else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
                if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
                    touchHistory.indexOfSingleActiveTouch = topLevelType;
                    break;
                }
            }
        },
        touchHistory: touchHistory
    };

    function accumulate(current, next) {
        if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
        return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
    }

    var responderInst = null,
        trackedTouchCount = 0;

    function changeResponder(nextResponderInst, blockHostResponder) {
        var oldResponderInst = responderInst;
        responderInst = nextResponderInst;
        if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
    }

    var eventTypes = {
        startShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onStartShouldSetResponder",
                captured: "onStartShouldSetResponderCapture"
            },
            dependencies: startDependencies
        },
        scrollShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onScrollShouldSetResponder",
                captured: "onScrollShouldSetResponderCapture"
            },
            dependencies: ["topScroll"]
        },
        selectionChangeShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onSelectionChangeShouldSetResponder",
                captured: "onSelectionChangeShouldSetResponderCapture"
            },
            dependencies: ["topSelectionChange"]
        },
        moveShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onMoveShouldSetResponder",
                captured: "onMoveShouldSetResponderCapture"
            },
            dependencies: moveDependencies
        },
        responderStart: {
            registrationName: "onResponderStart",
            dependencies: startDependencies
        },
        responderMove: {
            registrationName: "onResponderMove",
            dependencies: moveDependencies
        },
        responderEnd: {
            registrationName: "onResponderEnd",
            dependencies: endDependencies
        },
        responderRelease: {
            registrationName: "onResponderRelease",
            dependencies: endDependencies
        },
        responderTerminationRequest: {
            registrationName: "onResponderTerminationRequest",
            dependencies: []
        },
        responderGrant: {
            registrationName: "onResponderGrant",
            dependencies: []
        },
        responderReject: {
            registrationName: "onResponderReject",
            dependencies: []
        },
        responderTerminate: {
            registrationName: "onResponderTerminate",
            dependencies: []
        }
    },
        ResponderEventPlugin = {
            _getResponder: function _getResponder() {
                return responderInst;
            },
            eventTypes: eventTypes,
            extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                if (isStartish(topLevelType)) trackedTouchCount += 1; else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount; else return undefined, null;
                ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

                if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
                    var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
                    if (responderInst) b: {
                        var JSCompiler_temp$jscomp$0 = responderInst;

                        for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
                            depthA++;
                        }

                        tempA = 0;

                        for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
                            tempA++;
                        }

                        for (; 0 < depthA - tempA;) {
                            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
                        }

                        for (; 0 < tempA - depthA;) {
                            targetInst = getParent(targetInst), tempA--;
                        }

                        for (; depthA--;) {
                            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
                            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
                            targetInst = getParent(targetInst);
                        }

                        JSCompiler_temp$jscomp$0 = null;
                    } else JSCompiler_temp$jscomp$0 = targetInst;
                    targetInst = JSCompiler_temp$jscomp$0 === responderInst;
                    JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
                    JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
                    targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

                    b: {
                        JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
                        targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
                        if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
                            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
                                JSCompiler_temp = targetInst[depthA];
                                break b;
                            }
                        } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
                            JSCompiler_temp = targetInst;
                            break b;
                        }
                        JSCompiler_temp = null;
                    }

                    JSCompiler_temp$jscomp$0._dispatchInstances = null;
                    JSCompiler_temp$jscomp$0._dispatchListeners = null;
                    JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
                    JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
                } else JSCompiler_temp = null;

                JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
                targetInst = responderInst && isMoveish(topLevelType);
                depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
                if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
                JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
                if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
                    if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
                        if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
                            tempA = getInstanceFromNode(depthA);

                            b: {
                                for (depthA = responderInst; tempA;) {
                                    if (depthA === tempA || depthA === tempA.alternate) {
                                        depthA = true;
                                        break b;
                                    }

                                    tempA = getParent(tempA);
                                }

                                depthA = false;
                            }

                            if (depthA) {
                                topLevelType = false;
                                break a;
                            }
                        }
                    }
                    topLevelType = true;
                }
                if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
                return JSCompiler_temp;
            },
            GlobalResponderHandler: null,
            injection: {
                injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
                    ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
                }
            }
        },
        customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
        customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
    injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
    injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin,
        ReactNativeBridgeEventPlugin: {
            eventTypes: {},
            extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                if (null == targetInst) return null;
                var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
                    directDispatchConfig = customDirectEventTypes[topLevelType];
                if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
                topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
                if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle); else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle); else return null;
                return topLevelType;
            }
        }
    });
    var instanceCache = new Map(),
        instanceProps = new Map();

    function getInstanceFromTag(tag) {
        return instanceCache.get(tag) || null;
    }

    var restoreTarget = null,
        restoreQueue = null;

    function restoreStateOfTarget(target) {
        if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
    }

    function batchedUpdatesImpl(fn, bookkeeping) {
        return fn(bookkeeping);
    }

    function flushDiscreteUpdatesImpl() { }

    var isInsideEventHandler = false;

    function batchedUpdates(fn, bookkeeping) {
        if (isInsideEventHandler) return fn(bookkeeping);
        isInsideEventHandler = true;

        try {
            return batchedUpdatesImpl(fn, bookkeeping);
        } finally {
            if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
                restoreStateOfTarget(fn[bookkeeping]);
            }
        }
    }

    var EMPTY_NATIVE_EVENT = {};

    function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
        var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
            inst = getInstanceFromTag(rootNodeID);
        batchedUpdates(function () {
            var events = nativeEvent.target;

            for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
                var possiblePlugin = plugins[i];
                possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
            }

            events = events$jscomp$0;
            null !== events && (eventQueue = accumulateInto(eventQueue, events));
            events = eventQueue;
            eventQueue = null;

            if (events) {
                forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
                if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
                if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
            }
        });
    }

    ReactNativePrivateInterface.RCTEventEmitter.register({
        receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
            _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
        },
        receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
            if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
                var JSCompiler_temp = [];

                for (var i = 0; i < changedIndices.length; i++) {
                    var index = changedIndices[i];
                    JSCompiler_temp.push(touches[index]);
                    touches[index] = null;
                }

                for (i = changedIndices = 0; i < touches.length; i++) {
                    index = touches[i], null !== index && (touches[changedIndices++] = index);
                }

                touches.length = changedIndices;
            } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
                JSCompiler_temp.push(touches[changedIndices[i]]);
            }

            for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
                i = JSCompiler_temp[changedIndices];
                i.changedTouches = JSCompiler_temp;
                i.touches = touches;
                index = null;
                var target = i.target;
                null === target || undefined === target || 1 > target || (index = target);

                _receiveRootNodeIDEvent(index, eventTopLevelType, i);
            }
        }
    });

    getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
        return instanceProps.get(stateNode._nativeTag) || null;
    };

    getInstanceFromNode = getInstanceFromTag;

    getNodeFromInstance = function getNodeFromInstance(inst) {
        var tag = inst.stateNode._nativeTag;
        undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
        if (!tag) throw ReactError(Error("All native instances should have a tag."));
        return tag;
    };

    ResponderEventPlugin.injection.injectGlobalResponderHandler({
        onChange: function onChange(from, to, blockNativeResponder) {
            null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
        }
    });
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
        current: null
    });
    ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
        suspense: null
    });
    var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
        REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
        REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
        REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
        REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
        REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
        REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
        REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
        REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
        REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
        REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
        REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
        REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
        REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
    hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
    hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
    var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }

    function getComponentName(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.displayName || type.name || null;
        if ("string" === typeof type) return type;

        switch (type) {
            case REACT_FRAGMENT_TYPE:
                return "Fragment";

            case REACT_PORTAL_TYPE:
                return "Portal";

            case REACT_PROFILER_TYPE:
                return "Profiler";

            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";

            case REACT_SUSPENSE_TYPE:
                return "Suspense";

            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }

        if ("object" === typeof type) switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
                return "Context.Consumer";

            case REACT_PROVIDER_TYPE:
                return "Context.Provider";

            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                innerType = innerType.displayName || innerType.name || "";
                return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

            case REACT_MEMO_TYPE:
                return getComponentName(type.type);

            case REACT_LAZY_TYPE:
                if (type = 1 === type._status ? type._result : null) return getComponentName(type);
        }
        return null;
    }

    function isFiberMountedImpl(fiber) {
        var node = fiber;
        if (fiber.alternate) for (; node.return;) {
            node = node.return;
        } else {
            if (0 !== (node.effectTag & 2)) return 1;

            for (; node.return;) {
                if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
            }
        }
        return 3 === node.tag ? 2 : 3;
    }

    function assertIsMounted(fiber) {
        if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
    }

    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;

        if (!alternate) {
            alternate = isFiberMountedImpl(fiber);
            if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
            return 1 === alternate ? null : fiber;
        }

        for (var a = fiber, b = alternate; ;) {
            var parentA = a.return;
            if (null === parentA) break;
            var parentB = parentA.alternate;

            if (null === parentB) {
                b = parentA.return;

                if (null !== b) {
                    a = b;
                    continue;
                }

                break;
            }

            if (parentA.child === parentB.child) {
                for (parentB = parentA.child; parentB;) {
                    if (parentB === a) return assertIsMounted(parentA), fiber;
                    if (parentB === b) return assertIsMounted(parentA), alternate;
                    parentB = parentB.sibling;
                }

                throw ReactError(Error("Unable to find node on an unmounted component."));
            }

            if (a.return !== b.return) a = parentA, b = parentB; else {
                for (var didFindChild = false, _child = parentA.child; _child;) {
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }

                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }

                    _child = _child.sibling;
                }

                if (!didFindChild) {
                    for (_child = parentB.child; _child;) {
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }

                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }

                        _child = _child.sibling;
                    }

                    if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
                }
            }
            if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
        }

        if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
        return a.stateNode.current === a ? fiber : alternate;
    }

    function findCurrentHostFiber(parent) {
        parent = findCurrentFiberUsingSlowPath(parent);
        if (!parent) return null;

        for (var node = parent; ;) {
            if (5 === node.tag || 6 === node.tag) return node;
            if (node.child) node.child.return = node, node = node.child; else {
                if (node === parent) break;

                for (; !node.sibling;) {
                    if (!node.return || node.return === parent) return null;
                    node = node.return;
                }

                node.sibling.return = node.return;
                node = node.sibling;
            }
        }

        return null;
    }

    var emptyObject = {},
        removedKeys = null,
        removedKeyCount = 0;

    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
        if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
            restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
        } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
            if (removedKeys[i]) {
                var nextProp = node[i];

                if (undefined !== nextProp) {
                    var attributeConfig = validAttributes[i];

                    if (attributeConfig) {
                        "function" === typeof nextProp && (nextProp = true);
                        "undefined" === typeof nextProp && (nextProp = null);
                        if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp; else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
                        removedKeys[i] = false;
                        removedKeyCount--;
                    }
                }
            }
        }
    }

    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
        if (!updatePayload && prevProp === nextProp) return updatePayload;
        if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
        if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

        if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
            var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
                i;

            for (i = 0; i < minLength; i++) {
                updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
            }

            for (; i < prevProp.length; i++) {
                updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
            }

            for (; i < nextProp.length; i++) {
                updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
            }

            return updatePayload;
        }

        return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
    }

    function addNestedProperty(updatePayload, nextProp, validAttributes) {
        if (!nextProp) return updatePayload;
        if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

        for (var i = 0; i < nextProp.length; i++) {
            updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
        }

        return updatePayload;
    }

    function clearNestedProperty(updatePayload, prevProp, validAttributes) {
        if (!prevProp) return updatePayload;
        if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

        for (var i = 0; i < prevProp.length; i++) {
            updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
        }

        return updatePayload;
    }

    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
        var attributeConfig, propKey;

        for (propKey in nextProps) {
            if (attributeConfig = validAttributes[propKey]) {
                var prevProp = prevProps[propKey];
                var nextProp = nextProps[propKey];
                "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
                "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
                removedKeys && (removedKeys[propKey] = false);
                if (updatePayload && undefined !== updatePayload[propKey]) {
                    if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp; else {
                        if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
                    }
                } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp); else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
                    if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
                } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
            }
        }

        for (var _propKey in prevProps) {
            undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
        }

        return updatePayload;
    }

    function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
        return function () {
            if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
        };
    }

    var ReactNativeFiberHostComponent = function () {
        function ReactNativeFiberHostComponent(tag, viewConfig) {
            if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
            this._nativeTag = tag;
            this._children = [];
            this.viewConfig = viewConfig;
        }

        ReactNativeFiberHostComponent.prototype.blur = function () {
            ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
        };

        ReactNativeFiberHostComponent.prototype.focus = function () {
            ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
        };

        ReactNativeFiberHostComponent.prototype.measure = function (callback) {
            ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
            ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
            var relativeNode = undefined;
            "number" === typeof relativeToNativeNode ? relativeNode = relativeToNativeNode : relativeToNativeNode._nativeTag ? relativeNode = relativeToNativeNode._nativeTag : relativeToNativeNode.canonical && relativeToNativeNode.canonical._nativeTag && (relativeNode = relativeToNativeNode.canonical._nativeTag);
            null != relativeNode && ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
        };

        ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
            nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
        };

        return ReactNativeFiberHostComponent;
    }();

    function shim$1() {
        throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
    }

    var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
        UPDATE_SIGNAL = {},
        nextReactTag = 3;

    function allocateTag() {
        var tag = nextReactTag;
        1 === tag % 10 && (tag += 2);
        nextReactTag = tag + 2;
        return tag;
    }

    function recursivelyUncacheFiberNode(node) {
        if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node); else {
            var tag = node._nativeTag;
            instanceCache.delete(tag);
            instanceProps.delete(tag);

            node._children.forEach(recursivelyUncacheFiberNode);
        }
    }

    function finalizeInitialChildren(parentInstance) {
        if (0 === parentInstance._children.length) return false;

        var nativeTags = parentInstance._children.map(function (child) {
            return "number" === typeof child ? child : child._nativeTag;
        });

        ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);
        return false;
    }

    var scheduleTimeout = setTimeout,
        cancelTimeout = clearTimeout,
        BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    function getStackByFiberInDevAndProd(workInProgress) {
        var info = "";

        do {
            a: switch (workInProgress.tag) {
                case 3:
                case 4:
                case 6:
                case 7:
                case 10:
                case 9:
                    var JSCompiler_inline_result = "";
                    break a;

                default:
                    var owner = workInProgress._debugOwner,
                        source = workInProgress._debugSource,
                        name = getComponentName(workInProgress.type);
                    JSCompiler_inline_result = null;
                    owner && (JSCompiler_inline_result = getComponentName(owner.type));
                    owner = name;
                    name = "";
                    source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
                    JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
            }

            info += JSCompiler_inline_result;
            workInProgress = workInProgress.return;
        } while (workInProgress);

        return info;
    }

    new Set();
    var valueStack = [],
        index = -1;

    function pop(cursor) {
        0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
    }

    function push(cursor, value) {
        index++;
        valueStack[index] = cursor.current;
        cursor.current = value;
    }

    var emptyContextObject = {},
        contextStackCursor = {
            current: emptyContextObject
        },
        didPerformWorkStackCursor = {
            current: false
        },
        previousContext = emptyContextObject;

    function getMaskedContext(workInProgress, unmaskedContext) {
        var contextTypes = workInProgress.type.contextTypes;
        if (!contextTypes) return emptyContextObject;
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {},
            key;

        for (key in contextTypes) {
            context[key] = unmaskedContext[key];
        }

        instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
        return context;
    }

    function isContextProvider(type) {
        type = type.childContextTypes;
        return null !== type && undefined !== type;
    }

    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }

    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }

    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }

    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        fiber = type.childContextTypes;
        if ("function" !== typeof instance.getChildContext) return parentContext;
        instance = instance.getChildContext();

        for (var contextKey in instance) {
            if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
        }

        return _extends({}, parentContext, instance);
    }

    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode;
        instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
        previousContext = contextStackCursor.current;
        push(contextStackCursor, instance, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }

    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
        didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
        push(didPerformWorkStackCursor, didChange, workInProgress);
    }

    var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
        Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
        Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
        Scheduler_shouldYield = Scheduler.unstable_shouldYield,
        Scheduler_requestPaint = Scheduler.unstable_requestPaint,
        Scheduler_now = Scheduler.unstable_now,
        Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
        Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
        Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
        Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
        Scheduler_LowPriority = Scheduler.unstable_LowPriority,
        Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
        fakeCallbackNode = {},
        requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () { },
        syncQueue = null,
        immediateQueueCallbackNode = null,
        isFlushingSyncQueue = false,
        initialTimeMs = Scheduler_now(),
        now = 1e4 > initialTimeMs ? Scheduler_now : function () {
            return Scheduler_now() - initialTimeMs;
        };

    function getCurrentPriorityLevel() {
        switch (Scheduler_getCurrentPriorityLevel()) {
            case Scheduler_ImmediatePriority:
                return 99;

            case Scheduler_UserBlockingPriority:
                return 98;

            case Scheduler_NormalPriority:
                return 97;

            case Scheduler_LowPriority:
                return 96;

            case Scheduler_IdlePriority:
                return 95;

            default:
                throw ReactError(Error("Unknown priority level."));
        }
    }

    function reactPriorityToSchedulerPriority(reactPriorityLevel) {
        switch (reactPriorityLevel) {
            case 99:
                return Scheduler_ImmediatePriority;

            case 98:
                return Scheduler_UserBlockingPriority;

            case 97:
                return Scheduler_NormalPriority;

            case 96:
                return Scheduler_LowPriority;

            case 95:
                return Scheduler_IdlePriority;

            default:
                throw ReactError(Error("Unknown priority level."));
        }
    }

    function runWithPriority(reactPriorityLevel, fn) {
        reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_runWithPriority(reactPriorityLevel, fn);
    }

    function scheduleCallback(reactPriorityLevel, callback, options) {
        reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
    }

    function scheduleSyncCallback(callback) {
        null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
        return fakeCallbackNode;
    }

    function flushSyncCallbackQueue() {
        null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
        flushSyncCallbackQueueImpl();
    }

    function flushSyncCallbackQueueImpl() {
        if (!isFlushingSyncQueue && null !== syncQueue) {
            isFlushingSyncQueue = true;
            var i = 0;

            try {
                var queue = syncQueue;
                runWithPriority(99, function () {
                    for (; i < queue.length; i++) {
                        var callback = queue[i];

                        do {
                            callback = callback(true);
                        } while (null !== callback);
                    }
                });
                syncQueue = null;
            } catch (error) {
                throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
            } finally {
                isFlushingSyncQueue = false;
            }
        }
    }

    function inferPriorityFromExpirationTime(currentTime, expirationTime) {
        if (1073741823 === expirationTime) return 99;
        if (1 === expirationTime) return 95;
        currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
        return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
    }

    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }

    var hasOwnProperty = Object.prototype.hasOwnProperty;

    function shallowEqual(objA, objB) {
        if (is(objA, objB)) return true;
        if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
        var keysA = Object.keys(objA),
            keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;

        for (keysB = 0; keysB < keysA.length; keysB++) {
            if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
        }

        return true;
    }

    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            baseProps = _extends({}, baseProps);
            Component = Component.defaultProps;

            for (var propName in Component) {
                undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
            }
        }

        return baseProps;
    }

    function readLazyComponentType(lazyComponent) {
        var result = lazyComponent._result;

        switch (lazyComponent._status) {
            case 1:
                return result;

            case 2:
                throw result;

            case 0:
                throw result;

            default:
                lazyComponent._status = 0;
                result = lazyComponent._ctor;
                result = result();
                result.then(function (moduleObject) {
                    0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
                }, function (error) {
                    0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
                });

                switch (lazyComponent._status) {
                    case 1:
                        return lazyComponent._result;

                    case 2:
                        throw lazyComponent._result;
                }

                lazyComponent._result = result;
                throw result;
        }
    }

    var valueCursor = {
        current: null
    },
        currentlyRenderingFiber = null,
        lastContextDependency = null,
        lastContextWithAllBitsObserved = null;

    function resetContextDependencies() {
        lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
    }

    function pushProvider(providerFiber, nextValue) {
        var context = providerFiber.type._context;
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
    }

    function popProvider(providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        providerFiber.type._context._currentValue = currentValue;
    }

    function scheduleWorkOnParentPath(parent, renderExpirationTime) {
        for (; null !== parent;) {
            var alternate = parent.alternate;
            if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime); else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime; else break;
            parent = parent.return;
        }
    }

    function prepareToReadContext(workInProgress, renderExpirationTime) {
        currentlyRenderingFiber = workInProgress;
        lastContextWithAllBitsObserved = lastContextDependency = null;
        workInProgress = workInProgress.dependencies;
        null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
    }

    function readContext(context, observedBits) {
        if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
            if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
            observedBits = {
                context: context,
                observedBits: observedBits,
                next: null
            };

            if (null === lastContextDependency) {
                if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
                lastContextDependency = observedBits;
                currentlyRenderingFiber.dependencies = {
                    expirationTime: 0,
                    firstContext: observedBits,
                    responders: null
                };
            } else lastContextDependency = lastContextDependency.next = observedBits;
        }

        return context._currentValue;
    }

    var hasForceUpdate = false;

    function createUpdateQueue(baseState) {
        return {
            baseState: baseState,
            firstUpdate: null,
            lastUpdate: null,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null
        };
    }

    function cloneUpdateQueue(currentQueue) {
        return {
            baseState: currentQueue.baseState,
            firstUpdate: currentQueue.firstUpdate,
            lastUpdate: currentQueue.lastUpdate,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null
        };
    }

    function createUpdate(expirationTime, suspenseConfig) {
        return {
            expirationTime: expirationTime,
            suspenseConfig: suspenseConfig,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
            nextEffect: null
        };
    }

    function appendUpdateToQueue(queue, update) {
        null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
    }

    function enqueueUpdate(fiber, update) {
        var alternate = fiber.alternate;

        if (null === alternate) {
            var queue1 = fiber.updateQueue;
            var queue2 = null;
            null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
        } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

        null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
    }

    function enqueueCapturedUpdate(workInProgress, update) {
        var workInProgressQueue = workInProgress.updateQueue;
        workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
        null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
    }

    function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
        var current = workInProgress.alternate;
        null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
        return queue;
    }

    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch (update.tag) {
            case 1:
                return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

            case 3:
                workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

            case 0:
                workInProgress = update.payload;
                nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
                if (null === nextProps || undefined === nextProps) break;
                return _extends({}, prevState, nextProps);

            case 2:
                hasForceUpdate = true;
        }

        return prevState;
    }

    function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
        hasForceUpdate = false;
        queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

        for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
            var updateExpirationTime = update.expirationTime;
            updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
            update = update.next;
        }

        updateExpirationTime = null;

        for (update = queue.firstCapturedUpdate; null !== update;) {
            var _updateExpirationTime = update.expirationTime;
            _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
            update = update.next;
        }

        null === newFirstUpdate && (queue.lastUpdate = null);
        null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
        null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
        queue.baseState = newBaseState;
        queue.firstUpdate = newFirstUpdate;
        queue.firstCapturedUpdate = updateExpirationTime;
        workInProgress.expirationTime = newExpirationTime;
        workInProgress.memoizedState = resultState;
    }

    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
        commitUpdateEffects(finishedQueue.firstEffect, instance);
        finishedQueue.firstEffect = finishedQueue.lastEffect = null;
        commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
        finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
    }

    function commitUpdateEffects(effect, instance) {
        for (; null !== effect;) {
            var _callback3 = effect.callback;

            if (null !== _callback3) {
                effect.callback = null;
                var context = instance;
                if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

                _callback3.call(context);
            }

            effect = effect.nextEffect;
        }
    }

    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
        emptyRefsObject = new React.Component().refs;

    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        ctor = workInProgress.memoizedState;
        getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
        getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
        workInProgress.memoizedState = getDerivedStateFromProps;
        nextProps = workInProgress.updateQueue;
        null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
    }

    var classComponentUpdater = {
        isMounted: function isMounted(component) {
            return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
        },
        enqueueSetState: function enqueueSetState(inst, payload, callback) {
            inst = inst._reactInternalFiber;
            var currentTime = requestCurrentTime(),
                suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
            suspenseConfig = createUpdate(currentTime, suspenseConfig);
            suspenseConfig.payload = payload;
            undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
            enqueueUpdate(inst, suspenseConfig);
            scheduleUpdateOnFiber(inst, currentTime);
        },
        enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
            inst = inst._reactInternalFiber;
            var currentTime = requestCurrentTime(),
                suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
            suspenseConfig = createUpdate(currentTime, suspenseConfig);
            suspenseConfig.tag = 1;
            suspenseConfig.payload = payload;
            undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
            enqueueUpdate(inst, suspenseConfig);
            scheduleUpdateOnFiber(inst, currentTime);
        },
        enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
            inst = inst._reactInternalFiber;
            var currentTime = requestCurrentTime(),
                suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
            suspenseConfig = createUpdate(currentTime, suspenseConfig);
            suspenseConfig.tag = 2;
            undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
            enqueueUpdate(inst, suspenseConfig);
            scheduleUpdateOnFiber(inst, currentTime);
        }
    };

    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        workInProgress = workInProgress.stateNode;
        return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
    }

    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false,
            unmaskedContext = emptyContextObject;
        var context = ctor.contextType;
        "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
        ctor = new ctor(props, context);
        workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
        ctor.updater = classComponentUpdater;
        workInProgress.stateNode = ctor;
        ctor._reactInternalFiber = workInProgress;
        isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
        return ctor;
    }

    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        workInProgress = instance.state;
        "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
        "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
    }

    function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = emptyRefsObject;
        var contextType = ctor.contextType;
        "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
        contextType = workInProgress.updateQueue;
        null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
        contextType = ctor.getDerivedStateFromProps;
        "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
        "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
        "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
    }

    var isArray = Array.isArray;

    function coerceRef(returnFiber, current$$1, element) {
        returnFiber = element.ref;

        if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
            if (element._owner) {
                element = element._owner;
                var inst = undefined;

                if (element) {
                    if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
                    inst = element.stateNode;
                }

                if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
                var stringRef = "" + returnFiber;
                if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

                current$$1 = function current$$1(value) {
                    var refs = inst.refs;
                    refs === emptyRefsObject && (refs = inst.refs = {});
                    null === value ? delete refs[stringRef] : refs[stringRef] = value;
                };

                current$$1._stringRef = stringRef;
                return current$$1;
            }

            if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
            if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
        }

        return returnFiber;
    }

    function throwOnInvalidObjectType(returnFiber, newChild) {
        if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
    }

    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                var last = returnFiber.lastEffect;
                null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
                childToDelete.nextEffect = null;
                childToDelete.effectTag = 8;
            }
        }

        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;

            for (; null !== currentFirstChild;) {
                deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            }

            return null;
        }

        function mapRemainingChildren(returnFiber, currentFirstChild) {
            for (returnFiber = new Map(); null !== currentFirstChild;) {
                null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            }

            return returnFiber;
        }

        function useFiber(fiber, pendingProps, expirationTime) {
            fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
            fiber.index = 0;
            fiber.sibling = null;
            return fiber;
        }

        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) return lastPlacedIndex;
            newIndex = newFiber.alternate;
            if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
            newFiber.effectTag = 2;
            return lastPlacedIndex;
        }

        function placeSingleChild(newFiber) {
            shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
            return newFiber;
        }

        function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
            if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
            current$$1 = useFiber(current$$1, textContent, expirationTime);
            current$$1.return = returnFiber;
            return current$$1;
        }

        function updateElement(returnFiber, current$$1, element, expirationTime) {
            if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
            expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
            expirationTime.ref = coerceRef(returnFiber, current$$1, element);
            expirationTime.return = returnFiber;
            return expirationTime;
        }

        function updatePortal(returnFiber, current$$1, portal, expirationTime) {
            if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
            current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
            current$$1.return = returnFiber;
            return current$$1;
        }

        function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
            if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
            current$$1 = useFiber(current$$1, fragment, expirationTime);
            current$$1.return = returnFiber;
            return current$$1;
        }

        function createChild(returnFiber, newChild, expirationTime) {
            if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

            if ("object" === typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

                    case REACT_PORTAL_TYPE:
                        return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
                }

                if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
                throwOnInvalidObjectType(returnFiber, newChild);
            }

            return null;
        }

        function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

            if ("object" === typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

                    case REACT_PORTAL_TYPE:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
                }

                if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
                throwOnInvalidObjectType(returnFiber, newChild);
            }

            return null;
        }

        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
            if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

            if ("object" === typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

                    case REACT_PORTAL_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
                }

                if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
                throwOnInvalidObjectType(returnFiber, newChild);
            }

            return null;
        }

        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
            for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }

                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }

            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

            if (null === oldFiber) {
                for (; newIdx < newChildren.length; newIdx++) {
                    oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                }

                return resultingFirstChild;
            }

            for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
                nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            }

            shouldTrackSideEffects && oldFiber.forEach(function (child) {
                return deleteChild(returnFiber, child);
            });
            return resultingFirstChild;
        }

        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
            newChildrenIterable = iteratorFn.call(newChildrenIterable);
            if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

            for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }

                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }

            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

            if (null === oldFiber) {
                for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
                    step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
                }

                return iteratorFn;
            }

            for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
                step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
            }

            shouldTrackSideEffects && oldFiber.forEach(function (child) {
                return deleteChild(returnFiber, child);
            });
            return iteratorFn;
        }

        return function (returnFiber, currentFirstChild, newChild, expirationTime) {
            var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
            isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
            var isObject = "object" === typeof newChild && null !== newChild;
            if (isObject) switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    a: {
                        isObject = newChild.key;

                        for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
                            if (isUnkeyedTopLevelFragment.key === isObject) {
                                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                                    deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                                    currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                                    currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                                    currentFirstChild.return = returnFiber;
                                    returnFiber = currentFirstChild;
                                    break a;
                                }

                                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                                break;
                            } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

                            isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
                        }

                        newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
                    }

                    return placeSingleChild(returnFiber);

                case REACT_PORTAL_TYPE:
                    a: {
                        for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
                            if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                                    deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                    currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                                    currentFirstChild.return = returnFiber;
                                    returnFiber = currentFirstChild;
                                    break a;
                                }

                                deleteRemainingChildren(returnFiber, currentFirstChild);
                                break;
                            } else deleteChild(returnFiber, currentFirstChild);

                            currentFirstChild = currentFirstChild.sibling;
                        }

                        currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
                        currentFirstChild.return = returnFiber;
                        returnFiber = currentFirstChild;
                    }

                    return placeSingleChild(returnFiber);
            }
            if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
            if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
            if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
            isObject && throwOnInvalidObjectType(returnFiber, newChild);
            if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
                case 1:
                case 0:
                    throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        };
    }

    var reconcileChildFibers = ChildReconciler(true),
        mountChildFibers = ChildReconciler(false),
        NO_CONTEXT = {},
        contextStackCursor$1 = {
            current: NO_CONTEXT
        },
        contextFiberStackCursor = {
            current: NO_CONTEXT
        },
        rootInstanceStackCursor = {
            current: NO_CONTEXT
        };

    function requiredContext(c) {
        if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
        return c;
    }

    function pushHostContainer(fiber, nextRootInstance) {
        push(rootInstanceStackCursor, nextRootInstance, fiber);
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, {
            isInAParentText: false
        }, fiber);
    }

    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }

    function pushHostContext(fiber) {
        requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = fiber.type;
        nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
        nextContext = context.isInAParentText !== nextContext ? {
            isInAParentText: nextContext
        } : context;
        context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
    }

    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
    }

    var SubtreeSuspenseContextMask = 1,
        InvisibleParentSuspenseContext = 1,
        ForceSuspenseFallback = 2,
        suspenseStackCursor = {
            current: 0
        };

    function findFirstSuspended(row) {
        for (var node = row; null !== node;) {
            if (13 === node.tag) {
                if (null !== node.memoizedState) return node;
            } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
                if (0 !== (node.effectTag & 64)) return node;
            } else if (null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }

            if (node === row) break;

            for (; null === node.sibling;) {
                if (null === node.return || node.return === row) return null;
                node = node.return;
            }

            node.sibling.return = node.return;
            node = node.sibling;
        }

        return null;
    }

    function createResponderListener(responder, props) {
        return {
            responder: responder,
            props: props
        };
    }

    var NoEffect$1 = 0,
        UnmountSnapshot = 2,
        UnmountMutation = 4,
        MountMutation = 8,
        UnmountLayout = 16,
        MountLayout = 32,
        MountPassive = 64,
        UnmountPassive = 128,
        ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
        renderExpirationTime$1 = 0,
        currentlyRenderingFiber$1 = null,
        currentHook = null,
        nextCurrentHook = null,
        firstWorkInProgressHook = null,
        workInProgressHook = null,
        nextWorkInProgressHook = null,
        remainingExpirationTime = 0,
        componentUpdateQueue = null,
        sideEffectTag = 0,
        didScheduleRenderPhaseUpdate = false,
        renderPhaseUpdates = null,
        numberOfReRenders = 0;

    function throwInvalidHookError() {
        throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
    }

    function areHookInputsEqual(nextDeps, prevDeps) {
        if (null === prevDeps) return false;

        for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (!is(nextDeps[i], prevDeps[i])) return false;
        }

        return true;
    }

    function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
        renderExpirationTime$1 = nextRenderExpirationTime;
        currentlyRenderingFiber$1 = workInProgress;
        nextCurrentHook = null !== current ? current.memoizedState : null;
        ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
        workInProgress = Component(props, refOrContext);

        if (didScheduleRenderPhaseUpdate) {
            do {
                didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
            } while (didScheduleRenderPhaseUpdate);

            renderPhaseUpdates = null;
            numberOfReRenders = 0;
        }

        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        current = currentlyRenderingFiber$1;
        current.memoizedState = firstWorkInProgressHook;
        current.expirationTime = remainingExpirationTime;
        current.updateQueue = componentUpdateQueue;
        current.effectTag |= sideEffectTag;
        current = null !== currentHook && null !== currentHook.next;
        renderExpirationTime$1 = 0;
        nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
        remainingExpirationTime = 0;
        componentUpdateQueue = null;
        sideEffectTag = 0;
        if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
        return workInProgress;
    }

    function resetHooks() {
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        renderExpirationTime$1 = 0;
        nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
        remainingExpirationTime = 0;
        componentUpdateQueue = null;
        sideEffectTag = 0;
        didScheduleRenderPhaseUpdate = false;
        renderPhaseUpdates = null;
        numberOfReRenders = 0;
    }

    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            queue: null,
            baseUpdate: null,
            next: null
        };
        null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }

    function updateWorkInProgressHook() {
        if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null; else {
            if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
            currentHook = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                queue: currentHook.queue,
                baseUpdate: currentHook.baseUpdate,
                next: null
            };
            workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
            nextCurrentHook = currentHook.next;
        }
        return workInProgressHook;
    }

    function basicStateReducer(state, action) {
        return "function" === typeof action ? action(state) : action;
    }

    function updateReducer(reducer) {
        var hook = updateWorkInProgressHook(),
            queue = hook.queue;
        if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
        queue.lastRenderedReducer = reducer;

        if (0 < numberOfReRenders) {
            var _dispatch = queue.dispatch;

            if (null !== renderPhaseUpdates) {
                var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

                if (undefined !== firstRenderPhaseUpdate) {
                    renderPhaseUpdates.delete(queue);
                    var newState = hook.memoizedState;

                    do {
                        newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
                    } while (null !== firstRenderPhaseUpdate);

                    is(newState, hook.memoizedState) || (didReceiveUpdate = true);
                    hook.memoizedState = newState;
                    hook.baseUpdate === queue.last && (hook.baseState = newState);
                    queue.lastRenderedState = newState;
                    return [newState, _dispatch];
                }
            }

            return [hook.memoizedState, _dispatch];
        }

        _dispatch = queue.last;
        var baseUpdate = hook.baseUpdate;
        newState = hook.baseState;
        null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

        if (null !== _dispatch) {
            var newBaseUpdate = firstRenderPhaseUpdate = null,
                _update = _dispatch,
                didSkip = false;

            do {
                var updateExpirationTime = _update.expirationTime;
                updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
                baseUpdate = _update;
                _update = _update.next;
            } while (null !== _update && _update !== _dispatch);

            didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
            is(newState, hook.memoizedState) || (didReceiveUpdate = true);
            hook.memoizedState = newState;
            hook.baseUpdate = newBaseUpdate;
            hook.baseState = firstRenderPhaseUpdate;
            queue.lastRenderedState = newState;
        }

        return [hook.memoizedState, queue.dispatch];
    }

    function pushEffect(tag, create, destroy, deps) {
        tag = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            next: null
        };
        null === componentUpdateQueue ? (componentUpdateQueue = {
            lastEffect: null
        }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
        return tag;
    }

    function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
        var hook = mountWorkInProgressHook();
        sideEffectTag |= fiberEffectTag;
        hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
    }

    function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
        var hook = updateWorkInProgressHook();
        deps = undefined === deps ? null : deps;
        var destroy = undefined;

        if (null !== currentHook) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;

            if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
                pushEffect(NoEffect$1, create, destroy, deps);
                return;
            }
        }

        sideEffectTag |= fiberEffectTag;
        hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
    }

    function imperativeHandleEffect(create, ref) {
        if ("function" === typeof ref) return create = create(), ref(create), function () {
            ref(null);
        };
        if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
            ref.current = null;
        };
    }

    function mountDebugValue() { }

    function dispatchAction(fiber, queue, action) {
        if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
        var alternate = fiber.alternate;
        if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
            if (didScheduleRenderPhaseUpdate = true, fiber = {
                expirationTime: renderExpirationTime$1,
                suspenseConfig: null,
                action: action,
                eagerReducer: null,
                eagerState: null,
                next: null
            }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber); else {
                for (queue = action; null !== queue.next;) {
                    queue = queue.next;
                }

                queue.next = fiber;
            }
        } else {
            var currentTime = requestCurrentTime(),
                _suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
            _suspenseConfig = {
                expirationTime: currentTime,
                suspenseConfig: _suspenseConfig,
                action: action,
                eagerReducer: null,
                eagerState: null,
                next: null
            };
            var _last = queue.last;
            if (null === _last) _suspenseConfig.next = _suspenseConfig; else {
                var first = _last.next;
                null !== first && (_suspenseConfig.next = first);
                _last.next = _suspenseConfig;
            }
            queue.last = _suspenseConfig;
            if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
                var currentState = queue.lastRenderedState,
                    _eagerState = alternate(currentState, action);

                _suspenseConfig.eagerReducer = alternate;
                _suspenseConfig.eagerState = _eagerState;
                if (is(_eagerState, currentState)) return;
            } catch (error) { } finally { }
            scheduleUpdateOnFiber(fiber, currentTime);
        }
    }

    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useResponder: throwInvalidHookError
    },
        HooksDispatcherOnMount = {
            readContext: readContext,
            useCallback: function useCallback(callback, deps) {
                mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
                return callback;
            },
            useContext: readContext,
            useEffect: function useEffect(create, deps) {
                return mountEffectImpl(516, 192, create, deps);
            },
            useImperativeHandle: function useImperativeHandle(ref, create, deps) {
                deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
                return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
            },
            useLayoutEffect: function useLayoutEffect(create, deps) {
                return mountEffectImpl(4, 36, create, deps);
            },
            useMemo: function useMemo(nextCreate, deps) {
                var hook = mountWorkInProgressHook();
                deps = undefined === deps ? null : deps;
                nextCreate = nextCreate();
                hook.memoizedState = [nextCreate, deps];
                return nextCreate;
            },
            useReducer: function useReducer(reducer, initialArg, init) {
                var hook = mountWorkInProgressHook();
                initialArg = undefined !== init ? init(initialArg) : initialArg;
                hook.memoizedState = hook.baseState = initialArg;
                reducer = hook.queue = {
                    last: null,
                    dispatch: null,
                    lastRenderedReducer: reducer,
                    lastRenderedState: initialArg
                };
                reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
                return [hook.memoizedState, reducer];
            },
            useRef: function useRef(initialValue) {
                var hook = mountWorkInProgressHook();
                initialValue = {
                    current: initialValue
                };
                return hook.memoizedState = initialValue;
            },
            useState: function useState(initialState) {
                var hook = mountWorkInProgressHook();
                "function" === typeof initialState && (initialState = initialState());
                hook.memoizedState = hook.baseState = initialState;
                initialState = hook.queue = {
                    last: null,
                    dispatch: null,
                    lastRenderedReducer: basicStateReducer,
                    lastRenderedState: initialState
                };
                initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
                return [hook.memoizedState, initialState];
            },
            useDebugValue: mountDebugValue,
            useResponder: createResponderListener
        },
        HooksDispatcherOnUpdate = {
            readContext: readContext,
            useCallback: function useCallback(callback, deps) {
                var hook = updateWorkInProgressHook();
                deps = undefined === deps ? null : deps;
                var prevState = hook.memoizedState;
                if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
                hook.memoizedState = [callback, deps];
                return callback;
            },
            useContext: readContext,
            useEffect: function useEffect(create, deps) {
                return updateEffectImpl(516, 192, create, deps);
            },
            useImperativeHandle: function useImperativeHandle(ref, create, deps) {
                deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
                return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
            },
            useLayoutEffect: function useLayoutEffect(create, deps) {
                return updateEffectImpl(4, 36, create, deps);
            },
            useMemo: function useMemo(nextCreate, deps) {
                var hook = updateWorkInProgressHook();
                deps = undefined === deps ? null : deps;
                var prevState = hook.memoizedState;
                if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
                nextCreate = nextCreate();
                hook.memoizedState = [nextCreate, deps];
                return nextCreate;
            },
            useReducer: updateReducer,
            useRef: function useRef() {
                return updateWorkInProgressHook().memoizedState;
            },
            useState: function useState(initialState) {
                return updateReducer(basicStateReducer, initialState);
            },
            useDebugValue: mountDebugValue,
            useResponder: createResponderListener
        },
        hydrationParentFiber = null,
        nextHydratableInstance = null,
        isHydrating = false;

    function tryHydrate(fiber, nextInstance) {
        switch (fiber.tag) {
            case 5:
                return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

            case 6:
                return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

            case 13:
                return false;

            default:
                return false;
        }
    }

    function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
        if (isHydrating) {
            var nextInstance = nextHydratableInstance;

            if (nextInstance) {
                var firstAttemptedInstance = nextInstance;

                if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
                    nextInstance = shim$1(firstAttemptedInstance);

                    if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
                        fiber$jscomp$0.effectTag |= 2;
                        isHydrating = false;
                        hydrationParentFiber = fiber$jscomp$0;
                        return;
                    }

                    var returnFiber = hydrationParentFiber,
                        fiber = createFiber(5, null, null, 0);
                    fiber.elementType = "DELETED";
                    fiber.type = "DELETED";
                    fiber.stateNode = firstAttemptedInstance;
                    fiber.return = returnFiber;
                    fiber.effectTag = 8;
                    null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
                }

                hydrationParentFiber = fiber$jscomp$0;
                nextHydratableInstance = shim$1(nextInstance);
            } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
        }
    }

    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
        didReceiveUpdate = false;

    function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
        workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
    }

    function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
        Component = Component.render;
        var ref = workInProgress.ref;
        prepareToReadContext(workInProgress, renderExpirationTime);
        nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
        if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        workInProgress.effectTag |= 1;
        reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
        return workInProgress.child;
    }

    function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
        if (null === current$$1) {
            var type = Component.type;
            if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
            current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
            current$$1.ref = workInProgress.ref;
            current$$1.return = workInProgress;
            return workInProgress.child = current$$1;
        }

        type = current$$1.child;
        if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        workInProgress.effectTag |= 1;
        current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
        current$$1.ref = workInProgress.ref;
        current$$1.return = workInProgress;
        return workInProgress.child = current$$1;
    }

    function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
        return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
    }

    function markRef(current$$1, workInProgress) {
        var ref = workInProgress.ref;
        if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
    }

    function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
        var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
        context = getMaskedContext(workInProgress, context);
        prepareToReadContext(workInProgress, renderExpirationTime);
        Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
        if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        workInProgress.effectTag |= 1;
        reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
        return workInProgress.child;
    }

    function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
        if (isContextProvider(Component)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;

        prepareToReadContext(workInProgress, renderExpirationTime);
        if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true; else if (null === current$$1) {
            var instance = workInProgress.stateNode,
                oldProps = workInProgress.memoizedProps;
            instance.props = oldProps;
            var oldContext = instance.context,
                contextType = Component.contextType;
            "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
            var getDerivedStateFromProps = Component.getDerivedStateFromProps,
                hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
            hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
            hasForceUpdate = false;
            var oldState = workInProgress.memoizedState;
            oldContext = instance.state = oldState;
            var updateQueue = workInProgress.updateQueue;
            null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
            oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
        } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
        return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
    }

    function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
        markRef(current$$1, workInProgress);
        var didCaptureError = 0 !== (workInProgress.effectTag & 64);
        if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        shouldUpdate = workInProgress.stateNode;
        ReactCurrentOwner$3.current = workInProgress;
        var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
        workInProgress.effectTag |= 1;
        null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
        workInProgress.memoizedState = shouldUpdate.state;
        hasContext && invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }

    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }

    var SUSPENDED_MARKER = {};

    function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
        var mode = workInProgress.mode,
            nextProps = workInProgress.pendingProps,
            suspenseContext = suspenseStackCursor.current,
            nextState = null,
            nextDidTimeout = false,
            JSCompiler_temp;
        (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
        JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
        suspenseContext &= SubtreeSuspenseContextMask;
        push(suspenseStackCursor, suspenseContext, workInProgress);
        if (null === current$$1) {
            if (nextDidTimeout) {
                nextProps = nextProps.fallback;
                current$$1 = createFiberFromFragment(null, mode, 0, null);
                current$$1.return = workInProgress;
                if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
                    nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
                }
                renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
                renderExpirationTime.return = workInProgress;
                current$$1.sibling = renderExpirationTime;
                mode = current$$1;
            } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
        } else {
            if (null !== current$$1.memoizedState) {
                if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
                    nextProps = nextProps.fallback;
                    renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
                    renderExpirationTime.return = workInProgress;
                    if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
                        nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
                    }
                    nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
                    nextProps.return = workInProgress;
                    renderExpirationTime.sibling = nextProps;
                    mode = renderExpirationTime;
                    renderExpirationTime.childExpirationTime = 0;
                    renderExpirationTime = nextProps;
                } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
            } else if (suspenseContext = current$$1.child, nextDidTimeout) {
                nextDidTimeout = nextProps.fallback;
                nextProps = createFiberFromFragment(null, mode, 0, null);
                nextProps.return = workInProgress;
                nextProps.child = suspenseContext;
                null !== suspenseContext && (suspenseContext.return = nextProps);
                if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
                    suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
                }
                renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
                renderExpirationTime.return = workInProgress;
                nextProps.sibling = renderExpirationTime;
                renderExpirationTime.effectTag |= 2;
                mode = nextProps;
                nextProps.childExpirationTime = 0;
            } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
            workInProgress.stateNode = current$$1.stateNode;
        }
        workInProgress.memoizedState = nextState;
        workInProgress.child = mode;
        return renderExpirationTime;
    }

    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        null === renderState ? workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            last: lastContentRow,
            tail: tail,
            tailExpiration: 0,
            tailMode: tailMode
        } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
    }

    function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
        var nextProps = workInProgress.pendingProps,
            revealOrder = nextProps.revealOrder,
            tailMode = nextProps.tail;
        reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
        nextProps = suspenseStackCursor.current;
        if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64; else {
            if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
                if (13 === current$$1.tag) {
                    if (null !== current$$1.memoizedState) {
                        current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
                        var alternate = current$$1.alternate;
                        null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
                        scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
                    }
                } else if (null !== current$$1.child) {
                    current$$1.child.return = current$$1;
                    current$$1 = current$$1.child;
                    continue;
                }

                if (current$$1 === workInProgress) break a;

                for (; null === current$$1.sibling;) {
                    if (null === current$$1.return || current$$1.return === workInProgress) break a;
                    current$$1 = current$$1.return;
                }

                current$$1.sibling.return = current$$1.return;
                current$$1 = current$$1.sibling;
            }
            nextProps &= SubtreeSuspenseContextMask;
        }
        push(suspenseStackCursor, nextProps, workInProgress);
        if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null; else switch (revealOrder) {
            case "forwards":
                renderExpirationTime = workInProgress.child;

                for (revealOrder = null; null !== renderExpirationTime;) {
                    nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
                }

                renderExpirationTime = revealOrder;
                null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
                initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
                break;

            case "backwards":
                renderExpirationTime = null;
                revealOrder = workInProgress.child;

                for (workInProgress.child = null; null !== revealOrder;) {
                    nextProps = revealOrder.alternate;

                    if (null !== nextProps && null === findFirstSuspended(nextProps)) {
                        workInProgress.child = revealOrder;
                        break;
                    }

                    nextProps = revealOrder.sibling;
                    revealOrder.sibling = renderExpirationTime;
                    renderExpirationTime = revealOrder;
                    revealOrder = nextProps;
                }

                initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
                break;

            case "together":
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;

            default:
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }

    function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
        null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
        if (workInProgress.childExpirationTime < renderExpirationTime) return null;
        if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

        if (null !== workInProgress.child) {
            current$$1 = workInProgress.child;
            renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
            workInProgress.child = renderExpirationTime;

            for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
                current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
            }

            renderExpirationTime.sibling = null;
        }

        return workInProgress.child;
    }

    var appendAllChildren = undefined,
        updateHostContainer = undefined,
        updateHostComponent$1 = undefined,
        updateHostText$1 = undefined;

    appendAllChildren = function appendAllChildren(parent, workInProgress) {
        for (var node = workInProgress.child; null !== node;) {
            if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode); else if (4 !== node.tag && null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) break;

            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }

            node.sibling.return = node.return;
            node = node.sibling;
        }
    };

    updateHostContainer = function updateHostContainer() { };

    updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
        current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
    };

    updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
        oldText !== newText && (workInProgress.effectTag |= 4);
    };

    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        switch (renderState.tailMode) {
            case "hidden":
                hasRenderedATailFallback = renderState.tail;

                for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
                    null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
                }

                null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
                break;

            case "collapsed":
                lastTailNode = renderState.tail;

                for (var _lastTailNode = null; null !== lastTailNode;) {
                    null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
                }

                null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
        }
    }

    function unwindWork(workInProgress) {
        switch (workInProgress.tag) {
            case 1:
                isContextProvider(workInProgress.type) && popContext(workInProgress);
                var effectTag = workInProgress.effectTag;
                return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

            case 3:
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                effectTag = workInProgress.effectTag;
                if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
                workInProgress.effectTag = effectTag & -2049 | 64;
                return workInProgress;

            case 5:
                return popHostContext(workInProgress), null;

            case 13:
                return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

            case 18:
                return null;

            case 19:
                return pop(suspenseStackCursor, workInProgress), null;

            case 4:
                return popHostContainer(workInProgress), null;

            case 10:
                return popProvider(workInProgress), null;

            default:
                return null;
        }
    }

    function createCapturedValue(value, source) {
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }

    if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

    function logCapturedError(capturedError) {
        false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
    }

    var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

    function logError(boundary, errorInfo) {
        var source = errorInfo.source,
            stack = errorInfo.stack;
        null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
        errorInfo = {
            componentName: null !== source ? getComponentName(source.type) : null,
            componentStack: null !== stack ? stack : "",
            error: errorInfo.value,
            errorBoundary: null,
            errorBoundaryName: null,
            errorBoundaryFound: false,
            willRetry: false
        };
        null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

        try {
            logCapturedError(errorInfo);
        } catch (e) {
            setTimeout(function () {
                throw e;
            });
        }
    }

    function safelyCallComponentWillUnmount(current$$1, instance) {
        try {
            instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
        } catch (unmountError) {
            captureCommitPhaseError(current$$1, unmountError);
        }
    }

    function safelyDetachRef(current$$1) {
        var ref = current$$1.ref;
        if (null !== ref) if ("function" === typeof ref) try {
            ref(null);
        } catch (refError) {
            captureCommitPhaseError(current$$1, refError);
        } else ref.current = null;
    }

    function commitHookEffectList(unmountTag, mountTag, finishedWork) {
        finishedWork = finishedWork.updateQueue;
        finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

        if (null !== finishedWork) {
            var effect = finishedWork = finishedWork.next;

            do {
                if ((effect.tag & unmountTag) !== NoEffect$1) {
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    undefined !== destroy && destroy();
                }

                (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
                effect = effect.next;
            } while (effect !== finishedWork);
        }
    }

    function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
        "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

        switch (current$$1$jscomp$0.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
                var updateQueue = current$$1$jscomp$0.updateQueue;

                if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
                    var firstEffect = updateQueue.next;
                    runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
                        var effect = firstEffect;

                        do {
                            var destroy = effect.destroy;

                            if (undefined !== destroy) {
                                var current$$1 = current$$1$jscomp$0;

                                try {
                                    destroy();
                                } catch (error) {
                                    captureCommitPhaseError(current$$1, error);
                                }
                            }

                            effect = effect.next;
                        } while (effect !== firstEffect);
                    });
                }

                break;

            case 1:
                safelyDetachRef(current$$1$jscomp$0);
                renderPriorityLevel = current$$1$jscomp$0.stateNode;
                "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
                break;

            case 5:
                safelyDetachRef(current$$1$jscomp$0);
                break;

            case 4:
                unmountHostComponents(current$$1$jscomp$0, renderPriorityLevel);
        }
    }

    function detachFiber(current$$1) {
        var alternate = current$$1.alternate;
        current$$1.return = null;
        current$$1.child = null;
        current$$1.memoizedState = null;
        current$$1.updateQueue = null;
        current$$1.dependencies = null;
        current$$1.alternate = null;
        current$$1.firstEffect = null;
        current$$1.lastEffect = null;
        current$$1.pendingProps = null;
        current$$1.memoizedProps = null;
        null !== alternate && detachFiber(alternate);
    }

    function isHostParent(fiber) {
        return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
    }

    function commitPlacement(finishedWork) {
        a: {
            for (var parent = finishedWork.return; null !== parent;) {
                if (isHostParent(parent)) {
                    var parentFiber = parent;
                    break a;
                }

                parent = parent.return;
            }

            throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
        }

        parent = parentFiber.stateNode;

        switch (parentFiber.tag) {
            case 5:
                var isContainer = false;
                break;

            case 3:
                parent = parent.containerInfo;
                isContainer = true;
                break;

            case 4:
                parent = parent.containerInfo;
                isContainer = true;
                break;

            default:
                throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
        }

        parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

        a: b: for (parentFiber = finishedWork; ;) {
            for (; null === parentFiber.sibling;) {
                if (null === parentFiber.return || isHostParent(parentFiber.return)) {
                    parentFiber = null;
                    break a;
                }

                parentFiber = parentFiber.return;
            }

            parentFiber.sibling.return = parentFiber.return;

            for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
                if (parentFiber.effectTag & 2) continue b;
                if (null === parentFiber.child || 4 === parentFiber.tag) continue b; else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
            }

            if (!(parentFiber.effectTag & 2)) {
                parentFiber = parentFiber.stateNode;
                break a;
            }
        }

        for (var node = finishedWork; ;) {
            var isHost = 5 === node.tag || 6 === node.tag;

            if (isHost) {
                var stateNode = isHost ? node.stateNode : node.stateNode.instance;
                if (parentFiber) {
                    if (isContainer) {
                        if ("number" === typeof parent) throw ReactError(Error("Container does not support insertBefore operation"));
                    } else {
                        isHost = parent;
                        var beforeChild = parentFiber,
                            children = isHost._children,
                            index = children.indexOf(stateNode);
                        0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], ["number" === typeof stateNode ? stateNode : stateNode._nativeTag], [index], []));
                    }
                } else isContainer ? ReactNativePrivateInterface.UIManager.setChildren(parent, ["number" === typeof stateNode ? stateNode : stateNode._nativeTag]) : (isHost = parent, children = "number" === typeof stateNode ? stateNode : stateNode._nativeTag, index = isHost._children, beforeChild = index.indexOf(stateNode), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], [children], [index.length - 1], [])));
            } else if (4 !== node.tag && null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }

            if (node === finishedWork) break;

            for (; null === node.sibling;) {
                if (null === node.return || node.return === finishedWork) return;
                node = node.return;
            }

            node.sibling.return = node.return;
            node = node.sibling;
        }
    }

    function unmountHostComponents(current$$1, renderPriorityLevel$jscomp$0) {
        for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined; ;) {
            if (!currentParentIsValid) {
                currentParentIsValid = node.return;

                a: for (; ;) {
                    if (null === currentParentIsValid) throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
                    currentParent = currentParentIsValid.stateNode;

                    switch (currentParentIsValid.tag) {
                        case 5:
                            currentParentIsContainer = false;
                            break a;

                        case 3:
                            currentParent = currentParent.containerInfo;
                            currentParentIsContainer = true;
                            break a;

                        case 4:
                            currentParent = currentParent.containerInfo;
                            currentParentIsContainer = true;
                            break a;
                    }

                    currentParentIsValid = currentParentIsValid.return;
                }

                currentParentIsValid = true;
            }

            if (5 === node.tag || 6 === node.tag) {
                a: for (var root = node, renderPriorityLevel = renderPriorityLevel$jscomp$0, node$jscomp$0 = root; ;) {
                    if (commitUnmount(node$jscomp$0, renderPriorityLevel), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child; else {
                        if (node$jscomp$0 === root) break;

                        for (; null === node$jscomp$0.sibling;) {
                            if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
                            node$jscomp$0 = node$jscomp$0.return;
                        }

                        node$jscomp$0.sibling.return = node$jscomp$0.return;
                        node$jscomp$0 = node$jscomp$0.sibling;
                    }
                }

                currentParentIsContainer ? (root = currentParent, recursivelyUncacheFiberNode(node.stateNode), ReactNativePrivateInterface.UIManager.manageChildren(root, [], [], [], [], [0])) : (root = currentParent, node$jscomp$0 = node.stateNode, recursivelyUncacheFiberNode(node$jscomp$0), renderPriorityLevel = root._children, node$jscomp$0 = renderPriorityLevel.indexOf(node$jscomp$0), renderPriorityLevel.splice(node$jscomp$0, 1), ReactNativePrivateInterface.UIManager.manageChildren(root._nativeTag, [], [], [], [], [node$jscomp$0]));
            } else if (4 === node.tag) {
                if (null !== node.child) {
                    currentParent = node.stateNode.containerInfo;
                    currentParentIsContainer = true;
                    node.child.return = node;
                    node = node.child;
                    continue;
                }
            } else if (commitUnmount(node, renderPriorityLevel$jscomp$0), null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }

            if (node === current$$1) break;

            for (; null === node.sibling;) {
                if (null === node.return || node.return === current$$1) return;
                node = node.return;
                4 === node.tag && (currentParentIsValid = false);
            }

            node.sibling.return = node.return;
            node = node.sibling;
        }
    }

    function commitWork(current$$1, finishedWork) {
        switch (finishedWork.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
                commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
                break;

            case 1:
                break;

            case 5:
                var instance = finishedWork.stateNode;

                if (null != instance) {
                    var newProps = finishedWork.memoizedProps;
                    current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    null !== updatePayload && (finishedWork = instance.viewConfig, instanceProps.set(instance._nativeTag, newProps), newProps = diffProperties(null, current$$1, newProps, finishedWork.validAttributes), null != newProps && ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, finishedWork.uiViewClassName, newProps));
                }

                break;

            case 6:
                if (null === finishedWork.stateNode) throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
                ReactNativePrivateInterface.UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
                    text: finishedWork.memoizedProps
                });
                break;

            case 3:
                break;

            case 12:
                break;

            case 13:
                instance = finishedWork;
                null === finishedWork.memoizedState ? newProps = false : (newProps = true, instance = finishedWork.child, globalMostRecentFallbackTime = now());
                if (null !== instance) a: for (current$$1 = instance; ;) {
                    if (5 === current$$1.tag) {
                        if (updatePayload = current$$1.stateNode, newProps) {
                            var viewConfig = updatePayload.viewConfig;
                            var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                                style: {
                                    display: "none"
                                }
                            }, viewConfig.validAttributes);
                            ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
                        } else {
                            updatePayload = current$$1.stateNode;
                            updatePayload$jscomp$0 = current$$1.memoizedProps;
                            viewConfig = updatePayload.viewConfig;

                            var prevProps = _extends({}, updatePayload$jscomp$0, {
                                style: [updatePayload$jscomp$0.style, {
                                    display: "none"
                                }]
                            });

                            updatePayload$jscomp$0 = diffProperties(null, prevProps, updatePayload$jscomp$0, viewConfig.validAttributes);
                            ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
                        }
                    } else {
                        if (6 === current$$1.tag) throw Error("Not yet implemented.");

                        if (13 === current$$1.tag && null !== current$$1.memoizedState) {
                            updatePayload = current$$1.child.sibling;
                            updatePayload.return = current$$1;
                            current$$1 = updatePayload;
                            continue;
                        } else if (null !== current$$1.child) {
                            current$$1.child.return = current$$1;
                            current$$1 = current$$1.child;
                            continue;
                        }
                    }
                    if (current$$1 === instance) break a;

                    for (; null === current$$1.sibling;) {
                        if (null === current$$1.return || current$$1.return === instance) break a;
                        current$$1 = current$$1.return;
                    }

                    current$$1.sibling.return = current$$1.return;
                    current$$1 = current$$1.sibling;
                }
                attachSuspenseRetryListeners(finishedWork);
                break;

            case 19:
                attachSuspenseRetryListeners(finishedWork);
                break;

            case 17:
                break;

            case 20:
                break;

            default:
                throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
        }
    }

    function attachSuspenseRetryListeners(finishedWork) {
        var thenables = finishedWork.updateQueue;

        if (null !== thenables) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
            thenables.forEach(function (thenable) {
                var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
                retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
            });
        }
    }

    var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

    function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
        expirationTime = createUpdate(expirationTime, null);
        expirationTime.tag = 3;
        expirationTime.payload = {
            element: null
        };
        var error = errorInfo.value;

        expirationTime.callback = function () {
            hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
            logError(fiber, errorInfo);
        };

        return expirationTime;
    }

    function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
        expirationTime = createUpdate(expirationTime, null);
        expirationTime.tag = 3;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

        if ("function" === typeof getDerivedStateFromError) {
            var error = errorInfo.value;

            expirationTime.payload = function () {
                logError(fiber, errorInfo);
                return getDerivedStateFromError(error);
            };
        }

        var inst = fiber.stateNode;
        null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
            "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
            var stack = errorInfo.stack;
            this.componentDidCatch(errorInfo.value, {
                componentStack: null !== stack ? stack : ""
            });
        });
        return expirationTime;
    }

    var ceil = Math.ceil,
        ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
        ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
        NoContext = 0,
        LegacyUnbatchedContext = 8,
        RenderContext = 16,
        CommitContext = 32,
        RootIncomplete = 0,
        RootErrored = 1,
        RootSuspended = 2,
        RootSuspendedWithDelay = 3,
        RootCompleted = 4,
        executionContext = NoContext,
        workInProgressRoot = null,
        workInProgress = null,
        renderExpirationTime = 0,
        workInProgressRootExitStatus = RootIncomplete,
        workInProgressRootLatestProcessedExpirationTime = 1073741823,
        workInProgressRootLatestSuspenseTimeout = 1073741823,
        workInProgressRootCanSuspendUsingConfig = null,
        workInProgressRootHasPendingPing = false,
        globalMostRecentFallbackTime = 0,
        FALLBACK_THROTTLE_MS = 500,
        nextEffect = null,
        hasUncaughtError = false,
        firstUncaughtError = null,
        legacyErrorBoundariesThatAlreadyFailed = null,
        rootDoesHavePassiveEffects = false,
        rootWithPendingPassiveEffects = null,
        pendingPassiveEffectsRenderPriority = 90,
        pendingPassiveEffectsExpirationTime = 0,
        rootsWithPendingDiscreteUpdates = null,
        nestedUpdateCount = 0,
        rootWithNestedUpdates = null,
        currentEventTime = 0;

    function requestCurrentTime() {
        return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
    }

    function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
        fiber = fiber.mode;
        if (0 === (fiber & 2)) return 1073741823;
        var priorityLevel = getCurrentPriorityLevel();
        if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
        if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
        if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1); else switch (priorityLevel) {
            case 99:
                currentTime = 1073741823;
                break;

            case 98:
                currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
                break;

            case 97:
            case 96:
                currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
                break;

            case 95:
                currentTime = 1;
                break;

            default:
                throw ReactError(Error("Expected a valid priority level"));
        }
        null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
        return currentTime;
    }

    function scheduleUpdateOnFiber(fiber, expirationTime) {
        if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
        fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

        if (null !== fiber) {
            fiber.pingTime = 0;
            var priorityLevel = getCurrentPriorityLevel();
            if (1073741823 === expirationTime) {
                if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
                    callback = callback(true);
                } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
            } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
            (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
        }
    }

    function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
        fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
        var alternate = fiber.alternate;
        null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
        var node = fiber.return,
            root = null;
        if (null === node && 3 === fiber.tag) root = fiber.stateNode; else for (; null !== node;) {
            alternate = node.alternate;
            node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
            null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

            if (null === node.return && 3 === node.tag) {
                root = node.stateNode;
                break;
            }

            node = node.return;
        }
        null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
        return root;
    }

    function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
        if (root.callbackExpirationTime < expirationTime) {
            var existingCallbackNode = root.callbackNode;
            null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
            root.callbackExpirationTime = expirationTime;
            1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
                timeout: 10 * (1073741821 - expirationTime) - now()
            }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
        }
    }

    function runRootCallback(root, callback, isSync) {
        var prevCallbackNode = root.callbackNode,
            continuation = null;

        try {
            return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
        } finally {
            null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
        }
    }

    function resolveLocksOnRoot(root, expirationTime) {
        var firstBatch = root.firstBatch;
        return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
            firstBatch._onComplete();

            return null;
        }), true) : false;
    }

    function flushPendingDiscreteUpdates() {
        if (null !== rootsWithPendingDiscreteUpdates) {
            var roots = rootsWithPendingDiscreteUpdates;
            rootsWithPendingDiscreteUpdates = null;
            roots.forEach(function (expirationTime, root) {
                scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
            });
            flushSyncCallbackQueue();
        }
    }

    function prepareFreshStack(root, expirationTime) {
        root.finishedWork = null;
        root.finishedExpirationTime = 0;
        var timeoutHandle = root.timeoutHandle;
        -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
        if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
            var interruptedWork = timeoutHandle;

            switch (interruptedWork.tag) {
                case 1:
                    var childContextTypes = interruptedWork.type.childContextTypes;
                    null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
                    break;

                case 3:
                    popHostContainer(interruptedWork);
                    popTopLevelContextObject(interruptedWork);
                    break;

                case 5:
                    popHostContext(interruptedWork);
                    break;

                case 4:
                    popHostContainer(interruptedWork);
                    break;

                case 13:
                    pop(suspenseStackCursor, interruptedWork);
                    break;

                case 19:
                    pop(suspenseStackCursor, interruptedWork);
                    break;

                case 10:
                    popProvider(interruptedWork);
            }

            timeoutHandle = timeoutHandle.return;
        }
        workInProgressRoot = root;
        workInProgress = createWorkInProgress(root.current, null, expirationTime);
        renderExpirationTime = expirationTime;
        workInProgressRootExitStatus = RootIncomplete;
        workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
        workInProgressRootCanSuspendUsingConfig = null;
        workInProgressRootHasPendingPing = false;
    }

    function renderRoot(root$jscomp$0, expirationTime, isSync) {
        if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
        if (root$jscomp$0.firstPendingTime < expirationTime) return null;
        if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
        flushPassiveEffects();
        if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime); else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime); else {
            var lastPendingTime = root$jscomp$0.lastPendingTime;
            if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
        }

        if (null !== workInProgress) {
            lastPendingTime = executionContext;
            executionContext |= RenderContext;
            var prevDispatcher = ReactCurrentDispatcher.current;
            null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
            ReactCurrentDispatcher.current = ContextOnlyDispatcher;

            if (isSync) {
                if (1073741823 !== expirationTime) {
                    var currentTime = requestCurrentTime();
                    if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
                }
            } else currentEventTime = 0;

            do {
                try {
                    if (isSync) for (; null !== workInProgress;) {
                        workInProgress = performUnitOfWork(workInProgress);
                    } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
                        workInProgress = performUnitOfWork(workInProgress);
                    }
                    break;
                } catch (thrownValue) {
                    resetContextDependencies();
                    resetHooks();
                    currentTime = workInProgress;
                    if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

                    a: {
                        var root = root$jscomp$0,
                            returnFiber = currentTime.return,
                            sourceFiber = currentTime,
                            value = thrownValue,
                            renderExpirationTime$jscomp$0 = renderExpirationTime;
                        sourceFiber.effectTag |= 1024;
                        sourceFiber.firstEffect = sourceFiber.lastEffect = null;

                        if (null !== value && "object" === typeof value && "function" === typeof value.then) {
                            var thenable = value,
                                hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
                            value = returnFiber;

                            do {
                                var JSCompiler_temp;
                                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                                if (JSCompiler_temp) {
                                    returnFiber = value.updateQueue;
                                    null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                                    if (0 === (value.mode & 2)) {
                                        value.effectTag |= 64;
                                        sourceFiber.effectTag &= -1957;
                                        1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                                        sourceFiber.expirationTime = 1073741823;
                                        break a;
                                    }

                                    sourceFiber = root;
                                    root = renderExpirationTime$jscomp$0;
                                    hasInvisibleParentBoundary = sourceFiber.pingCache;
                                    null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                                    returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                                    value.effectTag |= 2048;
                                    value.expirationTime = renderExpirationTime$jscomp$0;
                                    break a;
                                }

                                value = value.return;
                            } while (null !== value);

                            value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
                        }

                        workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
                        value = createCapturedValue(value, sourceFiber);
                        sourceFiber = returnFiber;

                        do {
                            switch (sourceFiber.tag) {
                                case 3:
                                    sourceFiber.effectTag |= 2048;
                                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                                    renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                                    break a;

                                case 1:
                                    if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                                        sourceFiber.effectTag |= 2048;
                                        sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                                        renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                                        enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                                        break a;
                                    }

                            }

                            sourceFiber = sourceFiber.return;
                        } while (null !== sourceFiber);
                    }

                    workInProgress = completeUnitOfWork(currentTime);
                }
            } while (1);

            executionContext = lastPendingTime;
            resetContextDependencies();
            ReactCurrentDispatcher.current = prevDispatcher;
            if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
        }

        root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
        root$jscomp$0.finishedExpirationTime = expirationTime;
        if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
        workInProgressRoot = null;

        switch (workInProgressRootExitStatus) {
            case RootIncomplete:
                throw ReactError(Error("Should have a work-in-progress."));

            case RootErrored:
                return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

            case RootSuspended:
                if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
                    if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
                    lastPendingTime = root$jscomp$0.lastPendingTime;
                    if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
                    root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
                    return null;
                }

                return commitRoot.bind(null, root$jscomp$0);

            case RootSuspendedWithDelay:
                if (!isSync) {
                    if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
                    isSync = root$jscomp$0.lastPendingTime;
                    if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
                    1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
                    if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
                }

                return commitRoot.bind(null, root$jscomp$0);

            case RootCompleted:
                return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

            default:
                throw ReactError(Error("Unknown root exit status."));
        }
    }

    function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
        expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
        null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
    }

    function performUnitOfWork(unitOfWork) {
        var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === next && (next = completeUnitOfWork(unitOfWork));
        ReactCurrentOwner$2.current = null;
        return next;
    }

    function completeUnitOfWork(unitOfWork) {
        workInProgress = unitOfWork;

        do {
            var current$$1 = workInProgress.alternate;
            unitOfWork = workInProgress.return;

            if (0 === (workInProgress.effectTag & 1024)) {
                a: {
                    var current = current$$1;
                    current$$1 = workInProgress;
                    var renderExpirationTime$jscomp$0 = renderExpirationTime,
                        newProps = current$$1.pendingProps;

                    switch (current$$1.tag) {
                        case 2:
                            break;

                        case 16:
                            break;

                        case 15:
                        case 0:
                            break;

                        case 1:
                            isContextProvider(current$$1.type) && popContext(current$$1);
                            break;

                        case 3:
                            popHostContainer(current$$1);
                            popTopLevelContextObject(current$$1);
                            newProps = current$$1.stateNode;
                            newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
                            if (null === current || null === current.child) current$$1.effectTag &= -3;
                            updateHostContainer(current$$1);
                            break;

                        case 5:
                            popHostContext(current$$1);
                            renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
                            var type = current$$1.type;
                            if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128); else if (newProps) {
                                current = requiredContext(contextStackCursor$1.current);
                                var type$jscomp$0 = type;
                                var _instance6 = newProps;
                                var rootContainerInstance = renderExpirationTime$jscomp$0,
                                    internalInstanceHandle = current$$1,
                                    tag = allocateTag();
                                type$jscomp$0 = getViewConfigForType(type$jscomp$0);
                                var updatePayload = diffProperties(null, emptyObject, _instance6, type$jscomp$0.validAttributes);
                                ReactNativePrivateInterface.UIManager.createView(tag, type$jscomp$0.uiViewClassName, rootContainerInstance, updatePayload);
                                rootContainerInstance = new ReactNativeFiberHostComponent(tag, type$jscomp$0);
                                instanceCache.set(tag, internalInstanceHandle);
                                instanceProps.set(tag, _instance6);
                                _instance6 = rootContainerInstance;
                                appendAllChildren(_instance6, current$$1, false, false);
                                finalizeInitialChildren(_instance6, type, newProps, renderExpirationTime$jscomp$0, current) && (current$$1.effectTag |= 4);
                                current$$1.stateNode = _instance6;
                                null !== current$$1.ref && (current$$1.effectTag |= 128);
                            } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                            break;

                        case 6:
                            if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps); else {
                                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                                type = requiredContext(rootInstanceStackCursor.current);
                                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                                current = current$$1;
                                if (!renderExpirationTime$jscomp$0.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
                                renderExpirationTime$jscomp$0 = allocateTag();
                                ReactNativePrivateInterface.UIManager.createView(renderExpirationTime$jscomp$0, "RCTRawText", type, {
                                    text: newProps
                                });
                                instanceCache.set(renderExpirationTime$jscomp$0, current$$1);
                                current.stateNode = renderExpirationTime$jscomp$0;
                            }
                            break;

                        case 11:
                            break;

                        case 13:
                            pop(suspenseStackCursor, current$$1);
                            newProps = current$$1.memoizedState;

                            if (0 !== (current$$1.effectTag & 64)) {
                                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                                break a;
                            }

                            newProps = null !== newProps;
                            renderExpirationTime$jscomp$0 = false;
                            null !== current && (type = current.memoizedState, renderExpirationTime$jscomp$0 = null !== type, newProps || null === type || (type = current.child.sibling, null !== type && (_instance6 = current$$1.firstEffect, null !== _instance6 ? (current$$1.firstEffect = type, type.nextEffect = _instance6) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
                            if (newProps && !renderExpirationTime$jscomp$0 && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended); else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
                            if (newProps || renderExpirationTime$jscomp$0) current$$1.effectTag |= 4;
                            break;

                        case 7:
                            break;

                        case 8:
                            break;

                        case 12:
                            break;

                        case 4:
                            popHostContainer(current$$1);
                            updateHostContainer(current$$1);
                            break;

                        case 10:
                            popProvider(current$$1);
                            break;

                        case 9:
                            break;

                        case 14:
                            break;

                        case 17:
                            isContextProvider(current$$1.type) && popContext(current$$1);
                            break;

                        case 18:
                            break;

                        case 19:
                            pop(suspenseStackCursor, current$$1);
                            newProps = current$$1.memoizedState;
                            if (null === newProps) break;
                            type = 0 !== (current$$1.effectTag & 64);
                            _instance6 = newProps.rendering;
                            if (null === _instance6) {
                                if (type) cutOffTailIfNeeded(newProps, false); else {
                                    if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                                        _instance6 = findFirstSuspended(current);

                                        if (null !== _instance6) {
                                            current$$1.effectTag |= 64;
                                            cutOffTailIfNeeded(newProps, false);
                                            newProps = _instance6.updateQueue;
                                            null !== newProps && (current$$1.updateQueue = newProps, current$$1.effectTag |= 4);
                                            current$$1.firstEffect = current$$1.lastEffect = null;
                                            newProps = renderExpirationTime$jscomp$0;

                                            for (current = current$$1.child; null !== current;) {
                                                renderExpirationTime$jscomp$0 = current, type = newProps, renderExpirationTime$jscomp$0.effectTag &= 2, renderExpirationTime$jscomp$0.nextEffect = null, renderExpirationTime$jscomp$0.firstEffect = null, renderExpirationTime$jscomp$0.lastEffect = null, _instance6 = renderExpirationTime$jscomp$0.alternate, null === _instance6 ? (renderExpirationTime$jscomp$0.childExpirationTime = 0, renderExpirationTime$jscomp$0.expirationTime = type, renderExpirationTime$jscomp$0.child = null, renderExpirationTime$jscomp$0.memoizedProps = null, renderExpirationTime$jscomp$0.memoizedState = null, renderExpirationTime$jscomp$0.updateQueue = null, renderExpirationTime$jscomp$0.dependencies = null) : (renderExpirationTime$jscomp$0.childExpirationTime = _instance6.childExpirationTime, renderExpirationTime$jscomp$0.expirationTime = _instance6.expirationTime, renderExpirationTime$jscomp$0.child = _instance6.child, renderExpirationTime$jscomp$0.memoizedProps = _instance6.memoizedProps, renderExpirationTime$jscomp$0.memoizedState = _instance6.memoizedState, renderExpirationTime$jscomp$0.updateQueue = _instance6.updateQueue, type = _instance6.dependencies, renderExpirationTime$jscomp$0.dependencies = null === type ? null : {
                                                    expirationTime: type.expirationTime,
                                                    firstContext: type.firstContext,
                                                    responders: type.responders
                                                }), current = current.sibling;
                                            }

                                            push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                                            current$$1 = current$$1.child;
                                            break a;
                                        }

                                        current = current.sibling;
                                    }
                                }
                            } else {
                                if (!type) if (current = findFirstSuspended(_instance6), null !== current) {
                                    if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                                        current = current.updateQueue;
                                        null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                                        current$$1 = current$$1.lastEffect = newProps.lastEffect;
                                        null !== current$$1 && (current$$1.nextEffect = null);
                                        break;
                                    }
                                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                                newProps.isBackwards ? (_instance6.sibling = current$$1.child, current$$1.child = _instance6) : (current = newProps.last, null !== current ? current.sibling = _instance6 : current$$1.child = _instance6, newProps.last = _instance6);
                            }

                            if (null !== newProps.tail) {
                                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                                current = newProps.tail;
                                newProps.rendering = current;
                                newProps.tail = current.sibling;
                                newProps.lastEffect = current$$1.lastEffect;
                                current.sibling = null;
                                newProps = suspenseStackCursor.current;
                                newProps = type ? newProps & SubtreeSuspenseContextMask | ForceSuspenseFallback : newProps & SubtreeSuspenseContextMask;
                                push(suspenseStackCursor, newProps, current$$1);
                                current$$1 = current;
                                break a;
                            }

                            break;

                        case 20:
                            break;

                        default:
                            throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
                    }

                    current$$1 = null;
                }

                newProps = workInProgress;

                if (1 === renderExpirationTime || 1 !== newProps.childExpirationTime) {
                    current = 0;

                    for (renderExpirationTime$jscomp$0 = newProps.child; null !== renderExpirationTime$jscomp$0;) {
                        type = renderExpirationTime$jscomp$0.expirationTime, _instance6 = renderExpirationTime$jscomp$0.childExpirationTime, type > current && (current = type), _instance6 > current && (current = _instance6), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                    }

                    newProps.childExpirationTime = current;
                }

                if (null !== current$$1) return current$$1;
                null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
            } else {
                current$$1 = unwindWork(workInProgress, renderExpirationTime);
                if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
                null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
            }

            current$$1 = workInProgress.sibling;
            if (null !== current$$1) return current$$1;
            workInProgress = unitOfWork;
        } while (null !== workInProgress);

        workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
        return null;
    }

    function commitRoot(root) {
        var renderPriorityLevel = getCurrentPriorityLevel();
        runWithPriority(99, commitRootImpl.bind(null, root, renderPriorityLevel));
        null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
            flushPassiveEffects();
            return null;
        });
        return null;
    }

    function commitRootImpl(root, renderPriorityLevel) {
        flushPassiveEffects();
        if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
        var finishedWork = root.finishedWork,
            expirationTime = root.finishedExpirationTime;
        if (null === finishedWork) return null;
        root.finishedWork = null;
        root.finishedExpirationTime = 0;
        if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
        root.callbackNode = null;
        root.callbackExpirationTime = 0;
        var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
            childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
        updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
        root.firstPendingTime = updateExpirationTimeBeforeCommit;
        updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
        root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
        1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

        if (null !== updateExpirationTimeBeforeCommit) {
            childExpirationTimeBeforeCommit = executionContext;
            executionContext |= CommitContext;
            ReactCurrentOwner$2.current = null;
            nextEffect = updateExpirationTimeBeforeCommit;

            do {
                try {
                    for (; null !== nextEffect;) {
                        if (0 !== (nextEffect.effectTag & 256)) {
                            var current$$1 = nextEffect.alternate,
                                finishedWork$jscomp$0 = nextEffect;

                            switch (finishedWork$jscomp$0.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                                    break;

                                case 1:
                                    if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                                        var prevProps = current$$1.memoizedProps,
                                            prevState = current$$1.memoizedState,
                                            instance = finishedWork$jscomp$0.stateNode,
                                            snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                                    }

                                    break;

                                case 3:
                                case 5:
                                case 6:
                                case 4:
                                case 17:
                                    break;

                                default:
                                    throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                            }
                        }

                        nextEffect = nextEffect.nextEffect;
                    }
                } catch (error) {
                    if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            } while (null !== nextEffect);

            nextEffect = updateExpirationTimeBeforeCommit;

            do {
                try {
                    for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
                        var effectTag = nextEffect.effectTag;

                        if (effectTag & 128) {
                            var current$$1$jscomp$0 = nextEffect.alternate;

                            if (null !== current$$1$jscomp$0) {
                                var currentRef = current$$1$jscomp$0.ref;
                                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
                            }
                        }

                        switch (effectTag & 14) {
                            case 2:
                                commitPlacement(nextEffect);
                                nextEffect.effectTag &= -3;
                                break;

                            case 6:
                                commitPlacement(nextEffect);
                                nextEffect.effectTag &= -3;
                                commitWork(nextEffect.alternate, nextEffect);
                                break;

                            case 4:
                                commitWork(nextEffect.alternate, nextEffect);
                                break;

                            case 8:
                                prevProps = nextEffect, unmountHostComponents(prevProps, current$$1), detachFiber(prevProps);
                        }

                        nextEffect = nextEffect.nextEffect;
                    }
                } catch (error) {
                    if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            } while (null !== nextEffect);

            root.current = finishedWork;
            nextEffect = updateExpirationTimeBeforeCommit;

            do {
                try {
                    for (effectTag = expirationTime; null !== nextEffect;) {
                        var effectTag$jscomp$0 = nextEffect.effectTag;

                        if (effectTag$jscomp$0 & 36) {
                            var current$$1$jscomp$1 = nextEffect.alternate;
                            current$$1$jscomp$0 = nextEffect;
                            currentRef = effectTag;

                            switch (current$$1$jscomp$0.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                                    break;

                                case 1:
                                    var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                                    if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount(); else {
                                        var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                                        instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                                    }
                                    var updateQueue = current$$1$jscomp$0.updateQueue;
                                    null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                                    break;

                                case 3:
                                    var _updateQueue = current$$1$jscomp$0.updateQueue;

                                    if (null !== _updateQueue) {
                                        current$$1 = null;
                                        if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                                            case 5:
                                                current$$1 = current$$1$jscomp$0.child.stateNode;
                                                break;

                                            case 1:
                                                current$$1 = current$$1$jscomp$0.child.stateNode;
                                        }
                                        commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                                    }

                                    break;

                                case 5:
                                    break;

                                case 6:
                                    break;

                                case 4:
                                    break;

                                case 12:
                                    break;

                                case 13:
                                case 19:
                                case 17:
                                case 20:
                                    break;

                                default:
                                    throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                            }
                        }

                        if (effectTag$jscomp$0 & 128) {
                            var ref = nextEffect.ref;

                            if (null !== ref) {
                                var instance$jscomp$1 = nextEffect.stateNode;

                                switch (nextEffect.tag) {
                                    case 5:
                                        var instanceToUse = instance$jscomp$1;
                                        break;

                                    default:
                                        instanceToUse = instance$jscomp$1;
                                }

                                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
                            }
                        }

                        effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
                        nextEffect = nextEffect.nextEffect;
                    }
                } catch (error) {
                    if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            } while (null !== nextEffect);

            nextEffect = null;
            requestPaint();
            executionContext = childExpirationTimeBeforeCommit;
        } else root.current = finishedWork;

        if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel; else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
            renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
        }
        renderPriorityLevel = root.firstPendingTime;
        0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
        "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
        1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
        if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
        if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
        flushSyncCallbackQueue();
        return null;
    }

    function flushPassiveEffects() {
        if (null === rootWithPendingPassiveEffects) return false;
        var root = rootWithPendingPassiveEffects,
            expirationTime = pendingPassiveEffectsExpirationTime,
            renderPriorityLevel = pendingPassiveEffectsRenderPriority;
        rootWithPendingPassiveEffects = null;
        pendingPassiveEffectsExpirationTime = 0;
        pendingPassiveEffectsRenderPriority = 90;
        return runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
    }

    function flushPassiveEffectsImpl(root) {
        if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;

        for (root = root.current.firstEffect; null !== root;) {
            try {
                var finishedWork = root;
                if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
                    case 0:
                    case 11:
                    case 15:
                        commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
                }
            } catch (error) {
                if (null === root) throw ReactError(Error("Should be working on an effect."));
                captureCommitPhaseError(root, error);
            }

            finishedWork = root.nextEffect;
            root.nextEffect = null;
            root = finishedWork;
        }

        executionContext = prevExecutionContext;
        flushSyncCallbackQueue();
        return true;
    }

    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        sourceFiber = createCapturedValue(error, sourceFiber);
        sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
        enqueueUpdate(rootFiber, sourceFiber);
        rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
        null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
    }

    function captureCommitPhaseError(sourceFiber, error) {
        if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error); else for (var fiber = sourceFiber.return; null !== fiber;) {
            if (3 === fiber.tag) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
                break;
            } else if (1 === fiber.tag) {
                var instance = fiber.stateNode;

                if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
                    sourceFiber = createCapturedValue(error, sourceFiber);
                    sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
                    enqueueUpdate(fiber, sourceFiber);
                    fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
                    null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
                    break;
                }
            }

            fiber = fiber.return;
        }
    }

    function pingSuspendedRoot(root, thenable, suspendedTime) {
        var pingCache = root.pingCache;
        null !== pingCache && pingCache.delete(thenable);
        workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
    }

    function resolveRetryThenable(boundaryFiber, thenable) {
        var retryCache = boundaryFiber.stateNode;
        null !== retryCache && retryCache.delete(thenable);
        retryCache = requestCurrentTime();
        thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
        retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
        boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
        null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
    }

    var beginWork$$1 = undefined;

    beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
        var updateExpirationTime = workInProgress.expirationTime;
        if (null !== current$$1) {
            if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true; else {
                if (updateExpirationTime < renderExpirationTime) {
                    didReceiveUpdate = false;

                    switch (workInProgress.tag) {
                        case 3:
                            pushHostRootContext(workInProgress);
                            break;

                        case 5:
                            pushHostContext(workInProgress);
                            break;

                        case 1:
                            isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
                            break;

                        case 4:
                            pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                            break;

                        case 10:
                            pushProvider(workInProgress, workInProgress.memoizedProps.value);
                            break;

                        case 13:
                            if (null !== workInProgress.memoizedState) {
                                updateExpirationTime = workInProgress.child.childExpirationTime;
                                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                                return null !== workInProgress ? workInProgress.sibling : null;
                            }

                            push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                            break;

                        case 19:
                            updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

                            if (0 !== (current$$1.effectTag & 64)) {
                                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                                workInProgress.effectTag |= 64;
                            }

                            var renderState = workInProgress.memoizedState;
                            null !== renderState && (renderState.rendering = null, renderState.tail = null);
                            push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
                            if (!updateExpirationTime) return null;
                    }

                    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                }
            }
        } else didReceiveUpdate = false;
        workInProgress.expirationTime = 0;

        switch (workInProgress.tag) {
            case 2:
                updateExpirationTime = workInProgress.type;
                null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
                current$$1 = workInProgress.pendingProps;
                renderState = getMaskedContext(workInProgress, contextStackCursor.current);
                prepareToReadContext(workInProgress, renderExpirationTime);
                renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
                workInProgress.effectTag |= 1;

                if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
                    workInProgress.tag = 1;
                    resetHooks();

                    if (isContextProvider(updateExpirationTime)) {
                        var hasContext = true;
                        pushContextProvider(workInProgress);
                    } else hasContext = false;

                    workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
                    var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
                    "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
                    renderState.updater = classComponentUpdater;
                    workInProgress.stateNode = renderState;
                    renderState._reactInternalFiber = workInProgress;
                    mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
                    workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
                } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

                return workInProgress;

            case 16:
                renderState = workInProgress.elementType;
                null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
                current$$1 = workInProgress.pendingProps;
                renderState = readLazyComponentType(renderState);
                workInProgress.type = renderState;
                hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
                current$$1 = resolveDefaultProps(renderState, current$$1);

                switch (hasContext) {
                    case 0:
                        workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
                        break;

                    case 1:
                        workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
                        break;

                    case 11:
                        workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
                        break;

                    case 14:
                        workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
                        break;

                    default:
                        throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
                }

                return workInProgress;

            case 0:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

            case 1:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

            case 3:
                pushHostRootContext(workInProgress);
                updateExpirationTime = workInProgress.updateQueue;
                if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
                renderState = workInProgress.memoizedState;
                renderState = null !== renderState ? renderState.element : null;
                processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
                updateExpirationTime = workInProgress.memoizedState.element;
                updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
                return workInProgress;

            case 5:
                return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

            case 6:
                return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

            case 13:
                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

            case 4:
                return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

            case 11:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

            case 7:
                return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

            case 8:
                return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

            case 12:
                return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

            case 10:
                a: {
                    updateExpirationTime = workInProgress.type._context;
                    renderState = workInProgress.pendingProps;
                    getDerivedStateFromProps = workInProgress.memoizedProps;
                    hasContext = renderState.value;
                    pushProvider(workInProgress, hasContext);

                    if (null !== getDerivedStateFromProps) {
                        var oldValue = getDerivedStateFromProps.value;
                        hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

                        if (0 === hasContext) {
                            if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                                break a;
                            }
                        } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
                            var list = oldValue.dependencies;

                            if (null !== list) {
                                getDerivedStateFromProps = oldValue.child;

                                for (var dependency = list.firstContext; null !== dependency;) {
                                    if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                                        1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                                        oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                                        dependency = oldValue.alternate;
                                        null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                                        scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                                        list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                                        break;
                                    }

                                    dependency = dependency.next;
                                }
                            } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

                            if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue; else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                                if (getDerivedStateFromProps === workInProgress) {
                                    getDerivedStateFromProps = null;
                                    break;
                                }

                                oldValue = getDerivedStateFromProps.sibling;

                                if (null !== oldValue) {
                                    oldValue.return = getDerivedStateFromProps.return;
                                    getDerivedStateFromProps = oldValue;
                                    break;
                                }

                                getDerivedStateFromProps = getDerivedStateFromProps.return;
                            }
                            oldValue = getDerivedStateFromProps;
                        }
                    }

                    reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
                    workInProgress = workInProgress.child;
                }

                return workInProgress;

            case 9:
                return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

            case 14:
                return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

            case 15:
                return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

            case 17:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

            case 19:
                return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
        }

        throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
    };

    var onCommitFiberRoot = null,
        onCommitFiberUnmount = null;

    function injectInternals(internals) {
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled || !hook.supportsFiber) return true;

        try {
            var rendererID = hook.inject(internals);

            onCommitFiberRoot = function onCommitFiberRoot(root) {
                try {
                    hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
                } catch (err) { }
            };

            onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
                try {
                    hook.onCommitFiberUnmount(rendererID, fiber);
                } catch (err) { }
            };
        } catch (err) { }

        return true;
    }

    function FiberNode(tag, pendingProps, key, mode) {
        this.tag = tag;
        this.key = key;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = mode;
        this.effectTag = 0;
        this.lastEffect = this.firstEffect = this.nextEffect = null;
        this.childExpirationTime = this.expirationTime = 0;
        this.alternate = null;
    }

    function createFiber(tag, pendingProps, key, mode) {
        return new FiberNode(tag, pendingProps, key, mode);
    }

    function shouldConstruct(Component) {
        Component = Component.prototype;
        return !(!Component || !Component.isReactComponent);
    }

    function resolveLazyComponentTag(Component) {
        if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

        if (undefined !== Component && null !== Component) {
            Component = Component.$$typeof;
            if (Component === REACT_FORWARD_REF_TYPE) return 11;
            if (Component === REACT_MEMO_TYPE) return 14;
        }

        return 2;
    }

    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
        workInProgress.childExpirationTime = current.childExpirationTime;
        workInProgress.expirationTime = current.expirationTime;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue;
        pendingProps = current.dependencies;
        workInProgress.dependencies = null === pendingProps ? null : {
            expirationTime: pendingProps.expirationTime,
            firstContext: pendingProps.firstContext,
            responders: pendingProps.responders
        };
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        return workInProgress;
    }

    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
        var fiberTag = 2;
        owner = type;
        if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1); else if ("string" === typeof type) fiberTag = 5; else a: switch (type) {
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

            case REACT_CONCURRENT_MODE_TYPE:
                fiberTag = 8;
                mode |= 7;
                break;

            case REACT_STRICT_MODE_TYPE:
                fiberTag = 8;
                mode |= 1;
                break;

            case REACT_PROFILER_TYPE:
                return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

            case REACT_SUSPENSE_TYPE:
                return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

            case REACT_SUSPENSE_LIST_TYPE:
                return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

            default:
                if ("object" === typeof type && null !== type) switch (type.$$typeof) {
                    case REACT_PROVIDER_TYPE:
                        fiberTag = 10;
                        break a;

                    case REACT_CONTEXT_TYPE:
                        fiberTag = 9;
                        break a;

                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = 11;
                        break a;

                    case REACT_MEMO_TYPE:
                        fiberTag = 14;
                        break a;

                    case REACT_LAZY_TYPE:
                        fiberTag = 16;
                        owner = null;
                        break a;
                }
                throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
        }
        key = createFiber(fiberTag, pendingProps, key, mode);
        key.elementType = type;
        key.type = owner;
        key.expirationTime = expirationTime;
        return key;
    }

    function createFiberFromFragment(elements, mode, expirationTime, key) {
        elements = createFiber(7, elements, key, mode);
        elements.expirationTime = expirationTime;
        return elements;
    }

    function createFiberFromText(content, mode, expirationTime) {
        content = createFiber(6, content, null, mode);
        content.expirationTime = expirationTime;
        return content;
    }

    function createFiberFromPortal(portal, mode, expirationTime) {
        mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
        mode.expirationTime = expirationTime;
        mode.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
        };
        return mode;
    }

    function FiberRootNode(containerInfo, tag, hydrate) {
        this.tag = tag;
        this.current = null;
        this.containerInfo = containerInfo;
        this.pingCache = this.pendingChildren = null;
        this.finishedExpirationTime = 0;
        this.finishedWork = null;
        this.timeoutHandle = -1;
        this.pendingContext = this.context = null;
        this.hydrate = hydrate;
        this.callbackNode = this.firstBatch = null;
        this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
    }

    function findHostInstance(component) {
        var fiber = component._reactInternalFiber;

        if (undefined === fiber) {
            if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
            throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
        }

        component = findCurrentHostFiber(fiber);
        return null === component ? null : component.stateNode;
    }

    function updateContainer(element, container, parentComponent, callback) {
        var current$$1 = container.current,
            currentTime = requestCurrentTime(),
            suspenseConfig = ReactCurrentBatchConfig.suspense;
        current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
        currentTime = container.current;

        a: if (parentComponent) {
            parentComponent = parentComponent._reactInternalFiber;

            b: {
                if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
                var parentContext = parentComponent;

                do {
                    switch (parentContext.tag) {
                        case 3:
                            parentContext = parentContext.stateNode.context;
                            break b;

                        case 1:
                            if (isContextProvider(parentContext.type)) {
                                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                                break b;
                            }

                    }

                    parentContext = parentContext.return;
                } while (null !== parentContext);

                throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
            }

            if (1 === parentComponent.tag) {
                var Component = parentComponent.type;

                if (isContextProvider(Component)) {
                    parentComponent = processChildContext(parentComponent, Component, parentContext);
                    break a;
                }
            }

            parentComponent = parentContext;
        } else parentComponent = emptyContextObject;

        null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
        container = callback;
        suspenseConfig = createUpdate(current$$1, suspenseConfig);
        suspenseConfig.payload = {
            element: element
        };
        container = undefined === container ? null : container;
        null !== container && (suspenseConfig.callback = container);
        enqueueUpdate(currentTime, suspenseConfig);
        scheduleUpdateOnFiber(currentTime, current$$1);
        return current$$1;
    }

    function _createPortal(children, containerInfo, implementation) {
        var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }

    function _inherits(subClass, superClass) {
        if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
    }

    var getInspectorDataForViewTag = undefined;

    getInspectorDataForViewTag = function getInspectorDataForViewTag() {
        throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
    };

    function findNodeHandle(componentOrHandle) {
        if (null == componentOrHandle) return null;
        if ("number" === typeof componentOrHandle) return componentOrHandle;
        if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
        if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
        componentOrHandle = findHostInstance(componentOrHandle);
        return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
    }

    batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= 1;

        try {
            return fn(a);
        } finally {
            executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
        }
    };

    flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
        (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
    };

    var roots = new Map(),
        ReactNativeRenderer = {
            NativeComponent: function (findNodeHandle, findHostInstance) {
                return function (_React$Component) {
                    function ReactNativeComponent() {
                        if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

                        var call = _React$Component.apply(this, arguments);

                        if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
                    }

                    _inherits(ReactNativeComponent, _React$Component);

                    ReactNativeComponent.prototype.blur = function () {
                        ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
                    };

                    ReactNativeComponent.prototype.focus = function () {
                        ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
                    };

                    ReactNativeComponent.prototype.measure = function (callback) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                    };

                    ReactNativeComponent.prototype.measureInWindow = function (callback) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                    };

                    ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
                    };

                    ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        if (null != maybeInstance && !maybeInstance.canonical) {
                            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
                            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
                            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
                            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
                        }
                    };

                    return ReactNativeComponent;
                }(React.Component);
            }(findNodeHandle, findHostInstance),
            findNodeHandle: findNodeHandle,
            dispatchCommand: function dispatchCommand(handle, command, args) {
                null != handle._nativeTag && ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);
            },
            setNativeProps: function setNativeProps(handle, nativeProps) {
                null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
            },
            render: function render(element, containerTag, callback) {
                var root = roots.get(containerTag);

                if (!root) {
                    root = new FiberRootNode(containerTag, 0, false);
                    var uninitializedFiber = createFiber(3, null, null, 0);
                    root.current = uninitializedFiber;
                    uninitializedFiber.stateNode = root;
                    roots.set(containerTag, root);
                }

                updateContainer(element, root, null, callback);

                a: if (element = root.current, element.child) switch (element.child.tag) {
                    case 5:
                        element = element.child.stateNode;
                        break a;

                    default:
                        element = element.child.stateNode;
                } else element = null;

                return element;
            },
            unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
                var root = roots.get(containerTag);
                root && updateContainer(null, root, null, function () {
                    roots.delete(containerTag);
                });
            },
            unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
                ReactNativeRenderer.unmountComponentAtNode(containerTag);
                ReactNativePrivateInterface.UIManager.removeRootView(containerTag);
            },
            createPortal: function createPortal(children, containerTag) {
                return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
            },
            unstable_batchedUpdates: batchedUpdates,
            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
                    return {
                        measure: function measure(callback) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                        },
                        measureInWindow: function measureInWindow(callback) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                        },
                        measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
                        },
                        setNativeProps: function setNativeProps(nativeProps) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            if (null != maybeInstance && !maybeInstance.canonical) {
                                var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
                                maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
                                nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
                                null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
                            }
                        },
                        focus: function focus() {
                            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
                        },
                        blur: function blur() {
                            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
                        }
                    };
                }(findNodeHandle, findHostInstance),
                computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
                    return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
                }
            }
        };

    (function (devToolsConfig) {
        var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        return injectInternals(_extends({}, devToolsConfig, {
            overrideHookState: null,
            overrideProps: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
            findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
                fiber = findCurrentHostFiber(fiber);
                return null === fiber ? null : fiber.stateNode;
            },
            findFiberByHostInstance: function findFiberByHostInstance(instance) {
                return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
            },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null
        }));
    })({
        findFiberByHostInstance: getInstanceFromTag,
        getInspectorDataForViewTag: getInspectorDataForViewTag,
        bundleType: 0,
        version: "16.8.6",
        rendererPackageName: "react-native-renderer"
    });

    var ReactNativeRenderer$2 = {
        default: ReactNativeRenderer
    },
        ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
    module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
}, 14443, [14344, 14446, 14566, 10297, 14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    _$$_REQUIRE(_dependencyMap[0]);
}, 14446, [10120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    if (global.GLOBAL === undefined) {
        global.GLOBAL = global;
    }

    if (global.window === undefined) {
        global.window = global;
    }

    if (global.self === undefined) {
        global.self = global;
    }

    global.process = global.process || {};
    global.process.env = global.process.env || {};

    if (!global.process.env.NODE_ENV) {
        global.process.env.NODE_ENV = 'production';
    }
}, 14449, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    if (global.__RCTProfileIsProfiling) {
        var Systrace = _$$_REQUIRE(_dependencyMap[0]);

        Systrace.installReactHook();
        Systrace.setEnabled(true);
    }
}, 14452, [10054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

    ExceptionsManager.installConsoleErrorReporter();

    if (!global.__fbDisableExceptionsManager) {
        var handleError = function handleError(e, isFatal) {
            try {
                ExceptionsManager.handleException(e, isFatal);
            } catch (ee) {
                throw e;
            }
        };

        var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

        ErrorUtils.setGlobalHandler(handleError);
    }
}, 14455, [10141, 10051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

    var setPrototypeOf = _$$_REQUIRE(_dependencyMap[1]);

    var isNativeFunction = _$$_REQUIRE(_dependencyMap[2]);

    var construct = _$$_REQUIRE(_dependencyMap[3]);

    function _wrapNativeSuper(Class) {
        var _cache = typeof Map === "function" ? new Map() : undefined;

        module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
            if (Class === null || !isNativeFunction(Class)) return Class;

            if (typeof Class !== "function") {
                throw new TypeError("Super expression must either be null or a function");
            }

            if (typeof _cache !== "undefined") {
                if (_cache.has(Class)) return _cache.get(Class);

                _cache.set(Class, Wrapper);
            }

            function Wrapper() {
                return construct(Class, arguments, getPrototypeOf(this).constructor);
            }

            Wrapper.prototype = Object.create(Class.prototype, {
                constructor: {
                    value: Wrapper,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            return setPrototypeOf(Wrapper, Class);
        };

        return _wrapNativeSuper(Class);
    }

    module.exports = _wrapNativeSuper;
}, 14458, [14377, 14389, 14461, 14464]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _isNativeFunction(fn) {
        return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }

    module.exports = _isNativeFunction;
}, 14461, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

    function isNativeReflectConstruct() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;

        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], function () { }));
            return true;
        } catch (e) {
            return false;
        }
    }

    function _construct(Parent, args, Class) {
        if (isNativeReflectConstruct()) {
            module.exports = _construct = Reflect.construct;
        } else {
            module.exports = _construct = function _construct(Parent, args, Class) {
                var a = [null];
                a.push.apply(a, args);
                var Constructor = Function.bind.apply(Parent, a);
                var instance = new Constructor();
                if (Class) setPrototypeOf(instance, Class.prototype);
                return instance;
            };
        }

        return _construct.apply(null, arguments);
    }

    module.exports = _construct;
}, 14464, [14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var Platform = _$$_REQUIRE(_dependencyMap[2]);

    var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
    var ExceptionsManager = {
        reportFatalException: function reportFatalException(message, stack, exceptionId) {
            NativeModule.reportFatalException(message, stack, exceptionId);
        },
        reportSoftException: function reportSoftException(message, stack, exceptionId) {
            NativeModule.reportSoftException(message, stack, exceptionId);
        },
        updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
            NativeModule.updateExceptionMessage(message, stack, exceptionId);
        },
        dismissRedbox: function dismissRedbox() {
            if (NativeModule.dismissRedbox) {
                NativeModule.dismissRedbox();
            }
        },
        reportException: function reportException(data) {
            if (NativeModule.reportException) {
                NativeModule.reportException(data);
                return;
            }

            if (data.isFatal) {
                ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
            } else {
                ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
            }
        }
    };
    var _default = ExceptionsManager;
    exports.default = _default;
}, 14467, [14308, 14341, 10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    polyfillGlobal('Promise', function () {
        return _$$_REQUIRE(_dependencyMap[1]);
    });
}, 14470, [14473, 10159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

    function polyfillObjectProperty(object, name, getValue) {
        var descriptor = Object.getOwnPropertyDescriptor(object, name);

        var _ref = descriptor || {},
            enumerable = _ref.enumerable,
            writable = _ref.writable,
            configurable = _ref.configurable;

        if (descriptor && !configurable) {
            return;
        }

        defineLazyObjectProperty(object, name, {
            get: getValue,
            enumerable: enumerable !== false,
            writable: writable !== false
        });
    }

    function polyfillGlobal(name, getValue) {
        polyfillObjectProperty(global, name, getValue);
    }

    module.exports = {
        polyfillObjectProperty: polyfillObjectProperty,
        polyfillGlobal: polyfillGlobal
    };
}, 14473, [10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var Promise = _$$_REQUIRE(_dependencyMap[0]);

    module.exports = Promise;

    Promise.prototype['finally'] = function (f) {
        return this.then(function (value) {
            return Promise.resolve(f()).then(function () {
                return value;
            });
        }, function (err) {
            return Promise.resolve(f()).then(function () {
                throw err;
            });
        });
    };
}, 14476, [10168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    polyfillGlobal('regeneratorRuntime', function () {
        delete global.regeneratorRuntime;
        return _$$_REQUIRE(_dependencyMap[1]);
    });
}, 14479, [14473, 14482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var runtime = function (exports) {
        "use strict";

        var Op = Object.prototype;
        var hasOwn = Op.hasOwnProperty;
        var undefined;
        var $Symbol = typeof Symbol === "function" ? Symbol : {};
        var iteratorSymbol = $Symbol.iterator || "@@iterator";
        var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
        var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

        function wrap(innerFn, outerFn, self, tryLocsList) {
            var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);
            generator._invoke = makeInvokeMethod(innerFn, self, context);
            return generator;
        }

        exports.wrap = wrap;

        function tryCatch(fn, obj, arg) {
            try {
                return {
                    type: "normal",
                    arg: fn.call(obj, arg)
                };
            } catch (err) {
                return {
                    type: "throw",
                    arg: err
                };
            }
        }

        var GenStateSuspendedStart = "suspendedStart";
        var GenStateSuspendedYield = "suspendedYield";
        var GenStateExecuting = "executing";
        var GenStateCompleted = "completed";
        var ContinueSentinel = {};

        function Generator() { }

        function GeneratorFunction() { }

        function GeneratorFunctionPrototype() { }

        var IteratorPrototype = {};

        IteratorPrototype[iteratorSymbol] = function () {
            return this;
        };

        var getProto = Object.getPrototypeOf;
        var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

        if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
            IteratorPrototype = NativeIteratorPrototype;
        }

        var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
        GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
        GeneratorFunctionPrototype.constructor = GeneratorFunction;
        GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

        function defineIteratorMethods(prototype) {
            ["next", "throw", "return"].forEach(function (method) {
                prototype[method] = function (arg) {
                    return this._invoke(method, arg);
                };
            });
        }

        exports.isGeneratorFunction = function (genFun) {
            var ctor = typeof genFun === "function" && genFun.constructor;
            return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
        };

        exports.mark = function (genFun) {
            if (Object.setPrototypeOf) {
                Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
                genFun.__proto__ = GeneratorFunctionPrototype;

                if (!(toStringTagSymbol in genFun)) {
                    genFun[toStringTagSymbol] = "GeneratorFunction";
                }
            }

            genFun.prototype = Object.create(Gp);
            return genFun;
        };

        exports.awrap = function (arg) {
            return {
                __await: arg
            };
        };

        function AsyncIterator(generator, PromiseImpl) {
            function invoke(method, arg, resolve, reject) {
                var record = tryCatch(generator[method], generator, arg);

                if (record.type === "throw") {
                    reject(record.arg);
                } else {
                    var result = record.arg;
                    var value = result.value;

                    if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
                        return PromiseImpl.resolve(value.__await).then(function (value) {
                            invoke("next", value, resolve, reject);
                        }, function (err) {
                            invoke("throw", err, resolve, reject);
                        });
                    }

                    return PromiseImpl.resolve(value).then(function (unwrapped) {
                        result.value = unwrapped;
                        resolve(result);
                    }, function (error) {
                        return invoke("throw", error, resolve, reject);
                    });
                }
            }

            var previousPromise;

            function enqueue(method, arg) {
                function callInvokeWithMethodAndArg() {
                    return new PromiseImpl(function (resolve, reject) {
                        invoke(method, arg, resolve, reject);
                    });
                }

                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }

            this._invoke = enqueue;
        }

        defineIteratorMethods(AsyncIterator.prototype);

        AsyncIterator.prototype[asyncIteratorSymbol] = function () {
            return this;
        };

        exports.AsyncIterator = AsyncIterator;

        exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
            if (PromiseImpl === undefined) PromiseImpl = Promise;
            var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
            return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
                return result.done ? result.value : iter.next();
            });
        };

        function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;
            return function invoke(method, arg) {
                if (state === GenStateExecuting) {
                    throw new Error("Generator is already running");
                }

                if (state === GenStateCompleted) {
                    if (method === "throw") {
                        throw arg;
                    }

                    return doneResult();
                }

                context.method = method;
                context.arg = arg;

                while (true) {
                    var delegate = context.delegate;

                    if (delegate) {
                        var delegateResult = maybeInvokeDelegate(delegate, context);

                        if (delegateResult) {
                            if (delegateResult === ContinueSentinel) continue;
                            return delegateResult;
                        }
                    }

                    if (context.method === "next") {
                        context.sent = context._sent = context.arg;
                    } else if (context.method === "throw") {
                        if (state === GenStateSuspendedStart) {
                            state = GenStateCompleted;
                            throw context.arg;
                        }

                        context.dispatchException(context.arg);
                    } else if (context.method === "return") {
                        context.abrupt("return", context.arg);
                    }

                    state = GenStateExecuting;
                    var record = tryCatch(innerFn, self, context);

                    if (record.type === "normal") {
                        state = context.done ? GenStateCompleted : GenStateSuspendedYield;

                        if (record.arg === ContinueSentinel) {
                            continue;
                        }

                        return {
                            value: record.arg,
                            done: context.done
                        };
                    } else if (record.type === "throw") {
                        state = GenStateCompleted;
                        context.method = "throw";
                        context.arg = record.arg;
                    }
                }
            };
        }

        function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];

            if (method === undefined) {
                context.delegate = null;

                if (context.method === "throw") {
                    if (delegate.iterator["return"]) {
                        context.method = "return";
                        context.arg = undefined;
                        maybeInvokeDelegate(delegate, context);

                        if (context.method === "throw") {
                            return ContinueSentinel;
                        }
                    }

                    context.method = "throw";
                    context.arg = new TypeError("The iterator does not provide a 'throw' method");
                }

                return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === "throw") {
                context.method = "throw";
                context.arg = record.arg;
                context.delegate = null;
                return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
                context.method = "throw";
                context.arg = new TypeError("iterator result is not an object");
                context.delegate = null;
                return ContinueSentinel;
            }

            if (info.done) {
                context[delegate.resultName] = info.value;
                context.next = delegate.nextLoc;

                if (context.method !== "return") {
                    context.method = "next";
                    context.arg = undefined;
                }
            } else {
                return info;
            }

            context.delegate = null;
            return ContinueSentinel;
        }

        defineIteratorMethods(Gp);
        Gp[toStringTagSymbol] = "Generator";

        Gp[iteratorSymbol] = function () {
            return this;
        };

        Gp.toString = function () {
            return "[object Generator]";
        };

        function pushTryEntry(locs) {
            var entry = {
                tryLoc: locs[0]
            };

            if (1 in locs) {
                entry.catchLoc = locs[1];
            }

            if (2 in locs) {
                entry.finallyLoc = locs[2];
                entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
        }

        function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = "normal";
            delete record.arg;
            entry.completion = record;
        }

        function Context(tryLocsList) {
            this.tryEntries = [{
                tryLoc: "root"
            }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
        }

        exports.keys = function (object) {
            var keys = [];

            for (var key in object) {
                keys.push(key);
            }

            keys.reverse();
            return function next() {
                while (keys.length) {
                    var key = keys.pop();

                    if (key in object) {
                        next.value = key;
                        next.done = false;
                        return next;
                    }
                }

                next.done = true;
                return next;
            };
        };

        function values(iterable) {
            if (iterable) {
                var iteratorMethod = iterable[iteratorSymbol];

                if (iteratorMethod) {
                    return iteratorMethod.call(iterable);
                }

                if (typeof iterable.next === "function") {
                    return iterable;
                }

                if (!isNaN(iterable.length)) {
                    var i = -1,
                        next = function next() {
                            while (++i < iterable.length) {
                                if (hasOwn.call(iterable, i)) {
                                    next.value = iterable[i];
                                    next.done = false;
                                    return next;
                                }
                            }

                            next.value = undefined;
                            next.done = true;
                            return next;
                        };

                    return next.next = next;
                }
            }

            return {
                next: doneResult
            };
        }

        exports.values = values;

        function doneResult() {
            return {
                value: undefined,
                done: true
            };
        }

        Context.prototype = {
            constructor: Context,
            reset: function reset(skipTempReset) {
                this.prev = 0;
                this.next = 0;
                this.sent = this._sent = undefined;
                this.done = false;
                this.delegate = null;
                this.method = "next";
                this.arg = undefined;
                this.tryEntries.forEach(resetTryEntry);

                if (!skipTempReset) {
                    for (var name in this) {
                        if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                            this[name] = undefined;
                        }
                    }
                }
            },
            stop: function stop() {
                this.done = true;
                var rootEntry = this.tryEntries[0];
                var rootRecord = rootEntry.completion;

                if (rootRecord.type === "throw") {
                    throw rootRecord.arg;
                }

                return this.rval;
            },
            dispatchException: function dispatchException(exception) {
                if (this.done) {
                    throw exception;
                }

                var context = this;

                function handle(loc, caught) {
                    record.type = "throw";
                    record.arg = exception;
                    context.next = loc;

                    if (caught) {
                        context.method = "next";
                        context.arg = undefined;
                    }

                    return !!caught;
                }

                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];
                    var record = entry.completion;

                    if (entry.tryLoc === "root") {
                        return handle("end");
                    }

                    if (entry.tryLoc <= this.prev) {
                        var hasCatch = hasOwn.call(entry, "catchLoc");
                        var hasFinally = hasOwn.call(entry, "finallyLoc");

                        if (hasCatch && hasFinally) {
                            if (this.prev < entry.catchLoc) {
                                return handle(entry.catchLoc, true);
                            } else if (this.prev < entry.finallyLoc) {
                                return handle(entry.finallyLoc);
                            }
                        } else if (hasCatch) {
                            if (this.prev < entry.catchLoc) {
                                return handle(entry.catchLoc, true);
                            }
                        } else if (hasFinally) {
                            if (this.prev < entry.finallyLoc) {
                                return handle(entry.finallyLoc);
                            }
                        } else {
                            throw new Error("try statement without catch or finally");
                        }
                    }
                }
            },
            abrupt: function abrupt(type, arg) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];

                    if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                        var finallyEntry = entry;
                        break;
                    }
                }

                if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                    finallyEntry = null;
                }

                var record = finallyEntry ? finallyEntry.completion : {};
                record.type = type;
                record.arg = arg;

                if (finallyEntry) {
                    this.method = "next";
                    this.next = finallyEntry.finallyLoc;
                    return ContinueSentinel;
                }

                return this.complete(record);
            },
            complete: function complete(record, afterLoc) {
                if (record.type === "throw") {
                    throw record.arg;
                }

                if (record.type === "break" || record.type === "continue") {
                    this.next = record.arg;
                } else if (record.type === "return") {
                    this.rval = this.arg = record.arg;
                    this.method = "return";
                    this.next = "end";
                } else if (record.type === "normal" && afterLoc) {
                    this.next = afterLoc;
                }

                return ContinueSentinel;
            },
            finish: function finish(finallyLoc) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];

                    if (entry.finallyLoc === finallyLoc) {
                        this.complete(entry.completion, entry.afterLoc);
                        resetTryEntry(entry);
                        return ContinueSentinel;
                    }
                }
            },
            "catch": function _catch(tryLoc) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];

                    if (entry.tryLoc === tryLoc) {
                        var record = entry.completion;

                        if (record.type === "throw") {
                            var thrown = record.arg;
                            resetTryEntry(entry);
                        }

                        return thrown;
                    }
                }

                throw new Error("illegal catch attempt");
            },
            delegateYield: function delegateYield(iterable, resultName, nextLoc) {
                this.delegate = {
                    iterator: values(iterable),
                    resultName: resultName,
                    nextLoc: nextLoc
                };

                if (this.method === "next") {
                    this.arg = undefined;
                }

                return ContinueSentinel;
            }
        };
        return exports;
    }(typeof module === "object" ? module.exports : {});

    try {
        regeneratorRuntime = runtime;
    } catch (accidentalStrictMode) {
        Function("r", "regeneratorRuntime = r")(runtime);
    }
}, 14482, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    if (!global.RN$Bridgeless) {
        var _require = _$$_REQUIRE(_dependencyMap[0]),
            polyfillGlobal = _require.polyfillGlobal;

        var defineLazyTimer = function defineLazyTimer(name) {
            polyfillGlobal(name, function () {
                return _$$_REQUIRE(_dependencyMap[1])[name];
            });
        };

        defineLazyTimer('setTimeout');
        defineLazyTimer('setInterval');
        defineLazyTimer('setImmediate');
        defineLazyTimer('clearTimeout');
        defineLazyTimer('clearInterval');
        defineLazyTimer('clearImmediate');
        defineLazyTimer('requestAnimationFrame');
        defineLazyTimer('cancelAnimationFrame');
        defineLazyTimer('requestIdleCallback');
        defineLazyTimer('cancelIdleCallback');
    }
}, 14485, [14473, 10063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('Timing');

    exports.default = _default;
}, 14488, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    "use strict";

    var performance = _$$_REQUIRE(_dependencyMap[0]);

    var performanceNow;

    if (performance.now) {
        performanceNow = function performanceNow() {
            return performance.now();
        };
    } else {
        performanceNow = function performanceNow() {
            return Date.now();
        };
    }

    module.exports = performanceNow;
}, 14491, [14494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

    var performance;

    if (ExecutionEnvironment.canUseDOM) {
        performance = window.performance || window.msPerformance || window.webkitPerformance;
    }

    module.exports = performance || {};
}, 14494, [14497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
    var ExecutionEnvironment = {
        canUseDOM: canUseDOM,
        canUseWorkers: typeof Worker !== 'undefined',
        canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
        canUseViewport: canUseDOM && !!window.screen,
        isInWorker: !canUseDOM
    };
    module.exports = ExecutionEnvironment;
}, 14497, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    polyfillGlobal('XMLHttpRequest', function () {
        return _$$_REQUIRE(_dependencyMap[1]);
    });
    polyfillGlobal('FormData', function () {
        return _$$_REQUIRE(_dependencyMap[2]);
    });
    polyfillGlobal('fetch', function () {
        return _$$_REQUIRE(_dependencyMap[3]).fetch;
    });
    polyfillGlobal('Headers', function () {
        return _$$_REQUIRE(_dependencyMap[3]).Headers;
    });
    polyfillGlobal('Request', function () {
        return _$$_REQUIRE(_dependencyMap[3]).Request;
    });
    polyfillGlobal('Response', function () {
        return _$$_REQUIRE(_dependencyMap[3]).Response;
    });
    polyfillGlobal('WebSocket', function () {
        return _$$_REQUIRE(_dependencyMap[4]);
    });
    polyfillGlobal('Blob', function () {
        return _$$_REQUIRE(_dependencyMap[5]);
    });
    polyfillGlobal('File', function () {
        return _$$_REQUIRE(_dependencyMap[6]);
    });
    polyfillGlobal('FileReader', function () {
        return _$$_REQUIRE(_dependencyMap[7]);
    });
    polyfillGlobal('URL', function () {
        return _$$_REQUIRE(_dependencyMap[8]).URL;
    });
    polyfillGlobal('URLSearchParams', function () {
        return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
    });
    polyfillGlobal('AbortController', function () {
        return _$$_REQUIRE(_dependencyMap[9]).AbortController;
    });
    polyfillGlobal('AbortSignal', function () {
        return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
    });
}, 14500, [14473, 10177, 10219, 10222, 10228, 10210, 10234, 10237, 10240, 14521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('BlobModule');

    exports.default = _default;
}, 14503, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
        value: true
    });
    var privateData = new WeakMap();
    var wrappers = new WeakMap();

    function pd(event) {
        var retv = privateData.get(event);

        if (retv === null) {
            throw new TypeError("'this' is expected an Event object, but got " + JSON.stringify(event));
        }

        return retv;
    }

    function setCancelFlag(data) {
        if (data.passiveListener != null) {
            if (typeof console !== "undefined" && true) { }

            return;
        }

        if (!data.event.cancelable) {
            return;
        }

        data.canceled = true;

        if (typeof data.event.preventDefault === "function") {
            data.event.preventDefault();
        }
    }

    function Event(eventTarget, event) {
        privateData.set(this, {
            eventTarget: eventTarget,
            event: event,
            eventPhase: 2,
            currentTarget: eventTarget,
            canceled: false,
            stopped: false,
            immediateStopped: false,
            passiveListener: null,
            timeStamp: event.timeStamp || Date.now()
        });
        Object.defineProperty(this, "isTrusted", {
            value: false,
            enumerable: true
        });
        var keys = Object.keys(event);

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];

            if (!(key in this)) {
                Object.defineProperty(this, key, defineRedirectDescriptor(key));
            }
        }
    }

    Event.prototype = {
        get type() {
            return pd(this).event.type;
        },

        get target() {
            return pd(this).eventTarget;
        },

        get currentTarget() {
            return pd(this).currentTarget;
        },

        composedPath: function composedPath() {
            var currentTarget = pd(this).currentTarget;

            if (currentTarget == null) {
                return [];
            }

            return [currentTarget];
        },

        get NONE() {
            return 0;
        },

        get CAPTURING_PHASE() {
            return 1;
        },

        get AT_TARGET() {
            return 2;
        },

        get BUBBLING_PHASE() {
            return 3;
        },

        get eventPhase() {
            return pd(this).eventPhase;
        },

        stopPropagation: function stopPropagation() {
            var data = pd(this);
            data.stopped = true;

            if (typeof data.event.stopPropagation === "function") {
                data.event.stopPropagation();
            }
        },
        stopImmediatePropagation: function stopImmediatePropagation() {
            var data = pd(this);
            data.stopped = true;
            data.immediateStopped = true;

            if (typeof data.event.stopImmediatePropagation === "function") {
                data.event.stopImmediatePropagation();
            }
        },

        get bubbles() {
            return Boolean(pd(this).event.bubbles);
        },

        get cancelable() {
            return Boolean(pd(this).event.cancelable);
        },

        preventDefault: function preventDefault() {
            setCancelFlag(pd(this));
        },

        get defaultPrevented() {
            return pd(this).canceled;
        },

        get composed() {
            return Boolean(pd(this).event.composed);
        },

        get timeStamp() {
            return pd(this).timeStamp;
        },

        get srcElement() {
            return pd(this).eventTarget;
        },

        get cancelBubble() {
            return pd(this).stopped;
        },

        set cancelBubble(value) {
            if (!value) {
                return;
            }

            var data = pd(this);
            data.stopped = true;

            if (typeof data.event.cancelBubble === "boolean") {
                data.event.cancelBubble = true;
            }
        },

        get returnValue() {
            return !pd(this).canceled;
        },

        set returnValue(value) {
            if (!value) {
                setCancelFlag(pd(this));
            }
        },

        initEvent: function initEvent() { }
    };
    Object.defineProperty(Event.prototype, "constructor", {
        value: Event,
        configurable: true,
        writable: true
    });

    if (typeof window !== "undefined" && typeof window.Event !== "undefined") {
        Object.setPrototypeOf(Event.prototype, window.Event.prototype);
        wrappers.set(window.Event.prototype, Event);
    }

    function defineRedirectDescriptor(key) {
        return {
            get: function get() {
                return pd(this).event[key];
            },
            set: function set(value) {
                pd(this).event[key] = value;
            },
            configurable: true,
            enumerable: true
        };
    }

    function defineCallDescriptor(key) {
        return {
            value: function value() {
                var event = pd(this).event;
                return event[key].apply(event, arguments);
            },
            configurable: true,
            enumerable: true
        };
    }

    function defineWrapper(BaseEvent, proto) {
        var keys = Object.keys(proto);

        if (keys.length === 0) {
            return BaseEvent;
        }

        function CustomEvent(eventTarget, event) {
            BaseEvent.call(this, eventTarget, event);
        }

        CustomEvent.prototype = Object.create(BaseEvent.prototype, {
            constructor: {
                value: CustomEvent,
                configurable: true,
                writable: true
            }
        });

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];

            if (!(key in BaseEvent.prototype)) {
                var descriptor = Object.getOwnPropertyDescriptor(proto, key);
                var isFunc = typeof descriptor.value === "function";
                Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
            }
        }

        return CustomEvent;
    }

    function getWrapper(proto) {
        if (proto == null || proto === Object.prototype) {
            return Event;
        }

        var wrapper = wrappers.get(proto);

        if (wrapper == null) {
            wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
            wrappers.set(proto, wrapper);
        }

        return wrapper;
    }

    function wrapEvent(eventTarget, event) {
        var Wrapper = getWrapper(Object.getPrototypeOf(event));
        return new Wrapper(eventTarget, event);
    }

    function isStopped(event) {
        return pd(event).immediateStopped;
    }

    function setEventPhase(event, eventPhase) {
        pd(event).eventPhase = eventPhase;
    }

    function setCurrentTarget(event, currentTarget) {
        pd(event).currentTarget = currentTarget;
    }

    function setPassiveListener(event, passiveListener) {
        pd(event).passiveListener = passiveListener;
    }

    var listenersMap = new WeakMap();
    var CAPTURE = 1;
    var BUBBLE = 2;
    var ATTRIBUTE = 3;

    function isObject(x) {
        return x !== null && typeof x === "object";
    }

    function getListeners(eventTarget) {
        var listeners = listenersMap.get(eventTarget);

        if (listeners == null) {
            throw new TypeError("'this' is expected an EventTarget object, but got another value.");
        }

        return listeners;
    }

    function defineEventAttributeDescriptor(eventName) {
        return {
            get: function get() {
                var listeners = getListeners(this);
                var node = listeners.get(eventName);

                while (node != null) {
                    if (node.listenerType === ATTRIBUTE) {
                        return node.listener;
                    }

                    node = node.next;
                }

                return null;
            },
            set: function set(listener) {
                if (typeof listener !== "function" && !isObject(listener)) {
                    listener = null;
                }

                var listeners = getListeners(this);
                var prev = null;
                var node = listeners.get(eventName);

                while (node != null) {
                    if (node.listenerType === ATTRIBUTE) {
                        if (prev !== null) {
                            prev.next = node.next;
                        } else if (node.next !== null) {
                            listeners.set(eventName, node.next);
                        } else {
                            listeners.delete(eventName);
                        }
                    } else {
                        prev = node;
                    }

                    node = node.next;
                }

                if (listener !== null) {
                    var newNode = {
                        listener: listener,
                        listenerType: ATTRIBUTE,
                        passive: false,
                        once: false,
                        next: null
                    };

                    if (prev === null) {
                        listeners.set(eventName, newNode);
                    } else {
                        prev.next = newNode;
                    }
                }
            },
            configurable: true,
            enumerable: true
        };
    }

    function defineEventAttribute(eventTargetPrototype, eventName) {
        Object.defineProperty(eventTargetPrototype, "on" + eventName, defineEventAttributeDescriptor(eventName));
    }

    function defineCustomEventTarget(eventNames) {
        function CustomEventTarget() {
            EventTarget.call(this);
        }

        CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
            constructor: {
                value: CustomEventTarget,
                configurable: true,
                writable: true
            }
        });

        for (var i = 0; i < eventNames.length; ++i) {
            defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
        }

        return CustomEventTarget;
    }

    function EventTarget() {
        if (this instanceof EventTarget) {
            listenersMap.set(this, new Map());
            return;
        }

        if (arguments.length === 1 && Array.isArray(arguments[0])) {
            return defineCustomEventTarget(arguments[0]);
        }

        if (arguments.length > 0) {
            var types = new Array(arguments.length);

            for (var i = 0; i < arguments.length; ++i) {
                types[i] = arguments[i];
            }

            return defineCustomEventTarget(types);
        }

        throw new TypeError("Cannot call a class as a function");
    }

    EventTarget.prototype = {
        addEventListener: function addEventListener(eventName, listener, options) {
            if (listener == null) {
                return;
            }

            if (typeof listener !== "function" && !isObject(listener)) {
                throw new TypeError("'listener' should be a function or an object.");
            }

            var listeners = getListeners(this);
            var optionsIsObj = isObject(options);
            var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
            var listenerType = capture ? CAPTURE : BUBBLE;
            var newNode = {
                listener: listener,
                listenerType: listenerType,
                passive: optionsIsObj && Boolean(options.passive),
                once: optionsIsObj && Boolean(options.once),
                next: null
            };
            var node = listeners.get(eventName);

            if (node === undefined) {
                listeners.set(eventName, newNode);
                return;
            }

            var prev = null;

            while (node != null) {
                if (node.listener === listener && node.listenerType === listenerType) {
                    return;
                }

                prev = node;
                node = node.next;
            }

            prev.next = newNode;
        },
        removeEventListener: function removeEventListener(eventName, listener, options) {
            if (listener == null) {
                return;
            }

            var listeners = getListeners(this);
            var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
            var listenerType = capture ? CAPTURE : BUBBLE;
            var prev = null;
            var node = listeners.get(eventName);

            while (node != null) {
                if (node.listener === listener && node.listenerType === listenerType) {
                    if (prev !== null) {
                        prev.next = node.next;
                    } else if (node.next !== null) {
                        listeners.set(eventName, node.next);
                    } else {
                        listeners.delete(eventName);
                    }

                    return;
                }

                prev = node;
                node = node.next;
            }
        },
        dispatchEvent: function dispatchEvent(event) {
            if (event == null || typeof event.type !== "string") {
                throw new TypeError('"event.type" should be a string.');
            }

            var listeners = getListeners(this);
            var eventName = event.type;
            var node = listeners.get(eventName);

            if (node == null) {
                return true;
            }

            var wrappedEvent = wrapEvent(this, event);
            var prev = null;

            while (node != null) {
                if (node.once) {
                    if (prev !== null) {
                        prev.next = node.next;
                    } else if (node.next !== null) {
                        listeners.set(eventName, node.next);
                    } else {
                        listeners.delete(eventName);
                    }
                } else {
                    prev = node;
                }

                setPassiveListener(wrappedEvent, node.passive ? node.listener : null);

                if (typeof node.listener === "function") {
                    try {
                        node.listener.call(this, wrappedEvent);
                    } catch (err) {
                        if (typeof console !== "undefined" && true) { }
                    }
                } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
                    node.listener.handleEvent(wrappedEvent);
                }

                if (isStopped(wrappedEvent)) {
                    break;
                }

                node = node.next;
            }

            setPassiveListener(wrappedEvent, null);
            setEventPhase(wrappedEvent, 0);
            setCurrentTarget(wrappedEvent, null);
            return !wrappedEvent.defaultPrevented;
        }
    };
    Object.defineProperty(EventTarget.prototype, "constructor", {
        value: EventTarget,
        configurable: true,
        writable: true
    });

    if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
        Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
    }

    exports.defineEventAttribute = defineEventAttribute;
    exports.EventTarget = EventTarget;
    exports.default = EventTarget;
    module.exports = EventTarget;
    module.exports.EventTarget = module.exports["default"] = EventTarget;
    module.exports.defineEventAttribute = defineEventAttribute;
}, 14506, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('Networking');

    exports.default = _default;
}, 14509, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    (function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
    })(this, function (exports) {
        'use strict';

        var support = {
            searchParams: 'URLSearchParams' in self,
            iterable: 'Symbol' in self && 'iterator' in Symbol,
            blob: 'FileReader' in self && 'Blob' in self && function () {
                try {
                    new Blob();
                    return true;
                } catch (e) {
                    return false;
                }
            }(),
            formData: 'FormData' in self,
            arrayBuffer: 'ArrayBuffer' in self
        };

        function isDataView(obj) {
            return obj && DataView.prototype.isPrototypeOf(obj);
        }

        if (support.arrayBuffer) {
            var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

            var isArrayBufferView = ArrayBuffer.isView || function (obj) {
                return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
            };
        }

        function normalizeName(name) {
            if (typeof name !== 'string') {
                name = String(name);
            }

            if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
                throw new TypeError('Invalid character in header field name');
            }

            return name.toLowerCase();
        }

        function normalizeValue(value) {
            if (typeof value !== 'string') {
                value = String(value);
            }

            return value;
        }

        function iteratorFor(items) {
            var iterator = {
                next: function next() {
                    var value = items.shift();
                    return {
                        done: value === undefined,
                        value: value
                    };
                }
            };

            if (support.iterable) {
                iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
                    return iterator;
                };
            }

            return iterator;
        }

        function Headers(headers) {
            this.map = {};

            if (headers instanceof Headers) {
                headers.forEach(function (value, name) {
                    this.append(name, value);
                }, this);
            } else if (Array.isArray(headers)) {
                headers.forEach(function (header) {
                    this.append(header[0], header[1]);
                }, this);
            } else if (headers) {
                Object.getOwnPropertyNames(headers).forEach(function (name) {
                    this.append(name, headers[name]);
                }, this);
            }
        }

        Headers.prototype.append = function (name, value) {
            name = normalizeName(name);
            value = normalizeValue(value);
            var oldValue = this.map[name];
            this.map[name] = oldValue ? oldValue + ', ' + value : value;
        };

        Headers.prototype['delete'] = function (name) {
            delete this.map[normalizeName(name)];
        };

        Headers.prototype.get = function (name) {
            name = normalizeName(name);
            return this.has(name) ? this.map[name] : null;
        };

        Headers.prototype.has = function (name) {
            return this.map.hasOwnProperty(normalizeName(name));
        };

        Headers.prototype.set = function (name, value) {
            this.map[normalizeName(name)] = normalizeValue(value);
        };

        Headers.prototype.forEach = function (callback, thisArg) {
            for (var name in this.map) {
                if (this.map.hasOwnProperty(name)) {
                    callback.call(thisArg, this.map[name], name, this);
                }
            }
        };

        Headers.prototype.keys = function () {
            var items = [];
            this.forEach(function (value, name) {
                items.push(name);
            });
            return iteratorFor(items);
        };

        Headers.prototype.values = function () {
            var items = [];
            this.forEach(function (value) {
                items.push(value);
            });
            return iteratorFor(items);
        };

        Headers.prototype.entries = function () {
            var items = [];
            this.forEach(function (value, name) {
                items.push([name, value]);
            });
            return iteratorFor(items);
        };

        if (support.iterable) {
            Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
        }

        function consumed(body) {
            if (body.bodyUsed) {
                return Promise.reject(new TypeError('Already read'));
            }

            body.bodyUsed = true;
        }

        function fileReaderReady(reader) {
            return new Promise(function (resolve, reject) {
                reader.onload = function () {
                    resolve(reader.result);
                };

                reader.onerror = function () {
                    reject(reader.error);
                };
            });
        }

        function readBlobAsArrayBuffer(blob) {
            var reader = new FileReader();
            var promise = fileReaderReady(reader);
            reader.readAsArrayBuffer(blob);
            return promise;
        }

        function readBlobAsText(blob) {
            var reader = new FileReader();
            var promise = fileReaderReady(reader);
            reader.readAsText(blob);
            return promise;
        }

        function readArrayBufferAsText(buf) {
            var view = new Uint8Array(buf);
            var chars = new Array(view.length);

            for (var i = 0; i < view.length; i++) {
                chars[i] = String.fromCharCode(view[i]);
            }

            return chars.join('');
        }

        function bufferClone(buf) {
            if (buf.slice) {
                return buf.slice(0);
            } else {
                var view = new Uint8Array(buf.byteLength);
                view.set(new Uint8Array(buf));
                return view.buffer;
            }
        }

        function Body() {
            this.bodyUsed = false;

            this._initBody = function (body) {
                this._bodyInit = body;

                if (!body) {
                    this._bodyText = '';
                } else if (typeof body === 'string') {
                    this._bodyText = body;
                } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
                    this._bodyBlob = body;
                } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
                    this._bodyFormData = body;
                } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                    this._bodyText = body.toString();
                } else if (support.arrayBuffer && support.blob && isDataView(body)) {
                    this._bodyArrayBuffer = bufferClone(body.buffer);
                    this._bodyInit = new Blob([this._bodyArrayBuffer]);
                } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
                    this._bodyArrayBuffer = bufferClone(body);
                } else {
                    this._bodyText = body = Object.prototype.toString.call(body);
                }

                if (!this.headers.get('content-type')) {
                    if (typeof body === 'string') {
                        this.headers.set('content-type', 'text/plain;charset=UTF-8');
                    } else if (this._bodyBlob && this._bodyBlob.type) {
                        this.headers.set('content-type', this._bodyBlob.type);
                    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
                    }
                }
            };

            if (support.blob) {
                this.blob = function () {
                    var rejected = consumed(this);

                    if (rejected) {
                        return rejected;
                    }

                    if (this._bodyBlob) {
                        return Promise.resolve(this._bodyBlob);
                    } else if (this._bodyArrayBuffer) {
                        return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                    } else if (this._bodyFormData) {
                        throw new Error('could not read FormData body as blob');
                    } else {
                        return Promise.resolve(new Blob([this._bodyText]));
                    }
                };

                this.arrayBuffer = function () {
                    if (this._bodyArrayBuffer) {
                        return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
                    } else {
                        return this.blob().then(readBlobAsArrayBuffer);
                    }
                };
            }

            this.text = function () {
                var rejected = consumed(this);

                if (rejected) {
                    return rejected;
                }

                if (this._bodyBlob) {
                    return readBlobAsText(this._bodyBlob);
                } else if (this._bodyArrayBuffer) {
                    return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
                } else if (this._bodyFormData) {
                    throw new Error('could not read FormData body as text');
                } else {
                    return Promise.resolve(this._bodyText);
                }
            };

            if (support.formData) {
                this.formData = function () {
                    return this.text().then(decode);
                };
            }

            this.json = function () {
                return this.text().then(JSON.parse);
            };

            return this;
        }

        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

        function normalizeMethod(method) {
            var upcased = method.toUpperCase();
            return methods.indexOf(upcased) > -1 ? upcased : method;
        }

        function Request(input, options) {
            options = options || {};
            var body = options.body;

            if (input instanceof Request) {
                if (input.bodyUsed) {
                    throw new TypeError('Already read');
                }

                this.url = input.url;
                this.credentials = input.credentials;

                if (!options.headers) {
                    this.headers = new Headers(input.headers);
                }

                this.method = input.method;
                this.mode = input.mode;
                this.signal = input.signal;

                if (!body && input._bodyInit != null) {
                    body = input._bodyInit;
                    input.bodyUsed = true;
                }
            } else {
                this.url = String(input);
            }

            this.credentials = options.credentials || this.credentials || 'same-origin';

            if (options.headers || !this.headers) {
                this.headers = new Headers(options.headers);
            }

            this.method = normalizeMethod(options.method || this.method || 'GET');
            this.mode = options.mode || this.mode || null;
            this.signal = options.signal || this.signal;
            this.referrer = null;

            if ((this.method === 'GET' || this.method === 'HEAD') && body) {
                throw new TypeError('Body not allowed for GET or HEAD requests');
            }

            this._initBody(body);
        }

        Request.prototype.clone = function () {
            return new Request(this, {
                body: this._bodyInit
            });
        };

        function decode(body) {
            var form = new FormData();
            body.trim().split('&').forEach(function (bytes) {
                if (bytes) {
                    var split = bytes.split('=');
                    var name = split.shift().replace(/\+/g, ' ');
                    var value = split.join('=').replace(/\+/g, ' ');
                    form.append(decodeURIComponent(name), decodeURIComponent(value));
                }
            });
            return form;
        }

        function parseHeaders(rawHeaders) {
            var headers = new Headers();
            var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
            preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
                var parts = line.split(':');
                var key = parts.shift().trim();

                if (key) {
                    var value = parts.join(':').trim();
                    headers.append(key, value);
                }
            });
            return headers;
        }

        Body.call(Request.prototype);

        function Response(bodyInit, options) {
            if (!options) {
                options = {};
            }

            this.type = 'default';
            this.status = options.status === undefined ? 200 : options.status;
            this.ok = this.status >= 200 && this.status < 300;
            this.statusText = 'statusText' in options ? options.statusText : 'OK';
            this.headers = new Headers(options.headers);
            this.url = options.url || '';

            this._initBody(bodyInit);
        }

        Body.call(Response.prototype);

        Response.prototype.clone = function () {
            return new Response(this._bodyInit, {
                status: this.status,
                statusText: this.statusText,
                headers: new Headers(this.headers),
                url: this.url
            });
        };

        Response.error = function () {
            var response = new Response(null, {
                status: 0,
                statusText: ''
            });
            response.type = 'error';
            return response;
        };

        var redirectStatuses = [301, 302, 303, 307, 308];

        Response.redirect = function (url, status) {
            if (redirectStatuses.indexOf(status) === -1) {
                throw new RangeError('Invalid status code');
            }

            return new Response(null, {
                status: status,
                headers: {
                    location: url
                }
            });
        };

        exports.DOMException = self.DOMException;

        try {
            new exports.DOMException();
        } catch (err) {
            exports.DOMException = function (message, name) {
                this.message = message;
                this.name = name;
                var error = Error(message);
                this.stack = error.stack;
            };

            exports.DOMException.prototype = Object.create(Error.prototype);
            exports.DOMException.prototype.constructor = exports.DOMException;
        }

        function fetch(input, init) {
            return new Promise(function (resolve, reject) {
                var request = new Request(input, init);

                if (request.signal && request.signal.aborted) {
                    return reject(new exports.DOMException('Aborted', 'AbortError'));
                }

                var xhr = new XMLHttpRequest();

                function abortXhr() {
                    xhr.abort();
                }

                xhr.onload = function () {
                    var options = {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        headers: parseHeaders(xhr.getAllResponseHeaders() || '')
                    };
                    options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
                    var body = 'response' in xhr ? xhr.response : xhr.responseText;
                    resolve(new Response(body, options));
                };

                xhr.onerror = function () {
                    reject(new TypeError('Network request failed'));
                };

                xhr.ontimeout = function () {
                    reject(new TypeError('Network request failed'));
                };

                xhr.onabort = function () {
                    reject(new exports.DOMException('Aborted', 'AbortError'));
                };

                xhr.open(request.method, request.url, true);

                if (request.credentials === 'include') {
                    xhr.withCredentials = true;
                } else if (request.credentials === 'omit') {
                    xhr.withCredentials = false;
                }

                if ('responseType' in xhr && support.blob) {
                    xhr.responseType = 'blob';
                }

                request.headers.forEach(function (value, name) {
                    xhr.setRequestHeader(name, value);
                });

                if (request.signal) {
                    request.signal.addEventListener('abort', abortXhr);

                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            request.signal.removeEventListener('abort', abortXhr);
                        }
                    };
                }

                xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
            });
        }

        fetch.polyfill = true;

        if (!self.fetch) {
            self.fetch = fetch;
            self.Headers = Headers;
            self.Request = Request;
            self.Response = Response;
        }

        exports.Headers = Headers;
        exports.Request = Request;
        exports.Response = Response;
        exports.fetch = fetch;
        Object.defineProperty(exports, '__esModule', {
            value: true
        });
    });
}, 14512, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('WebSocketModule');

    exports.default = _default;
}, 14515, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('FileReaderModule');

    exports.default = _default;
}, 14518, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

    var _createClass = _$$_REQUIRE(_dependencyMap[1]);

    var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

    var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

    var _inherits = _$$_REQUIRE(_dependencyMap[4]);

    Object.defineProperty(exports, '__esModule', {
        value: true
    });

    var eventTargetShim = _$$_REQUIRE(_dependencyMap[5]);

    var AbortSignal = function (_eventTargetShim$Even) {
        _inherits(AbortSignal, _eventTargetShim$Even);

        function AbortSignal() {
            var _this;

            _classCallCheck(this, AbortSignal);

            _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignal).call(this));
            throw new TypeError("AbortSignal cannot be constructed directly");
            return _this;
        }

        _createClass(AbortSignal, [{
            key: "aborted",
            get: function get() {
                var aborted = abortedFlags.get(this);

                if (typeof aborted !== "boolean") {
                    throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got " + (this === null ? "null" : typeof this));
                }

                return aborted;
            }
        }]);

        return AbortSignal;
    }(eventTargetShim.EventTarget);

    eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");

    function createAbortSignal() {
        var signal = Object.create(AbortSignal.prototype);
        eventTargetShim.EventTarget.call(signal);
        abortedFlags.set(signal, false);
        return signal;
    }

    function abortSignal(signal) {
        if (abortedFlags.get(signal) !== false) {
            return;
        }

        abortedFlags.set(signal, true);
        signal.dispatchEvent({
            type: "abort"
        });
    }

    var abortedFlags = new WeakMap();
    Object.defineProperties(AbortSignal.prototype, {
        aborted: {
            enumerable: true
        }
    });

    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
        Object.defineProperty(AbortSignal.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
            configurable: true,
            value: "AbortSignal"
        });
    }

    var AbortController = function () {
        function AbortController() {
            _classCallCheck(this, AbortController);

            signals.set(this, createAbortSignal());
        }

        _createClass(AbortController, [{
            key: "abort",
            value: function abort() {
                abortSignal(getSignal(this));
            }
        }, {
            key: "signal",
            get: function get() {
                return getSignal(this);
            }
        }]);

        return AbortController;
    }();

    var signals = new WeakMap();

    function getSignal(controller) {
        var signal = signals.get(controller);

        if (signal == null) {
            throw new TypeError("Expected 'this' to be an 'AbortController' object, but got " + (controller === null ? "null" : typeof controller));
        }

        return signal;
    }

    Object.defineProperties(AbortController.prototype, {
        signal: {
            enumerable: true
        },
        abort: {
            enumerable: true
        }
    });

    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
        Object.defineProperty(AbortController.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
            configurable: true,
            value: "AbortController"
        });
    }

    exports.AbortController = AbortController;
    exports.AbortSignal = AbortSignal;
    exports.default = AbortController;
    module.exports = AbortController;
    module.exports.AbortController = module.exports["default"] = AbortController;
    module.exports.AbortSignal = AbortSignal;
}, 14521, [14320, 14323, 14371, 14377, 14386, 14506]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    if (!global.alert) {
        global.alert = function (text) {
            _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
        };
    }
}, 14524, [10243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('DialogManagerAndroid');

    exports.default = _default;
}, 14527, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    function emptyCallback() { }

    module.exports = {
        alertWithArgs: function alertWithArgs(args, callback) {
            if (!_NativeDialogManagerAndroid.default) {
                return;
            }

            _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
        }
    };
}, 14530, [14305, 14527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillObjectProperty = _require.polyfillObjectProperty;

    var navigator = global.navigator;

    if (navigator === undefined) {
        global.navigator = navigator = {};
    }

    polyfillObjectProperty(navigator, 'product', function () {
        return 'ReactNative';
    });
}, 14533, [14473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    if (!global.RN$Bridgeless) {
        var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

        BatchedBridge.registerLazyCallableModule('Systrace', function () {
            return _$$_REQUIRE(_dependencyMap[1]);
        });
        BatchedBridge.registerLazyCallableModule('JSTimers', function () {
            return _$$_REQUIRE(_dependencyMap[2]);
        });
        BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
            return _$$_REQUIRE(_dependencyMap[3]);
        });
        BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
            return _$$_REQUIRE(_dependencyMap[4]);
        });
        BatchedBridge.registerLazyCallableModule('RCTLog', function () {
            return _$$_REQUIRE(_dependencyMap[5]);
        });
        BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
            return _$$_REQUIRE(_dependencyMap[6]);
        });
        BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
            return _$$_REQUIRE(_dependencyMap[7]);
        });
        BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {
            return _$$_REQUIRE(_dependencyMap[8]);
        });
        BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
            return _$$_REQUIRE(_dependencyMap[9]);
        });
        {
            BatchedBridge.registerCallableModule('HMRClient', _$$_REQUIRE(_dependencyMap[10]));
        }
    }
}, 14536, [10045, 10054, 10063, 14539, 10261, 10264, 10087, 10267, 14548, 10276, 14557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _NativeHeapCapture = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var HeapCapture = {
        captureHeap: function captureHeap(path) {
            var error = null;

            try {
                global.nativeCaptureHeap(path);
            } catch (e) {
                error = e.toString();
            }

            if (_NativeHeapCapture.default) {
                _NativeHeapCapture.default.captureComplete(path, error);
            }
        }
    };
    module.exports = HeapCapture;
}, 14539, [14305, 14542]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('HeapCapture');

    exports.default = _default;
}, 14542, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('JSCSamplingProfiler');

    exports.default = _default;
}, 14545, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var createPerformanceLogger = _$$_REQUIRE(_dependencyMap[0]);

    var GlobalPerformanceLogger = createPerformanceLogger();
    module.exports = GlobalPerformanceLogger;
}, 14548, [14551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    var infoLog = _$$_REQUIRE(_dependencyMap[1]);

    var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

    var _cookies = {};
    var PRINT_TO_CONSOLE = false;

    function createPerformanceLogger() {
        var result = {
            _timespans: {},
            _extras: {},
            _points: {},
            addTimespan: function addTimespan(key, lengthInMs, description) {
                if (this._timespans[key]) {
                    return;
                }

                this._timespans[key] = {
                    description: description,
                    totalTime: lengthInMs
                };
            },
            startTimespan: function startTimespan(key, description) {
                if (this._timespans[key]) {
                    return;
                }

                this._timespans[key] = {
                    description: description,
                    startTime: performanceNow()
                };
                _cookies[key] = Systrace.beginAsyncEvent(key);
            },
            stopTimespan: function stopTimespan(key) {
                var timespan = this._timespans[key];

                if (!timespan || !timespan.startTime) {
                    return;
                }

                if (timespan.endTime) {
                    return;
                }

                timespan.endTime = performanceNow();
                timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
                Systrace.endAsyncEvent(key, _cookies[key]);
                delete _cookies[key];
            },
            clear: function clear() {
                this._timespans = {};
                this._extras = {};
                this._points = {};
            },
            clearCompleted: function clearCompleted() {
                for (var _key in this._timespans) {
                    if (this._timespans[_key].totalTime) {
                        delete this._timespans[_key];
                    }
                }

                this._extras = {};
                this._points = {};
            },
            clearExceptTimespans: function clearExceptTimespans(keys) {
                this._timespans = Object.keys(this._timespans).reduce(function (previous, key) {
                    if (keys.indexOf(key) !== -1) {
                        previous[key] = this._timespans[key];
                    }

                    return previous;
                }, {});
                this._extras = {};
                this._points = {};
            },
            currentTimestamp: function currentTimestamp() {
                return performanceNow();
            },
            getTimespans: function getTimespans() {
                return this._timespans;
            },
            hasTimespan: function hasTimespan(key) {
                return !!this._timespans[key];
            },
            logTimespans: function logTimespans() { },
            addTimespans: function addTimespans(newTimespans, labels) {
                for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
                    var label = labels[ii / 2];
                    this.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
                }
            },
            setExtra: function setExtra(key, value) {
                if (this._extras[key]) {
                    return;
                }

                this._extras[key] = value;
            },
            getExtras: function getExtras() {
                return this._extras;
            },
            removeExtra: function removeExtra(key) {
                var value = this._extras[key];
                delete this._extras[key];
                return value;
            },
            logExtras: function logExtras() { },
            markPoint: function markPoint(key, timestamp) {
                var _timestamp;

                if (this._points[key]) {
                    return;
                }

                this._points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
            },
            getPoints: function getPoints() {
                return this._points;
            },
            logPoints: function logPoints() { },
            logEverything: function logEverything() {
                this.logTimespans();
                this.logExtras();
                this.logPoints();
            }
        };
        return result;
    }

    module.exports = createPerformanceLogger;
}, 14551, [10054, 10273, 14491]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('JSDevSupport');

    exports.default = _default;
}, 14554, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var HMRClientProdShim = {
        setup: function setup() { },
        enable: function enable() { },
        disable: function disable() { },
        registerBundle: function registerBundle() { },
        log: function log() { }
    };
    module.exports = HMRClientProdShim;
}, 14557, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    function __fetchSegment(segmentId, options, callback) {
        var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

        SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
            if (errorObject) {
                var error = new Error(errorObject.message);
                error.code = errorObject.code;
                callback(error);
            }

            callback(null);
        });
    }

    global.__fetchSegment = __fetchSegment;

    function __getSegment(segmentId, options, callback) {
        var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

        if (!SegmentFetcher.getSegment) {
            throw new Error('SegmentFetcher.getSegment must be defined');
        }

        SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {
            if (errorObject) {
                var error = new Error(errorObject.message);
                error.code = errorObject.code;
                callback(error);
            }

            callback(null, path);
        });
    }

    global.__getSegment = __getSegment;
}, 14560, [14563]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('SegmentFetcher');

    exports.default = _default;
}, 14563, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = {
        get BatchedBridge() {
            return _$$_REQUIRE(_dependencyMap[0]);
        },

        get ExceptionsManager() {
            return _$$_REQUIRE(_dependencyMap[1]);
        },

        get Platform() {
            return _$$_REQUIRE(_dependencyMap[2]);
        },

        get RCTEventEmitter() {
            return _$$_REQUIRE(_dependencyMap[3]);
        },

        get ReactNativeViewConfigRegistry() {
            return _$$_REQUIRE(_dependencyMap[4]);
        },

        get TextInputState() {
            return _$$_REQUIRE(_dependencyMap[5]);
        },

        get UIManager() {
            return _$$_REQUIRE(_dependencyMap[6]);
        },

        get deepDiffer() {
            return _$$_REQUIRE(_dependencyMap[7]);
        },

        get deepFreezeAndThrowOnMutationInDev() {
            return _$$_REQUIRE(_dependencyMap[8]);
        },

        get flattenStyle() {
            return _$$_REQUIRE(_dependencyMap[9]);
        },

        get ReactFiberErrorDialog() {
            return _$$_REQUIRE(_dependencyMap[10]);
        }

    };
}, 14566, [10045, 10141, 10066, 10282, 14569, 10285, 10279, 10288, 10057, 10291, 14572]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var invariant = _$$_REQUIRE(_dependencyMap[0]);

    var customBubblingEventTypes = {};
    var customDirectEventTypes = {};
    exports.customBubblingEventTypes = customBubblingEventTypes;
    exports.customDirectEventTypes = customDirectEventTypes;
    var viewConfigCallbacks = new Map();
    var viewConfigs = new Map();

    function processEventTypes(viewConfig) {
        var bubblingEventTypes = viewConfig.bubblingEventTypes,
            directEventTypes = viewConfig.directEventTypes;

        if (bubblingEventTypes != null) {
            for (var _topLevelType in bubblingEventTypes) {
                if (customBubblingEventTypes[_topLevelType] == null) {
                    customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
                }
            }
        }

        if (directEventTypes != null) {
            for (var _topLevelType2 in directEventTypes) {
                if (customDirectEventTypes[_topLevelType2] == null) {
                    customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
                }
            }
        }
    }

    exports.register = function (name, callback) {
        invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
        viewConfigCallbacks.set(name, callback);
        return name;
    };

    exports.get = function (name) {
        var viewConfig;

        if (!viewConfigs.has(name)) {
            var callback = viewConfigCallbacks.get(name);

            if (typeof callback !== 'function') {
                invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
            }

            viewConfigCallbacks.set(name, null);
            viewConfig = callback();
            processEventTypes(viewConfig);
            viewConfigs.set(name, viewConfig);
        } else {
            viewConfig = viewConfigs.get(name);
        }

        invariant(viewConfig, 'View config not found for name %s', name);
        return viewConfig;
    };
}, 14569, [14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

    function showErrorDialog(capturedError) {
        var componentStack = capturedError.componentStack,
            error = capturedError.error;
        var errorToHandle;

        if (error instanceof Error) {
            errorToHandle = error;
        } else if (typeof error === 'string') {
            errorToHandle = new _ExceptionsManager.SyntheticError(error);
        } else {
            errorToHandle = new _ExceptionsManager.SyntheticError('Unspecified error');
        }

        try {
            errorToHandle.componentStack = componentStack;
        } catch (e) { }

        (0, _ExceptionsManager.handleException)(errorToHandle, false);
        return false;
    }

    module.exports = {
        showErrorDialog: showErrorDialog
    };
}, 14572, [10141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    {
        module.exports = _$$_REQUIRE(_dependencyMap[0]);
    }
}, 14575, [14578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    /** @license React v0.15.0
     * scheduler.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _d = undefined,
        e = undefined,
        g = undefined,
        m = undefined,
        n = undefined;
    exports.unstable_now = undefined;
    exports.unstable_forceFrameRate = undefined;

    if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
        var p = null,
            q = null,
            r = function r() {
                if (null !== p) try {
                    var a = exports.unstable_now();
                    p(true, a);
                    p = null;
                } catch (b) {
                    throw setTimeout(r, 0), b;
                }
            };

        exports.unstable_now = function () {
            return Date.now();
        };

        _d = function d(a) {
            null !== p ? setTimeout(_d, 0, a) : (p = a, setTimeout(r, 0));
        };

        e = function e(a, b) {
            q = setTimeout(a, b);
        };

        g = function g() {
            clearTimeout(q);
        };

        m = function m() {
            return false;
        };

        n = exports.unstable_forceFrameRate = function () { };
    } else {
        var t = window.performance,
            u = window.Date,
            v = window.setTimeout,
            w = window.clearTimeout,
            x = window.requestAnimationFrame,
            y = window.cancelAnimationFrame;
        "undefined" !== typeof console && ("function" !== typeof x && undefined, "function" !== typeof y && undefined);
        exports.unstable_now = "object" === typeof t && "function" === typeof t.now ? function () {
            return t.now();
        } : function () {
            return u.now();
        };
        var z = false,
            A = null,
            B = -1,
            C = -1,
            D = 33.33,
            E = -1,
            F = -1,
            G = 0,
            H = false;

        m = function m() {
            return exports.unstable_now() >= G;
        };

        n = function n() { };

        exports.unstable_forceFrameRate = function (a) {
            0 > a || 125 < a ? undefined : 0 < a ? (D = Math.floor(1E3 / a), H = true) : (D = 33.33, H = false);
        };

        var J = function J() {
            if (null !== A) {
                var a = exports.unstable_now(),
                    b = 0 < G - a;

                try {
                    A(b, a) || (A = null);
                } catch (c) {
                    throw I.postMessage(null), c;
                }
            }
        },
            K = new MessageChannel(),
            I = K.port2;

        K.port1.onmessage = J;

        var L = function L(a) {
            if (null === A) F = E = -1, z = false; else {
                z = true;
                x(function (a) {
                    w(B);
                    L(a);
                });

                var b = function b() {
                    G = exports.unstable_now() + D / 2;
                    J();
                    B = v(b, 3 * D);
                };

                B = v(b, 3 * D);

                if (-1 !== E && .1 < a - E) {
                    var c = a - E;
                    !H && -1 !== F && c < D && F < D && (D = c < F ? F : c, 8.33 > D && (D = 8.33));
                    F = c;
                }

                E = a;
                G = a + D;
                I.postMessage(null);
            }
        };

        _d = function _d(a) {
            A = a;
            z || (z = true, x(function (a) {
                L(a);
            }));
        };

        e = function e(a, b) {
            C = v(function () {
                a(exports.unstable_now());
            }, b);
        };

        g = function g() {
            w(C);
            C = -1;
        };
    }

    var M = null,
        N = null,
        O = null,
        P = 3,
        Q = false,
        R = false,
        S = false;

    function T(a, b) {
        var c = a.next;
        if (c === a) M = null; else {
            a === M && (M = c);
            var f = a.previous;
            f.next = c;
            c.previous = f;
        }
        a.next = a.previous = null;
        c = a.callback;
        f = P;
        var l = O;
        P = a.priorityLevel;
        O = a;

        try {
            var h = a.expirationTime <= b;

            switch (P) {
                case 1:
                    var k = c(h);
                    break;

                case 2:
                    k = c(h);
                    break;

                case 3:
                    k = c(h);
                    break;

                case 4:
                    k = c(h);
                    break;

                case 5:
                    k = c(h);
            }
        } catch (Z) {
            throw Z;
        } finally {
            P = f, O = l;
        }

        if ("function" === typeof k) if (b = a.expirationTime, a.callback = k, null === M) M = a.next = a.previous = a; else {
            k = null;
            h = M;

            do {
                if (b <= h.expirationTime) {
                    k = h;
                    break;
                }

                h = h.next;
            } while (h !== M);

            null === k ? k = M : k === M && (M = a);
            b = k.previous;
            b.next = k.previous = a;
            a.next = k;
            a.previous = b;
        }
    }

    function U(a) {
        if (null !== N && N.startTime <= a) {
            do {
                var b = N,
                    c = b.next;
                if (b === c) N = null; else {
                    N = c;
                    var f = b.previous;
                    f.next = c;
                    c.previous = f;
                }
                b.next = b.previous = null;
                V(b, b.expirationTime);
            } while (null !== N && N.startTime <= a);
        }
    }

    function W(a) {
        S = false;
        U(a);
        R || (null !== M ? (R = true, _d(X)) : null !== N && e(W, N.startTime - a));
    }

    function X(a, b) {
        R = false;
        S && (S = false, g());
        U(b);
        Q = true;

        try {
            if (!a) for (; null !== M && M.expirationTime <= b;) {
                T(M, b), b = exports.unstable_now(), U(b);
            } else if (null !== M) {
                do {
                    T(M, b), b = exports.unstable_now(), U(b);
                } while (null !== M && !m());
            }
            if (null !== M) return true;
            null !== N && e(W, N.startTime - b);
            return false;
        } finally {
            Q = false;
        }
    }

    function Y(a) {
        switch (a) {
            case 1:
                return -1;

            case 2:
                return 250;

            case 5:
                return 1073741823;

            case 4:
                return 1E4;

            default:
                return 5E3;
        }
    }

    function V(a, b) {
        if (null === M) M = a.next = a.previous = a; else {
            var c = null,
                f = M;

            do {
                if (b < f.expirationTime) {
                    c = f;
                    break;
                }

                f = f.next;
            } while (f !== M);

            null === c ? c = M : c === M && (M = a);
            b = c.previous;
            b.next = c.previous = a;
            a.next = c;
            a.previous = b;
        }
    }

    var aa = n;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_NormalPriority = 3;
    exports.unstable_IdlePriority = 5;
    exports.unstable_LowPriority = 4;

    exports.unstable_runWithPriority = function (a, b) {
        switch (a) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;

            default:
                a = 3;
        }

        var c = P;
        P = a;

        try {
            return b();
        } finally {
            P = c;
        }
    };

    exports.unstable_next = function (a) {
        switch (P) {
            case 1:
            case 2:
            case 3:
                var b = 3;
                break;

            default:
                b = P;
        }

        var c = P;
        P = b;

        try {
            return a();
        } finally {
            P = c;
        }
    };

    exports.unstable_scheduleCallback = function (a, b, c) {
        var f = exports.unstable_now();

        if ("object" === typeof c && null !== c) {
            var l = c.delay;
            l = "number" === typeof l && 0 < l ? f + l : f;
            c = "number" === typeof c.timeout ? c.timeout : Y(a);
        } else c = Y(a), l = f;

        c = l + c;
        a = {
            callback: b,
            priorityLevel: a,
            startTime: l,
            expirationTime: c,
            next: null,
            previous: null
        };

        if (l > f) {
            c = l;
            if (null === N) N = a.next = a.previous = a; else {
                b = null;
                var h = N;

                do {
                    if (c < h.startTime) {
                        b = h;
                        break;
                    }

                    h = h.next;
                } while (h !== N);

                null === b ? b = N : b === N && (N = a);
                c = b.previous;
                c.next = b.previous = a;
                a.next = b;
                a.previous = c;
            }
            null === M && N === a && (S ? g() : S = true, e(W, l - f));
        } else V(a, c), R || Q || (R = true, _d(X));

        return a;
    };

    exports.unstable_cancelCallback = function (a) {
        var b = a.next;

        if (null !== b) {
            if (a === b) a === M ? M = null : a === N && (N = null); else {
                a === M ? M = b : a === N && (N = b);
                var c = a.previous;
                c.next = b;
                b.previous = c;
            }
            a.next = a.previous = null;
        }
    };

    exports.unstable_wrapCallback = function (a) {
        var b = P;
        return function () {
            var c = P;
            P = b;

            try {
                return a.apply(this, arguments);
            } finally {
                P = c;
            }
        };
    };

    exports.unstable_getCurrentPriorityLevel = function () {
        return P;
    };

    exports.unstable_shouldYield = function () {
        var a = exports.unstable_now();
        U(a);
        return null !== O && null !== M && M.startTime <= a && M.expirationTime < O.expirationTime || m();
    };

    exports.unstable_requestPaint = aa;

    exports.unstable_continueExecution = function () {
        R || Q || (R = true, _d(X));
    };

    exports.unstable_pauseExecution = function () { };

    exports.unstable_getFirstCallbackNode = function () {
        return M;
    };
}, 14578, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ReactNativeViewViewConfigAndroid = {
        uiViewClassName: 'RCTView',
        bubblingEventTypes: {
            topSelect: {
                phasedRegistrationNames: {
                    bubbled: 'onSelect',
                    captured: 'onSelectCapture'
                }
            }
        },
        directEventTypes: {
            topClick: {
                registrationName: 'onClick'
            },
            topContentSizeChange: {
                registrationName: 'onContentSizeChange'
            },
            topLoadingError: {
                registrationName: 'onLoadingError'
            },
            topLoadingFinish: {
                registrationName: 'onLoadingFinish'
            },
            topLoadingStart: {
                registrationName: 'onLoadingStart'
            },
            topMessage: {
                registrationName: 'onMessage'
            },
            topMomentumScrollBegin: {
                registrationName: 'onMomentumScrollBegin'
            },
            topMomentumScrollEnd: {
                registrationName: 'onMomentumScrollEnd'
            },
            topScroll: {
                registrationName: 'onScroll'
            },
            topScrollBeginDrag: {
                registrationName: 'onScrollBeginDrag'
            },
            topScrollEndDrag: {
                registrationName: 'onScrollEndDrag'
            },
            topSelectionChange: {
                registrationName: 'onSelectionChange'
            }
        },
        validAttributes: {
            hasTVPreferredFocus: true,
            focusable: true,
            nativeBackgroundAndroid: true,
            nativeForegroundAndroid: true,
            nextFocusDown: true,
            nextFocusForward: true,
            nextFocusLeft: true,
            nextFocusRight: true,
            nextFocusUp: true
        }
    };
    module.exports = ReactNativeViewViewConfigAndroid;
}, 14581, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _verifyComponentAttributeEquivalence = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[3]);

    var ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[4]);

    function registerGeneratedViewConfig(componentName, viewConfig) {
        var mergedViewConfig = {
            uiViewClassName: componentName,
            Commands: {},
            bubblingEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
            directEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
            validAttributes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
        };
        ReactNativeViewConfigRegistry.register(componentName, function () {
            (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
            return mergedViewConfig;
        });
    }

    module.exports = registerGeneratedViewConfig;
}, 14584, [14305, 14314, 14587, 14569, 14590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.lefthandObjectDiff = lefthandObjectDiff;
    exports.getConfigWithoutViewProps = getConfigWithoutViewProps;
    exports.stringifyViewConfig = stringifyViewConfig;
    exports.default = undefined;

    var _ReactNativeViewViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[2]);

    var IGNORED_KEYS = ['transform', 'hitSlop'];

    function verifyComponentAttributeEquivalence(componentName, config) { }

    function lefthandObjectDiff(leftObj, rightObj) {
        var differentKeys = {};

        function compare(leftItem, rightItem, key) {
            if (typeof leftItem !== typeof rightItem && leftItem != null) {
                differentKeys[key] = rightItem;
                return;
            }

            if (typeof leftItem === 'object') {
                var objDiff = lefthandObjectDiff(leftItem, rightItem);

                if (Object.keys(objDiff).length > 1) {
                    differentKeys[key] = objDiff;
                }

                return;
            }

            if (leftItem !== rightItem) {
                differentKeys[key] = rightItem;
                return;
            }
        }

        for (var key in leftObj) {
            if (IGNORED_KEYS.includes(key)) {
                continue;
            }

            if (!rightObj) {
                differentKeys[key] = {};
            } else if (leftObj.hasOwnProperty(key)) {
                compare(leftObj[key], rightObj[key], key);
            }
        }

        return differentKeys;
    }

    function getConfigWithoutViewProps(viewConfig, propName) {
        if (!viewConfig[propName]) {
            return {};
        }

        return Object.keys(viewConfig[propName]).filter(function (prop) {
            return !_ReactNativeViewViewConfig.default[propName][prop];
        }).reduce(function (obj, prop) {
            obj[prop] = viewConfig[propName][prop];
            return obj;
        }, {});
    }

    function stringifyViewConfig(viewConfig) {
        return JSON.stringify(viewConfig, function (key, val) {
            if (typeof val === 'function') {
                return "\u0192 " + val.name;
            }

            return val;
        }, 2);
    }

    var _default = verifyComponentAttributeEquivalence;
    exports.default = _default;
}, 14587, [14305, 14590, 14593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _ReactNativeViewViewConfigAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var ReactNativeViewConfig = {
        uiViewClassName: 'RCTView',
        baseModuleName: null,
        Manager: 'ViewManager',
        Commands: {},
        Constants: {},
        bubblingEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.bubblingEventTypes, {
            topBlur: {
                phasedRegistrationNames: {
                    bubbled: 'onBlur',
                    captured: 'onBlurCapture'
                }
            },
            topChange: {
                phasedRegistrationNames: {
                    bubbled: 'onChange',
                    captured: 'onChangeCapture'
                }
            },
            topEndEditing: {
                phasedRegistrationNames: {
                    bubbled: 'onEndEditing',
                    captured: 'onEndEditingCapture'
                }
            },
            topFocus: {
                phasedRegistrationNames: {
                    bubbled: 'onFocus',
                    captured: 'onFocusCapture'
                }
            },
            topKeyPress: {
                phasedRegistrationNames: {
                    bubbled: 'onKeyPress',
                    captured: 'onKeyPressCapture'
                }
            },
            topPress: {
                phasedRegistrationNames: {
                    bubbled: 'onPress',
                    captured: 'onPressCapture'
                }
            },
            topSubmitEditing: {
                phasedRegistrationNames: {
                    bubbled: 'onSubmitEditing',
                    captured: 'onSubmitEditingCapture'
                }
            },
            topTouchCancel: {
                phasedRegistrationNames: {
                    bubbled: 'onTouchCancel',
                    captured: 'onTouchCancelCapture'
                }
            },
            topTouchEnd: {
                phasedRegistrationNames: {
                    bubbled: 'onTouchEnd',
                    captured: 'onTouchEndCapture'
                }
            },
            topTouchMove: {
                phasedRegistrationNames: {
                    bubbled: 'onTouchMove',
                    captured: 'onTouchMoveCapture'
                }
            },
            topTouchStart: {
                phasedRegistrationNames: {
                    bubbled: 'onTouchStart',
                    captured: 'onTouchStartCapture'
                }
            }
        }),
        directEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.directEventTypes, {
            topAccessibilityAction: {
                registrationName: 'onAccessibilityAction'
            },
            topAccessibilityEscape: {
                registrationName: 'onAccessibilityEscape'
            },
            topAccessibilityTap: {
                registrationName: 'onAccessibilityTap'
            },
            topLayout: {
                registrationName: 'onLayout'
            },
            topMagicTap: {
                registrationName: 'onMagicTap'
            },
            onGestureHandlerEvent: {
                registrationName: 'onGestureHandlerEvent'
            },
            onGestureHandlerStateChange: {
                registrationName: 'onGestureHandlerStateChange'
            }
        }),
        validAttributes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.validAttributes, {
            accessibilityActions: true,
            accessibilityElementsHidden: true,
            accessibilityHint: true,
            accessibilityIgnoresInvertColors: true,
            accessibilityLabel: true,
            accessibilityLiveRegion: true,
            accessibilityRole: true,
            accessibilityStates: true,
            accessibilityState: true,
            accessibilityViewIsModal: true,
            accessible: true,
            alignContent: true,
            alignItems: true,
            alignSelf: true,
            aspectRatio: true,
            backfaceVisibility: true,
            backgroundColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderBottomColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderBottomEndRadius: true,
            borderBottomLeftRadius: true,
            borderBottomRightRadius: true,
            borderBottomStartRadius: true,
            borderBottomWidth: true,
            borderColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderEndColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderEndWidth: true,
            borderLeftColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderLeftWidth: true,
            borderRadius: true,
            borderRightColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderRightWidth: true,
            borderStartColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderStartWidth: true,
            borderStyle: true,
            borderTopColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            borderTopEndRadius: true,
            borderTopLeftRadius: true,
            borderTopRightRadius: true,
            borderTopStartRadius: true,
            borderTopWidth: true,
            borderWidth: true,
            bottom: true,
            clickable: true,
            collapsable: true,
            direction: true,
            display: true,
            elevation: true,
            end: true,
            flex: true,
            flexBasis: true,
            flexDirection: true,
            flexGrow: true,
            flexShrink: true,
            flexWrap: true,
            height: true,
            hitSlop: {
                diff: _$$_REQUIRE(_dependencyMap[4])
            },
            importantForAccessibility: true,
            justifyContent: true,
            left: true,
            margin: true,
            marginBottom: true,
            marginEnd: true,
            marginHorizontal: true,
            marginLeft: true,
            marginRight: true,
            marginStart: true,
            marginTop: true,
            marginVertical: true,
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true,
            nativeID: true,
            needsOffscreenAlphaCompositing: true,
            onAccessibilityAction: true,
            onAccessibilityEscape: true,
            onAccessibilityTap: true,
            onLayout: true,
            onMagicTap: true,
            opacity: true,
            overflow: true,
            padding: true,
            paddingBottom: true,
            paddingEnd: true,
            paddingHorizontal: true,
            paddingLeft: true,
            paddingRight: true,
            paddingStart: true,
            paddingTop: true,
            paddingVertical: true,
            pointerEvents: true,
            position: true,
            removeClippedSubviews: true,
            renderToHardwareTextureAndroid: true,
            right: true,
            rotation: true,
            scaleX: true,
            scaleY: true,
            shadowColor: {
                process: _$$_REQUIRE(_dependencyMap[3])
            },
            shadowOffset: {
                diff: _$$_REQUIRE(_dependencyMap[5])
            },
            shadowOpacity: true,
            shadowRadius: true,
            shouldRasterizeIOS: true,
            start: true,
            style: {
                alignContent: true,
                alignItems: true,
                alignSelf: true,
                aspectRatio: true,
                backfaceVisibility: true,
                backgroundColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderBottomColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderBottomEndRadius: true,
                borderBottomLeftRadius: true,
                borderBottomRightRadius: true,
                borderBottomStartRadius: true,
                borderBottomWidth: true,
                borderColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderEndColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderEndWidth: true,
                borderLeftColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderLeftWidth: true,
                borderRadius: true,
                borderRightColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderRightWidth: true,
                borderStartColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderStartWidth: true,
                borderStyle: true,
                borderTopColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                borderTopEndRadius: true,
                borderTopLeftRadius: true,
                borderTopRightRadius: true,
                borderTopStartRadius: true,
                borderTopWidth: true,
                borderWidth: true,
                bottom: true,
                color: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                decomposedMatrix: true,
                direction: true,
                display: true,
                elevation: true,
                end: true,
                flex: true,
                flexBasis: true,
                flexDirection: true,
                flexGrow: true,
                flexShrink: true,
                flexWrap: true,
                fontFamily: true,
                fontSize: true,
                fontStyle: true,
                fontVariant: true,
                fontWeight: true,
                height: true,
                includeFontPadding: true,
                justifyContent: true,
                left: true,
                letterSpacing: true,
                lineHeight: true,
                margin: true,
                marginBottom: true,
                marginEnd: true,
                marginHorizontal: true,
                marginLeft: true,
                marginRight: true,
                marginStart: true,
                marginTop: true,
                marginVertical: true,
                maxHeight: true,
                maxWidth: true,
                minHeight: true,
                minWidth: true,
                opacity: true,
                overflow: true,
                overlayColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                padding: true,
                paddingBottom: true,
                paddingEnd: true,
                paddingHorizontal: true,
                paddingLeft: true,
                paddingRight: true,
                paddingStart: true,
                paddingTop: true,
                paddingVertical: true,
                position: true,
                resizeMode: true,
                right: true,
                rotation: true,
                scaleX: true,
                scaleY: true,
                shadowColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                shadowOffset: {
                    diff: _$$_REQUIRE(_dependencyMap[5])
                },
                shadowOpacity: true,
                shadowRadius: true,
                start: true,
                textAlign: true,
                textAlignVertical: true,
                textDecorationColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                textDecorationLine: true,
                textDecorationStyle: true,
                textShadowColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                textShadowOffset: true,
                textShadowRadius: true,
                textTransform: true,
                tintColor: {
                    process: _$$_REQUIRE(_dependencyMap[3])
                },
                top: true,
                transform: {
                    diff: _$$_REQUIRE(_dependencyMap[6])
                },
                transformMatrix: true,
                translateX: true,
                translateY: true,
                width: true,
                writingDirection: true,
                zIndex: true
            },
            testID: true,
            top: true,
            transform: {
                diff: _$$_REQUIRE(_dependencyMap[6])
            },
            translateX: true,
            translateY: true,
            width: true,
            zIndex: true
        })
    };
    module.exports = ReactNativeViewConfig;
}, 14590, [14305, 14314, 14581, 10393, 10408, 10402, 10411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _extends = _$$_REQUIRE(_dependencyMap[0]);

    var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

    var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

    var UIManager = _$$_REQUIRE(_dependencyMap[3]);

    var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

    var invariant = _$$_REQUIRE(_dependencyMap[5]);

    var matricesDiffer = _$$_REQUIRE(_dependencyMap[6]);

    var pointsDiffer = _$$_REQUIRE(_dependencyMap[7]);

    var processColor = _$$_REQUIRE(_dependencyMap[8]);

    var processColorArray = _$$_REQUIRE(_dependencyMap[9]);

    var resolveAssetSource = _$$_REQUIRE(_dependencyMap[10]);

    var sizesDiffer = _$$_REQUIRE(_dependencyMap[11]);

    var warning = _$$_REQUIRE(_dependencyMap[12]);

    function getNativeComponentAttributes(uiViewClassName) {
        var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
        invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
        var baseModuleName = viewConfig.baseModuleName,
            bubblingEventTypes = viewConfig.bubblingEventTypes,
            directEventTypes = viewConfig.directEventTypes;
        var nativeProps = viewConfig.NativeProps;

        while (baseModuleName) {
            var baseModule = UIManager.getViewManagerConfig(baseModuleName);

            if (!baseModule) {
                warning(false, 'Base module "%s" does not exist', baseModuleName);
                baseModuleName = null;
            } else {
                bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
                directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
                nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
                baseModuleName = baseModule.baseModuleName;
            }
        }

        var validAttributes = {};

        for (var key in nativeProps) {
            var typeName = nativeProps[key];
            var diff = getDifferForType(typeName);
            var process = getProcessorForType(typeName);
            validAttributes[key] = diff == null && process == null ? true : {
                diff: diff,
                process: process
            };
        }

        validAttributes.style = ReactNativeStyleAttributes;

        _extends(viewConfig, {
            uiViewClassName: uiViewClassName,
            validAttributes: validAttributes,
            bubblingEventTypes: bubblingEventTypes,
            directEventTypes: directEventTypes
        });

        if (!hasAttachedDefaultEventTypes) {
            attachDefaultEventTypes(viewConfig);
            hasAttachedDefaultEventTypes = true;
        }

        return viewConfig;
    }

    var hasAttachedDefaultEventTypes = false;

    function attachDefaultEventTypes(viewConfig) {
        var constants = UIManager.getConstants();

        if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
            viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
        } else {
            viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
            viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
        }
    }

    function merge(destination, source) {
        if (!source) {
            return destination;
        }

        if (!destination) {
            return source;
        }

        for (var key in source) {
            if (!source.hasOwnProperty(key)) {
                continue;
            }

            var sourceValue = source[key];

            if (destination.hasOwnProperty(key)) {
                var destinationValue = destination[key];

                if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
                    sourceValue = merge(destinationValue, sourceValue);
                }
            }

            destination[key] = sourceValue;
        }

        return destination;
    }

    function getDifferForType(typeName) {
        switch (typeName) {
            case 'CATransform3D':
                return matricesDiffer;

            case 'CGPoint':
                return pointsDiffer;

            case 'CGSize':
                return sizesDiffer;

            case 'UIEdgeInsets':
                return insetsDiffer;
        }

        return null;
    }

    function getProcessorForType(typeName) {
        switch (typeName) {
            case 'CGColor':
            case 'UIColor':
                return processColor;

            case 'CGColorArray':
            case 'UIColorArray':
                return processColorArray;

            case 'CGImage':
            case 'UIImage':
            case 'RCTImageSource':
                return resolveAssetSource;

            case 'Color':
                return processColor;

            case 'ColorArray':
                return processColorArray;
        }

        return null;
    }

    module.exports = getNativeComponentAttributes;
}, 14593, [14344, 14314, 10378, 10279, 10408, 14326, 10411, 10414, 10393, 14596, 10417, 10402, 14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var processColor = _$$_REQUIRE(_dependencyMap[0]);

    function processColorArray(colors) {
        return colors == null ? null : colors.map(processColor);
    }

    module.exports = processColorArray;
}, 14596, [10393]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var androidScaleSuffix = {
        '0.75': 'ldpi',
        '1': 'mdpi',
        '1.5': 'hdpi',
        '2': 'xhdpi',
        '3': 'xxhdpi',
        '4': 'xxxhdpi'
    };

    function getAndroidAssetSuffix(scale) {
        if (scale.toString() in androidScaleSuffix) {
            return androidScaleSuffix[scale.toString()];
        }

        throw new Error('no such scale ' + scale.toString());
    }

    var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

    function getAndroidResourceFolderName(asset, scale) {
        if (!drawableFileTypes.has(asset.type)) {
            return 'raw';
        }

        var suffix = getAndroidAssetSuffix(scale);

        if (!suffix) {
            throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
        }

        var androidFolder = 'drawable-' + suffix;
        return androidFolder;
    }

    function getAndroidResourceIdentifier(asset) {
        var folderPath = getBasePath(asset);
        return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
    }

    function getBasePath(asset) {
        var basePath = asset.httpServerLocation;

        if (basePath[0] === '/') {
            basePath = basePath.substr(1);
        }

        return basePath;
    }

    module.exports = {
        getAndroidAssetSuffix: getAndroidAssetSuffix,
        getAndroidResourceFolderName: getAndroidResourceFolderName,
        getAndroidResourceIdentifier: getAndroidResourceIdentifier,
        getBasePath: getBasePath
    };
}, 14599, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('SourceCode');

    exports.default = _default;
}, 14602, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = (0, _codegenNativeComponent.default)('AndroidProgressBar');

    exports.default = _default;
}, 14605, [14305, 14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

    function codegenNativeComponent(componentName, options) {
        var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

        if (options != null && options.paperComponentNameDeprecated != null) {
            if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
                componentNameInUse = componentName;
            } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
                componentNameInUse = options.paperComponentNameDeprecated;
            } else {
                throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
            }
        }

        return (0, _requireNativeComponent.default)(componentNameInUse);
    }

    var _default = codegenNativeComponent;
    exports.default = _default;
}, 14608, [14305, 10372, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

    var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

    var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

    var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

    var DeprecatedTextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

    var stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);
    var DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];
    module.exports = {
        ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
        numberOfLines: PropTypes.number,
        textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
        onLayout: PropTypes.func,
        onPress: PropTypes.func,
        onLongPress: PropTypes.func,
        pressRetentionOffset: DeprecatedEdgeInsetsPropType,
        selectable: PropTypes.bool,
        selectionColor: DeprecatedColorPropType,
        suppressHighlighting: PropTypes.bool,
        style: stylePropType,
        testID: PropTypes.string,
        nativeID: PropTypes.string,
        allowFontScaling: PropTypes.bool,
        maxFontSizeMultiplier: PropTypes.number,
        accessible: PropTypes.bool,
        adjustsFontSizeToFit: PropTypes.bool,
        minimumFontScale: PropTypes.number,
        disabled: PropTypes.bool,
        dataDetectorType: PropTypes.oneOf(DataDetectorTypes)
    };
}, 14611, [14419, 14614, 14617, 10318, 14434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

    var DeprecatedEdgeInsetsPropType = PropTypes.shape({
        top: PropTypes.number,
        left: PropTypes.number,
        bottom: PropTypes.number,
        right: PropTypes.number
    });
    module.exports = DeprecatedEdgeInsetsPropType;
}, 14614, [10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

    var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

    function DeprecatedStyleSheetPropType(shape) {
        var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
        return function (props, propName, componentName, location) {
            var newProps = props;

            if (props[propName]) {
                newProps = {};
                newProps[propName] = flattenStyle(props[propName]);
            }

            for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
                rest[_key - 4] = arguments[_key];
            }

            return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
        };
    }

    module.exports = DeprecatedStyleSheetPropType;
}, 14617, [14620, 10291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var invariant = _$$_REQUIRE(_dependencyMap[0]);

    var merge = _$$_REQUIRE(_dependencyMap[1]);

    function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
        function checkType(isRequired, props, propName, componentName, location) {
            if (!props[propName]) {
                if (isRequired) {
                    invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
                }

                return;
            }

            var propValue = props[propName];
            var propType = typeof propValue;
            var locationName = location || '(unknown)';

            if (propType !== 'object') {
                invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            }

            var allKeys = merge(props[propName], shapeTypes);

            for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
                rest[_key - 5] = arguments[_key];
            }

            for (var _key2 in allKeys) {
                var checker = shapeTypes[_key2];

                if (!checker) {
                    invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                }

                var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

                if (error) {
                    invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
                }
            }
        }

        function chainedCheckType(props, propName, componentName, location) {
            for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
                rest[_key3 - 4] = arguments[_key3];
            }

            return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
        }

        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }

    module.exports = deprecatedCreateStrictShapeTypeChecker;
}, 14620, [14326, 10339]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var React = _$$_REQUIRE(_dependencyMap[0]);

    module.exports = React.createContext(false);
}, 14623, [10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _NativeTVNavigationEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var Platform = _$$_REQUIRE(_dependencyMap[2]);

    var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

    function TVEventHandler() {
        this.__nativeTVNavigationEventListener = null;
        this.__nativeTVNavigationEventEmitter = null;
    }

    TVEventHandler.prototype.enable = function (component, callback) {
        this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
        this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
            if (callback) {
                callback(component, data);
            }
        });
    };

    TVEventHandler.prototype.disable = function () {
        if (this.__nativeTVNavigationEventListener) {
            this.__nativeTVNavigationEventListener.remove();

            delete this.__nativeTVNavigationEventListener;
        }

        if (this.__nativeTVNavigationEventEmitter) {
            delete this.__nativeTVNavigationEventEmitter;
        }
    };

    module.exports = TVEventHandler;
}, 14626, [14305, 14629, 10066, 10198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('TVNavigationEventEmitter');

    exports.default = _default;
}, 14629, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var invariant = _$$_REQUIRE(_dependencyMap[0]);

    var keyMirror = function keyMirror(obj) {
        var ret = {};
        var key;
        !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

        for (key in obj) {
            if (!obj.hasOwnProperty(key)) {
                continue;
            }

            ret[key] = key;
        }

        return ret;
    };

    module.exports = keyMirror;
}, 14632, [14635]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var validateFormat = function (format) {
        if (format === undefined) {
            throw new Error('invariant(...): Second argument must be a string.');
        }
    };

    function invariant(condition, format) {
        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = arguments[_key];
        }

        validateFormat(format);

        if (!condition) {
            var error;

            if (format === undefined) {
                error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            } else {
                var argIndex = 0;
                error = new Error(format.replace(/%s/g, function () {
                    return String(args[argIndex++]);
                }));
                error.name = 'Invariant Violation';
            }

            error.framesToPop = 1;
            throw error;
        }
    }

    module.exports = invariant;
}, 14635, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    function nullthrows(x, message) {
        if (x != null) {
            return x;
        }

        var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
        error.framesToPop = 1;
        throw error;
    }

    module.exports = nullthrows;
    module.exports.default = nullthrows;
    Object.defineProperty(module.exports, '__esModule', {
        value: true
    });
}, 14638, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    module.exports = {
        DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'],
        DeprecatedAccessibilityStates: ['selected', 'disabled', 'checked', 'unchecked', 'busy', 'expanded', 'collapsed', 'hasPopup']
    };
}, 14641, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

    var _require = _$$_REQUIRE(_dependencyMap[1]),
        AnimatedEvent = _require.AnimatedEvent,
        attachNativeEvent = _require.attachNativeEvent;

    var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[2]);

    var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[3]);

    var AnimatedNode = _$$_REQUIRE(_dependencyMap[4]);

    var AnimatedProps = _$$_REQUIRE(_dependencyMap[5]);

    var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

    var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

    var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[8]);

    var emptyAnimation = {
        start: function start() { },
        stop: function stop() { },
        reset: function reset() { },
        _startNativeLoop: function _startNativeLoop() { },
        _isUsingNativeDriver: function _isUsingNativeDriver() {
            return false;
        }
    };

    var spring = function spring(value, config) {
        var anyValue = value;
        return _objectSpread({}, emptyAnimation, {
            start: function start(callback) {
                anyValue.setValue(config.toValue);
                callback && callback({
                    finished: true
                });
            }
        });
    };

    var timing = function timing(value, config) {
        var anyValue = value;
        return _objectSpread({}, emptyAnimation, {
            start: function start(callback) {
                anyValue.setValue(config.toValue);
                callback && callback({
                    finished: true
                });
            }
        });
    };

    var decay = function decay(value, config) {
        return emptyAnimation;
    };

    var sequence = function sequence(animations) {
        return emptyAnimation;
    };

    var parallel = function parallel(animations, config) {
        return emptyAnimation;
    };

    var delay = function delay(time) {
        return emptyAnimation;
    };

    var stagger = function stagger(time, animations) {
        return emptyAnimation;
    };

    var loop = function loop(animation) {
        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            _ref$iterations = _ref.iterations,
            iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

        return emptyAnimation;
    };

    var event = function event(argMapping, config) {
        return null;
    };

    module.exports = {
        Value: AnimatedValue,
        ValueXY: AnimatedValueXY,
        Interpolation: AnimatedInterpolation,
        Node: AnimatedNode,
        decay: decay,
        timing: timing,
        spring: spring,
        add: AnimatedImplementation.add,
        subtract: AnimatedImplementation.subtract,
        divide: AnimatedImplementation.divide,
        multiply: AnimatedImplementation.multiply,
        modulo: AnimatedImplementation.modulo,
        diffClamp: AnimatedImplementation.diffClamp,
        delay: delay,
        sequence: sequence,
        parallel: parallel,
        stagger: stagger,
        loop: loop,
        event: event,
        createAnimatedComponent: createAnimatedComponent,
        attachNativeEvent: attachNativeEvent,
        forkEvent: AnimatedImplementation.forkEvent,
        unforkEvent: AnimatedImplementation.unforkEvent,
        Event: AnimatedEvent,
        __PropsOnlyForTests: AnimatedProps
    };
}, 14644, [14314, 10528, 10525, 10534, 10537, 10567, 10531, 10579, 10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('NativeAnimatedModule');

    exports.default = _default;
}, 14647, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

    var _createClass = _$$_REQUIRE(_dependencyMap[1]);

    var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

    var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

    var _get = _$$_REQUIRE(_dependencyMap[4]);

    var _inherits = _$$_REQUIRE(_dependencyMap[5]);

    var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

    var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

    var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

    var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

    var AnimatedSubtraction = function (_AnimatedWithChildren) {
        _inherits(AnimatedSubtraction, _AnimatedWithChildren);

        function AnimatedSubtraction(a, b) {
            var _this;

            _classCallCheck(this, AnimatedSubtraction);

            _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
            _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
            _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
            return _this;
        }

        _createClass(AnimatedSubtraction, [{
            key: "__makeNative",
            value: function __makeNative() {
                this._a.__makeNative();

                this._b.__makeNative();

                _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
            }
        }, {
            key: "__getValue",
            value: function __getValue() {
                return this._a.__getValue() - this._b.__getValue();
            }
        }, {
            key: "interpolate",
            value: function interpolate(config) {
                return new AnimatedInterpolation(this, config);
            }
        }, {
            key: "__attach",
            value: function __attach() {
                this._a.__addChild(this);

                this._b.__addChild(this);
            }
        }, {
            key: "__detach",
            value: function __detach() {
                this._a.__removeChild(this);

                this._b.__removeChild(this);

                _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
            }
        }, {
            key: "__getNativeConfig",
            value: function __getNativeConfig() {
                return {
                    type: 'subtraction',
                    input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
                };
            }
        }]);

        return AnimatedSubtraction;
    }(AnimatedWithChildren);

    module.exports = AnimatedSubtraction;
}, 14650, [14320, 14323, 14371, 14377, 14380, 14386, 10534, 10537, 10531, 10543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var FlatList = _$$_REQUIRE(_dependencyMap[0]);

    var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

    module.exports = createAnimatedComponent(FlatList, {
        scrollEventThrottle: 0.0001
    });
}, 14653, [10657, 10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = (0, _codegenNativeComponent.default)('AndroidSwipeRefreshLayout');

    exports.default = _default;
}, 14656, [14305, 14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = (0, _codegenNativeComponent.default)('PullToRefreshView', {
        paperComponentName: 'RCTRefreshControl'
    });

    exports.default = _default;
}, 14659, [14305, 14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('FrameRateLogger');

    exports.default = _default;
}, 14662, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('KeyboardObserver');

    exports.default = _default;
}, 14665, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _extends = _$$_REQUIRE(_dependencyMap[0]);

    var OUTER_PROPS = _extends(Object.create(null), {
        margin: true,
        marginHorizontal: true,
        marginVertical: true,
        marginBottom: true,
        marginTop: true,
        marginLeft: true,
        marginRight: true,
        flex: true,
        flexGrow: true,
        flexShrink: true,
        flexBasis: true,
        alignSelf: true,
        height: true,
        minHeight: true,
        maxHeight: true,
        width: true,
        minWidth: true,
        maxWidth: true,
        position: true,
        left: true,
        right: true,
        bottom: true,
        top: true
    });

    function splitLayoutProps(props) {
        var inner = {};
        var outer = {};

        if (props) {
            Object.keys(props).forEach(function (k) {
                var value = props[k];

                if (OUTER_PROPS[k]) {
                    outer[k] = value;
                } else {
                    inner[k] = value;
                }
            });
        }

        return {
            outer: outer,
            inner: inner
        };
    }

    module.exports = splitLayoutProps;
}, 14668, [14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var Image = _$$_REQUIRE(_dependencyMap[0]);

    var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

    module.exports = createAnimatedComponent(Image);
}, 14671, [10606, 10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
}, 14674, [14677]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var runtime = function (exports) {
        "use strict";

        var Op = Object.prototype;
        var hasOwn = Op.hasOwnProperty;
        var undefined;
        var $Symbol = typeof Symbol === "function" ? Symbol : {};
        var iteratorSymbol = $Symbol.iterator || "@@iterator";
        var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
        var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

        function wrap(innerFn, outerFn, self, tryLocsList) {
            var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);
            generator._invoke = makeInvokeMethod(innerFn, self, context);
            return generator;
        }

        exports.wrap = wrap;

        function tryCatch(fn, obj, arg) {
            try {
                return {
                    type: "normal",
                    arg: fn.call(obj, arg)
                };
            } catch (err) {
                return {
                    type: "throw",
                    arg: err
                };
            }
        }

        var GenStateSuspendedStart = "suspendedStart";
        var GenStateSuspendedYield = "suspendedYield";
        var GenStateExecuting = "executing";
        var GenStateCompleted = "completed";
        var ContinueSentinel = {};

        function Generator() { }

        function GeneratorFunction() { }

        function GeneratorFunctionPrototype() { }

        var IteratorPrototype = {};

        IteratorPrototype[iteratorSymbol] = function () {
            return this;
        };

        var getProto = Object.getPrototypeOf;
        var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

        if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
            IteratorPrototype = NativeIteratorPrototype;
        }

        var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
        GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
        GeneratorFunctionPrototype.constructor = GeneratorFunction;
        GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

        function defineIteratorMethods(prototype) {
            ["next", "throw", "return"].forEach(function (method) {
                prototype[method] = function (arg) {
                    return this._invoke(method, arg);
                };
            });
        }

        exports.isGeneratorFunction = function (genFun) {
            var ctor = typeof genFun === "function" && genFun.constructor;
            return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
        };

        exports.mark = function (genFun) {
            if (Object.setPrototypeOf) {
                Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
                genFun.__proto__ = GeneratorFunctionPrototype;

                if (!(toStringTagSymbol in genFun)) {
                    genFun[toStringTagSymbol] = "GeneratorFunction";
                }
            }

            genFun.prototype = Object.create(Gp);
            return genFun;
        };

        exports.awrap = function (arg) {
            return {
                __await: arg
            };
        };

        function AsyncIterator(generator, PromiseImpl) {
            function invoke(method, arg, resolve, reject) {
                var record = tryCatch(generator[method], generator, arg);

                if (record.type === "throw") {
                    reject(record.arg);
                } else {
                    var result = record.arg;
                    var value = result.value;

                    if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
                        return PromiseImpl.resolve(value.__await).then(function (value) {
                            invoke("next", value, resolve, reject);
                        }, function (err) {
                            invoke("throw", err, resolve, reject);
                        });
                    }

                    return PromiseImpl.resolve(value).then(function (unwrapped) {
                        result.value = unwrapped;
                        resolve(result);
                    }, function (error) {
                        return invoke("throw", error, resolve, reject);
                    });
                }
            }

            var previousPromise;

            function enqueue(method, arg) {
                function callInvokeWithMethodAndArg() {
                    return new PromiseImpl(function (resolve, reject) {
                        invoke(method, arg, resolve, reject);
                    });
                }

                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }

            this._invoke = enqueue;
        }

        defineIteratorMethods(AsyncIterator.prototype);

        AsyncIterator.prototype[asyncIteratorSymbol] = function () {
            return this;
        };

        exports.AsyncIterator = AsyncIterator;

        exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
            if (PromiseImpl === undefined) PromiseImpl = Promise;
            var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
            return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
                return result.done ? result.value : iter.next();
            });
        };

        function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;
            return function invoke(method, arg) {
                if (state === GenStateExecuting) {
                    throw new Error("Generator is already running");
                }

                if (state === GenStateCompleted) {
                    if (method === "throw") {
                        throw arg;
                    }

                    return doneResult();
                }

                context.method = method;
                context.arg = arg;

                while (true) {
                    var delegate = context.delegate;

                    if (delegate) {
                        var delegateResult = maybeInvokeDelegate(delegate, context);

                        if (delegateResult) {
                            if (delegateResult === ContinueSentinel) continue;
                            return delegateResult;
                        }
                    }

                    if (context.method === "next") {
                        context.sent = context._sent = context.arg;
                    } else if (context.method === "throw") {
                        if (state === GenStateSuspendedStart) {
                            state = GenStateCompleted;
                            throw context.arg;
                        }

                        context.dispatchException(context.arg);
                    } else if (context.method === "return") {
                        context.abrupt("return", context.arg);
                    }

                    state = GenStateExecuting;
                    var record = tryCatch(innerFn, self, context);

                    if (record.type === "normal") {
                        state = context.done ? GenStateCompleted : GenStateSuspendedYield;

                        if (record.arg === ContinueSentinel) {
                            continue;
                        }

                        return {
                            value: record.arg,
                            done: context.done
                        };
                    } else if (record.type === "throw") {
                        state = GenStateCompleted;
                        context.method = "throw";
                        context.arg = record.arg;
                    }
                }
            };
        }

        function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];

            if (method === undefined) {
                context.delegate = null;

                if (context.method === "throw") {
                    if (delegate.iterator["return"]) {
                        context.method = "return";
                        context.arg = undefined;
                        maybeInvokeDelegate(delegate, context);

                        if (context.method === "throw") {
                            return ContinueSentinel;
                        }
                    }

                    context.method = "throw";
                    context.arg = new TypeError("The iterator does not provide a 'throw' method");
                }

                return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === "throw") {
                context.method = "throw";
                context.arg = record.arg;
                context.delegate = null;
                return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
                context.method = "throw";
                context.arg = new TypeError("iterator result is not an object");
                context.delegate = null;
                return ContinueSentinel;
            }

            if (info.done) {
                context[delegate.resultName] = info.value;
                context.next = delegate.nextLoc;

                if (context.method !== "return") {
                    context.method = "next";
                    context.arg = undefined;
                }
            } else {
                return info;
            }

            context.delegate = null;
            return ContinueSentinel;
        }

        defineIteratorMethods(Gp);
        Gp[toStringTagSymbol] = "Generator";

        Gp[iteratorSymbol] = function () {
            return this;
        };

        Gp.toString = function () {
            return "[object Generator]";
        };

        function pushTryEntry(locs) {
            var entry = {
                tryLoc: locs[0]
            };

            if (1 in locs) {
                entry.catchLoc = locs[1];
            }

            if (2 in locs) {
                entry.finallyLoc = locs[2];
                entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
        }

        function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = "normal";
            delete record.arg;
            entry.completion = record;
        }

        function Context(tryLocsList) {
            this.tryEntries = [{
                tryLoc: "root"
            }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
        }

        exports.keys = function (object) {
            var keys = [];

            for (var key in object) {
                keys.push(key);
            }

            keys.reverse();
            return function next() {
                while (keys.length) {
                    var key = keys.pop();

                    if (key in object) {
                        next.value = key;
                        next.done = false;
                        return next;
                    }
                }

                next.done = true;
                return next;
            };
        };

        function values(iterable) {
            if (iterable) {
                var iteratorMethod = iterable[iteratorSymbol];

                if (iteratorMethod) {
                    return iteratorMethod.call(iterable);
                }

                if (typeof iterable.next === "function") {
                    return iterable;
                }

                if (!isNaN(iterable.length)) {
                    var i = -1,
                        next = function next() {
                            while (++i < iterable.length) {
                                if (hasOwn.call(iterable, i)) {
                                    next.value = iterable[i];
                                    next.done = false;
                                    return next;
                                }
                            }

                            next.value = undefined;
                            next.done = true;
                            return next;
                        };

                    return next.next = next;
                }
            }

            return {
                next: doneResult
            };
        }

        exports.values = values;

        function doneResult() {
            return {
                value: undefined,
                done: true
            };
        }

        Context.prototype = {
            constructor: Context,
            reset: function reset(skipTempReset) {
                this.prev = 0;
                this.next = 0;
                this.sent = this._sent = undefined;
                this.done = false;
                this.delegate = null;
                this.method = "next";
                this.arg = undefined;
                this.tryEntries.forEach(resetTryEntry);

                if (!skipTempReset) {
                    for (var name in this) {
                        if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                            this[name] = undefined;
                        }
                    }
                }
            },
            stop: function stop() {
                this.done = true;
                var rootEntry = this.tryEntries[0];
                var rootRecord = rootEntry.completion;

                if (rootRecord.type === "throw") {
                    throw rootRecord.arg;
                }

                return this.rval;
            },
            dispatchException: function dispatchException(exception) {
                if (this.done) {
                    throw exception;
                }

                var context = this;

                function handle(loc, caught) {
                    record.type = "throw";
                    record.arg = exception;
                    context.next = loc;

                    if (caught) {
                        context.method = "next";
                        context.arg = undefined;
                    }

                    return !!caught;
                }

                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];
                    var record = entry.completion;

                    if (entry.tryLoc === "root") {
                        return handle("end");
                    }

                    if (entry.tryLoc <= this.prev) {
                        var hasCatch = hasOwn.call(entry, "catchLoc");
                        var hasFinally = hasOwn.call(entry, "finallyLoc");

                        if (hasCatch && hasFinally) {
                            if (this.prev < entry.catchLoc) {
                                return handle(entry.catchLoc, true);
                            } else if (this.prev < entry.finallyLoc) {
                                return handle(entry.finallyLoc);
                            }
                        } else if (hasCatch) {
                            if (this.prev < entry.catchLoc) {
                                return handle(entry.catchLoc, true);
                            }
                        } else if (hasFinally) {
                            if (this.prev < entry.finallyLoc) {
                                return handle(entry.finallyLoc);
                            }
                        } else {
                            throw new Error("try statement without catch or finally");
                        }
                    }
                }
            },
            abrupt: function abrupt(type, arg) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];

                    if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                        var finallyEntry = entry;
                        break;
                    }
                }

                if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                    finallyEntry = null;
                }

                var record = finallyEntry ? finallyEntry.completion : {};
                record.type = type;
                record.arg = arg;

                if (finallyEntry) {
                    this.method = "next";
                    this.next = finallyEntry.finallyLoc;
                    return ContinueSentinel;
                }

                return this.complete(record);
            },
            complete: function complete(record, afterLoc) {
                if (record.type === "throw") {
                    throw record.arg;
                }

                if (record.type === "break" || record.type === "continue") {
                    this.next = record.arg;
                } else if (record.type === "return") {
                    this.rval = this.arg = record.arg;
                    this.method = "return";
                    this.next = "end";
                } else if (record.type === "normal" && afterLoc) {
                    this.next = afterLoc;
                }

                return ContinueSentinel;
            },
            finish: function finish(finallyLoc) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];

                    if (entry.finallyLoc === finallyLoc) {
                        this.complete(entry.completion, entry.afterLoc);
                        resetTryEntry(entry);
                        return ContinueSentinel;
                    }
                }
            },
            "catch": function _catch(tryLoc) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var entry = this.tryEntries[i];

                    if (entry.tryLoc === tryLoc) {
                        var record = entry.completion;

                        if (record.type === "throw") {
                            var thrown = record.arg;
                            resetTryEntry(entry);
                        }

                        return thrown;
                    }
                }

                throw new Error("illegal catch attempt");
            },
            delegateYield: function delegateYield(iterable, resultName, nextLoc) {
                this.delegate = {
                    iterator: values(iterable),
                    resultName: resultName,
                    nextLoc: nextLoc
                };

                if (this.method === "next") {
                    this.arg = undefined;
                }

                return ContinueSentinel;
            }
        };
        return exports;
    }(typeof module === "object" ? module.exports : {});

    try {
        regeneratorRuntime = runtime;
    } catch (accidentalStrictMode) {
        Function("r", "regeneratorRuntime = r")(runtime);
    }
}, 14677, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

    var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

    var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

    var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

    var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

    var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

    var _require = _$$_REQUIRE(_dependencyMap[6]),
        DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
        DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

    var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
    module.exports = _objectSpread({
        accessible: PropTypes.bool,
        accessibilityLabel: PropTypes.node,
        accessibilityHint: PropTypes.string,
        accessibilityActions: PropTypes.arrayOf(PropTypes.string),
        accessibilityIgnoresInvertColors: PropTypes.bool,
        accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
        accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
        accessibilityState: PropTypes.object,
        accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
        importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
        accessibilityViewIsModal: PropTypes.bool,
        accessibilityElementsHidden: PropTypes.bool,
        onAccessibilityAction: PropTypes.func,
        onAccessibilityTap: PropTypes.func,
        onMagicTap: PropTypes.func,
        testID: PropTypes.string,
        nativeID: PropTypes.string,
        onResponderGrant: PropTypes.func,
        onResponderMove: PropTypes.func,
        onResponderReject: PropTypes.func,
        onResponderRelease: PropTypes.func,
        onResponderTerminate: PropTypes.func,
        onResponderTerminationRequest: PropTypes.func,
        onStartShouldSetResponder: PropTypes.func,
        onStartShouldSetResponderCapture: PropTypes.func,
        onMoveShouldSetResponder: PropTypes.func,
        onMoveShouldSetResponderCapture: PropTypes.func,
        hitSlop: DeprecatedEdgeInsetsPropType,
        onLayout: PropTypes.func,
        pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
        style: stylePropType,
        removeClippedSubviews: PropTypes.bool,
        renderToHardwareTextureAndroid: PropTypes.bool,
        shouldRasterizeIOS: PropTypes.bool,
        collapsable: PropTypes.bool,
        needsOffscreenAlphaCompositing: PropTypes.bool
    }, PlatformViewPropTypes);
}, 14680, [14314, 14614, 14617, 14437, 10348, 10318, 14641]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

    var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
    module.exports = ImageViewNativeComponent;
}, 14683, [10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

    var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
    module.exports = TextInlineImage;
}, 14686, [10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

    var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

    module.exports = createAnimatedComponent(ScrollView, {
        scrollEventThrottle: 0.0001
    });
}, 14689, [10609, 10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var SectionList = _$$_REQUIRE(_dependencyMap[0]);

    var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

    module.exports = createAnimatedComponent(SectionList, {
        scrollEventThrottle: 0.0001
    });
}, 14692, [10744, 10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var Text = _$$_REQUIRE(_dependencyMap[0]);

    var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

    module.exports = createAnimatedComponent(Text);
}, 14695, [10483, 10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var View = _$$_REQUIRE(_dependencyMap[0]);

    var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

    module.exports = createAnimatedComponent(View);
}, 14698, [10447, 10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

    module.exports = requireNativeComponent('AndroidCheckBox');
}, 14701, [10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    function setAndForwardRef(_ref) {
        var getForwardedRef = _ref.getForwardedRef,
            setLocalRef = _ref.setLocalRef;
        return function forwardRef(ref) {
            var forwardedRef = getForwardedRef();
            setLocalRef(ref);

            if (typeof forwardedRef === 'function') {
                forwardedRef(ref);
            } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
                forwardedRef.current = ref;
            }
        };
    }

    module.exports = setAndForwardRef;
}, 14704, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = exports.Commands = undefined;

    var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

    var Commands = (0, _codegenNativeCommands.default)({
        supportedCommands: ['openDrawer', 'closeDrawer']
    });
    exports.Commands = Commands;

    var _default = (0, _codegenNativeComponent.default)('AndroidDrawerLayout');

    exports.default = _default;
}, 14707, [14308, 14305, 14710, 14608, 10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _ReactNative = _$$_REQUIRE(_dependencyMap[0]);

    function codegenNativeCommands(options) {
        var commandObj = {};
        options.supportedCommands.forEach(function (command) {
            commandObj[command] = function (ref) {
                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    args[_key - 1] = arguments[_key];
                }

                (0, _ReactNative.dispatchCommand)(ref, command, args);
            };
        });
        return commandObj;
    }

    var _default = codegenNativeCommands;
    exports.default = _default;
}, 14710, [10114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('StatusBarManager');

    exports.default = _default;
}, 14713, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

    var Platform = _$$_REQUIRE(_dependencyMap[8]);

    var React = _$$_REQUIRE(_dependencyMap[9]);

    var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

    var InputAccessoryView = function (_React$Component) {
        (0, _inherits2.default)(InputAccessoryView, _React$Component);

        function InputAccessoryView() {
            (0, _classCallCheck2.default)(this, InputAccessoryView);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputAccessoryView).apply(this, arguments));
        }

        (0, _createClass2.default)(InputAccessoryView, [{
            key: "render",
            value: function render() {
                { }

                if (React.Children.count(this.props.children) === 0) {
                    return null;
                }

                return React.createElement(_RCTInputAccessoryViewNativeComponent.default, {
                    style: [this.props.style, styles.container],
                    nativeID: this.props.nativeID,
                    backgroundColor: this.props.backgroundColor
                }, this.props.children);
            }
        }]);
        return InputAccessoryView;
    }(React.Component);

    var styles = StyleSheet.create({
        container: {
            position: 'absolute'
        }
    });
    module.exports = InputAccessoryView;
}, 14746, [14305, 14320, 14323, 14371, 14377, 14386, 14749, 14419, 10066, 10297, 10441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = (0, _codegenNativeComponent.default)('RCTInputAccessoryView');

    exports.default = _default;
}, 14749, [14305, 14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('ModalManager');

    exports.default = _default;
}, 14752, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = (0, _codegenNativeComponent.default)('ModalHostView', {
        interfaceOnly: true,
        paperComponentName: 'RCTModalHostView'
    });

    exports.default = _default;
}, 14755, [14305, 14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var React = _$$_REQUIRE(_dependencyMap[0]);

    module.exports = React.createContext(0);
}, 14758, [10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('I18nManager');

    exports.default = _default;
}, 14761, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    module.exports = (0, _reactNative.requireNativeComponent)('AndroidDropdownPicker');
}, 14764, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    module.exports = (0, _reactNative.requireNativeComponent)('AndroidDialogPicker');
}, 14767, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _extends = _$$_REQUIRE(_dependencyMap[0]);

    var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

    var Platform = _$$_REQUIRE(_dependencyMap[2]);

    var React = _$$_REQUIRE(_dependencyMap[3]);

    var View = _$$_REQUIRE(_dependencyMap[4]);

    var exported;
    {
        var SafeAreaView = function SafeAreaView(props, forwardedRef) {
            var emulateUnlessSupported = props.emulateUnlessSupported,
                localProps = _objectWithoutProperties(props, ["emulateUnlessSupported"]);

            return React.createElement(View, _extends({}, localProps, {
                ref: forwardedRef
            }));
        };

        var SafeAreaViewRef = React.forwardRef(SafeAreaView);
        SafeAreaViewRef.displayName = 'SafeAreaView';
        exported = SafeAreaViewRef;
    }
    module.exports = exported;
}, 14770, [14344, 14407, 10066, 10297, 10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = (0, _codegenNativeComponent.default)('Slider', {
        interfaceOnly: true,
        paperComponentName: 'RCTSlider'
    });

    exports.default = _default;
}, 14773, [14305, 14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = (0, _codegenNativeComponent.default)('Switch', {
        paperComponentName: 'RCTSwitch'
    });

    exports.default = _default;
}, 14776, [14305, 14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _require = _$$_REQUIRE(_dependencyMap[0]),
        NativeComponent = _require.NativeComponent;

    var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

    module.exports = requireNativeComponent('AndroidSwitch');
}, 14779, [10114, 10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

    var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

    var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[2]);

    var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[3]);

    var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[4]);

    var Text = _$$_REQUIRE(_dependencyMap[5]);

    var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];
    module.exports = _objectSpread({}, DeprecatedViewPropTypes, {
        autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
        autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
        autoCorrect: PropTypes.bool,
        spellCheck: PropTypes.bool,
        autoFocus: PropTypes.bool,
        allowFontScaling: PropTypes.bool,
        maxFontSizeMultiplier: PropTypes.number,
        editable: PropTypes.bool,
        keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
        keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
        returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
        returnKeyLabel: PropTypes.string,
        maxLength: PropTypes.number,
        numberOfLines: PropTypes.number,
        disableFullscreenUI: PropTypes.bool,
        enablesReturnKeyAutomatically: PropTypes.bool,
        multiline: PropTypes.bool,
        textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
        onBlur: PropTypes.func,
        onFocus: PropTypes.func,
        onChange: PropTypes.func,
        onChangeText: PropTypes.func,
        onContentSizeChange: PropTypes.func,
        onTextInput: PropTypes.func,
        onEndEditing: PropTypes.func,
        onSelectionChange: PropTypes.func,
        onSubmitEditing: PropTypes.func,
        onKeyPress: PropTypes.func,
        onLayout: PropTypes.func,
        onScroll: PropTypes.func,
        placeholder: PropTypes.string,
        placeholderTextColor: DeprecatedColorPropType,
        scrollEnabled: PropTypes.bool,
        secureTextEntry: PropTypes.bool,
        selectionColor: DeprecatedColorPropType,
        selectionState: PropTypes.instanceOf(DocumentSelectionState),
        selection: PropTypes.shape({
            start: PropTypes.number.isRequired,
            end: PropTypes.number
        }),
        value: PropTypes.string,
        defaultValue: PropTypes.string,
        clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
        clearTextOnFocus: PropTypes.bool,
        selectTextOnFocus: PropTypes.bool,
        blurOnSubmit: PropTypes.bool,
        style: Text.propTypes.style,
        underlineColorAndroid: DeprecatedColorPropType,
        inlineImageLeft: PropTypes.string,
        inlineImagePadding: PropTypes.number,
        rejectResponderTermination: PropTypes.bool,
        dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
        caretHidden: PropTypes.bool,
        contextMenuHidden: PropTypes.bool,
        inputAccessoryViewID: PropTypes.string,
        textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode']),
        showSoftInputOnFocus: PropTypes.bool
    });
}, 14782, [14314, 10318, 14419, 14680, 10789, 10483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    "use strict";

    var keyOf = function keyOf(oneKeyObj) {
        var key;

        for (key in oneKeyObj) {
            if (!oneKeyObj.hasOwnProperty(key)) {
                continue;
            }

            return key;
        }

        return null;
    };

    module.exports = keyOf;
}, 14785, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('ActionSheetManager');

    exports.default = _default;
}, 14788, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('HeadlessJsTaskSupport');

    exports.default = _default;
}, 14791, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var HeadlessJsTaskError = function (_Error) {
        (0, _inherits2.default)(HeadlessJsTaskError, _Error);

        function HeadlessJsTaskError() {
            (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadlessJsTaskError).apply(this, arguments));
        }

        return HeadlessJsTaskError;
    }((0, _wrapNativeSuper2.default)(Error));

    exports.default = HeadlessJsTaskError;
}, 14794, [14305, 14320, 14371, 14377, 14386, 14458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('BugReporting');

    exports.default = _default;
}, 14797, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('RedBox');

    exports.default = _default;
}, 14800, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

    var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

    var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
    module.exports = PerformanceLoggerContext;
}, 14803, [14305, 14308, 10297, 14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var React = _$$_REQUIRE(_dependencyMap[0]);

    var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

    var Text = _$$_REQUIRE(_dependencyMap[2]);

    var View = _$$_REQUIRE(_dependencyMap[3]);

    function ReactFabricIndicator() {
        return React.createElement(View, {
            style: styles.container
        }, React.createElement(Text, {
            style: styles.text
        }, "FABRIC"));
    }

    var styles = StyleSheet.create({
        container: {
            alignItems: 'center',
            justifyContent: 'center',
            backgroundColor: 'rgba(0,0,0, 0.25)',
            position: 'absolute',
            top: 0,
            right: 0,
            padding: 2
        },
        text: {
            fontSize: 6,
            color: '#ffffff'
        }
    });
    module.exports = ReactFabricIndicator;
}, 14806, [10297, 10441, 10483, 10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('DeviceEventManager');

    exports.default = _default;
}, 14809, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[0]);

    var ReactFabric;
    {
        ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
    }

    _ReactNativePrivateInterface.BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);

    module.exports = ReactFabric;
}, 14812, [14566, 14815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    "use strict";

    var _extends = _$$_REQUIRE(_dependencyMap[0]);

    _$$_REQUIRE(_dependencyMap[1]);

    var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
        React = _$$_REQUIRE(_dependencyMap[3]),
        Scheduler = _$$_REQUIRE(_dependencyMap[4]);

    function ReactError(error) {
        error.name = "Invariant Violation";
        return error;
    }

    var eventPluginOrder = null,
        namesToPlugins = {};

    function recomputePluginOrdering() {
        if (eventPluginOrder) for (var pluginName in namesToPlugins) {
            var pluginModule = namesToPlugins[pluginName],
                pluginIndex = eventPluginOrder.indexOf(pluginName);
            if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

            if (!plugins[pluginIndex]) {
                if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
                plugins[pluginIndex] = pluginModule;
                pluginIndex = pluginModule.eventTypes;

                for (var eventName in pluginIndex) {
                    var JSCompiler_inline_result = undefined;
                    var dispatchConfig = pluginIndex[eventName],
                        pluginModule$jscomp$0 = pluginModule,
                        eventName$jscomp$0 = eventName;
                    if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
                    eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
                    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

                    if (phasedRegistrationNames) {
                        for (JSCompiler_inline_result in phasedRegistrationNames) {
                            phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
                        }

                        JSCompiler_inline_result = true;
                    } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

                    if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
                }
            }
        }
    }

    function publishRegistrationName(registrationName, pluginModule) {
        if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
        registrationNameModules[registrationName] = pluginModule;
    }

    var plugins = [],
        eventNameDispatchConfigs = {},
        registrationNameModules = {};

    function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);

        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }

    var hasError = false,
        caughtError = null,
        hasRethrowError = false,
        rethrowError = null,
        reporter = {
            onError: function onError(error) {
                hasError = true;
                caughtError = error;
            }
        };

    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl.apply(reporter, arguments);
    }

    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);

        if (hasError) {
            if (hasError) {
                var error = caughtError;
                hasError = false;
                caughtError = null;
            } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

            hasRethrowError || (hasRethrowError = true, rethrowError = error);
        }
    }

    var getFiberCurrentPropsFromNode = null,
        getInstanceFromNode = null,
        getNodeFromInstance = null;

    function executeDispatch(event, listener, inst) {
        var type = event.type || "unknown-event";
        event.currentTarget = getNodeFromInstance(inst);
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }

    function executeDirectDispatch(event) {
        var dispatchListener = event._dispatchListeners,
            dispatchInstance = event._dispatchInstances;
        if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
        event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
        dispatchListener = dispatchListener ? dispatchListener(event) : null;
        event.currentTarget = null;
        event._dispatchListeners = null;
        event._dispatchInstances = null;
        return dispatchListener;
    }

    function accumulateInto(current, next) {
        if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
        if (null == current) return next;

        if (Array.isArray(current)) {
            if (Array.isArray(next)) return current.push.apply(current, next), current;
            current.push(next);
            return current;
        }

        return Array.isArray(next) ? [current].concat(next) : [current, next];
    }

    function forEachAccumulated(arr, cb, scope) {
        Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
    }

    var eventQueue = null;

    function executeDispatchesAndReleaseTopLevel(e) {
        if (e) {
            var dispatchListeners = e._dispatchListeners,
                dispatchInstances = e._dispatchInstances;
            if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
                executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
            } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
            e._dispatchListeners = null;
            e._dispatchInstances = null;
            e.isPersistent() || e.constructor.release(e);
        }
    }

    var injection = {
        injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
            if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
            eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
            recomputePluginOrdering();
        },
        injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
            var isOrderingDirty = false,
                pluginName;

            for (pluginName in injectedNamesToPlugins) {
                if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                    var pluginModule = injectedNamesToPlugins[pluginName];

                    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
                        if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
                        namesToPlugins[pluginName] = pluginModule;
                        isOrderingDirty = true;
                    }
                }
            }

            isOrderingDirty && recomputePluginOrdering();
        }
    };

    function getListener(inst, registrationName) {
        var listener = inst.stateNode;
        if (!listener) return null;
        var props = getFiberCurrentPropsFromNode(listener);
        if (!props) return null;
        listener = props[registrationName];

        a: switch (registrationName) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
                (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
                inst = !props;
                break a;

            default:
                inst = false;
        }

        if (inst) return null;
        if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
        return listener;
    }

    function getParent(inst) {
        do {
            inst = inst.return;
        } while (inst && 5 !== inst.tag);

        return inst ? inst : null;
    }

    function traverseTwoPhase(inst, fn, arg) {
        for (var path = []; inst;) {
            path.push(inst), inst = getParent(inst);
        }

        for (inst = path.length; 0 < inst--;) {
            fn(path[inst], "captured", arg);
        }

        for (inst = 0; inst < path.length; inst++) {
            fn(path[inst], "bubbled", arg);
        }
    }

    function accumulateDirectionalDispatches(inst, phase, event) {
        if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }

    function accumulateTwoPhaseDispatchesSingle(event) {
        event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
    }

    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
        if (event && event.dispatchConfig.phasedRegistrationNames) {
            var targetInst = event._targetInst;
            targetInst = targetInst ? getParent(targetInst) : null;
            traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
        }
    }

    function accumulateDirectDispatchesSingle(event) {
        if (event && event.dispatchConfig.registrationName) {
            var inst = event._targetInst;

            if (inst && event && event.dispatchConfig.registrationName) {
                var listener = getListener(inst, event.dispatchConfig.registrationName);
                listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
            }
        }
    }

    function functionThatReturnsTrue() {
        return true;
    }

    function functionThatReturnsFalse() {
        return false;
    }

    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
        this.dispatchConfig = dispatchConfig;
        this._targetInst = targetInst;
        this.nativeEvent = nativeEvent;
        dispatchConfig = this.constructor.Interface;

        for (var propName in dispatchConfig) {
            dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
        }

        this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
        this.isPropagationStopped = functionThatReturnsFalse;
        return this;
    }

    _extends(SyntheticEvent.prototype, {
        preventDefault: function preventDefault() {
            this.defaultPrevented = true;
            var event = this.nativeEvent;
            event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
        },
        stopPropagation: function stopPropagation() {
            var event = this.nativeEvent;
            event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
        },
        persist: function persist() {
            this.isPersistent = functionThatReturnsTrue;
        },
        isPersistent: functionThatReturnsFalse,
        destructor: function destructor() {
            var Interface = this.constructor.Interface,
                propName;

            for (propName in Interface) {
                this[propName] = null;
            }

            this.nativeEvent = this._targetInst = this.dispatchConfig = null;
            this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
            this._dispatchInstances = this._dispatchListeners = null;
        }
    });

    SyntheticEvent.Interface = {
        type: null,
        target: null,
        currentTarget: function currentTarget() {
            return null;
        },
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function timeStamp(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: null,
        isTrusted: null
    };

    SyntheticEvent.extend = function (Interface) {
        function E() { }

        function Class() {
            return Super.apply(this, arguments);
        }

        var Super = this;
        E.prototype = Super.prototype;
        var prototype = new E();

        _extends(prototype, Class.prototype);

        Class.prototype = prototype;
        Class.prototype.constructor = Class;
        Class.Interface = _extends({}, Super.Interface, Interface);
        Class.extend = Super.extend;
        addEventPoolingTo(Class);
        return Class;
    };

    addEventPoolingTo(SyntheticEvent);

    function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
        if (this.eventPool.length) {
            var instance = this.eventPool.pop();
            this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
            return instance;
        }

        return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
    }

    function releasePooledEvent(event) {
        if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
        event.destructor();
        10 > this.eventPool.length && this.eventPool.push(event);
    }

    function addEventPoolingTo(EventConstructor) {
        EventConstructor.eventPool = [];
        EventConstructor.getPooled = getPooledEvent;
        EventConstructor.release = releasePooledEvent;
    }

    var ResponderSyntheticEvent = SyntheticEvent.extend({
        touchHistory: function touchHistory() {
            return null;
        }
    });

    function isStartish(topLevelType) {
        return "topTouchStart" === topLevelType;
    }

    function isMoveish(topLevelType) {
        return "topTouchMove" === topLevelType;
    }

    var startDependencies = ["topTouchStart"],
        moveDependencies = ["topTouchMove"],
        endDependencies = ["topTouchCancel", "topTouchEnd"],
        touchBank = [],
        touchHistory = {
            touchBank: touchBank,
            numberActiveTouches: 0,
            indexOfSingleActiveTouch: -1,
            mostRecentTimeStamp: 0
        };

    function timestampForTouch(touch) {
        return touch.timeStamp || touch.timestamp;
    }

    function getTouchIdentifier(_ref) {
        _ref = _ref.identifier;
        if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
        return _ref;
    }

    function recordTouchStart(touch) {
        var identifier = getTouchIdentifier(touch),
            touchRecord = touchBank[identifier];
        touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
            touchActive: true,
            startPageX: touch.pageX,
            startPageY: touch.pageY,
            startTimeStamp: timestampForTouch(touch),
            currentPageX: touch.pageX,
            currentPageY: touch.pageY,
            currentTimeStamp: timestampForTouch(touch),
            previousPageX: touch.pageX,
            previousPageY: touch.pageY,
            previousTimeStamp: timestampForTouch(touch)
        }, touchBank[identifier] = touchRecord);
        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
    }

    function recordTouchMove(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
    }

    function recordTouchEnd(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
    }

    var ResponderTouchHistoryStore = {
        recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
            if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove); else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier); else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
                if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
                    touchHistory.indexOfSingleActiveTouch = topLevelType;
                    break;
                }
            }
        },
        touchHistory: touchHistory
    };

    function accumulate(current, next) {
        if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
        return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
    }

    var responderInst = null,
        trackedTouchCount = 0;

    function changeResponder(nextResponderInst, blockHostResponder) {
        var oldResponderInst = responderInst;
        responderInst = nextResponderInst;
        if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
    }

    var eventTypes = {
        startShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onStartShouldSetResponder",
                captured: "onStartShouldSetResponderCapture"
            },
            dependencies: startDependencies
        },
        scrollShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onScrollShouldSetResponder",
                captured: "onScrollShouldSetResponderCapture"
            },
            dependencies: ["topScroll"]
        },
        selectionChangeShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onSelectionChangeShouldSetResponder",
                captured: "onSelectionChangeShouldSetResponderCapture"
            },
            dependencies: ["topSelectionChange"]
        },
        moveShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onMoveShouldSetResponder",
                captured: "onMoveShouldSetResponderCapture"
            },
            dependencies: moveDependencies
        },
        responderStart: {
            registrationName: "onResponderStart",
            dependencies: startDependencies
        },
        responderMove: {
            registrationName: "onResponderMove",
            dependencies: moveDependencies
        },
        responderEnd: {
            registrationName: "onResponderEnd",
            dependencies: endDependencies
        },
        responderRelease: {
            registrationName: "onResponderRelease",
            dependencies: endDependencies
        },
        responderTerminationRequest: {
            registrationName: "onResponderTerminationRequest",
            dependencies: []
        },
        responderGrant: {
            registrationName: "onResponderGrant",
            dependencies: []
        },
        responderReject: {
            registrationName: "onResponderReject",
            dependencies: []
        },
        responderTerminate: {
            registrationName: "onResponderTerminate",
            dependencies: []
        }
    },
        ResponderEventPlugin = {
            _getResponder: function _getResponder() {
                return responderInst;
            },
            eventTypes: eventTypes,
            extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                if (isStartish(topLevelType)) trackedTouchCount += 1; else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount; else return undefined, null;
                ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

                if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
                    var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
                    if (responderInst) b: {
                        var JSCompiler_temp$jscomp$0 = responderInst;

                        for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
                            depthA++;
                        }

                        tempA = 0;

                        for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
                            tempA++;
                        }

                        for (; 0 < depthA - tempA;) {
                            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
                        }

                        for (; 0 < tempA - depthA;) {
                            targetInst = getParent(targetInst), tempA--;
                        }

                        for (; depthA--;) {
                            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
                            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
                            targetInst = getParent(targetInst);
                        }

                        JSCompiler_temp$jscomp$0 = null;
                    } else JSCompiler_temp$jscomp$0 = targetInst;
                    targetInst = JSCompiler_temp$jscomp$0 === responderInst;
                    JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
                    JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
                    targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

                    b: {
                        JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
                        targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
                        if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
                            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
                                JSCompiler_temp = targetInst[depthA];
                                break b;
                            }
                        } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
                            JSCompiler_temp = targetInst;
                            break b;
                        }
                        JSCompiler_temp = null;
                    }

                    JSCompiler_temp$jscomp$0._dispatchInstances = null;
                    JSCompiler_temp$jscomp$0._dispatchListeners = null;
                    JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
                    JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
                } else JSCompiler_temp = null;

                JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
                targetInst = responderInst && isMoveish(topLevelType);
                depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
                if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
                JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
                if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
                    if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
                        if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
                            tempA = getInstanceFromNode(depthA);

                            b: {
                                for (depthA = responderInst; tempA;) {
                                    if (depthA === tempA || depthA === tempA.alternate) {
                                        depthA = true;
                                        break b;
                                    }

                                    tempA = getParent(tempA);
                                }

                                depthA = false;
                            }

                            if (depthA) {
                                topLevelType = false;
                                break a;
                            }
                        }
                    }
                    topLevelType = true;
                }
                if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
                return JSCompiler_temp;
            },
            GlobalResponderHandler: null,
            injection: {
                injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
                    ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
                }
            }
        },
        customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
        customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
    injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
    injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin,
        ReactNativeBridgeEventPlugin: {
            eventTypes: {},
            extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                if (null == targetInst) return null;
                var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
                    directDispatchConfig = customDirectEventTypes[topLevelType];
                if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
                topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
                if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle); else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle); else return null;
                return topLevelType;
            }
        }
    });

    function getInstanceFromInstance(instanceHandle) {
        return instanceHandle;
    }

    getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
        return inst.canonical.currentProps;
    };

    getInstanceFromNode = getInstanceFromInstance;

    getNodeFromInstance = function getNodeFromInstance(inst) {
        inst = inst.stateNode.canonical._nativeTag;
        if (!inst) throw ReactError(Error("All native instances should have a tag."));
        return inst;
    };

    ResponderEventPlugin.injection.injectGlobalResponderHandler({
        onChange: function onChange(from, to, blockNativeResponder) {
            null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
        }
    });
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
        current: null
    });
    ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
        suspense: null
    });
    var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
        REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
        REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
        REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
        REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
        REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
        REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
        REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
        REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
        REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
        REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
        REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
        REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
        REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
    hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
    hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
    var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }

    function getComponentName(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.displayName || type.name || null;
        if ("string" === typeof type) return type;

        switch (type) {
            case REACT_FRAGMENT_TYPE:
                return "Fragment";

            case REACT_PORTAL_TYPE:
                return "Portal";

            case REACT_PROFILER_TYPE:
                return "Profiler";

            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";

            case REACT_SUSPENSE_TYPE:
                return "Suspense";

            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }

        if ("object" === typeof type) switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
                return "Context.Consumer";

            case REACT_PROVIDER_TYPE:
                return "Context.Provider";

            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                innerType = innerType.displayName || innerType.name || "";
                return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

            case REACT_MEMO_TYPE:
                return getComponentName(type.type);

            case REACT_LAZY_TYPE:
                if (type = 1 === type._status ? type._result : null) return getComponentName(type);
        }
        return null;
    }

    function isFiberMountedImpl(fiber) {
        var node = fiber;
        if (fiber.alternate) for (; node.return;) {
            node = node.return;
        } else {
            if (0 !== (node.effectTag & 2)) return 1;

            for (; node.return;) {
                if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
            }
        }
        return 3 === node.tag ? 2 : 3;
    }

    function assertIsMounted(fiber) {
        if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
    }

    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;

        if (!alternate) {
            alternate = isFiberMountedImpl(fiber);
            if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
            return 1 === alternate ? null : fiber;
        }

        for (var a = fiber, b = alternate; ;) {
            var parentA = a.return;
            if (null === parentA) break;
            var parentB = parentA.alternate;

            if (null === parentB) {
                b = parentA.return;

                if (null !== b) {
                    a = b;
                    continue;
                }

                break;
            }

            if (parentA.child === parentB.child) {
                for (parentB = parentA.child; parentB;) {
                    if (parentB === a) return assertIsMounted(parentA), fiber;
                    if (parentB === b) return assertIsMounted(parentA), alternate;
                    parentB = parentB.sibling;
                }

                throw ReactError(Error("Unable to find node on an unmounted component."));
            }

            if (a.return !== b.return) a = parentA, b = parentB; else {
                for (var didFindChild = false, _child = parentA.child; _child;) {
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }

                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }

                    _child = _child.sibling;
                }

                if (!didFindChild) {
                    for (_child = parentB.child; _child;) {
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }

                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }

                        _child = _child.sibling;
                    }

                    if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
                }
            }
            if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
        }

        if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
        return a.stateNode.current === a ? fiber : alternate;
    }

    function findCurrentHostFiber(parent) {
        parent = findCurrentFiberUsingSlowPath(parent);
        if (!parent) return null;

        for (var node = parent; ;) {
            if (5 === node.tag || 6 === node.tag) return node;
            if (node.child) node.child.return = node, node = node.child; else {
                if (node === parent) break;

                for (; !node.sibling;) {
                    if (!node.return || node.return === parent) return null;
                    node = node.return;
                }

                node.sibling.return = node.return;
                node = node.sibling;
            }
        }

        return null;
    }

    function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
        return function () {
            if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
        };
    }

    var emptyObject = {},
        removedKeys = null,
        removedKeyCount = 0;

    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
        if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
            restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
        } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
            if (removedKeys[i]) {
                var nextProp = node[i];

                if (undefined !== nextProp) {
                    var attributeConfig = validAttributes[i];

                    if (attributeConfig) {
                        "function" === typeof nextProp && (nextProp = true);
                        "undefined" === typeof nextProp && (nextProp = null);
                        if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp; else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
                        removedKeys[i] = false;
                        removedKeyCount--;
                    }
                }
            }
        }
    }

    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
        if (!updatePayload && prevProp === nextProp) return updatePayload;
        if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
        if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

        if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
            var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
                i;

            for (i = 0; i < minLength; i++) {
                updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
            }

            for (; i < prevProp.length; i++) {
                updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
            }

            for (; i < nextProp.length; i++) {
                updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
            }

            return updatePayload;
        }

        return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
    }

    function addNestedProperty(updatePayload, nextProp, validAttributes) {
        if (!nextProp) return updatePayload;
        if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

        for (var i = 0; i < nextProp.length; i++) {
            updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
        }

        return updatePayload;
    }

    function clearNestedProperty(updatePayload, prevProp, validAttributes) {
        if (!prevProp) return updatePayload;
        if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

        for (var i = 0; i < prevProp.length; i++) {
            updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
        }

        return updatePayload;
    }

    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
        var attributeConfig, propKey;

        for (propKey in nextProps) {
            if (attributeConfig = validAttributes[propKey]) {
                var prevProp = prevProps[propKey];
                var nextProp = nextProps[propKey];
                "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
                "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
                removedKeys && (removedKeys[propKey] = false);
                if (updatePayload && undefined !== updatePayload[propKey]) {
                    if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp; else {
                        if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
                    }
                } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp); else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
                    if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
                } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
            }
        }

        for (var _propKey in prevProps) {
            undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
        }

        return updatePayload;
    }

    var restoreTarget = null,
        restoreQueue = null;

    function restoreStateOfTarget(target) {
        if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
    }

    function batchedUpdatesImpl(fn, bookkeeping) {
        return fn(bookkeeping);
    }

    function flushDiscreteUpdatesImpl() { }

    var isInsideEventHandler = false;

    function batchedUpdates(fn, bookkeeping) {
        if (isInsideEventHandler) return fn(bookkeeping);
        isInsideEventHandler = true;

        try {
            return batchedUpdatesImpl(fn, bookkeeping);
        } finally {
            if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
                restoreStateOfTarget(fn[bookkeeping]);
            }
        }
    }

    function _inherits(subClass, superClass) {
        if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
    }

    (function (_React$Component) {
        function ReactNativeComponent() {
            if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

            var call = _React$Component.apply(this, arguments);

            if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () { };

        ReactNativeComponent.prototype.focus = function () { };

        ReactNativeComponent.prototype.measure = function () { };

        ReactNativeComponent.prototype.measureInWindow = function () { };

        ReactNativeComponent.prototype.measureLayout = function () { };

        ReactNativeComponent.prototype.setNativeProps = function () { };

        return ReactNativeComponent;
    })(React.Component);

    new Map();
    new Map();
    new Set();
    new Map();

    function dispatchEvent(target, topLevelType, nativeEvent) {
        batchedUpdates(function () {
            var events = nativeEvent.target;

            for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
                var possiblePlugin = plugins[i];
                possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
            }

            events = events$jscomp$0;
            null !== events && (eventQueue = accumulateInto(eventQueue, events));
            events = eventQueue;
            eventQueue = null;

            if (events) {
                forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
                if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
                if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
            }
        });
    }

    function shim$1() {
        throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
    }

    var _nativeFabricUIManage$1 = nativeFabricUIManager,
        createNode = _nativeFabricUIManage$1.createNode,
        cloneNode = _nativeFabricUIManage$1.cloneNode,
        cloneNodeWithNewChildren = _nativeFabricUIManage$1.cloneNodeWithNewChildren,
        cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage$1.cloneNodeWithNewChildrenAndProps,
        cloneNodeWithNewProps = _nativeFabricUIManage$1.cloneNodeWithNewProps,
        createChildNodeSet = _nativeFabricUIManage$1.createChildSet,
        appendChildNode = _nativeFabricUIManage$1.appendChild,
        appendChildNodeToSet = _nativeFabricUIManage$1.appendChildToSet,
        completeRoot = _nativeFabricUIManage$1.completeRoot,
        registerEventHandler = _nativeFabricUIManage$1.registerEventHandler,
        fabricMeasure = _nativeFabricUIManage$1.measure,
        fabricMeasureInWindow = _nativeFabricUIManage$1.measureInWindow,
        fabricMeasureLayout = _nativeFabricUIManage$1.measureLayout,
        getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
        nextReactTag = 2;
    registerEventHandler && registerEventHandler(dispatchEvent);

    var ReactFabricHostComponent = function () {
        function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {
            if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
            this._nativeTag = tag;
            this.viewConfig = viewConfig;
            this.currentProps = props;
            this._internalInstanceHandle = internalInstanceHandle;
        }

        ReactFabricHostComponent.prototype.blur = function () {
            ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
        };

        ReactFabricHostComponent.prototype.focus = function () {
            ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
        };

        ReactFabricHostComponent.prototype.measure = function (callback) {
            fabricMeasure(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
            fabricMeasureInWindow(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
            "number" !== typeof relativeToNativeNode && relativeToNativeNode instanceof ReactFabricHostComponent && fabricMeasureLayout(this._internalInstanceHandle.stateNode.node, relativeToNativeNode._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
        };

        ReactFabricHostComponent.prototype.setNativeProps = function () { };

        return ReactFabricHostComponent;
    }();

    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        if (!hostContext.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
        hostContext = nextReactTag;
        nextReactTag += 2;
        return {
            node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
                text: text
            }, internalInstanceHandle)
        };
    }

    var scheduleTimeout = setTimeout,
        cancelTimeout = clearTimeout;

    function cloneHiddenInstance(instance) {
        var node = instance.node;
        var updatePayload = diffProperties(null, emptyObject, {
            style: {
                display: "none"
            }
        }, instance.canonical.viewConfig.validAttributes);
        return {
            node: cloneNodeWithNewProps(node, updatePayload),
            canonical: instance.canonical
        };
    }

    var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    function getStackByFiberInDevAndProd(workInProgress) {
        var info = "";

        do {
            a: switch (workInProgress.tag) {
                case 3:
                case 4:
                case 6:
                case 7:
                case 10:
                case 9:
                    var JSCompiler_inline_result = "";
                    break a;

                default:
                    var owner = workInProgress._debugOwner,
                        source = workInProgress._debugSource,
                        name = getComponentName(workInProgress.type);
                    JSCompiler_inline_result = null;
                    owner && (JSCompiler_inline_result = getComponentName(owner.type));
                    owner = name;
                    name = "";
                    source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
                    JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
            }

            info += JSCompiler_inline_result;
            workInProgress = workInProgress.return;
        } while (workInProgress);

        return info;
    }

    new Set();
    var valueStack = [],
        index = -1;

    function pop(cursor) {
        0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
    }

    function push(cursor, value) {
        index++;
        valueStack[index] = cursor.current;
        cursor.current = value;
    }

    var emptyContextObject = {},
        contextStackCursor = {
            current: emptyContextObject
        },
        didPerformWorkStackCursor = {
            current: false
        },
        previousContext = emptyContextObject;

    function getMaskedContext(workInProgress, unmaskedContext) {
        var contextTypes = workInProgress.type.contextTypes;
        if (!contextTypes) return emptyContextObject;
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {},
            key;

        for (key in contextTypes) {
            context[key] = unmaskedContext[key];
        }

        instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
        return context;
    }

    function isContextProvider(type) {
        type = type.childContextTypes;
        return null !== type && undefined !== type;
    }

    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }

    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }

    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }

    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        fiber = type.childContextTypes;
        if ("function" !== typeof instance.getChildContext) return parentContext;
        instance = instance.getChildContext();

        for (var contextKey in instance) {
            if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
        }

        return _extends({}, parentContext, instance);
    }

    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode;
        instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
        previousContext = contextStackCursor.current;
        push(contextStackCursor, instance, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }

    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
        didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
        push(didPerformWorkStackCursor, didChange, workInProgress);
    }

    var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
        Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
        Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
        Scheduler_shouldYield = Scheduler.unstable_shouldYield,
        Scheduler_requestPaint = Scheduler.unstable_requestPaint,
        Scheduler_now = Scheduler.unstable_now,
        Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
        Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
        Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
        Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
        Scheduler_LowPriority = Scheduler.unstable_LowPriority,
        Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
        fakeCallbackNode = {},
        requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () { },
        syncQueue = null,
        immediateQueueCallbackNode = null,
        isFlushingSyncQueue = false,
        initialTimeMs = Scheduler_now(),
        now = 1e4 > initialTimeMs ? Scheduler_now : function () {
            return Scheduler_now() - initialTimeMs;
        };

    function getCurrentPriorityLevel() {
        switch (Scheduler_getCurrentPriorityLevel()) {
            case Scheduler_ImmediatePriority:
                return 99;

            case Scheduler_UserBlockingPriority:
                return 98;

            case Scheduler_NormalPriority:
                return 97;

            case Scheduler_LowPriority:
                return 96;

            case Scheduler_IdlePriority:
                return 95;

            default:
                throw ReactError(Error("Unknown priority level."));
        }
    }

    function reactPriorityToSchedulerPriority(reactPriorityLevel) {
        switch (reactPriorityLevel) {
            case 99:
                return Scheduler_ImmediatePriority;

            case 98:
                return Scheduler_UserBlockingPriority;

            case 97:
                return Scheduler_NormalPriority;

            case 96:
                return Scheduler_LowPriority;

            case 95:
                return Scheduler_IdlePriority;

            default:
                throw ReactError(Error("Unknown priority level."));
        }
    }

    function runWithPriority$1(reactPriorityLevel, fn) {
        reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_runWithPriority(reactPriorityLevel, fn);
    }

    function scheduleCallback(reactPriorityLevel, callback, options) {
        reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
    }

    function scheduleSyncCallback(callback) {
        null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
        return fakeCallbackNode;
    }

    function flushSyncCallbackQueue() {
        null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
        flushSyncCallbackQueueImpl();
    }

    function flushSyncCallbackQueueImpl() {
        if (!isFlushingSyncQueue && null !== syncQueue) {
            isFlushingSyncQueue = true;
            var i = 0;

            try {
                var queue = syncQueue;
                runWithPriority$1(99, function () {
                    for (; i < queue.length; i++) {
                        var callback = queue[i];

                        do {
                            callback = callback(true);
                        } while (null !== callback);
                    }
                });
                syncQueue = null;
            } catch (error) {
                throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
            } finally {
                isFlushingSyncQueue = false;
            }
        }
    }

    function inferPriorityFromExpirationTime(currentTime, expirationTime) {
        if (1073741823 === expirationTime) return 99;
        if (1 === expirationTime) return 95;
        currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
        return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
    }

    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }

    var hasOwnProperty = Object.prototype.hasOwnProperty;

    function shallowEqual(objA, objB) {
        if (is(objA, objB)) return true;
        if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
        var keysA = Object.keys(objA),
            keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;

        for (keysB = 0; keysB < keysA.length; keysB++) {
            if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
        }

        return true;
    }

    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            baseProps = _extends({}, baseProps);
            Component = Component.defaultProps;

            for (var propName in Component) {
                undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
            }
        }

        return baseProps;
    }

    function readLazyComponentType(lazyComponent) {
        var result = lazyComponent._result;

        switch (lazyComponent._status) {
            case 1:
                return result;

            case 2:
                throw result;

            case 0:
                throw result;

            default:
                lazyComponent._status = 0;
                result = lazyComponent._ctor;
                result = result();
                result.then(function (moduleObject) {
                    0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
                }, function (error) {
                    0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
                });

                switch (lazyComponent._status) {
                    case 1:
                        return lazyComponent._result;

                    case 2:
                        throw lazyComponent._result;
                }

                lazyComponent._result = result;
                throw result;
        }
    }

    var valueCursor = {
        current: null
    },
        currentlyRenderingFiber = null,
        lastContextDependency = null,
        lastContextWithAllBitsObserved = null;

    function resetContextDependencies() {
        lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
    }

    function pushProvider(providerFiber, nextValue) {
        var context = providerFiber.type._context;
        push(valueCursor, context._currentValue2, providerFiber);
        context._currentValue2 = nextValue;
    }

    function popProvider(providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        providerFiber.type._context._currentValue2 = currentValue;
    }

    function scheduleWorkOnParentPath(parent, renderExpirationTime) {
        for (; null !== parent;) {
            var alternate = parent.alternate;
            if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime); else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime; else break;
            parent = parent.return;
        }
    }

    function prepareToReadContext(workInProgress, renderExpirationTime) {
        currentlyRenderingFiber = workInProgress;
        lastContextWithAllBitsObserved = lastContextDependency = null;
        workInProgress = workInProgress.dependencies;
        null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
    }

    function readContext(context, observedBits) {
        if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
            if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
            observedBits = {
                context: context,
                observedBits: observedBits,
                next: null
            };

            if (null === lastContextDependency) {
                if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
                lastContextDependency = observedBits;
                currentlyRenderingFiber.dependencies = {
                    expirationTime: 0,
                    firstContext: observedBits,
                    responders: null
                };
            } else lastContextDependency = lastContextDependency.next = observedBits;
        }

        return context._currentValue2;
    }

    var hasForceUpdate = false;

    function createUpdateQueue(baseState) {
        return {
            baseState: baseState,
            firstUpdate: null,
            lastUpdate: null,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null
        };
    }

    function cloneUpdateQueue(currentQueue) {
        return {
            baseState: currentQueue.baseState,
            firstUpdate: currentQueue.firstUpdate,
            lastUpdate: currentQueue.lastUpdate,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null
        };
    }

    function createUpdate(expirationTime, suspenseConfig) {
        return {
            expirationTime: expirationTime,
            suspenseConfig: suspenseConfig,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
            nextEffect: null
        };
    }

    function appendUpdateToQueue(queue, update) {
        null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
    }

    function enqueueUpdate(fiber, update) {
        var alternate = fiber.alternate;

        if (null === alternate) {
            var queue1 = fiber.updateQueue;
            var queue2 = null;
            null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
        } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

        null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
    }

    function enqueueCapturedUpdate(workInProgress, update) {
        var workInProgressQueue = workInProgress.updateQueue;
        workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
        null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
    }

    function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
        var current = workInProgress.alternate;
        null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
        return queue;
    }

    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch (update.tag) {
            case 1:
                return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

            case 3:
                workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

            case 0:
                workInProgress = update.payload;
                nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
                if (null === nextProps || undefined === nextProps) break;
                return _extends({}, prevState, nextProps);

            case 2:
                hasForceUpdate = true;
        }

        return prevState;
    }

    function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
        hasForceUpdate = false;
        queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

        for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
            var updateExpirationTime = update.expirationTime;
            updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
            update = update.next;
        }

        updateExpirationTime = null;

        for (update = queue.firstCapturedUpdate; null !== update;) {
            var _updateExpirationTime = update.expirationTime;
            _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
            update = update.next;
        }

        null === newFirstUpdate && (queue.lastUpdate = null);
        null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
        null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
        queue.baseState = newBaseState;
        queue.firstUpdate = newFirstUpdate;
        queue.firstCapturedUpdate = updateExpirationTime;
        workInProgress.expirationTime = newExpirationTime;
        workInProgress.memoizedState = resultState;
    }

    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
        commitUpdateEffects(finishedQueue.firstEffect, instance);
        finishedQueue.firstEffect = finishedQueue.lastEffect = null;
        commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
        finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
    }

    function commitUpdateEffects(effect, instance) {
        for (; null !== effect;) {
            var _callback3 = effect.callback;

            if (null !== _callback3) {
                effect.callback = null;
                var context = instance;
                if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

                _callback3.call(context);
            }

            effect = effect.nextEffect;
        }
    }

    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
        emptyRefsObject = new React.Component().refs;

    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        ctor = workInProgress.memoizedState;
        getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
        getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
        workInProgress.memoizedState = getDerivedStateFromProps;
        nextProps = workInProgress.updateQueue;
        null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
    }

    var classComponentUpdater = {
        isMounted: function isMounted(component) {
            return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
        },
        enqueueSetState: function enqueueSetState(inst, payload, callback) {
            inst = inst._reactInternalFiber;
            var currentTime = requestCurrentTime(),
                suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
            suspenseConfig = createUpdate(currentTime, suspenseConfig);
            suspenseConfig.payload = payload;
            undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
            enqueueUpdate(inst, suspenseConfig);
            scheduleUpdateOnFiber(inst, currentTime);
        },
        enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
            inst = inst._reactInternalFiber;
            var currentTime = requestCurrentTime(),
                suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
            suspenseConfig = createUpdate(currentTime, suspenseConfig);
            suspenseConfig.tag = 1;
            suspenseConfig.payload = payload;
            undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
            enqueueUpdate(inst, suspenseConfig);
            scheduleUpdateOnFiber(inst, currentTime);
        },
        enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
            inst = inst._reactInternalFiber;
            var currentTime = requestCurrentTime(),
                suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
            suspenseConfig = createUpdate(currentTime, suspenseConfig);
            suspenseConfig.tag = 2;
            undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
            enqueueUpdate(inst, suspenseConfig);
            scheduleUpdateOnFiber(inst, currentTime);
        }
    };

    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        workInProgress = workInProgress.stateNode;
        return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
    }

    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false,
            unmaskedContext = emptyContextObject;
        var context = ctor.contextType;
        "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
        ctor = new ctor(props, context);
        workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
        ctor.updater = classComponentUpdater;
        workInProgress.stateNode = ctor;
        ctor._reactInternalFiber = workInProgress;
        isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
        return ctor;
    }

    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        workInProgress = instance.state;
        "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
        "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
    }

    function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = emptyRefsObject;
        var contextType = ctor.contextType;
        "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
        contextType = workInProgress.updateQueue;
        null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
        contextType = ctor.getDerivedStateFromProps;
        "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
        "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
        "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
    }

    var isArray = Array.isArray;

    function coerceRef(returnFiber, current$$1, element) {
        returnFiber = element.ref;

        if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
            if (element._owner) {
                element = element._owner;
                var inst = undefined;

                if (element) {
                    if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
                    inst = element.stateNode;
                }

                if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
                var stringRef = "" + returnFiber;
                if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

                current$$1 = function current$$1(value) {
                    var refs = inst.refs;
                    refs === emptyRefsObject && (refs = inst.refs = {});
                    null === value ? delete refs[stringRef] : refs[stringRef] = value;
                };

                current$$1._stringRef = stringRef;
                return current$$1;
            }

            if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
            if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
        }

        return returnFiber;
    }

    function throwOnInvalidObjectType(returnFiber, newChild) {
        if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
    }

    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                var last = returnFiber.lastEffect;
                null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
                childToDelete.nextEffect = null;
                childToDelete.effectTag = 8;
            }
        }

        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;

            for (; null !== currentFirstChild;) {
                deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            }

            return null;
        }

        function mapRemainingChildren(returnFiber, currentFirstChild) {
            for (returnFiber = new Map(); null !== currentFirstChild;) {
                null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            }

            return returnFiber;
        }

        function useFiber(fiber, pendingProps, expirationTime) {
            fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
            fiber.index = 0;
            fiber.sibling = null;
            return fiber;
        }

        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) return lastPlacedIndex;
            newIndex = newFiber.alternate;
            if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
            newFiber.effectTag = 2;
            return lastPlacedIndex;
        }

        function placeSingleChild(newFiber) {
            shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
            return newFiber;
        }

        function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
            if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
            current$$1 = useFiber(current$$1, textContent, expirationTime);
            current$$1.return = returnFiber;
            return current$$1;
        }

        function updateElement(returnFiber, current$$1, element, expirationTime) {
            if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
            expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
            expirationTime.ref = coerceRef(returnFiber, current$$1, element);
            expirationTime.return = returnFiber;
            return expirationTime;
        }

        function updatePortal(returnFiber, current$$1, portal, expirationTime) {
            if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
            current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
            current$$1.return = returnFiber;
            return current$$1;
        }

        function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
            if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
            current$$1 = useFiber(current$$1, fragment, expirationTime);
            current$$1.return = returnFiber;
            return current$$1;
        }

        function createChild(returnFiber, newChild, expirationTime) {
            if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

            if ("object" === typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

                    case REACT_PORTAL_TYPE:
                        return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
                }

                if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
                throwOnInvalidObjectType(returnFiber, newChild);
            }

            return null;
        }

        function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

            if ("object" === typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

                    case REACT_PORTAL_TYPE:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
                }

                if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
                throwOnInvalidObjectType(returnFiber, newChild);
            }

            return null;
        }

        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
            if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

            if ("object" === typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

                    case REACT_PORTAL_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
                }

                if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
                throwOnInvalidObjectType(returnFiber, newChild);
            }

            return null;
        }

        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
            for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }

                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }

            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

            if (null === oldFiber) {
                for (; newIdx < newChildren.length; newIdx++) {
                    oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                }

                return resultingFirstChild;
            }

            for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
                nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            }

            shouldTrackSideEffects && oldFiber.forEach(function (child) {
                return deleteChild(returnFiber, child);
            });
            return resultingFirstChild;
        }

        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
            newChildrenIterable = iteratorFn.call(newChildrenIterable);
            if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

            for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }

                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }

            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

            if (null === oldFiber) {
                for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
                    step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
                }

                return iteratorFn;
            }

            for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
                step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
            }

            shouldTrackSideEffects && oldFiber.forEach(function (child) {
                return deleteChild(returnFiber, child);
            });
            return iteratorFn;
        }

        return function (returnFiber, currentFirstChild, newChild, expirationTime) {
            var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
            isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
            var isObject = "object" === typeof newChild && null !== newChild;
            if (isObject) switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    a: {
                        isObject = newChild.key;

                        for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
                            if (isUnkeyedTopLevelFragment.key === isObject) {
                                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                                    deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                                    currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                                    currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                                    currentFirstChild.return = returnFiber;
                                    returnFiber = currentFirstChild;
                                    break a;
                                }

                                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                                break;
                            } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

                            isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
                        }

                        newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
                    }

                    return placeSingleChild(returnFiber);

                case REACT_PORTAL_TYPE:
                    a: {
                        for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
                            if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                                    deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                    currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                                    currentFirstChild.return = returnFiber;
                                    returnFiber = currentFirstChild;
                                    break a;
                                }

                                deleteRemainingChildren(returnFiber, currentFirstChild);
                                break;
                            } else deleteChild(returnFiber, currentFirstChild);

                            currentFirstChild = currentFirstChild.sibling;
                        }

                        currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
                        currentFirstChild.return = returnFiber;
                        returnFiber = currentFirstChild;
                    }

                    return placeSingleChild(returnFiber);
            }
            if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
            if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
            if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
            isObject && throwOnInvalidObjectType(returnFiber, newChild);
            if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
                case 1:
                case 0:
                    throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        };
    }

    var reconcileChildFibers = ChildReconciler(true),
        mountChildFibers = ChildReconciler(false),
        NO_CONTEXT = {},
        contextStackCursor$1 = {
            current: NO_CONTEXT
        },
        contextFiberStackCursor = {
            current: NO_CONTEXT
        },
        rootInstanceStackCursor = {
            current: NO_CONTEXT
        };

    function requiredContext(c) {
        if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
        return c;
    }

    function pushHostContainer(fiber, nextRootInstance) {
        push(rootInstanceStackCursor, nextRootInstance, fiber);
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, {
            isInAParentText: false
        }, fiber);
    }

    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }

    function pushHostContext(fiber) {
        requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = fiber.type;
        nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
        nextContext = context.isInAParentText !== nextContext ? {
            isInAParentText: nextContext
        } : context;
        context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
    }

    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
    }

    var SubtreeSuspenseContextMask = 1,
        InvisibleParentSuspenseContext = 1,
        ForceSuspenseFallback = 2,
        suspenseStackCursor = {
            current: 0
        };

    function findFirstSuspended(row) {
        for (var node = row; null !== node;) {
            if (13 === node.tag) {
                if (null !== node.memoizedState) return node;
            } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
                if (0 !== (node.effectTag & 64)) return node;
            } else if (null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }

            if (node === row) break;

            for (; null === node.sibling;) {
                if (null === node.return || node.return === row) return null;
                node = node.return;
            }

            node.sibling.return = node.return;
            node = node.sibling;
        }

        return null;
    }

    function createResponderListener(responder, props) {
        return {
            responder: responder,
            props: props
        };
    }

    var NoEffect$1 = 0,
        UnmountSnapshot = 2,
        UnmountMutation = 4,
        MountMutation = 8,
        UnmountLayout = 16,
        MountLayout = 32,
        MountPassive = 64,
        UnmountPassive = 128,
        ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
        renderExpirationTime$1 = 0,
        currentlyRenderingFiber$1 = null,
        currentHook = null,
        nextCurrentHook = null,
        firstWorkInProgressHook = null,
        workInProgressHook = null,
        nextWorkInProgressHook = null,
        remainingExpirationTime = 0,
        componentUpdateQueue = null,
        sideEffectTag = 0,
        didScheduleRenderPhaseUpdate = false,
        renderPhaseUpdates = null,
        numberOfReRenders = 0;

    function throwInvalidHookError() {
        throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
    }

    function areHookInputsEqual(nextDeps, prevDeps) {
        if (null === prevDeps) return false;

        for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (!is(nextDeps[i], prevDeps[i])) return false;
        }

        return true;
    }

    function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
        renderExpirationTime$1 = nextRenderExpirationTime;
        currentlyRenderingFiber$1 = workInProgress;
        nextCurrentHook = null !== current ? current.memoizedState : null;
        ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
        workInProgress = Component(props, refOrContext);

        if (didScheduleRenderPhaseUpdate) {
            do {
                didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
            } while (didScheduleRenderPhaseUpdate);

            renderPhaseUpdates = null;
            numberOfReRenders = 0;
        }

        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        current = currentlyRenderingFiber$1;
        current.memoizedState = firstWorkInProgressHook;
        current.expirationTime = remainingExpirationTime;
        current.updateQueue = componentUpdateQueue;
        current.effectTag |= sideEffectTag;
        current = null !== currentHook && null !== currentHook.next;
        renderExpirationTime$1 = 0;
        nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
        remainingExpirationTime = 0;
        componentUpdateQueue = null;
        sideEffectTag = 0;
        if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
        return workInProgress;
    }

    function resetHooks() {
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        renderExpirationTime$1 = 0;
        nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
        remainingExpirationTime = 0;
        componentUpdateQueue = null;
        sideEffectTag = 0;
        didScheduleRenderPhaseUpdate = false;
        renderPhaseUpdates = null;
        numberOfReRenders = 0;
    }

    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            queue: null,
            baseUpdate: null,
            next: null
        };
        null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }

    function updateWorkInProgressHook() {
        if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null; else {
            if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
            currentHook = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                queue: currentHook.queue,
                baseUpdate: currentHook.baseUpdate,
                next: null
            };
            workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
            nextCurrentHook = currentHook.next;
        }
        return workInProgressHook;
    }

    function basicStateReducer(state, action) {
        return "function" === typeof action ? action(state) : action;
    }

    function updateReducer(reducer) {
        var hook = updateWorkInProgressHook(),
            queue = hook.queue;
        if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
        queue.lastRenderedReducer = reducer;

        if (0 < numberOfReRenders) {
            var _dispatch = queue.dispatch;

            if (null !== renderPhaseUpdates) {
                var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

                if (undefined !== firstRenderPhaseUpdate) {
                    renderPhaseUpdates.delete(queue);
                    var newState = hook.memoizedState;

                    do {
                        newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
                    } while (null !== firstRenderPhaseUpdate);

                    is(newState, hook.memoizedState) || (didReceiveUpdate = true);
                    hook.memoizedState = newState;
                    hook.baseUpdate === queue.last && (hook.baseState = newState);
                    queue.lastRenderedState = newState;
                    return [newState, _dispatch];
                }
            }

            return [hook.memoizedState, _dispatch];
        }

        _dispatch = queue.last;
        var baseUpdate = hook.baseUpdate;
        newState = hook.baseState;
        null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

        if (null !== _dispatch) {
            var newBaseUpdate = firstRenderPhaseUpdate = null,
                _update = _dispatch,
                didSkip = false;

            do {
                var updateExpirationTime = _update.expirationTime;
                updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
                baseUpdate = _update;
                _update = _update.next;
            } while (null !== _update && _update !== _dispatch);

            didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
            is(newState, hook.memoizedState) || (didReceiveUpdate = true);
            hook.memoizedState = newState;
            hook.baseUpdate = newBaseUpdate;
            hook.baseState = firstRenderPhaseUpdate;
            queue.lastRenderedState = newState;
        }

        return [hook.memoizedState, queue.dispatch];
    }

    function pushEffect(tag, create, destroy, deps) {
        tag = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            next: null
        };
        null === componentUpdateQueue ? (componentUpdateQueue = {
            lastEffect: null
        }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
        return tag;
    }

    function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
        var hook = mountWorkInProgressHook();
        sideEffectTag |= fiberEffectTag;
        hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
    }

    function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
        var hook = updateWorkInProgressHook();
        deps = undefined === deps ? null : deps;
        var destroy = undefined;

        if (null !== currentHook) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;

            if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
                pushEffect(NoEffect$1, create, destroy, deps);
                return;
            }
        }

        sideEffectTag |= fiberEffectTag;
        hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
    }

    function imperativeHandleEffect(create, ref) {
        if ("function" === typeof ref) return create = create(), ref(create), function () {
            ref(null);
        };
        if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
            ref.current = null;
        };
    }

    function mountDebugValue() { }

    function dispatchAction(fiber, queue, action) {
        if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
        var alternate = fiber.alternate;
        if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
            if (didScheduleRenderPhaseUpdate = true, fiber = {
                expirationTime: renderExpirationTime$1,
                suspenseConfig: null,
                action: action,
                eagerReducer: null,
                eagerState: null,
                next: null
            }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber); else {
                for (queue = action; null !== queue.next;) {
                    queue = queue.next;
                }

                queue.next = fiber;
            }
        } else {
            var currentTime = requestCurrentTime(),
                _suspenseConfig = ReactCurrentBatchConfig.suspense;
            currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
            _suspenseConfig = {
                expirationTime: currentTime,
                suspenseConfig: _suspenseConfig,
                action: action,
                eagerReducer: null,
                eagerState: null,
                next: null
            };
            var _last = queue.last;
            if (null === _last) _suspenseConfig.next = _suspenseConfig; else {
                var first = _last.next;
                null !== first && (_suspenseConfig.next = first);
                _last.next = _suspenseConfig;
            }
            queue.last = _suspenseConfig;
            if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
                var currentState = queue.lastRenderedState,
                    _eagerState = alternate(currentState, action);

                _suspenseConfig.eagerReducer = alternate;
                _suspenseConfig.eagerState = _eagerState;
                if (is(_eagerState, currentState)) return;
            } catch (error) { } finally { }
            scheduleUpdateOnFiber(fiber, currentTime);
        }
    }

    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useResponder: throwInvalidHookError
    },
        HooksDispatcherOnMount = {
            readContext: readContext,
            useCallback: function useCallback(callback, deps) {
                mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
                return callback;
            },
            useContext: readContext,
            useEffect: function useEffect(create, deps) {
                return mountEffectImpl(516, 192, create, deps);
            },
            useImperativeHandle: function useImperativeHandle(ref, create, deps) {
                deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
                return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
            },
            useLayoutEffect: function useLayoutEffect(create, deps) {
                return mountEffectImpl(4, 36, create, deps);
            },
            useMemo: function useMemo(nextCreate, deps) {
                var hook = mountWorkInProgressHook();
                deps = undefined === deps ? null : deps;
                nextCreate = nextCreate();
                hook.memoizedState = [nextCreate, deps];
                return nextCreate;
            },
            useReducer: function useReducer(reducer, initialArg, init) {
                var hook = mountWorkInProgressHook();
                initialArg = undefined !== init ? init(initialArg) : initialArg;
                hook.memoizedState = hook.baseState = initialArg;
                reducer = hook.queue = {
                    last: null,
                    dispatch: null,
                    lastRenderedReducer: reducer,
                    lastRenderedState: initialArg
                };
                reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
                return [hook.memoizedState, reducer];
            },
            useRef: function useRef(initialValue) {
                var hook = mountWorkInProgressHook();
                initialValue = {
                    current: initialValue
                };
                return hook.memoizedState = initialValue;
            },
            useState: function useState(initialState) {
                var hook = mountWorkInProgressHook();
                "function" === typeof initialState && (initialState = initialState());
                hook.memoizedState = hook.baseState = initialState;
                initialState = hook.queue = {
                    last: null,
                    dispatch: null,
                    lastRenderedReducer: basicStateReducer,
                    lastRenderedState: initialState
                };
                initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
                return [hook.memoizedState, initialState];
            },
            useDebugValue: mountDebugValue,
            useResponder: createResponderListener
        },
        HooksDispatcherOnUpdate = {
            readContext: readContext,
            useCallback: function useCallback(callback, deps) {
                var hook = updateWorkInProgressHook();
                deps = undefined === deps ? null : deps;
                var prevState = hook.memoizedState;
                if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
                hook.memoizedState = [callback, deps];
                return callback;
            },
            useContext: readContext,
            useEffect: function useEffect(create, deps) {
                return updateEffectImpl(516, 192, create, deps);
            },
            useImperativeHandle: function useImperativeHandle(ref, create, deps) {
                deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
                return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
            },
            useLayoutEffect: function useLayoutEffect(create, deps) {
                return updateEffectImpl(4, 36, create, deps);
            },
            useMemo: function useMemo(nextCreate, deps) {
                var hook = updateWorkInProgressHook();
                deps = undefined === deps ? null : deps;
                var prevState = hook.memoizedState;
                if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
                nextCreate = nextCreate();
                hook.memoizedState = [nextCreate, deps];
                return nextCreate;
            },
            useReducer: updateReducer,
            useRef: function useRef() {
                return updateWorkInProgressHook().memoizedState;
            },
            useState: function useState(initialState) {
                return updateReducer(basicStateReducer, initialState);
            },
            useDebugValue: mountDebugValue,
            useResponder: createResponderListener
        },
        hydrationParentFiber = null,
        nextHydratableInstance = null,
        isHydrating = false;

    function tryHydrate(fiber, nextInstance) {
        switch (fiber.tag) {
            case 5:
                return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

            case 6:
                return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

            case 13:
                return false;

            default:
                return false;
        }
    }

    function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
        if (isHydrating) {
            var nextInstance = nextHydratableInstance;

            if (nextInstance) {
                var firstAttemptedInstance = nextInstance;

                if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
                    nextInstance = shim$1(firstAttemptedInstance);

                    if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
                        fiber$jscomp$0.effectTag |= 2;
                        isHydrating = false;
                        hydrationParentFiber = fiber$jscomp$0;
                        return;
                    }

                    var returnFiber = hydrationParentFiber,
                        fiber = createFiber(5, null, null, 0);
                    fiber.elementType = "DELETED";
                    fiber.type = "DELETED";
                    fiber.stateNode = firstAttemptedInstance;
                    fiber.return = returnFiber;
                    fiber.effectTag = 8;
                    null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
                }

                hydrationParentFiber = fiber$jscomp$0;
                nextHydratableInstance = shim$1(nextInstance);
            } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
        }
    }

    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
        didReceiveUpdate = false;

    function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
        workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
    }

    function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
        Component = Component.render;
        var ref = workInProgress.ref;
        prepareToReadContext(workInProgress, renderExpirationTime);
        nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
        if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        workInProgress.effectTag |= 1;
        reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
        return workInProgress.child;
    }

    function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
        if (null === current$$1) {
            var type = Component.type;
            if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
            current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
            current$$1.ref = workInProgress.ref;
            current$$1.return = workInProgress;
            return workInProgress.child = current$$1;
        }

        type = current$$1.child;
        if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        workInProgress.effectTag |= 1;
        current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
        current$$1.ref = workInProgress.ref;
        current$$1.return = workInProgress;
        return workInProgress.child = current$$1;
    }

    function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
        return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
    }

    function markRef(current$$1, workInProgress) {
        var ref = workInProgress.ref;
        if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
    }

    function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
        var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
        context = getMaskedContext(workInProgress, context);
        prepareToReadContext(workInProgress, renderExpirationTime);
        Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
        if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        workInProgress.effectTag |= 1;
        reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
        return workInProgress.child;
    }

    function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
        if (isContextProvider(Component)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;

        prepareToReadContext(workInProgress, renderExpirationTime);
        if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true; else if (null === current$$1) {
            var instance = workInProgress.stateNode,
                oldProps = workInProgress.memoizedProps;
            instance.props = oldProps;
            var oldContext = instance.context,
                contextType = Component.contextType;
            "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
            var getDerivedStateFromProps = Component.getDerivedStateFromProps,
                hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
            hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
            hasForceUpdate = false;
            var oldState = workInProgress.memoizedState;
            oldContext = instance.state = oldState;
            var updateQueue = workInProgress.updateQueue;
            null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
            oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
        } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
        return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
    }

    function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
        markRef(current$$1, workInProgress);
        var didCaptureError = 0 !== (workInProgress.effectTag & 64);
        if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        shouldUpdate = workInProgress.stateNode;
        ReactCurrentOwner$3.current = workInProgress;
        var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
        workInProgress.effectTag |= 1;
        null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
        workInProgress.memoizedState = shouldUpdate.state;
        hasContext && invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }

    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }

    var SUSPENDED_MARKER = {};

    function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
        var mode = workInProgress.mode,
            nextProps = workInProgress.pendingProps,
            suspenseContext = suspenseStackCursor.current,
            nextState = null,
            nextDidTimeout = false,
            JSCompiler_temp;
        (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
        JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
        suspenseContext &= SubtreeSuspenseContextMask;
        push(suspenseStackCursor, suspenseContext, workInProgress);
        if (null === current$$1) {
            if (nextDidTimeout) {
                nextProps = nextProps.fallback;
                current$$1 = createFiberFromFragment(null, mode, 0, null);
                current$$1.return = workInProgress;
                if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
                    nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
                }
                renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
                renderExpirationTime.return = workInProgress;
                current$$1.sibling = renderExpirationTime;
                mode = current$$1;
            } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
        } else {
            if (null !== current$$1.memoizedState) {
                if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
                    nextProps = nextProps.fallback;
                    renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
                    renderExpirationTime.return = workInProgress;
                    if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
                        nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
                    }
                    nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
                    nextProps.return = workInProgress;
                    renderExpirationTime.sibling = nextProps;
                    mode = renderExpirationTime;
                    renderExpirationTime.childExpirationTime = 0;
                    renderExpirationTime = nextProps;
                } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
            } else if (suspenseContext = current$$1.child, nextDidTimeout) {
                nextDidTimeout = nextProps.fallback;
                nextProps = createFiberFromFragment(null, mode, 0, null);
                nextProps.return = workInProgress;
                nextProps.child = suspenseContext;
                null !== suspenseContext && (suspenseContext.return = nextProps);
                if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
                    suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
                }
                renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
                renderExpirationTime.return = workInProgress;
                nextProps.sibling = renderExpirationTime;
                renderExpirationTime.effectTag |= 2;
                mode = nextProps;
                nextProps.childExpirationTime = 0;
            } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
            workInProgress.stateNode = current$$1.stateNode;
        }
        workInProgress.memoizedState = nextState;
        workInProgress.child = mode;
        return renderExpirationTime;
    }

    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        null === renderState ? workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            last: lastContentRow,
            tail: tail,
            tailExpiration: 0,
            tailMode: tailMode
        } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
    }

    function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
        var nextProps = workInProgress.pendingProps,
            revealOrder = nextProps.revealOrder,
            tailMode = nextProps.tail;
        reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
        nextProps = suspenseStackCursor.current;
        if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64; else {
            if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
                if (13 === current$$1.tag) {
                    if (null !== current$$1.memoizedState) {
                        current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
                        var alternate = current$$1.alternate;
                        null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
                        scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
                    }
                } else if (null !== current$$1.child) {
                    current$$1.child.return = current$$1;
                    current$$1 = current$$1.child;
                    continue;
                }

                if (current$$1 === workInProgress) break a;

                for (; null === current$$1.sibling;) {
                    if (null === current$$1.return || current$$1.return === workInProgress) break a;
                    current$$1 = current$$1.return;
                }

                current$$1.sibling.return = current$$1.return;
                current$$1 = current$$1.sibling;
            }
            nextProps &= SubtreeSuspenseContextMask;
        }
        push(suspenseStackCursor, nextProps, workInProgress);
        if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null; else switch (revealOrder) {
            case "forwards":
                renderExpirationTime = workInProgress.child;

                for (revealOrder = null; null !== renderExpirationTime;) {
                    nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
                }

                renderExpirationTime = revealOrder;
                null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
                initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
                break;

            case "backwards":
                renderExpirationTime = null;
                revealOrder = workInProgress.child;

                for (workInProgress.child = null; null !== revealOrder;) {
                    nextProps = revealOrder.alternate;

                    if (null !== nextProps && null === findFirstSuspended(nextProps)) {
                        workInProgress.child = revealOrder;
                        break;
                    }

                    nextProps = revealOrder.sibling;
                    revealOrder.sibling = renderExpirationTime;
                    renderExpirationTime = revealOrder;
                    revealOrder = nextProps;
                }

                initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
                break;

            case "together":
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;

            default:
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }

    function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
        null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
        if (workInProgress.childExpirationTime < renderExpirationTime) return null;
        if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

        if (null !== workInProgress.child) {
            current$$1 = workInProgress.child;
            renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
            workInProgress.child = renderExpirationTime;

            for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
                current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
            }

            renderExpirationTime.sibling = null;
        }

        return workInProgress.child;
    }

    var _appendAllChildren = undefined,
        updateHostContainer = undefined,
        updateHostComponent$1 = undefined,
        updateHostText$1 = undefined;

    _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
        for (var node = workInProgress.child; null !== node;) {
            if (5 === node.tag) {
                var instance = node.stateNode;
                needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
                appendChildNode(parent.node, instance.node);
            } else if (6 === node.tag) {
                instance = node.stateNode;
                if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
                appendChildNode(parent.node, instance.node);
            } else if (4 !== node.tag) {
                if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
                    var primaryChildParent = node.child;

                    if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, _appendAllChildren(parent, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
                        instance.return = node;
                        node = instance;
                        continue;
                    }
                }

                if (null !== node.child) {
                    node.child.return = node;
                    node = node.child;
                    continue;
                }
            }

            if (node === workInProgress) break;

            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }

            node.sibling.return = node.return;
            node = node.sibling;
        }
    };

    function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
        for (var node = workInProgress.child; null !== node;) {
            if (5 === node.tag) {
                var instance = node.stateNode;
                needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
                appendChildNodeToSet(containerChildSet, instance.node);
            } else if (6 === node.tag) {
                instance = node.stateNode;
                if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
                appendChildNodeToSet(containerChildSet, instance.node);
            } else if (4 !== node.tag) {
                if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
                    var primaryChildParent = node.child;

                    if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
                        instance.return = node;
                        node = instance;
                        continue;
                    }
                }

                if (null !== node.child) {
                    node.child.return = node;
                    node = node.child;
                    continue;
                }
            }

            if (node === workInProgress) break;

            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }

            node.sibling.return = node.return;
            node = node.sibling;
        }
    }

    updateHostContainer = function updateHostContainer(workInProgress) {
        var portalOrRoot = workInProgress.stateNode;

        if (null !== workInProgress.firstEffect) {
            var container = portalOrRoot.containerInfo,
                newChildSet = createChildNodeSet(container);
            appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
            portalOrRoot.pendingChildren = newChildSet;
            workInProgress.effectTag |= 4;
            completeRoot(container, newChildSet);
        }
    };

    updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
        type = current.stateNode;
        var oldProps = current.memoizedProps;
        if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type; else {
            var recyclableInstance = workInProgress.stateNode;
            requiredContext(contextStackCursor$1.current);
            var updatePayload = null;
            oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
            current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
                node: current ? null !== newProps ? cloneNodeWithNewProps(recyclableInstance, newProps) : cloneNode(recyclableInstance) : null !== newProps ? cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : cloneNodeWithNewChildren(recyclableInstance),
                canonical: type.canonical
            }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
        }
    };

    updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
        oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
    };

    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        switch (renderState.tailMode) {
            case "hidden":
                hasRenderedATailFallback = renderState.tail;

                for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
                    null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
                }

                null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
                break;

            case "collapsed":
                lastTailNode = renderState.tail;

                for (var _lastTailNode = null; null !== lastTailNode;) {
                    null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
                }

                null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
        }
    }

    function unwindWork(workInProgress) {
        switch (workInProgress.tag) {
            case 1:
                isContextProvider(workInProgress.type) && popContext(workInProgress);
                var effectTag = workInProgress.effectTag;
                return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

            case 3:
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                effectTag = workInProgress.effectTag;
                if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
                workInProgress.effectTag = effectTag & -2049 | 64;
                return workInProgress;

            case 5:
                return popHostContext(workInProgress), null;

            case 13:
                return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

            case 18:
                return null;

            case 19:
                return pop(suspenseStackCursor, workInProgress), null;

            case 4:
                return popHostContainer(workInProgress), null;

            case 10:
                return popProvider(workInProgress), null;

            default:
                return null;
        }
    }

    function createCapturedValue(value, source) {
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }

    if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

    function logCapturedError(capturedError) {
        false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
    }

    var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

    function logError(boundary, errorInfo) {
        var source = errorInfo.source,
            stack = errorInfo.stack;
        null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
        errorInfo = {
            componentName: null !== source ? getComponentName(source.type) : null,
            componentStack: null !== stack ? stack : "",
            error: errorInfo.value,
            errorBoundary: null,
            errorBoundaryName: null,
            errorBoundaryFound: false,
            willRetry: false
        };
        null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

        try {
            logCapturedError(errorInfo);
        } catch (e) {
            setTimeout(function () {
                throw e;
            });
        }
    }

    function safelyCallComponentWillUnmount(current$$1, instance) {
        try {
            instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
        } catch (unmountError) {
            captureCommitPhaseError(current$$1, unmountError);
        }
    }

    function safelyDetachRef(current$$1) {
        var ref = current$$1.ref;
        if (null !== ref) if ("function" === typeof ref) try {
            ref(null);
        } catch (refError) {
            captureCommitPhaseError(current$$1, refError);
        } else ref.current = null;
    }

    function commitHookEffectList(unmountTag, mountTag, finishedWork) {
        finishedWork = finishedWork.updateQueue;
        finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

        if (null !== finishedWork) {
            var effect = finishedWork = finishedWork.next;

            do {
                if ((effect.tag & unmountTag) !== NoEffect$1) {
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    undefined !== destroy && destroy();
                }

                (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
                effect = effect.next;
            } while (effect !== finishedWork);
        }
    }

    function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
        "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

        switch (current$$1$jscomp$0.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
                var updateQueue = current$$1$jscomp$0.updateQueue;

                if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
                    var firstEffect = updateQueue.next;
                    runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
                        var effect = firstEffect;

                        do {
                            var destroy = effect.destroy;

                            if (undefined !== destroy) {
                                var current$$1 = current$$1$jscomp$0;

                                try {
                                    destroy();
                                } catch (error) {
                                    captureCommitPhaseError(current$$1, error);
                                }
                            }

                            effect = effect.next;
                        } while (effect !== firstEffect);
                    });
                }

                break;

            case 1:
                safelyDetachRef(current$$1$jscomp$0);
                renderPriorityLevel = current$$1$jscomp$0.stateNode;
                "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
                break;

            case 5:
                safelyDetachRef(current$$1$jscomp$0);
                break;

            case 4:
                createChildNodeSet(current$$1$jscomp$0.stateNode.containerInfo);
        }
    }

    function detachFiber(current$$1) {
        var alternate = current$$1.alternate;
        current$$1.return = null;
        current$$1.child = null;
        current$$1.memoizedState = null;
        current$$1.updateQueue = null;
        current$$1.dependencies = null;
        current$$1.alternate = null;
        current$$1.firstEffect = null;
        current$$1.lastEffect = null;
        current$$1.pendingProps = null;
        current$$1.memoizedProps = null;
        null !== alternate && detachFiber(alternate);
    }

    function commitWork(current$$1, finishedWork) {
        switch (finishedWork.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
                commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
                return;

            case 12:
                return;

            case 13:
                null !== finishedWork.memoizedState && (globalMostRecentFallbackTime = now());
                attachSuspenseRetryListeners(finishedWork);
                return;

            case 19:
                attachSuspenseRetryListeners(finishedWork);
                return;
        }

        switch (finishedWork.tag) {
            case 1:
            case 5:
            case 6:
            case 20:
                break;

            case 3:
            case 4:
                break;

            default:
                throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
        }
    }

    function attachSuspenseRetryListeners(finishedWork) {
        var thenables = finishedWork.updateQueue;

        if (null !== thenables) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
            thenables.forEach(function (thenable) {
                var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
                retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
            });
        }
    }

    var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

    function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
        expirationTime = createUpdate(expirationTime, null);
        expirationTime.tag = 3;
        expirationTime.payload = {
            element: null
        };
        var error = errorInfo.value;

        expirationTime.callback = function () {
            hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
            logError(fiber, errorInfo);
        };

        return expirationTime;
    }

    function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
        expirationTime = createUpdate(expirationTime, null);
        expirationTime.tag = 3;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

        if ("function" === typeof getDerivedStateFromError) {
            var error = errorInfo.value;

            expirationTime.payload = function () {
                logError(fiber, errorInfo);
                return getDerivedStateFromError(error);
            };
        }

        var inst = fiber.stateNode;
        null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
            "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
            var stack = errorInfo.stack;
            this.componentDidCatch(errorInfo.value, {
                componentStack: null !== stack ? stack : ""
            });
        });
        return expirationTime;
    }

    var ceil = Math.ceil,
        ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
        ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
        NoContext = 0,
        LegacyUnbatchedContext = 8,
        RenderContext = 16,
        CommitContext = 32,
        RootIncomplete = 0,
        RootErrored = 1,
        RootSuspended = 2,
        RootSuspendedWithDelay = 3,
        RootCompleted = 4,
        executionContext = NoContext,
        workInProgressRoot = null,
        workInProgress = null,
        renderExpirationTime = 0,
        workInProgressRootExitStatus = RootIncomplete,
        workInProgressRootLatestProcessedExpirationTime = 1073741823,
        workInProgressRootLatestSuspenseTimeout = 1073741823,
        workInProgressRootCanSuspendUsingConfig = null,
        workInProgressRootHasPendingPing = false,
        globalMostRecentFallbackTime = 0,
        FALLBACK_THROTTLE_MS = 500,
        nextEffect = null,
        hasUncaughtError = false,
        firstUncaughtError = null,
        legacyErrorBoundariesThatAlreadyFailed = null,
        rootDoesHavePassiveEffects = false,
        rootWithPendingPassiveEffects = null,
        pendingPassiveEffectsRenderPriority = 90,
        pendingPassiveEffectsExpirationTime = 0,
        rootsWithPendingDiscreteUpdates = null,
        nestedUpdateCount = 0,
        rootWithNestedUpdates = null,
        currentEventTime = 0;

    function requestCurrentTime() {
        return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
    }

    function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
        fiber = fiber.mode;
        if (0 === (fiber & 2)) return 1073741823;
        var priorityLevel = getCurrentPriorityLevel();
        if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
        if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
        if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1); else switch (priorityLevel) {
            case 99:
                currentTime = 1073741823;
                break;

            case 98:
                currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
                break;

            case 97:
            case 96:
                currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
                break;

            case 95:
                currentTime = 1;
                break;

            default:
                throw ReactError(Error("Expected a valid priority level"));
        }
        null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
        return currentTime;
    }

    function scheduleUpdateOnFiber(fiber, expirationTime) {
        if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
        fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

        if (null !== fiber) {
            fiber.pingTime = 0;
            var priorityLevel = getCurrentPriorityLevel();
            if (1073741823 === expirationTime) {
                if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
                    callback = callback(true);
                } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
            } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
            (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
        }
    }

    function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
        fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
        var alternate = fiber.alternate;
        null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
        var node = fiber.return,
            root = null;
        if (null === node && 3 === fiber.tag) root = fiber.stateNode; else for (; null !== node;) {
            alternate = node.alternate;
            node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
            null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

            if (null === node.return && 3 === node.tag) {
                root = node.stateNode;
                break;
            }

            node = node.return;
        }
        null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
        return root;
    }

    function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
        if (root.callbackExpirationTime < expirationTime) {
            var existingCallbackNode = root.callbackNode;
            null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
            root.callbackExpirationTime = expirationTime;
            1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
                timeout: 10 * (1073741821 - expirationTime) - now()
            }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
        }
    }

    function runRootCallback(root, callback, isSync) {
        var prevCallbackNode = root.callbackNode,
            continuation = null;

        try {
            return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
        } finally {
            null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
        }
    }

    function resolveLocksOnRoot(root, expirationTime) {
        var firstBatch = root.firstBatch;
        return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
            firstBatch._onComplete();

            return null;
        }), true) : false;
    }

    function flushPendingDiscreteUpdates() {
        if (null !== rootsWithPendingDiscreteUpdates) {
            var roots = rootsWithPendingDiscreteUpdates;
            rootsWithPendingDiscreteUpdates = null;
            roots.forEach(function (expirationTime, root) {
                scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
            });
            flushSyncCallbackQueue();
        }
    }

    function prepareFreshStack(root, expirationTime) {
        root.finishedWork = null;
        root.finishedExpirationTime = 0;
        var timeoutHandle = root.timeoutHandle;
        -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
        if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
            var interruptedWork = timeoutHandle;

            switch (interruptedWork.tag) {
                case 1:
                    var childContextTypes = interruptedWork.type.childContextTypes;
                    null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
                    break;

                case 3:
                    popHostContainer(interruptedWork);
                    popTopLevelContextObject(interruptedWork);
                    break;

                case 5:
                    popHostContext(interruptedWork);
                    break;

                case 4:
                    popHostContainer(interruptedWork);
                    break;

                case 13:
                    pop(suspenseStackCursor, interruptedWork);
                    break;

                case 19:
                    pop(suspenseStackCursor, interruptedWork);
                    break;

                case 10:
                    popProvider(interruptedWork);
            }

            timeoutHandle = timeoutHandle.return;
        }
        workInProgressRoot = root;
        workInProgress = createWorkInProgress(root.current, null, expirationTime);
        renderExpirationTime = expirationTime;
        workInProgressRootExitStatus = RootIncomplete;
        workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
        workInProgressRootCanSuspendUsingConfig = null;
        workInProgressRootHasPendingPing = false;
    }

    function renderRoot(root$jscomp$0, expirationTime, isSync) {
        if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
        if (root$jscomp$0.firstPendingTime < expirationTime) return null;
        if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
        flushPassiveEffects();
        if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime); else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime); else {
            var lastPendingTime = root$jscomp$0.lastPendingTime;
            if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
        }

        if (null !== workInProgress) {
            lastPendingTime = executionContext;
            executionContext |= RenderContext;
            var prevDispatcher = ReactCurrentDispatcher.current;
            null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
            ReactCurrentDispatcher.current = ContextOnlyDispatcher;

            if (isSync) {
                if (1073741823 !== expirationTime) {
                    var currentTime = requestCurrentTime();
                    if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
                }
            } else currentEventTime = 0;

            do {
                try {
                    if (isSync) for (; null !== workInProgress;) {
                        workInProgress = performUnitOfWork(workInProgress);
                    } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
                        workInProgress = performUnitOfWork(workInProgress);
                    }
                    break;
                } catch (thrownValue) {
                    resetContextDependencies();
                    resetHooks();
                    currentTime = workInProgress;
                    if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

                    a: {
                        var root = root$jscomp$0,
                            returnFiber = currentTime.return,
                            sourceFiber = currentTime,
                            value = thrownValue,
                            renderExpirationTime$jscomp$0 = renderExpirationTime;
                        sourceFiber.effectTag |= 1024;
                        sourceFiber.firstEffect = sourceFiber.lastEffect = null;

                        if (null !== value && "object" === typeof value && "function" === typeof value.then) {
                            var thenable = value,
                                hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
                            value = returnFiber;

                            do {
                                var JSCompiler_temp;
                                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                                if (JSCompiler_temp) {
                                    returnFiber = value.updateQueue;
                                    null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                                    if (0 === (value.mode & 2)) {
                                        value.effectTag |= 64;
                                        sourceFiber.effectTag &= -1957;
                                        1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                                        sourceFiber.expirationTime = 1073741823;
                                        break a;
                                    }

                                    sourceFiber = root;
                                    root = renderExpirationTime$jscomp$0;
                                    hasInvisibleParentBoundary = sourceFiber.pingCache;
                                    null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                                    returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                                    value.effectTag |= 2048;
                                    value.expirationTime = renderExpirationTime$jscomp$0;
                                    break a;
                                }

                                value = value.return;
                            } while (null !== value);

                            value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
                        }

                        workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
                        value = createCapturedValue(value, sourceFiber);
                        sourceFiber = returnFiber;

                        do {
                            switch (sourceFiber.tag) {
                                case 3:
                                    sourceFiber.effectTag |= 2048;
                                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                                    renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                                    break a;

                                case 1:
                                    if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                                        sourceFiber.effectTag |= 2048;
                                        sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                                        renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                                        enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                                        break a;
                                    }

                            }

                            sourceFiber = sourceFiber.return;
                        } while (null !== sourceFiber);
                    }

                    workInProgress = completeUnitOfWork(currentTime);
                }
            } while (1);

            executionContext = lastPendingTime;
            resetContextDependencies();
            ReactCurrentDispatcher.current = prevDispatcher;
            if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
        }

        root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
        root$jscomp$0.finishedExpirationTime = expirationTime;
        if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
        workInProgressRoot = null;

        switch (workInProgressRootExitStatus) {
            case RootIncomplete:
                throw ReactError(Error("Should have a work-in-progress."));

            case RootErrored:
                return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

            case RootSuspended:
                if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
                    if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
                    lastPendingTime = root$jscomp$0.lastPendingTime;
                    if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
                    root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
                    return null;
                }

                return commitRoot.bind(null, root$jscomp$0);

            case RootSuspendedWithDelay:
                if (!isSync) {
                    if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
                    isSync = root$jscomp$0.lastPendingTime;
                    if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
                    1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
                    if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
                }

                return commitRoot.bind(null, root$jscomp$0);

            case RootCompleted:
                return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

            default:
                throw ReactError(Error("Unknown root exit status."));
        }
    }

    function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
        expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
        null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
    }

    function performUnitOfWork(unitOfWork) {
        var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === next && (next = completeUnitOfWork(unitOfWork));
        ReactCurrentOwner$2.current = null;
        return next;
    }

    function completeUnitOfWork(unitOfWork) {
        workInProgress = unitOfWork;

        do {
            var current$$1 = workInProgress.alternate;
            unitOfWork = workInProgress.return;

            if (0 === (workInProgress.effectTag & 1024)) {
                a: {
                    var current = current$$1;
                    current$$1 = workInProgress;
                    var renderExpirationTime$jscomp$0 = renderExpirationTime,
                        newProps = current$$1.pendingProps;

                    switch (current$$1.tag) {
                        case 2:
                            break;

                        case 16:
                            break;

                        case 15:
                        case 0:
                            break;

                        case 1:
                            isContextProvider(current$$1.type) && popContext(current$$1);
                            break;

                        case 3:
                            popHostContainer(current$$1);
                            popTopLevelContextObject(current$$1);
                            renderExpirationTime$jscomp$0 = current$$1.stateNode;
                            renderExpirationTime$jscomp$0.pendingContext && (renderExpirationTime$jscomp$0.context = renderExpirationTime$jscomp$0.pendingContext, renderExpirationTime$jscomp$0.pendingContext = null);
                            if (null === current || null === current.child) current$$1.effectTag &= -3;
                            updateHostContainer(current$$1);
                            break;

                        case 5:
                            popHostContext(current$$1);
                            renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
                            var type = current$$1.type;
                            if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128); else if (newProps) {
                                requiredContext(contextStackCursor$1.current);
                                current = newProps;
                                var rootContainerInstance = renderExpirationTime$jscomp$0;
                                renderExpirationTime$jscomp$0 = current$$1;
                                newProps = nextReactTag;
                                nextReactTag += 2;
                                type = getViewConfigForType(type);
                                var updatePayload = diffProperties(null, emptyObject, current, type.validAttributes);
                                rootContainerInstance = createNode(newProps, type.uiViewClassName, rootContainerInstance, updatePayload, renderExpirationTime$jscomp$0);
                                current = new ReactFabricHostComponent(newProps, type, current, renderExpirationTime$jscomp$0);
                                current = {
                                    node: rootContainerInstance,
                                    canonical: current
                                };

                                _appendAllChildren(current, current$$1, false, false);

                                current$$1.stateNode = current;
                                null !== current$$1.ref && (current$$1.effectTag |= 128);
                            } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                            break;

                        case 6:
                            if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps); else {
                                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                                current = requiredContext(rootInstanceStackCursor.current);
                                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                                current$$1.stateNode = createTextInstance(newProps, current, renderExpirationTime$jscomp$0, current$$1);
                            }
                            break;

                        case 11:
                            break;

                        case 13:
                            pop(suspenseStackCursor, current$$1);
                            newProps = current$$1.memoizedState;

                            if (0 !== (current$$1.effectTag & 64)) {
                                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                                break a;
                            }

                            renderExpirationTime$jscomp$0 = null !== newProps;
                            newProps = false;
                            null !== current && (type = current.memoizedState, newProps = null !== type, renderExpirationTime$jscomp$0 || null === type || (type = current.child.sibling, null !== type && (rootContainerInstance = current$$1.firstEffect, null !== rootContainerInstance ? (current$$1.firstEffect = type, type.nextEffect = rootContainerInstance) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
                            if (renderExpirationTime$jscomp$0 && !newProps && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended); else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
                            renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 4);
                            break;

                        case 7:
                            break;

                        case 8:
                            break;

                        case 12:
                            break;

                        case 4:
                            popHostContainer(current$$1);
                            updateHostContainer(current$$1);
                            break;

                        case 10:
                            popProvider(current$$1);
                            break;

                        case 9:
                            break;

                        case 14:
                            break;

                        case 17:
                            isContextProvider(current$$1.type) && popContext(current$$1);
                            break;

                        case 18:
                            break;

                        case 19:
                            pop(suspenseStackCursor, current$$1);
                            newProps = current$$1.memoizedState;
                            if (null === newProps) break;
                            type = 0 !== (current$$1.effectTag & 64);
                            rootContainerInstance = newProps.rendering;
                            if (null === rootContainerInstance) {
                                if (type) cutOffTailIfNeeded(newProps, false); else {
                                    if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                                        rootContainerInstance = findFirstSuspended(current);

                                        if (null !== rootContainerInstance) {
                                            current$$1.effectTag |= 64;
                                            cutOffTailIfNeeded(newProps, false);
                                            current = rootContainerInstance.updateQueue;
                                            null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                                            current$$1.firstEffect = current$$1.lastEffect = null;
                                            current = renderExpirationTime$jscomp$0;

                                            for (renderExpirationTime$jscomp$0 = current$$1.child; null !== renderExpirationTime$jscomp$0;) {
                                                newProps = renderExpirationTime$jscomp$0, type = current, newProps.effectTag &= 2, newProps.nextEffect = null, newProps.firstEffect = null, newProps.lastEffect = null, rootContainerInstance = newProps.alternate, null === rootContainerInstance ? (newProps.childExpirationTime = 0, newProps.expirationTime = type, newProps.child = null, newProps.memoizedProps = null, newProps.memoizedState = null, newProps.updateQueue = null, newProps.dependencies = null) : (newProps.childExpirationTime = rootContainerInstance.childExpirationTime, newProps.expirationTime = rootContainerInstance.expirationTime, newProps.child = rootContainerInstance.child, newProps.memoizedProps = rootContainerInstance.memoizedProps, newProps.memoizedState = rootContainerInstance.memoizedState, newProps.updateQueue = rootContainerInstance.updateQueue, type = rootContainerInstance.dependencies, newProps.dependencies = null === type ? null : {
                                                    expirationTime: type.expirationTime,
                                                    firstContext: type.firstContext,
                                                    responders: type.responders
                                                }), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                                            }

                                            push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                                            current$$1 = current$$1.child;
                                            break a;
                                        }

                                        current = current.sibling;
                                    }
                                }
                            } else {
                                if (!type) if (current = findFirstSuspended(rootContainerInstance), null !== current) {
                                    if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                                        current = current.updateQueue;
                                        null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                                        current$$1 = current$$1.lastEffect = newProps.lastEffect;
                                        null !== current$$1 && (current$$1.nextEffect = null);
                                        break;
                                    }
                                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                                newProps.isBackwards ? (rootContainerInstance.sibling = current$$1.child, current$$1.child = rootContainerInstance) : (current = newProps.last, null !== current ? current.sibling = rootContainerInstance : current$$1.child = rootContainerInstance, newProps.last = rootContainerInstance);
                            }

                            if (null !== newProps.tail) {
                                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                                current = newProps.tail;
                                newProps.rendering = current;
                                newProps.tail = current.sibling;
                                newProps.lastEffect = current$$1.lastEffect;
                                current.sibling = null;
                                renderExpirationTime$jscomp$0 = suspenseStackCursor.current;
                                renderExpirationTime$jscomp$0 = type ? renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask;
                                push(suspenseStackCursor, renderExpirationTime$jscomp$0, current$$1);
                                current$$1 = current;
                                break a;
                            }

                            break;

                        case 20:
                            break;

                        default:
                            throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
                    }

                    current$$1 = null;
                }

                current = workInProgress;

                if (1 === renderExpirationTime || 1 !== current.childExpirationTime) {
                    renderExpirationTime$jscomp$0 = 0;

                    for (newProps = current.child; null !== newProps;) {
                        type = newProps.expirationTime, rootContainerInstance = newProps.childExpirationTime, type > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = type), rootContainerInstance > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = rootContainerInstance), newProps = newProps.sibling;
                    }

                    current.childExpirationTime = renderExpirationTime$jscomp$0;
                }

                if (null !== current$$1) return current$$1;
                null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
            } else {
                current$$1 = unwindWork(workInProgress, renderExpirationTime);
                if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
                null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
            }

            current$$1 = workInProgress.sibling;
            if (null !== current$$1) return current$$1;
            workInProgress = unitOfWork;
        } while (null !== workInProgress);

        workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
        return null;
    }

    function commitRoot(root) {
        var renderPriorityLevel = getCurrentPriorityLevel();
        runWithPriority$1(99, commitRootImpl.bind(null, root, renderPriorityLevel));
        null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
            flushPassiveEffects();
            return null;
        });
        return null;
    }

    function commitRootImpl(root, renderPriorityLevel) {
        flushPassiveEffects();
        if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
        var finishedWork = root.finishedWork,
            expirationTime = root.finishedExpirationTime;
        if (null === finishedWork) return null;
        root.finishedWork = null;
        root.finishedExpirationTime = 0;
        if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
        root.callbackNode = null;
        root.callbackExpirationTime = 0;
        var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
            childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
        updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
        root.firstPendingTime = updateExpirationTimeBeforeCommit;
        updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
        root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
        1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

        if (null !== updateExpirationTimeBeforeCommit) {
            childExpirationTimeBeforeCommit = executionContext;
            executionContext |= CommitContext;
            ReactCurrentOwner$2.current = null;
            nextEffect = updateExpirationTimeBeforeCommit;

            do {
                try {
                    for (; null !== nextEffect;) {
                        if (0 !== (nextEffect.effectTag & 256)) {
                            var current$$1 = nextEffect.alternate,
                                finishedWork$jscomp$0 = nextEffect;

                            switch (finishedWork$jscomp$0.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                                    break;

                                case 1:
                                    if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                                        var prevProps = current$$1.memoizedProps,
                                            prevState = current$$1.memoizedState,
                                            instance = finishedWork$jscomp$0.stateNode,
                                            snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                                    }

                                    break;

                                case 3:
                                case 5:
                                case 6:
                                case 4:
                                case 17:
                                    break;

                                default:
                                    throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                            }
                        }

                        nextEffect = nextEffect.nextEffect;
                    }
                } catch (error) {
                    if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            } while (null !== nextEffect);

            nextEffect = updateExpirationTimeBeforeCommit;

            do {
                try {
                    for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
                        var effectTag = nextEffect.effectTag;

                        if (effectTag & 128) {
                            var current$$1$jscomp$0 = nextEffect.alternate;

                            if (null !== current$$1$jscomp$0) {
                                var currentRef = current$$1$jscomp$0.ref;
                                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
                            }
                        }

                        switch (effectTag & 14) {
                            case 2:
                                nextEffect.effectTag &= -3;
                                break;

                            case 6:
                                nextEffect.effectTag &= -3;
                                commitWork(nextEffect.alternate, nextEffect);
                                break;

                            case 4:
                                commitWork(nextEffect.alternate, nextEffect);
                                break;

                            case 8:
                                prevProps = nextEffect;

                                a: for (prevState = prevProps, instance = current$$1, snapshot = prevState; ;) {
                                    if (commitUnmount(snapshot, instance), null !== snapshot.child) snapshot.child.return = snapshot, snapshot = snapshot.child; else {
                                        if (snapshot === prevState) break;

                                        for (; null === snapshot.sibling;) {
                                            if (null === snapshot.return || snapshot.return === prevState) break a;
                                            snapshot = snapshot.return;
                                        }

                                        snapshot.sibling.return = snapshot.return;
                                        snapshot = snapshot.sibling;
                                    }
                                }

                                detachFiber(prevProps);
                        }

                        nextEffect = nextEffect.nextEffect;
                    }
                } catch (error) {
                    if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            } while (null !== nextEffect);

            root.current = finishedWork;
            nextEffect = updateExpirationTimeBeforeCommit;

            do {
                try {
                    for (effectTag = expirationTime; null !== nextEffect;) {
                        var effectTag$jscomp$0 = nextEffect.effectTag;

                        if (effectTag$jscomp$0 & 36) {
                            var current$$1$jscomp$1 = nextEffect.alternate;
                            current$$1$jscomp$0 = nextEffect;
                            currentRef = effectTag;

                            switch (current$$1$jscomp$0.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                                    break;

                                case 1:
                                    var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                                    if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount(); else {
                                        var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                                        instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                                    }
                                    var updateQueue = current$$1$jscomp$0.updateQueue;
                                    null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                                    break;

                                case 3:
                                    var _updateQueue = current$$1$jscomp$0.updateQueue;

                                    if (null !== _updateQueue) {
                                        current$$1 = null;
                                        if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                                            case 5:
                                                current$$1 = current$$1$jscomp$0.child.stateNode.canonical;
                                                break;

                                            case 1:
                                                current$$1 = current$$1$jscomp$0.child.stateNode;
                                        }
                                        commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                                    }

                                    break;

                                case 5:
                                    if (null === current$$1$jscomp$1 && current$$1$jscomp$0.effectTag & 4) throw ReactError(Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue."));
                                    break;

                                case 6:
                                    break;

                                case 4:
                                    break;

                                case 12:
                                    break;

                                case 13:
                                case 19:
                                case 17:
                                case 20:
                                    break;

                                default:
                                    throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                            }
                        }

                        if (effectTag$jscomp$0 & 128) {
                            var ref = nextEffect.ref;

                            if (null !== ref) {
                                var instance$jscomp$1 = nextEffect.stateNode;

                                switch (nextEffect.tag) {
                                    case 5:
                                        var instanceToUse = instance$jscomp$1.canonical;
                                        break;

                                    default:
                                        instanceToUse = instance$jscomp$1;
                                }

                                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
                            }
                        }

                        effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
                        nextEffect = nextEffect.nextEffect;
                    }
                } catch (error) {
                    if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            } while (null !== nextEffect);

            nextEffect = null;
            requestPaint();
            executionContext = childExpirationTimeBeforeCommit;
        } else root.current = finishedWork;

        if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel; else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
            renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
        }
        renderPriorityLevel = root.firstPendingTime;
        0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
        "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
        1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
        if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
        if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
        flushSyncCallbackQueue();
        return null;
    }

    function flushPassiveEffects() {
        if (null === rootWithPendingPassiveEffects) return false;
        var root = rootWithPendingPassiveEffects,
            expirationTime = pendingPassiveEffectsExpirationTime,
            renderPriorityLevel = pendingPassiveEffectsRenderPriority;
        rootWithPendingPassiveEffects = null;
        pendingPassiveEffectsExpirationTime = 0;
        pendingPassiveEffectsRenderPriority = 90;
        return runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
    }

    function flushPassiveEffectsImpl(root) {
        if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;

        for (root = root.current.firstEffect; null !== root;) {
            try {
                var finishedWork = root;
                if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
                    case 0:
                    case 11:
                    case 15:
                        commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
                }
            } catch (error) {
                if (null === root) throw ReactError(Error("Should be working on an effect."));
                captureCommitPhaseError(root, error);
            }

            finishedWork = root.nextEffect;
            root.nextEffect = null;
            root = finishedWork;
        }

        executionContext = prevExecutionContext;
        flushSyncCallbackQueue();
        return true;
    }

    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        sourceFiber = createCapturedValue(error, sourceFiber);
        sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
        enqueueUpdate(rootFiber, sourceFiber);
        rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
        null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
    }

    function captureCommitPhaseError(sourceFiber, error) {
        if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error); else for (var fiber = sourceFiber.return; null !== fiber;) {
            if (3 === fiber.tag) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
                break;
            } else if (1 === fiber.tag) {
                var instance = fiber.stateNode;

                if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
                    sourceFiber = createCapturedValue(error, sourceFiber);
                    sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
                    enqueueUpdate(fiber, sourceFiber);
                    fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
                    null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
                    break;
                }
            }

            fiber = fiber.return;
        }
    }

    function pingSuspendedRoot(root, thenable, suspendedTime) {
        var pingCache = root.pingCache;
        null !== pingCache && pingCache.delete(thenable);
        workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
    }

    function resolveRetryThenable(boundaryFiber, thenable) {
        var retryCache = boundaryFiber.stateNode;
        null !== retryCache && retryCache.delete(thenable);
        retryCache = requestCurrentTime();
        thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
        retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
        boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
        null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
    }

    var beginWork$$1 = undefined;

    beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
        var updateExpirationTime = workInProgress.expirationTime;
        if (null !== current$$1) {
            if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true; else {
                if (updateExpirationTime < renderExpirationTime) {
                    didReceiveUpdate = false;

                    switch (workInProgress.tag) {
                        case 3:
                            pushHostRootContext(workInProgress);
                            break;

                        case 5:
                            pushHostContext(workInProgress);
                            break;

                        case 1:
                            isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
                            break;

                        case 4:
                            pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                            break;

                        case 10:
                            pushProvider(workInProgress, workInProgress.memoizedProps.value);
                            break;

                        case 13:
                            if (null !== workInProgress.memoizedState) {
                                updateExpirationTime = workInProgress.child.childExpirationTime;
                                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                                return null !== workInProgress ? workInProgress.sibling : null;
                            }

                            push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                            break;

                        case 19:
                            updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

                            if (0 !== (current$$1.effectTag & 64)) {
                                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                                workInProgress.effectTag |= 64;
                            }

                            var renderState = workInProgress.memoizedState;
                            null !== renderState && (renderState.rendering = null, renderState.tail = null);
                            push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
                            if (!updateExpirationTime) return null;
                    }

                    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                }
            }
        } else didReceiveUpdate = false;
        workInProgress.expirationTime = 0;

        switch (workInProgress.tag) {
            case 2:
                updateExpirationTime = workInProgress.type;
                null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
                current$$1 = workInProgress.pendingProps;
                renderState = getMaskedContext(workInProgress, contextStackCursor.current);
                prepareToReadContext(workInProgress, renderExpirationTime);
                renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
                workInProgress.effectTag |= 1;

                if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
                    workInProgress.tag = 1;
                    resetHooks();

                    if (isContextProvider(updateExpirationTime)) {
                        var hasContext = true;
                        pushContextProvider(workInProgress);
                    } else hasContext = false;

                    workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
                    var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
                    "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
                    renderState.updater = classComponentUpdater;
                    workInProgress.stateNode = renderState;
                    renderState._reactInternalFiber = workInProgress;
                    mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
                    workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
                } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

                return workInProgress;

            case 16:
                renderState = workInProgress.elementType;
                null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
                current$$1 = workInProgress.pendingProps;
                renderState = readLazyComponentType(renderState);
                workInProgress.type = renderState;
                hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
                current$$1 = resolveDefaultProps(renderState, current$$1);

                switch (hasContext) {
                    case 0:
                        workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
                        break;

                    case 1:
                        workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
                        break;

                    case 11:
                        workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
                        break;

                    case 14:
                        workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
                        break;

                    default:
                        throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
                }

                return workInProgress;

            case 0:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

            case 1:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

            case 3:
                pushHostRootContext(workInProgress);
                updateExpirationTime = workInProgress.updateQueue;
                if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
                renderState = workInProgress.memoizedState;
                renderState = null !== renderState ? renderState.element : null;
                processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
                updateExpirationTime = workInProgress.memoizedState.element;
                updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
                return workInProgress;

            case 5:
                return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

            case 6:
                return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

            case 13:
                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

            case 4:
                return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

            case 11:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

            case 7:
                return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

            case 8:
                return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

            case 12:
                return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

            case 10:
                a: {
                    updateExpirationTime = workInProgress.type._context;
                    renderState = workInProgress.pendingProps;
                    getDerivedStateFromProps = workInProgress.memoizedProps;
                    hasContext = renderState.value;
                    pushProvider(workInProgress, hasContext);

                    if (null !== getDerivedStateFromProps) {
                        var oldValue = getDerivedStateFromProps.value;
                        hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

                        if (0 === hasContext) {
                            if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                                break a;
                            }
                        } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
                            var list = oldValue.dependencies;

                            if (null !== list) {
                                getDerivedStateFromProps = oldValue.child;

                                for (var dependency = list.firstContext; null !== dependency;) {
                                    if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                                        1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                                        oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                                        dependency = oldValue.alternate;
                                        null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                                        scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                                        list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                                        break;
                                    }

                                    dependency = dependency.next;
                                }
                            } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

                            if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue; else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                                if (getDerivedStateFromProps === workInProgress) {
                                    getDerivedStateFromProps = null;
                                    break;
                                }

                                oldValue = getDerivedStateFromProps.sibling;

                                if (null !== oldValue) {
                                    oldValue.return = getDerivedStateFromProps.return;
                                    getDerivedStateFromProps = oldValue;
                                    break;
                                }

                                getDerivedStateFromProps = getDerivedStateFromProps.return;
                            }
                            oldValue = getDerivedStateFromProps;
                        }
                    }

                    reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
                    workInProgress = workInProgress.child;
                }

                return workInProgress;

            case 9:
                return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

            case 14:
                return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

            case 15:
                return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

            case 17:
                return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

            case 19:
                return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
        }

        throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
    };

    var onCommitFiberRoot = null,
        onCommitFiberUnmount = null;

    function injectInternals(internals) {
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled || !hook.supportsFiber) return true;

        try {
            var rendererID = hook.inject(internals);

            onCommitFiberRoot = function onCommitFiberRoot(root) {
                try {
                    hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
                } catch (err) { }
            };

            onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
                try {
                    hook.onCommitFiberUnmount(rendererID, fiber);
                } catch (err) { }
            };
        } catch (err) { }

        return true;
    }

    function FiberNode(tag, pendingProps, key, mode) {
        this.tag = tag;
        this.key = key;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = mode;
        this.effectTag = 0;
        this.lastEffect = this.firstEffect = this.nextEffect = null;
        this.childExpirationTime = this.expirationTime = 0;
        this.alternate = null;
    }

    function createFiber(tag, pendingProps, key, mode) {
        return new FiberNode(tag, pendingProps, key, mode);
    }

    function shouldConstruct(Component) {
        Component = Component.prototype;
        return !(!Component || !Component.isReactComponent);
    }

    function resolveLazyComponentTag(Component) {
        if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

        if (undefined !== Component && null !== Component) {
            Component = Component.$$typeof;
            if (Component === REACT_FORWARD_REF_TYPE) return 11;
            if (Component === REACT_MEMO_TYPE) return 14;
        }

        return 2;
    }

    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
        workInProgress.childExpirationTime = current.childExpirationTime;
        workInProgress.expirationTime = current.expirationTime;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue;
        pendingProps = current.dependencies;
        workInProgress.dependencies = null === pendingProps ? null : {
            expirationTime: pendingProps.expirationTime,
            firstContext: pendingProps.firstContext,
            responders: pendingProps.responders
        };
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        return workInProgress;
    }

    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
        var fiberTag = 2;
        owner = type;
        if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1); else if ("string" === typeof type) fiberTag = 5; else a: switch (type) {
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

            case REACT_CONCURRENT_MODE_TYPE:
                fiberTag = 8;
                mode |= 7;
                break;

            case REACT_STRICT_MODE_TYPE:
                fiberTag = 8;
                mode |= 1;
                break;

            case REACT_PROFILER_TYPE:
                return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

            case REACT_SUSPENSE_TYPE:
                return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

            case REACT_SUSPENSE_LIST_TYPE:
                return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

            default:
                if ("object" === typeof type && null !== type) switch (type.$$typeof) {
                    case REACT_PROVIDER_TYPE:
                        fiberTag = 10;
                        break a;

                    case REACT_CONTEXT_TYPE:
                        fiberTag = 9;
                        break a;

                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = 11;
                        break a;

                    case REACT_MEMO_TYPE:
                        fiberTag = 14;
                        break a;

                    case REACT_LAZY_TYPE:
                        fiberTag = 16;
                        owner = null;
                        break a;
                }
                throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
        }
        key = createFiber(fiberTag, pendingProps, key, mode);
        key.elementType = type;
        key.type = owner;
        key.expirationTime = expirationTime;
        return key;
    }

    function createFiberFromFragment(elements, mode, expirationTime, key) {
        elements = createFiber(7, elements, key, mode);
        elements.expirationTime = expirationTime;
        return elements;
    }

    function createFiberFromText(content, mode, expirationTime) {
        content = createFiber(6, content, null, mode);
        content.expirationTime = expirationTime;
        return content;
    }

    function createFiberFromPortal(portal, mode, expirationTime) {
        mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
        mode.expirationTime = expirationTime;
        mode.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
        };
        return mode;
    }

    function FiberRootNode(containerInfo, tag, hydrate) {
        this.tag = tag;
        this.current = null;
        this.containerInfo = containerInfo;
        this.pingCache = this.pendingChildren = null;
        this.finishedExpirationTime = 0;
        this.finishedWork = null;
        this.timeoutHandle = -1;
        this.pendingContext = this.context = null;
        this.hydrate = hydrate;
        this.callbackNode = this.firstBatch = null;
        this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
    }

    function findHostInstance(component) {
        var fiber = component._reactInternalFiber;

        if (undefined === fiber) {
            if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
            throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
        }

        component = findCurrentHostFiber(fiber);
        return null === component ? null : component.stateNode;
    }

    function updateContainer(element, container, parentComponent, callback) {
        var current$$1 = container.current,
            currentTime = requestCurrentTime(),
            suspenseConfig = ReactCurrentBatchConfig.suspense;
        current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
        currentTime = container.current;

        a: if (parentComponent) {
            parentComponent = parentComponent._reactInternalFiber;

            b: {
                if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
                var parentContext = parentComponent;

                do {
                    switch (parentContext.tag) {
                        case 3:
                            parentContext = parentContext.stateNode.context;
                            break b;

                        case 1:
                            if (isContextProvider(parentContext.type)) {
                                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                                break b;
                            }

                    }

                    parentContext = parentContext.return;
                } while (null !== parentContext);

                throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
            }

            if (1 === parentComponent.tag) {
                var Component = parentComponent.type;

                if (isContextProvider(Component)) {
                    parentComponent = processChildContext(parentComponent, Component, parentContext);
                    break a;
                }
            }

            parentComponent = parentContext;
        } else parentComponent = emptyContextObject;

        null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
        container = callback;
        suspenseConfig = createUpdate(current$$1, suspenseConfig);
        suspenseConfig.payload = {
            element: element
        };
        container = undefined === container ? null : container;
        null !== container && (suspenseConfig.callback = container);
        enqueueUpdate(currentTime, suspenseConfig);
        scheduleUpdateOnFiber(currentTime, current$$1);
        return current$$1;
    }

    function _createPortal(children, containerInfo, implementation) {
        var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }

    function _inherits$1(subClass, superClass) {
        if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
    }

    var getInspectorDataForViewTag = undefined;

    getInspectorDataForViewTag = function getInspectorDataForViewTag() {
        throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
    };

    var fabricDispatchCommand = nativeFabricUIManager.dispatchCommand;

    function findNodeHandle(componentOrHandle) {
        if (null == componentOrHandle) return null;
        if ("number" === typeof componentOrHandle) return componentOrHandle;
        if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
        if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
        componentOrHandle = findHostInstance(componentOrHandle);
        return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
    }

    batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= 1;

        try {
            return fn(a);
        } finally {
            executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
        }
    };

    flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
        (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
    };

    var roots = new Map(),
        ReactFabric = {
            NativeComponent: function (findNodeHandle, findHostInstance) {
                return function (_React$Component) {
                    function ReactNativeComponent() {
                        if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

                        var call = _React$Component.apply(this, arguments);

                        if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
                    }

                    _inherits$1(ReactNativeComponent, _React$Component);

                    ReactNativeComponent.prototype.blur = function () {
                        ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
                    };

                    ReactNativeComponent.prototype.focus = function () {
                        ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
                    };

                    ReactNativeComponent.prototype.measure = function (callback) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                    };

                    ReactNativeComponent.prototype.measureInWindow = function (callback) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                    };

                    ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
                    };

                    ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
                        var maybeInstance = undefined;

                        try {
                            maybeInstance = findHostInstance(this);
                        } catch (error) { }

                        if (null != maybeInstance && !maybeInstance.canonical) {
                            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
                            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
                            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
                            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
                        }
                    };

                    return ReactNativeComponent;
                }(React.Component);
            }(findNodeHandle, findHostInstance),
            findNodeHandle: findNodeHandle,
            setNativeProps: function setNativeProps() { },
            dispatchCommand: function dispatchCommand(handle, command, args) {
                null != handle._nativeTag && null != handle._internalInstanceHandle && fabricDispatchCommand(handle._internalInstanceHandle.stateNode.node, command, args);
            },
            render: function render(element, containerTag, callback) {
                var root = roots.get(containerTag);

                if (!root) {
                    root = new FiberRootNode(containerTag, 0, false);
                    var uninitializedFiber = createFiber(3, null, null, 0);
                    root.current = uninitializedFiber;
                    uninitializedFiber.stateNode = root;
                    roots.set(containerTag, root);
                }

                updateContainer(element, root, null, callback);

                a: if (element = root.current, element.child) switch (element.child.tag) {
                    case 5:
                        element = element.child.stateNode.canonical;
                        break a;

                    default:
                        element = element.child.stateNode;
                } else element = null;

                return element;
            },
            unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
                var root = roots.get(containerTag);
                root && updateContainer(null, root, null, function () {
                    roots.delete(containerTag);
                });
            },
            createPortal: function createPortal(children, containerTag) {
                return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
            },
            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
                    return {
                        measure: function measure(callback) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                        },
                        measureInWindow: function measureInWindow(callback) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
                        },
                        measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
                        },
                        setNativeProps: function setNativeProps(nativeProps) {
                            var maybeInstance = undefined;

                            try {
                                maybeInstance = findHostInstance(this);
                            } catch (error) { }

                            if (null != maybeInstance && !maybeInstance.canonical) {
                                var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
                                maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
                                nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
                                null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
                            }
                        },
                        focus: function focus() {
                            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
                        },
                        blur: function blur() {
                            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
                        }
                    };
                }(findNodeHandle, findHostInstance)
            }
        };

    (function (devToolsConfig) {
        var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        return injectInternals(_extends({}, devToolsConfig, {
            overrideHookState: null,
            overrideProps: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
            findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
                fiber = findCurrentHostFiber(fiber);
                return null === fiber ? null : fiber.stateNode;
            },
            findFiberByHostInstance: function findFiberByHostInstance(instance) {
                return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
            },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null
        }));
    })({
        findFiberByHostInstance: getInstanceFromInstance,
        getInspectorDataForViewTag: getInspectorDataForViewTag,
        bundleType: 0,
        version: "16.8.6",
        rendererPackageName: "react-native-renderer"
    });

    var ReactFabric$2 = {
        default: ReactFabric
    },
        ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
    module.exports = ReactFabric$3.default || ReactFabric$3;
}, 14815, [14344, 14446, 14566, 10297, 14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('AppState');

    exports.default = _default;
}, 14818, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');

    exports.default = _default;
}, 14821, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('Clipboard');

    exports.default = _default;
}, 14824, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('DatePickerAndroid');

    exports.default = _default;
}, 14827, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _NativeImagePickerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var ImagePickerIOS = {
        canRecordVideos: function canRecordVideos(callback) {
            (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
            return _NativeImagePickerIOS.default.canRecordVideos(callback);
        },
        canUseCamera: function canUseCamera(callback) {
            (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
            return _NativeImagePickerIOS.default.canUseCamera(callback);
        },
        openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
            (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
            var newConfig = {
                videoMode: true,
                unmirrorFrontFacingCamera: false
            };

            if (config.videoMode != null) {
                newConfig.videoMode = config.videoMode;
            }

            if (config.unmirrorFrontFacingCamera != null) {
                newConfig.unmirrorFrontFacingCamera = config.unmirrorFrontFacingCamera;
            }

            return _NativeImagePickerIOS.default.openCameraDialog(newConfig, successCallback, cancelCallback);
        },
        openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
            (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
            var newConfig = {
                showImages: true,
                showVideos: false
            };

            if (config.showImages != null) {
                newConfig.showImages = config.showImages;
            }

            if (config.showVideos != null) {
                newConfig.showVideos = config.showVideos;
            }

            return _NativeImagePickerIOS.default.openSelectDialog(newConfig, successCallback, cancelCallback);
        }
    };
    module.exports = ImagePickerIOS;
}, 14830, [14305, 14833, 14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('ImagePickerIOS');

    exports.default = _default;
}, 14833, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

    var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _default = _Platform.default.OS === 'android' ? TurboModuleRegistry.getEnforcing('IntentAndroid') : TurboModuleRegistry.getEnforcing('LinkingManager');

    exports.default = _default;
}, 14836, [14305, 14308, 14341, 10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var TouchHistoryMath = {
        centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
            var touchBank = touchHistory.touchBank;
            var total = 0;
            var count = 0;
            var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

            if (oneTouchData !== null) {
                if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
                    total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
                    count = 1;
                }
            } else {
                for (var i = 0; i < touchBank.length; i++) {
                    var touchTrack = touchBank[i];

                    if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                        var toAdd = undefined;

                        if (ofCurrent && isXAxis) {
                            toAdd = touchTrack.currentPageX;
                        } else if (ofCurrent && !isXAxis) {
                            toAdd = touchTrack.currentPageY;
                        } else if (!ofCurrent && isXAxis) {
                            toAdd = touchTrack.previousPageX;
                        } else {
                            toAdd = touchTrack.previousPageY;
                        }

                        total += toAdd;
                        count++;
                    }
                }
            }

            return count > 0 ? total / count : TouchHistoryMath.noCentroid;
        },
        currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
        },
        currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
        },
        previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
        },
        previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
        },
        currentCentroidX: function currentCentroidX(touchHistory) {
            return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
        },
        currentCentroidY: function currentCentroidY(touchHistory) {
            return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
        },
        noCentroid: -1
    };
    module.exports = TouchHistoryMath;
}, 14839, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('PermissionsAndroid');

    exports.default = _default;
}, 14842, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('PushNotificationManager');

    exports.default = _default;
}, 14845, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('ShareModule');

    exports.default = _default;
}, 14848, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _NativeTimePickerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var TimePickerAndroid = function () {
        function TimePickerAndroid() {
            (0, _classCallCheck2.default)(this, TimePickerAndroid);
        }

        (0, _createClass2.default)(TimePickerAndroid, null, [{
            key: "open",
            value: function open(options) {
                return _regenerator.default.async(function open$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!_NativeTimePickerAndroid.default) {
                                    _context.next = 4;
                                    break;
                                }

                                return _context.abrupt("return", _NativeTimePickerAndroid.default.open(options));

                            case 4:
                                return _context.abrupt("return", Promise.reject({
                                    message: 'TimePickerAndroid is not supported on this platform.'
                                }));

                            case 5:
                            case "end":
                                return _context.stop();
                        }
                    }
                });
            }
        }]);
        return TimePickerAndroid;
    }();

    TimePickerAndroid.timeSetAction = 'timeSetAction';
    TimePickerAndroid.dismissedAction = 'dismissedAction';
    module.exports = TimePickerAndroid;
}, 14851, [14305, 14674, 14320, 14323, 14854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.get('TimePickerAndroid');

    exports.default = _default;
}, 14854, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('ToastAndroid');

    exports.default = _default;
}, 14857, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = useWindowDimensions;

    var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

    function useWindowDimensions() {
        var dims = _Dimensions.default.get('window');

        var forceUpdate = React.useState(false)[1].bind(null, function (v) {
            return !v;
        });
        var initialDims = React.useState(dims)[0];
        React.useEffect(function () {
            _Dimensions.default.addEventListener('change', forceUpdate);

            var latestDims = _Dimensions.default.get('window');

            if (latestDims !== initialDims) {
                forceUpdate();
            }

            return function () {
                _Dimensions.default.removeEventListener('change', forceUpdate);
            };
        }, [forceUpdate, initialDims]);
        return dims;
    }
}, 14860, [14308, 14305, 10429, 10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

    var UTFSequence = deepFreezeAndThrowOnMutationInDev({
        BOM: "\uFEFF",
        BULLET: "\u2022",
        BULLET_SP: "\xA0\u2022\xA0",
        MIDDOT: "\xB7",
        MIDDOT_SP: "\xA0\xB7\xA0",
        MIDDOT_KATAKANA: "\u30FB",
        MDASH: "\u2014",
        MDASH_SP: "\xA0\u2014\xA0",
        NDASH: "\u2013",
        NDASH_SP: "\xA0\u2013\xA0",
        NBSP: "\xA0",
        PIZZA: "\uD83C\uDF55",
        TRIANGLE_LEFT: "\u25C0",
        TRIANGLE_RIGHT: "\u25B6"
    });
    module.exports = UTFSequence;
}, 14863, [10057]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

    var _default = TurboModuleRegistry.getEnforcing('Vibration');

    exports.default = _default;
}, 14866, [14308, 14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

    var _createClass = _$$_REQUIRE(_dependencyMap[1]);

    var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

    var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

    var _inherits = _$$_REQUIRE(_dependencyMap[4]);

    var React = _$$_REQUIRE(_dependencyMap[5]);

    var YellowBox;
    {
        YellowBox = function (_React$Component2) {
            _inherits(YellowBox, _React$Component2);

            function YellowBox() {
                _classCallCheck(this, YellowBox);

                return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
            }

            _createClass(YellowBox, [{
                key: "render",
                value: function render() {
                    return null;
                }
            }], [{
                key: "ignoreWarnings",
                value: function ignoreWarnings(patterns) { }
            }, {
                key: "install",
                value: function install() { }
            }, {
                key: "uninstall",
                value: function uninstall() { }
            }]);

            return YellowBox;
        }(React.Component);
    }
    module.exports = YellowBox;
}, 14869, [14320, 14323, 14371, 14377, 14386, 10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

    var PointPropType = PropTypes.shape({
        x: PropTypes.number,
        y: PropTypes.number
    });
    module.exports = PointPropType;
}, 14872, [10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    ;

    (function (isNode) {
        var Public = function Public(clone) {
            return merge(clone === true, false, arguments);
        },
            publicName = 'merge';

        Public.recursive = function (clone) {
            return merge(clone === true, true, arguments);
        };

        Public.clone = function (input) {
            var output = input,
                type = typeOf(input),
                index,
                size;

            if (type === 'array') {
                output = [];
                size = input.length;

                for (index = 0; index < size; ++index) {
                    output[index] = Public.clone(input[index]);
                }
            } else if (type === 'object') {
                output = {};

                for (index in input) {
                    output[index] = Public.clone(input[index]);
                }
            }

            return output;
        };

        function merge_recursive(base, extend) {
            if (typeOf(base) !== 'object') return extend;

            for (var key in extend) {
                if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {
                    base[key] = merge_recursive(base[key], extend[key]);
                } else {
                    base[key] = extend[key];
                }
            }

            return base;
        }

        function merge(clone, recursive, argv) {
            var result = argv[0],
                size = argv.length;
            if (clone || typeOf(result) !== 'object') result = {};

            for (var index = 0; index < size; ++index) {
                var item = argv[index],
                    type = typeOf(item);
                if (type !== 'object') continue;

                for (var key in item) {
                    if (key === '__proto__') continue;
                    var sitem = clone ? Public.clone(item[key]) : item[key];

                    if (recursive) {
                        result[key] = merge_recursive(result[key], sitem);
                    } else {
                        result[key] = sitem;
                    }
                }
            }

            return result;
        }

        function typeOf(input) {
            return {}.toString.call(input).slice(8, -1).toLowerCase();
        }

        if (isNode) {
            module.exports = Public;
        } else {
            window[publicName] = Public;
        }
    })(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
}, 14914, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = extractColor;
    exports.integerColor = exports.colorNames = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var colorNames = {
        aliceblue: [240, 248, 255],
        antiquewhite: [250, 235, 215],
        aqua: [0, 255, 255],
        aquamarine: [127, 255, 212],
        azure: [240, 255, 255],
        beige: [245, 245, 220],
        bisque: [255, 228, 196],
        black: [0, 0, 0],
        blanchedalmond: [255, 235, 205],
        blue: [0, 0, 255],
        blueviolet: [138, 43, 226],
        brown: [165, 42, 42],
        burlywood: [222, 184, 135],
        cadetblue: [95, 158, 160],
        chartreuse: [127, 255, 0],
        chocolate: [210, 105, 30],
        coral: [255, 127, 80],
        cornflowerblue: [100, 149, 237],
        cornsilk: [255, 248, 220],
        crimson: [220, 20, 60],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgoldenrod: [184, 134, 11],
        darkgray: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkgrey: [169, 169, 169],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkseagreen: [143, 188, 143],
        darkslateblue: [72, 61, 139],
        darkslategray: [47, 79, 79],
        darkslategrey: [47, 79, 79],
        darkturquoise: [0, 206, 209],
        darkviolet: [148, 0, 211],
        deeppink: [255, 20, 147],
        deepskyblue: [0, 191, 255],
        dimgray: [105, 105, 105],
        dimgrey: [105, 105, 105],
        dodgerblue: [30, 144, 255],
        firebrick: [178, 34, 34],
        floralwhite: [255, 250, 240],
        forestgreen: [34, 139, 34],
        fuchsia: [255, 0, 255],
        gainsboro: [220, 220, 220],
        ghostwhite: [248, 248, 255],
        gold: [255, 215, 0],
        goldenrod: [218, 165, 32],
        gray: [128, 128, 128],
        green: [0, 128, 0],
        greenyellow: [173, 255, 47],
        grey: [128, 128, 128],
        honeydew: [240, 255, 240],
        hotpink: [255, 105, 180],
        indianred: [205, 92, 92],
        indigo: [75, 0, 130],
        ivory: [255, 255, 240],
        khaki: [240, 230, 140],
        lavender: [230, 230, 250],
        lavenderblush: [255, 240, 245],
        lawngreen: [124, 252, 0],
        lemonchiffon: [255, 250, 205],
        lightblue: [173, 216, 230],
        lightcoral: [240, 128, 128],
        lightcyan: [224, 255, 255],
        lightgoldenrodyellow: [250, 250, 210],
        lightgray: [211, 211, 211],
        lightgreen: [144, 238, 144],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightsalmon: [255, 160, 122],
        lightseagreen: [32, 178, 170],
        lightskyblue: [135, 206, 250],
        lightslategray: [119, 136, 153],
        lightslategrey: [119, 136, 153],
        lightsteelblue: [176, 196, 222],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        limegreen: [50, 205, 50],
        linen: [250, 240, 230],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        mediumaquamarine: [102, 205, 170],
        mediumblue: [0, 0, 205],
        mediumorchid: [186, 85, 211],
        mediumpurple: [147, 112, 219],
        mediumseagreen: [60, 179, 113],
        mediumslateblue: [123, 104, 238],
        mediumspringgreen: [0, 250, 154],
        mediumturquoise: [72, 209, 204],
        mediumvioletred: [199, 21, 133],
        midnightblue: [25, 25, 112],
        mintcream: [245, 255, 250],
        mistyrose: [255, 228, 225],
        moccasin: [255, 228, 181],
        navajowhite: [255, 222, 173],
        navy: [0, 0, 128],
        oldlace: [253, 245, 230],
        olive: [128, 128, 0],
        olivedrab: [107, 142, 35],
        orange: [255, 165, 0],
        orangered: [255, 69, 0],
        orchid: [218, 112, 214],
        palegoldenrod: [238, 232, 170],
        palegreen: [152, 251, 152],
        paleturquoise: [175, 238, 238],
        palevioletred: [219, 112, 147],
        papayawhip: [255, 239, 213],
        peachpuff: [255, 218, 185],
        peru: [205, 133, 63],
        pink: [255, 192, 203],
        plum: [221, 160, 221],
        powderblue: [176, 224, 230],
        purple: [128, 0, 128],
        rebeccapurple: [102, 51, 153],
        red: [255, 0, 0],
        rosybrown: [188, 143, 143],
        royalblue: [65, 105, 225],
        saddlebrown: [139, 69, 19],
        salmon: [250, 128, 114],
        sandybrown: [244, 164, 96],
        seagreen: [46, 139, 87],
        seashell: [255, 245, 238],
        sienna: [160, 82, 45],
        silver: [192, 192, 192],
        skyblue: [135, 206, 235],
        slateblue: [106, 90, 205],
        slategray: [112, 128, 144],
        slategrey: [112, 128, 144],
        snow: [255, 250, 250],
        springgreen: [0, 255, 127],
        steelblue: [70, 130, 180],
        tan: [210, 180, 140],
        teal: [0, 128, 128],
        thistle: [216, 191, 216],
        tomato: [255, 99, 71],
        turquoise: [64, 224, 208],
        violet: [238, 130, 238],
        wheat: [245, 222, 179],
        white: [255, 255, 255],
        whitesmoke: [245, 245, 245],
        yellow: [255, 255, 0],
        yellowgreen: [154, 205, 50]
    };
    exports.colorNames = colorNames;

    for (var name in colorNames) {
        if (colorNames.hasOwnProperty(name)) {
            var color = colorNames[name];
            var r = color[0];
            var g = color[1];
            var b = color[2];
            colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
        }
    }

    Object.freeze(colorNames);

    function hslToRgb(hsl) {
        var h = hsl[0] / 360;
        var s = hsl[1] / 100;
        var l = hsl[2] / 100;
        var t1;
        var t2;
        var t3;
        var rgb;
        var val;

        if (s === 0) {
            val = l * 255;
            return [val, val, val];
        }

        if (l < 0.5) {
            t2 = l * (1 + s);
        } else {
            t2 = l + s - l * s;
        }

        t1 = 2 * l - t2;
        rgb = [0, 0, 0];

        for (var i = 0; i < 3; i++) {
            t3 = h + 0.3333333333333333 * -(i - 1);

            if (t3 < 0) {
                t3++;
            }

            if (t3 > 1) {
                t3--;
            }

            if (6 * t3 < 1) {
                val = t1 + (t2 - t1) * 6 * t3;
            } else if (2 * t3 < 1) {
                val = t2;
            } else if (3 * t3 < 2) {
                val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
            } else {
                val = t1;
            }

            rgb[i] = val;
        }

        return rgb;
    }

    function hwbToRgb(hwb) {
        var h = hwb[0] / 360;
        var wh = hwb[1] / 100;
        var bl = hwb[2] / 100;
        var ratio = wh + bl;
        var i;
        var v;
        var f;
        var n;

        if (ratio > 1) {
            wh /= ratio;
            bl /= ratio;
        }

        i = Math.floor(6 * h);
        v = 1 - bl;
        f = 6 * h - i;

        if ((i & 0x01) !== 0) {
            f = 1 - f;
        }

        n = wh + f * (v - wh);
        var r;
        var g;
        var b;

        switch (i) {
            default:
            case 6:
            case 0:
                r = v;
                g = n;
                b = wh;
                break;

            case 1:
                r = n;
                g = v;
                b = wh;
                break;

            case 2:
                r = wh;
                g = v;
                b = n;
                break;

            case 3:
                r = wh;
                g = n;
                b = v;
                break;

            case 4:
                r = n;
                g = wh;
                b = v;
                break;

            case 5:
                r = v;
                g = wh;
                b = n;
                break;
        }

        return [r, g, b];
    }

    function clamp(num, min, max) {
        return Math.min(Math.max(min, num), max);
    }

    var abbr = /^#([a-f0-9]{3,4})$/i;
    var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
    var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
    var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
    var keyword = /(\D+)/;

    function rgbFromString(string) {
        var rgb = [0, 0, 0, 1];
        var match;
        var i;
        var hexAlpha;

        if (match = string.match(hex)) {
            hexAlpha = match[2];
            match = match[1];

            for (i = 0; i < 3; i++) {
                var i2 = i * 2;
                rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
            }

            if (hexAlpha) {
                rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
            }
        } else if (match = string.match(abbr)) {
            match = match[1];
            hexAlpha = match[3];

            for (i = 0; i < 3; i++) {
                rgb[i] = parseInt(match[i] + match[i], 16) / 255;
            }

            if (hexAlpha) {
                rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
            }
        } else if (match = string.match(rgba)) {
            for (i = 0; i < 3; i++) {
                rgb[i] = parseInt(match[i + 1], 0) / 255;
            }

            if (match[4]) {
                rgb[3] = parseFloat(match[4]);
            }
        } else if (match = string.match(per)) {
            for (i = 0; i < 3; i++) {
                rgb[i] = parseFloat(match[i + 1]) / 100;
            }

            if (match[4]) {
                rgb[3] = parseFloat(match[4]);
            }
        } else if (match = string.match(keyword)) {
            if (match[1] === 'transparent') {
                return [0, 0, 0, 0];
            }

            rgb = colorNames[match[1]];

            if (!(typeof rgb === 'number')) {
                return null;
            }

            return integerColor(rgb);
        } else {
            return null;
        }

        for (i = 0; i < 4; i++) {
            rgb[i] = clamp(rgb[i], 0, 1);
        }

        return rgb;
    }

    var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

    function rgbFromHslString(string) {
        var match = string.match(hslRegEx);

        if (!match) {
            return null;
        }

        var alpha = parseFloat(match[4]);
        var h = (parseFloat(match[1]) + 360) % 360;
        var s = clamp(parseFloat(match[2]), 0, 100);
        var l = clamp(parseFloat(match[3]), 0, 100);
        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
        return hslToRgb([h, s, l, a]);
    }

    var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

    function rgbFromHwbString(string) {
        var match = string.match(hwbRegEx);

        if (!match) {
            return null;
        }

        var alpha = parseFloat(match[4]);
        var h = (parseFloat(match[1]) % 360 + 360) % 360;
        var w = clamp(parseFloat(match[2]), 0, 100);
        var b = clamp(parseFloat(match[3]), 0, 100);
        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
        return hwbToRgb([h, w, b, a]);
    }

    function colorFromString(string) {
        var prefix = string.substring(0, 3).toLowerCase();

        switch (prefix) {
            case 'hsl':
                return rgbFromHslString(string);

            case 'hwb':
                return rgbFromHwbString(string);

            default:
                return rgbFromString(string);
        }
    }

    var identity = function identity(x) {
        return x;
    };

    var toSignedInt32 = function toSignedInt32(x) {
        return x | 0x0;
    };

    var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
    exports.integerColor = integerColor;

    function extractColor(color) {
        if (typeof color === 'number') {
            if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
                return integerColor(color);
            }

            return null;
        }

        var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

        if (!Array.isArray(parsedColor)) {
            return parsedColor;
        }

        var r = parsedColor[0];
        var g = parsedColor[1];
        var b = parsedColor[2];
        var a = parsedColor[3];
        var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
        return integerColor(int32Color);
    }
}, 14917, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    "use strict";

    function peg$subclass(child, parent) {
        function ctor() {
            this.constructor = child;
        }

        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
    }

    function peg$SyntaxError(message, expected, found, location) {
        this.message = message;
        this.expected = expected;
        this.found = found;
        this.location = location;
        this.name = "SyntaxError";

        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, peg$SyntaxError);
        }
    }

    peg$subclass(peg$SyntaxError, Error);

    peg$SyntaxError.buildMessage = function (expected, found) {
        var DESCRIBE_EXPECTATION_FNS = {
            literal: function literal(expectation) {
                return "\"" + literalEscape(expectation.text) + "\"";
            },
            "class": function _class(expectation) {
                var escapedParts = "",
                    i;

                for (i = 0; i < expectation.parts.length; i++) {
                    escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
                }

                return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
            },
            any: function any(expectation) {
                return "any character";
            },
            end: function end(expectation) {
                return "end of input";
            },
            other: function other(expectation) {
                return expectation.description;
            }
        };

        function hex(ch) {
            return ch.charCodeAt(0).toString(16).toUpperCase();
        }

        function literalEscape(s) {
            return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
                return '\\x0' + hex(ch);
            }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
                return '\\x' + hex(ch);
            });
        }

        function classEscape(s) {
            return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
                return '\\x0' + hex(ch);
            }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
                return '\\x' + hex(ch);
            });
        }

        function describeExpectation(expectation) {
            return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
        }

        function describeExpected(expected) {
            var descriptions = new Array(expected.length),
                i,
                j;

            for (i = 0; i < expected.length; i++) {
                descriptions[i] = describeExpectation(expected[i]);
            }

            descriptions.sort();

            if (descriptions.length > 0) {
                for (i = 1, j = 1; i < descriptions.length; i++) {
                    if (descriptions[i - 1] !== descriptions[i]) {
                        descriptions[j] = descriptions[i];
                        j++;
                    }
                }

                descriptions.length = j;
            }

            switch (descriptions.length) {
                case 1:
                    return descriptions[0];

                case 2:
                    return descriptions[0] + " or " + descriptions[1];

                default:
                    return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
            }
        }

        function describeFound(found) {
            return found ? "\"" + literalEscape(found) + "\"" : "end of input";
        }

        return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
    };

    function peg$parse(input, options) {
        options = options !== undefined ? options : {};

        var peg$FAILED = {},
            peg$startRuleFunctions = {
                transformList: peg$parsetransformList
            },
            peg$startRuleFunction = peg$parsetransformList,
            peg$c0 = function peg$c0(ts) {
                return ts;
            },
            peg$c1 = function peg$c1(t, ts) {
                return multiply_matrices(t, ts);
            },
            peg$c2 = "matrix",
            peg$c3 = peg$literalExpectation("matrix", false),
            peg$c4 = "(",
            peg$c5 = peg$literalExpectation("(", false),
            peg$c6 = ")",
            peg$c7 = peg$literalExpectation(")", false),
            peg$c8 = function peg$c8(a, b, c, d, e, f) {
                return [a, c, e, b, d, f];
            },
            peg$c9 = "translate",
            peg$c10 = peg$literalExpectation("translate", false),
            peg$c11 = function peg$c11(tx, ty) {
                return [1, 0, tx, 0, 1, ty || 0];
            },
            peg$c12 = "scale",
            peg$c13 = peg$literalExpectation("scale", false),
            peg$c14 = function peg$c14(sx, sy) {
                return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
            },
            peg$c15 = "rotate",
            peg$c16 = peg$literalExpectation("rotate", false),
            peg$c17 = function peg$c17(angle, c) {
                var cos = Math.cos(deg2rad * angle);
                var sin = Math.sin(deg2rad * angle);

                if (c !== null) {
                    var x = c[0];
                    var y = c[1];
                    return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
                }

                return [cos, -sin, 0, sin, cos, 0];
            },
            peg$c18 = "skewX",
            peg$c19 = peg$literalExpectation("skewX", false),
            peg$c20 = function peg$c20(angle) {
                return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
            },
            peg$c21 = "skewY",
            peg$c22 = peg$literalExpectation("skewY", false),
            peg$c23 = function peg$c23(angle) {
                return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
            },
            peg$c24 = function peg$c24(f) {
                return parseFloat(f.join(""));
            },
            peg$c25 = function peg$c25(i) {
                return parseInt(i.join(""));
            },
            peg$c26 = function peg$c26(n) {
                return n;
            },
            peg$c27 = function peg$c27(n1, n2) {
                return [n1, n2];
            },
            peg$c28 = ",",
            peg$c29 = peg$literalExpectation(",", false),
            peg$c30 = function peg$c30(ds) {
                return ds.join("");
            },
            peg$c31 = function peg$c31(f) {
                return f.join("");
            },
            peg$c32 = function peg$c32(d) {
                return d.join("");
            },
            peg$c33 = peg$otherExpectation("fractionalConstant"),
            peg$c34 = ".",
            peg$c35 = peg$literalExpectation(".", false),
            peg$c36 = function peg$c36(d1, d2) {
                return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
            },
            peg$c37 = /^[eE]/,
            peg$c38 = peg$classExpectation(["e", "E"], false, false),
            peg$c39 = function peg$c39(e) {
                return [e[0], e[1], e[2].join("")].join("");
            },
            peg$c40 = /^[+\-]/,
            peg$c41 = peg$classExpectation(["+", "-"], false, false),
            peg$c42 = /^[0-9]/,
            peg$c43 = peg$classExpectation([["0", "9"]], false, false),
            peg$c44 = /^[ \t\r\n]/,
            peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
            peg$currPos = 0,
            peg$savedPos = 0,
            peg$posDetailsCache = [{
                line: 1,
                column: 1
            }],
            peg$maxFailPos = 0,
            peg$maxFailExpected = [],
            peg$silentFails = 0,
            peg$result;

        if ("startRule" in options) {
            if (!(options.startRule in peg$startRuleFunctions)) {
                throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
            }

            peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
        }

        function peg$literalExpectation(text, ignoreCase) {
            return {
                type: "literal",
                text: text,
                ignoreCase: ignoreCase
            };
        }

        function peg$classExpectation(parts, inverted, ignoreCase) {
            return {
                type: "class",
                parts: parts,
                inverted: inverted,
                ignoreCase: ignoreCase
            };
        }

        function peg$endExpectation() {
            return {
                type: "end"
            };
        }

        function peg$otherExpectation(description) {
            return {
                type: "other",
                description: description
            };
        }

        function peg$computePosDetails(pos) {
            var details = peg$posDetailsCache[pos],
                p;

            if (details) {
                return details;
            } else {
                p = pos - 1;

                while (!peg$posDetailsCache[p]) {
                    p--;
                }

                details = peg$posDetailsCache[p];
                details = {
                    line: details.line,
                    column: details.column
                };

                while (p < pos) {
                    if (input.charCodeAt(p) === 10) {
                        details.line++;
                        details.column = 1;
                    } else {
                        details.column++;
                    }

                    p++;
                }

                peg$posDetailsCache[pos] = details;
                return details;
            }
        }

        function peg$computeLocation(startPos, endPos) {
            var startPosDetails = peg$computePosDetails(startPos),
                endPosDetails = peg$computePosDetails(endPos);
            return {
                start: {
                    offset: startPos,
                    line: startPosDetails.line,
                    column: startPosDetails.column
                },
                end: {
                    offset: endPos,
                    line: endPosDetails.line,
                    column: endPosDetails.column
                }
            };
        }

        function peg$fail(expected) {
            if (peg$currPos < peg$maxFailPos) {
                return;
            }

            if (peg$currPos > peg$maxFailPos) {
                peg$maxFailPos = peg$currPos;
                peg$maxFailExpected = [];
            }

            peg$maxFailExpected.push(expected);
        }

        function peg$buildSimpleError(message, location) {
            return new peg$SyntaxError(message, null, null, location);
        }

        function peg$buildStructuredError(expected, found, location) {
            return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
        }

        function peg$parsetransformList() {
            var s0, s1, s2, s3, s4;
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parsewsp();

            while (s2 !== peg$FAILED) {
                s1.push(s2);
                s2 = peg$parsewsp();
            }

            if (s1 !== peg$FAILED) {
                s2 = peg$parsetransforms();

                if (s2 === peg$FAILED) {
                    s2 = null;
                }

                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parsewsp();

                    while (s4 !== peg$FAILED) {
                        s3.push(s4);
                        s4 = peg$parsewsp();
                    }

                    if (s3 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c0(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parsetransforms() {
            var s0, s1, s2, s3;
            s0 = peg$currPos;
            s1 = peg$parsetransform();

            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsecommaWsp();

                while (s3 !== peg$FAILED) {
                    s2.push(s3);
                    s3 = peg$parsecommaWsp();
                }

                if (s2 !== peg$FAILED) {
                    s3 = peg$parsetransforms();

                    if (s3 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c1(s1, s3);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            if (s0 === peg$FAILED) {
                s0 = peg$parsetransform();
            }

            return s0;
        }

        function peg$parsetransform() {
            var s0;
            s0 = peg$parsematrix();

            if (s0 === peg$FAILED) {
                s0 = peg$parsetranslate();

                if (s0 === peg$FAILED) {
                    s0 = peg$parsescale();

                    if (s0 === peg$FAILED) {
                        s0 = peg$parserotate();

                        if (s0 === peg$FAILED) {
                            s0 = peg$parseskewX();

                            if (s0 === peg$FAILED) {
                                s0 = peg$parseskewY();
                            }
                        }
                    }
                }
            }

            return s0;
        }

        function peg$parsematrix() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
            s0 = peg$currPos;

            if (input.substr(peg$currPos, 6) === peg$c2) {
                s1 = peg$c2;
                peg$currPos += 6;
            } else {
                s1 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c3);
                }
            }

            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsewsp();

                while (s3 !== peg$FAILED) {
                    s2.push(s3);
                    s3 = peg$parsewsp();
                }

                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 40) {
                        s3 = peg$c4;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;

                        if (peg$silentFails === 0) {
                            peg$fail(peg$c5);
                        }
                    }

                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parsewsp();

                        while (s5 !== peg$FAILED) {
                            s4.push(s5);
                            s5 = peg$parsewsp();
                        }

                        if (s4 !== peg$FAILED) {
                            s5 = peg$parsenumber();

                            if (s5 !== peg$FAILED) {
                                s6 = peg$parsecommaWsp();

                                if (s6 !== peg$FAILED) {
                                    s7 = peg$parsenumber();

                                    if (s7 !== peg$FAILED) {
                                        s8 = peg$parsecommaWsp();

                                        if (s8 !== peg$FAILED) {
                                            s9 = peg$parsenumber();

                                            if (s9 !== peg$FAILED) {
                                                s10 = peg$parsecommaWsp();

                                                if (s10 !== peg$FAILED) {
                                                    s11 = peg$parsenumber();

                                                    if (s11 !== peg$FAILED) {
                                                        s12 = peg$parsecommaWsp();

                                                        if (s12 !== peg$FAILED) {
                                                            s13 = peg$parsenumber();

                                                            if (s13 !== peg$FAILED) {
                                                                s14 = peg$parsecommaWsp();

                                                                if (s14 !== peg$FAILED) {
                                                                    s15 = peg$parsenumber();

                                                                    if (s15 !== peg$FAILED) {
                                                                        s16 = [];
                                                                        s17 = peg$parsewsp();

                                                                        while (s17 !== peg$FAILED) {
                                                                            s16.push(s17);
                                                                            s17 = peg$parsewsp();
                                                                        }

                                                                        if (s16 !== peg$FAILED) {
                                                                            if (input.charCodeAt(peg$currPos) === 41) {
                                                                                s17 = peg$c6;
                                                                                peg$currPos++;
                                                                            } else {
                                                                                s17 = peg$FAILED;

                                                                                if (peg$silentFails === 0) {
                                                                                    peg$fail(peg$c7);
                                                                                }
                                                                            }

                                                                            if (s17 !== peg$FAILED) {
                                                                                peg$savedPos = s0;
                                                                                s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                                                                s0 = s1;
                                                                            } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                            }
                                                                        } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                        }
                                                                    } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                    }
                                                                } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                }
                                                            } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                            }
                                                        } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                        }
                                                    } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                    }
                                                } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                }
                                            } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                            }
                                        } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                        }
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parsetranslate() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8;
            s0 = peg$currPos;

            if (input.substr(peg$currPos, 9) === peg$c9) {
                s1 = peg$c9;
                peg$currPos += 9;
            } else {
                s1 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c10);
                }
            }

            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsewsp();

                while (s3 !== peg$FAILED) {
                    s2.push(s3);
                    s3 = peg$parsewsp();
                }

                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 40) {
                        s3 = peg$c4;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;

                        if (peg$silentFails === 0) {
                            peg$fail(peg$c5);
                        }
                    }

                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parsewsp();

                        while (s5 !== peg$FAILED) {
                            s4.push(s5);
                            s5 = peg$parsewsp();
                        }

                        if (s4 !== peg$FAILED) {
                            s5 = peg$parsenumber();

                            if (s5 !== peg$FAILED) {
                                s6 = peg$parsecommaWspNumber();

                                if (s6 === peg$FAILED) {
                                    s6 = null;
                                }

                                if (s6 !== peg$FAILED) {
                                    s7 = [];
                                    s8 = peg$parsewsp();

                                    while (s8 !== peg$FAILED) {
                                        s7.push(s8);
                                        s8 = peg$parsewsp();
                                    }

                                    if (s7 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 41) {
                                            s8 = peg$c6;
                                            peg$currPos++;
                                        } else {
                                            s8 = peg$FAILED;

                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$c7);
                                            }
                                        }

                                        if (s8 !== peg$FAILED) {
                                            peg$savedPos = s0;
                                            s1 = peg$c11(s5, s6);
                                            s0 = s1;
                                        } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                        }
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parsescale() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8;
            s0 = peg$currPos;

            if (input.substr(peg$currPos, 5) === peg$c12) {
                s1 = peg$c12;
                peg$currPos += 5;
            } else {
                s1 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c13);
                }
            }

            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsewsp();

                while (s3 !== peg$FAILED) {
                    s2.push(s3);
                    s3 = peg$parsewsp();
                }

                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 40) {
                        s3 = peg$c4;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;

                        if (peg$silentFails === 0) {
                            peg$fail(peg$c5);
                        }
                    }

                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parsewsp();

                        while (s5 !== peg$FAILED) {
                            s4.push(s5);
                            s5 = peg$parsewsp();
                        }

                        if (s4 !== peg$FAILED) {
                            s5 = peg$parsenumber();

                            if (s5 !== peg$FAILED) {
                                s6 = peg$parsecommaWspNumber();

                                if (s6 === peg$FAILED) {
                                    s6 = null;
                                }

                                if (s6 !== peg$FAILED) {
                                    s7 = [];
                                    s8 = peg$parsewsp();

                                    while (s8 !== peg$FAILED) {
                                        s7.push(s8);
                                        s8 = peg$parsewsp();
                                    }

                                    if (s7 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 41) {
                                            s8 = peg$c6;
                                            peg$currPos++;
                                        } else {
                                            s8 = peg$FAILED;

                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$c7);
                                            }
                                        }

                                        if (s8 !== peg$FAILED) {
                                            peg$savedPos = s0;
                                            s1 = peg$c14(s5, s6);
                                            s0 = s1;
                                        } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                        }
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parserotate() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8;
            s0 = peg$currPos;

            if (input.substr(peg$currPos, 6) === peg$c15) {
                s1 = peg$c15;
                peg$currPos += 6;
            } else {
                s1 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c16);
                }
            }

            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsewsp();

                while (s3 !== peg$FAILED) {
                    s2.push(s3);
                    s3 = peg$parsewsp();
                }

                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 40) {
                        s3 = peg$c4;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;

                        if (peg$silentFails === 0) {
                            peg$fail(peg$c5);
                        }
                    }

                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parsewsp();

                        while (s5 !== peg$FAILED) {
                            s4.push(s5);
                            s5 = peg$parsewsp();
                        }

                        if (s4 !== peg$FAILED) {
                            s5 = peg$parsenumber();

                            if (s5 !== peg$FAILED) {
                                s6 = peg$parsecommaWspTwoNumbers();

                                if (s6 === peg$FAILED) {
                                    s6 = null;
                                }

                                if (s6 !== peg$FAILED) {
                                    s7 = [];
                                    s8 = peg$parsewsp();

                                    while (s8 !== peg$FAILED) {
                                        s7.push(s8);
                                        s8 = peg$parsewsp();
                                    }

                                    if (s7 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 41) {
                                            s8 = peg$c6;
                                            peg$currPos++;
                                        } else {
                                            s8 = peg$FAILED;

                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$c7);
                                            }
                                        }

                                        if (s8 !== peg$FAILED) {
                                            peg$savedPos = s0;
                                            s1 = peg$c17(s5, s6);
                                            s0 = s1;
                                        } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                        }
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parseskewX() {
            var s0, s1, s2, s3, s4, s5, s6, s7;
            s0 = peg$currPos;

            if (input.substr(peg$currPos, 5) === peg$c18) {
                s1 = peg$c18;
                peg$currPos += 5;
            } else {
                s1 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c19);
                }
            }

            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsewsp();

                while (s3 !== peg$FAILED) {
                    s2.push(s3);
                    s3 = peg$parsewsp();
                }

                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 40) {
                        s3 = peg$c4;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;

                        if (peg$silentFails === 0) {
                            peg$fail(peg$c5);
                        }
                    }

                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parsewsp();

                        while (s5 !== peg$FAILED) {
                            s4.push(s5);
                            s5 = peg$parsewsp();
                        }

                        if (s4 !== peg$FAILED) {
                            s5 = peg$parsenumber();

                            if (s5 !== peg$FAILED) {
                                s6 = [];
                                s7 = peg$parsewsp();

                                while (s7 !== peg$FAILED) {
                                    s6.push(s7);
                                    s7 = peg$parsewsp();
                                }

                                if (s6 !== peg$FAILED) {
                                    if (input.charCodeAt(peg$currPos) === 41) {
                                        s7 = peg$c6;
                                        peg$currPos++;
                                    } else {
                                        s7 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$c7);
                                        }
                                    }

                                    if (s7 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c20(s5);
                                        s0 = s1;
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parseskewY() {
            var s0, s1, s2, s3, s4, s5, s6, s7;
            s0 = peg$currPos;

            if (input.substr(peg$currPos, 5) === peg$c21) {
                s1 = peg$c21;
                peg$currPos += 5;
            } else {
                s1 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c22);
                }
            }

            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsewsp();

                while (s3 !== peg$FAILED) {
                    s2.push(s3);
                    s3 = peg$parsewsp();
                }

                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 40) {
                        s3 = peg$c4;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;

                        if (peg$silentFails === 0) {
                            peg$fail(peg$c5);
                        }
                    }

                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parsewsp();

                        while (s5 !== peg$FAILED) {
                            s4.push(s5);
                            s5 = peg$parsewsp();
                        }

                        if (s4 !== peg$FAILED) {
                            s5 = peg$parsenumber();

                            if (s5 !== peg$FAILED) {
                                s6 = [];
                                s7 = peg$parsewsp();

                                while (s7 !== peg$FAILED) {
                                    s6.push(s7);
                                    s7 = peg$parsewsp();
                                }

                                if (s6 !== peg$FAILED) {
                                    if (input.charCodeAt(peg$currPos) === 41) {
                                        s7 = peg$c6;
                                        peg$currPos++;
                                    } else {
                                        s7 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$c7);
                                        }
                                    }

                                    if (s7 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c23(s5);
                                        s0 = s1;
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parsenumber() {
            var s0, s1, s2, s3;
            s0 = peg$currPos;
            s1 = peg$currPos;
            s2 = peg$parsesign();

            if (s2 === peg$FAILED) {
                s2 = null;
            }

            if (s2 !== peg$FAILED) {
                s3 = peg$parsefloatingPointConstant();

                if (s3 !== peg$FAILED) {
                    s2 = [s2, s3];
                    s1 = s2;
                } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                }
            } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
            }

            if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c24(s1);
            }

            s0 = s1;

            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$currPos;
                s2 = peg$parsesign();

                if (s2 === peg$FAILED) {
                    s2 = null;
                }

                if (s2 !== peg$FAILED) {
                    s3 = peg$parseintegerConstant();

                    if (s3 !== peg$FAILED) {
                        s2 = [s2, s3];
                        s1 = s2;
                    } else {
                        peg$currPos = s1;
                        s1 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                }

                if (s1 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c25(s1);
                }

                s0 = s1;
            }

            return s0;
        }

        function peg$parsecommaWspNumber() {
            var s0, s1, s2;
            s0 = peg$currPos;
            s1 = peg$parsecommaWsp();

            if (s1 !== peg$FAILED) {
                s2 = peg$parsenumber();

                if (s2 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c26(s2);
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parsecommaWspTwoNumbers() {
            var s0, s1, s2, s3, s4;
            s0 = peg$currPos;
            s1 = peg$parsecommaWsp();

            if (s1 !== peg$FAILED) {
                s2 = peg$parsenumber();

                if (s2 !== peg$FAILED) {
                    s3 = peg$parsecommaWsp();

                    if (s3 !== peg$FAILED) {
                        s4 = peg$parsenumber();

                        if (s4 !== peg$FAILED) {
                            peg$savedPos = s0;
                            s1 = peg$c27(s2, s4);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parsecommaWsp() {
            var s0, s1, s2, s3, s4;
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parsewsp();

            if (s2 !== peg$FAILED) {
                while (s2 !== peg$FAILED) {
                    s1.push(s2);
                    s2 = peg$parsewsp();
                }
            } else {
                s1 = peg$FAILED;
            }

            if (s1 !== peg$FAILED) {
                s2 = peg$parsecomma();

                if (s2 === peg$FAILED) {
                    s2 = null;
                }

                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parsewsp();

                    while (s4 !== peg$FAILED) {
                        s3.push(s4);
                        s4 = peg$parsewsp();
                    }

                    if (s3 !== peg$FAILED) {
                        s1 = [s1, s2, s3];
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parsecomma();

                if (s1 !== peg$FAILED) {
                    s2 = [];
                    s3 = peg$parsewsp();

                    while (s3 !== peg$FAILED) {
                        s2.push(s3);
                        s3 = peg$parsewsp();
                    }

                    if (s2 !== peg$FAILED) {
                        s1 = [s1, s2];
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            }

            return s0;
        }

        function peg$parsecomma() {
            var s0;

            if (input.charCodeAt(peg$currPos) === 44) {
                s0 = peg$c28;
                peg$currPos++;
            } else {
                s0 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c29);
                }
            }

            return s0;
        }

        function peg$parseintegerConstant() {
            var s0, s1;
            s0 = peg$currPos;
            s1 = peg$parsedigitSequence();

            if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c30(s1);
            }

            s0 = s1;
            return s0;
        }

        function peg$parsefloatingPointConstant() {
            var s0, s1, s2, s3;
            s0 = peg$currPos;
            s1 = peg$currPos;
            s2 = peg$parsefractionalConstant();

            if (s2 !== peg$FAILED) {
                s3 = peg$parseexponent();

                if (s3 === peg$FAILED) {
                    s3 = null;
                }

                if (s3 !== peg$FAILED) {
                    s2 = [s2, s3];
                    s1 = s2;
                } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                }
            } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
            }

            if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c31(s1);
            }

            s0 = s1;

            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$currPos;
                s2 = peg$parsedigitSequence();

                if (s2 !== peg$FAILED) {
                    s3 = peg$parseexponent();

                    if (s3 !== peg$FAILED) {
                        s2 = [s2, s3];
                        s1 = s2;
                    } else {
                        peg$currPos = s1;
                        s1 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                }

                if (s1 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c32(s1);
                }

                s0 = s1;
            }

            return s0;
        }

        function peg$parsefractionalConstant() {
            var s0, s1, s2, s3;
            peg$silentFails++;
            s0 = peg$currPos;
            s1 = peg$parsedigitSequence();

            if (s1 === peg$FAILED) {
                s1 = null;
            }

            if (s1 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 46) {
                    s2 = peg$c34;
                    peg$currPos++;
                } else {
                    s2 = peg$FAILED;

                    if (peg$silentFails === 0) {
                        peg$fail(peg$c35);
                    }
                }

                if (s2 !== peg$FAILED) {
                    s3 = peg$parsedigitSequence();

                    if (s3 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c36(s1, s3);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
            }

            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parsedigitSequence();

                if (s1 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 46) {
                        s2 = peg$c34;
                        peg$currPos++;
                    } else {
                        s2 = peg$FAILED;

                        if (peg$silentFails === 0) {
                            peg$fail(peg$c35);
                        }
                    }

                    if (s2 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c32(s1);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                }
            }

            peg$silentFails--;

            if (s0 === peg$FAILED) {
                s1 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c33);
                }
            }

            return s0;
        }

        function peg$parseexponent() {
            var s0, s1, s2, s3, s4;
            s0 = peg$currPos;
            s1 = peg$currPos;

            if (peg$c37.test(input.charAt(peg$currPos))) {
                s2 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s2 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c38);
                }
            }

            if (s2 !== peg$FAILED) {
                s3 = peg$parsesign();

                if (s3 === peg$FAILED) {
                    s3 = null;
                }

                if (s3 !== peg$FAILED) {
                    s4 = peg$parsedigitSequence();

                    if (s4 !== peg$FAILED) {
                        s2 = [s2, s3, s4];
                        s1 = s2;
                    } else {
                        peg$currPos = s1;
                        s1 = peg$FAILED;
                    }
                } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                }
            } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
            }

            if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c39(s1);
            }

            s0 = s1;
            return s0;
        }

        function peg$parsesign() {
            var s0;

            if (peg$c40.test(input.charAt(peg$currPos))) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s0 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c41);
                }
            }

            return s0;
        }

        function peg$parsedigitSequence() {
            var s0, s1;
            s0 = [];
            s1 = peg$parsedigit();

            if (s1 !== peg$FAILED) {
                while (s1 !== peg$FAILED) {
                    s0.push(s1);
                    s1 = peg$parsedigit();
                }
            } else {
                s0 = peg$FAILED;
            }

            return s0;
        }

        function peg$parsedigit() {
            var s0;

            if (peg$c42.test(input.charAt(peg$currPos))) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s0 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c43);
                }
            }

            return s0;
        }

        function peg$parsewsp() {
            var s0;

            if (peg$c44.test(input.charAt(peg$currPos))) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s0 = peg$FAILED;

                if (peg$silentFails === 0) {
                    peg$fail(peg$c45);
                }
            }

            return s0;
        }

        var deg2rad = Math.PI / 180;

        function multiply_matrices(l, r) {
            var al = l[0];
            var cl = l[1];
            var el = l[2];
            var bl = l[3];
            var dl = l[4];
            var fl = l[5];
            var ar = r[0];
            var cr = r[1];
            var er = r[2];
            var br = r[3];
            var dr = r[4];
            var fr = r[5];
            var a = al * ar + cl * br;
            var c = al * cr + cl * dr;
            var e = al * er + cl * fr + el;
            var b = bl * ar + dl * br;
            var d = bl * cr + dl * dr;
            var f = bl * er + dl * fr + fl;
            return [a, c, e, b, d, f];
        }

        peg$result = peg$startRuleFunction();

        if (peg$result !== peg$FAILED && peg$currPos === input.length) {
            return peg$result;
        } else {
            if (peg$result !== peg$FAILED && peg$currPos < input.length) {
                peg$fail(peg$endExpectation());
            }

            throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
        }
    }

    module.exports = {
        SyntaxError: peg$SyntaxError,
        parse: peg$parse
    };
}, 14920, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.pickNotNil = pickNotNil;
    exports.idPattern = undefined;

    function pickNotNil(object) {
        var result = {};

        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                var value = object[key];

                if (value !== undefined && value !== null) {
                    result[key] = value;
                }
            }
        }

        return result;
    }

    var idPattern = /#([^)]+)\)?$/;
    exports.idPattern = idPattern;
}, 14923, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;
    var _default = {
        objectBoundingBox: 0,
        userSpaceOnUse: 1
    };
    exports.default = _default;
}, 14926, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var Pattern = function (_Shape) {
        (0, _inherits2.default)(Pattern, _Shape);

        function Pattern() {
            (0, _classCallCheck2.default)(this, Pattern);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
        }

        (0, _createClass2.default)(Pattern, [{
            key: "render",
            value: function render() {
                var props = this.props;
                var patternTransform = props.patternTransform,
                    transform = props.transform,
                    id = props.id,
                    x = props.x,
                    y = props.y,
                    width = props.width,
                    height = props.height,
                    patternUnits = props.patternUnits,
                    patternContentUnits = props.patternContentUnits,
                    children = props.children,
                    viewBox = props.viewBox,
                    preserveAspectRatio = props.preserveAspectRatio;
                var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
                return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
                    ref: this.refMethod,
                    name: id,
                    x: x,
                    y: y,
                    width: width,
                    height: height,
                    matrix: matrix,
                    patternTransform: matrix,
                    patternUnits: _units.default[patternUnits] || 0,
                    patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
                }, (0, _extractViewBox.default)({
                    viewBox: viewBox,
                    preserveAspectRatio: preserveAspectRatio
                })), children);
            }
        }]);
        return Pattern;
    }(_Shape2.default);

    exports.default = Pattern;
    Pattern.displayName = 'Pattern';
    Pattern.defaultProps = {
        x: '0%',
        y: '0%',
        width: '100%',
        height: '100%'
    };
    var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
}, 14929, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 11554, 11644, 14926, 11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

    var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var Mask = function (_Shape) {
        (0, _inherits2.default)(Mask, _Shape);

        function Mask() {
            (0, _classCallCheck2.default)(this, Mask);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
        }

        (0, _createClass2.default)(Mask, [{
            key: "render",
            value: function render() {
                var props = this.props;
                var maskTransform = props.maskTransform,
                    transform = props.transform,
                    x = props.x,
                    y = props.y,
                    width = props.width,
                    height = props.height,
                    maskUnits = props.maskUnits,
                    maskContentUnits = props.maskContentUnits,
                    children = props.children;
                return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
                    ref: this.refMethod
                }, (0, _extractProps.default)((0, _objectSpread2.default)({}, (0, _extractProps.propsAndStyles)(props), {
                    x: null,
                    y: null
                }), this), {
                    x: x,
                    y: y,
                    width: width,
                    height: height,
                    maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
                    maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
                    maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
                }), children);
            }
        }]);
        return Mask;
    }(_Shape2.default);

    exports.default = Mask;
    Mask.displayName = 'Mask';
    Mask.defaultProps = {
        x: '0%',
        y: '0%',
        width: '100%',
        height: '100%'
    };
    var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
}, 14932, [14308, 14305, 14344, 14314, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 11554, 11509, 14926, 11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
        var desc = {};
        Object.keys(descriptor).forEach(function (key) {
            desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;

        if ('value' in desc || desc.initializer) {
            desc.writable = true;
        }

        desc = decorators.slice().reverse().reduce(function (desc, decorator) {
            return decorator(target, property, desc) || desc;
        }, desc);

        if (context && desc.initializer !== undefined) {
            desc.value = desc.initializer ? desc.initializer.call(context) : undefined;
            desc.initializer = undefined;
        }

        if (desc.initializer === undefined) {
            Object.defineProperty(target, property, desc);
            desc = null;
        }

        return desc;
    }

    module.exports = _applyDecoratedDescriptor;
}, 22393, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

    var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

    var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

    function _toArray(arr) {
        return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
    }

    module.exports = _toArray;
}, 22396, [14350, 14365, 14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    /*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <https://feross.org>
     * @license  MIT
     */
    'use strict';

    var base64 = _$$_REQUIRE(_dependencyMap[0]);

    var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

    exports.Buffer = Buffer;
    exports.SlowBuffer = SlowBuffer;
    exports.INSPECT_MAX_BYTES = 50;
    var K_MAX_LENGTH = 0x7fffffff;
    exports.kMaxLength = K_MAX_LENGTH;
    Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

    if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) { }

    function typedArraySupport() {
        try {
            var arr = new Uint8Array(1);
            arr.__proto__ = {
                __proto__: Uint8Array.prototype,
                foo: function foo() {
                    return 42;
                }
            };
            return arr.foo() === 42;
        } catch (e) {
            return false;
        }
    }

    Object.defineProperty(Buffer.prototype, 'parent', {
        enumerable: true,
        get: function get() {
            if (!Buffer.isBuffer(this)) return undefined;
            return this.buffer;
        }
    });
    Object.defineProperty(Buffer.prototype, 'offset', {
        enumerable: true,
        get: function get() {
            if (!Buffer.isBuffer(this)) return undefined;
            return this.byteOffset;
        }
    });

    function createBuffer(length) {
        if (length > K_MAX_LENGTH) {
            throw new RangeError('The value "' + length + '" is invalid for option "size"');
        }

        var buf = new Uint8Array(length);
        buf.__proto__ = Buffer.prototype;
        return buf;
    }

    function Buffer(arg, encodingOrOffset, length) {
        if (typeof arg === 'number') {
            if (typeof encodingOrOffset === 'string') {
                throw new TypeError('The "string" argument must be of type string. Received type number');
            }

            return allocUnsafe(arg);
        }

        return from(arg, encodingOrOffset, length);
    }

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.species : "@@species") != null && Buffer[typeof Symbol === "function" ? Symbol.species : "@@species"] === Buffer) {
        Object.defineProperty(Buffer, typeof Symbol === "function" ? Symbol.species : "@@species", {
            value: null,
            configurable: true,
            enumerable: false,
            writable: false
        });
    }

    Buffer.poolSize = 8192;

    function from(value, encodingOrOffset, length) {
        if (typeof value === 'string') {
            return fromString(value, encodingOrOffset);
        }

        if (ArrayBuffer.isView(value)) {
            return fromArrayLike(value);
        }

        if (value == null) {
            throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
        }

        if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
            return fromArrayBuffer(value, encodingOrOffset, length);
        }

        if (typeof value === 'number') {
            throw new TypeError('The "value" argument must not be of type number. Received type number');
        }

        var valueOf = value.valueOf && value.valueOf();

        if (valueOf != null && valueOf !== value) {
            return Buffer.from(valueOf, encodingOrOffset, length);
        }

        var b = fromObject(value);
        if (b) return b;

        if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
            return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
        }

        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    Buffer.from = function (value, encodingOrOffset, length) {
        return from(value, encodingOrOffset, length);
    };

    Buffer.prototype.__proto__ = Uint8Array.prototype;
    Buffer.__proto__ = Uint8Array;

    function assertSize(size) {
        if (typeof size !== 'number') {
            throw new TypeError('"size" argument must be of type number');
        } else if (size < 0) {
            throw new RangeError('The value "' + size + '" is invalid for option "size"');
        }
    }

    function alloc(size, fill, encoding) {
        assertSize(size);

        if (size <= 0) {
            return createBuffer(size);
        }

        if (fill !== undefined) {
            return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
        }

        return createBuffer(size);
    }

    Buffer.alloc = function (size, fill, encoding) {
        return alloc(size, fill, encoding);
    };

    function allocUnsafe(size) {
        assertSize(size);
        return createBuffer(size < 0 ? 0 : checked(size) | 0);
    }

    Buffer.allocUnsafe = function (size) {
        return allocUnsafe(size);
    };

    Buffer.allocUnsafeSlow = function (size) {
        return allocUnsafe(size);
    };

    function fromString(string, encoding) {
        if (typeof encoding !== 'string' || encoding === '') {
            encoding = 'utf8';
        }

        if (!Buffer.isEncoding(encoding)) {
            throw new TypeError('Unknown encoding: ' + encoding);
        }

        var length = byteLength(string, encoding) | 0;
        var buf = createBuffer(length);
        var actual = buf.write(string, encoding);

        if (actual !== length) {
            buf = buf.slice(0, actual);
        }

        return buf;
    }

    function fromArrayLike(array) {
        var length = array.length < 0 ? 0 : checked(array.length) | 0;
        var buf = createBuffer(length);

        for (var i = 0; i < length; i += 1) {
            buf[i] = array[i] & 255;
        }

        return buf;
    }

    function fromArrayBuffer(array, byteOffset, length) {
        if (byteOffset < 0 || array.byteLength < byteOffset) {
            throw new RangeError('"offset" is outside of buffer bounds');
        }

        if (array.byteLength < byteOffset + (length || 0)) {
            throw new RangeError('"length" is outside of buffer bounds');
        }

        var buf;

        if (byteOffset === undefined && length === undefined) {
            buf = new Uint8Array(array);
        } else if (length === undefined) {
            buf = new Uint8Array(array, byteOffset);
        } else {
            buf = new Uint8Array(array, byteOffset, length);
        }

        buf.__proto__ = Buffer.prototype;
        return buf;
    }

    function fromObject(obj) {
        if (Buffer.isBuffer(obj)) {
            var len = checked(obj.length) | 0;
            var buf = createBuffer(len);

            if (buf.length === 0) {
                return buf;
            }

            obj.copy(buf, 0, 0, len);
            return buf;
        }

        if (obj.length !== undefined) {
            if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
                return createBuffer(0);
            }

            return fromArrayLike(obj);
        }

        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
            return fromArrayLike(obj.data);
        }
    }

    function checked(length) {
        if (length >= K_MAX_LENGTH) {
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
        }

        return length | 0;
    }

    function SlowBuffer(length) {
        if (+length != length) {
            length = 0;
        }

        return Buffer.alloc(+length);
    }

    Buffer.isBuffer = function isBuffer(b) {
        return b != null && b._isBuffer === true && b !== Buffer.prototype;
    };

    Buffer.compare = function compare(a, b) {
        if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
        if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

        if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        }

        if (a === b) return 0;
        var x = a.length;
        var y = b.length;

        for (var i = 0, len = Math.min(x, y); i < len; ++i) {
            if (a[i] !== b[i]) {
                x = a[i];
                y = b[i];
                break;
            }
        }

        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
    };

    Buffer.isEncoding = function isEncoding(encoding) {
        switch (String(encoding).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                return true;

            default:
                return false;
        }
    };

    Buffer.concat = function concat(list, length) {
        if (!Array.isArray(list)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
        }

        if (list.length === 0) {
            return Buffer.alloc(0);
        }

        var i;

        if (length === undefined) {
            length = 0;

            for (i = 0; i < list.length; ++i) {
                length += list[i].length;
            }
        }

        var buffer = Buffer.allocUnsafe(length);
        var pos = 0;

        for (i = 0; i < list.length; ++i) {
            var buf = list[i];

            if (isInstance(buf, Uint8Array)) {
                buf = Buffer.from(buf);
            }

            if (!Buffer.isBuffer(buf)) {
                throw new TypeError('"list" argument must be an Array of Buffers');
            }

            buf.copy(buffer, pos);
            pos += buf.length;
        }

        return buffer;
    };

    function byteLength(string, encoding) {
        if (Buffer.isBuffer(string)) {
            return string.length;
        }

        if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
            return string.byteLength;
        }

        if (typeof string !== 'string') {
            throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
        }

        var len = string.length;
        var mustMatch = arguments.length > 2 && arguments[2] === true;
        if (!mustMatch && len === 0) return 0;
        var loweredCase = false;

        for (; ;) {
            switch (encoding) {
                case 'ascii':
                case 'latin1':
                case 'binary':
                    return len;

                case 'utf8':
                case 'utf-8':
                    return utf8ToBytes(string).length;

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return len * 2;

                case 'hex':
                    return len >>> 1;

                case 'base64':
                    return base64ToBytes(string).length;

                default:
                    if (loweredCase) {
                        return mustMatch ? -1 : utf8ToBytes(string).length;
                    }

                    encoding = ('' + encoding).toLowerCase();
                    loweredCase = true;
            }
        }
    }

    Buffer.byteLength = byteLength;

    function slowToString(encoding, start, end) {
        var loweredCase = false;

        if (start === undefined || start < 0) {
            start = 0;
        }

        if (start > this.length) {
            return '';
        }

        if (end === undefined || end > this.length) {
            end = this.length;
        }

        if (end <= 0) {
            return '';
        }

        end >>>= 0;
        start >>>= 0;

        if (end <= start) {
            return '';
        }

        if (!encoding) encoding = 'utf8';

        while (true) {
            switch (encoding) {
                case 'hex':
                    return hexSlice(this, start, end);

                case 'utf8':
                case 'utf-8':
                    return utf8Slice(this, start, end);

                case 'ascii':
                    return asciiSlice(this, start, end);

                case 'latin1':
                case 'binary':
                    return latin1Slice(this, start, end);

                case 'base64':
                    return base64Slice(this, start, end);

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return utf16leSlice(this, start, end);

                default:
                    if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                    encoding = (encoding + '').toLowerCase();
                    loweredCase = true;
            }
        }
    }

    Buffer.prototype._isBuffer = true;

    function swap(b, n, m) {
        var i = b[n];
        b[n] = b[m];
        b[m] = i;
    }

    Buffer.prototype.swap16 = function swap16() {
        var len = this.length;

        if (len % 2 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 16-bits');
        }

        for (var i = 0; i < len; i += 2) {
            swap(this, i, i + 1);
        }

        return this;
    };

    Buffer.prototype.swap32 = function swap32() {
        var len = this.length;

        if (len % 4 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 32-bits');
        }

        for (var i = 0; i < len; i += 4) {
            swap(this, i, i + 3);
            swap(this, i + 1, i + 2);
        }

        return this;
    };

    Buffer.prototype.swap64 = function swap64() {
        var len = this.length;

        if (len % 8 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 64-bits');
        }

        for (var i = 0; i < len; i += 8) {
            swap(this, i, i + 7);
            swap(this, i + 1, i + 6);
            swap(this, i + 2, i + 5);
            swap(this, i + 3, i + 4);
        }

        return this;
    };

    Buffer.prototype.toString = function toString() {
        var length = this.length;
        if (length === 0) return '';
        if (arguments.length === 0) return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
    };

    Buffer.prototype.toLocaleString = Buffer.prototype.toString;

    Buffer.prototype.equals = function equals(b) {
        if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
        if (this === b) return true;
        return Buffer.compare(this, b) === 0;
    };

    Buffer.prototype.inspect = function inspect() {
        var str = '';
        var max = exports.INSPECT_MAX_BYTES;
        str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
        if (this.length > max) str += ' ... ';
        return '<Buffer ' + str + '>';
    };

    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
        if (isInstance(target, Uint8Array)) {
            target = Buffer.from(target, target.offset, target.byteLength);
        }

        if (!Buffer.isBuffer(target)) {
            throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
        }

        if (start === undefined) {
            start = 0;
        }

        if (end === undefined) {
            end = target ? target.length : 0;
        }

        if (thisStart === undefined) {
            thisStart = 0;
        }

        if (thisEnd === undefined) {
            thisEnd = this.length;
        }

        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
            throw new RangeError('out of range index');
        }

        if (thisStart >= thisEnd && start >= end) {
            return 0;
        }

        if (thisStart >= thisEnd) {
            return -1;
        }

        if (start >= end) {
            return 1;
        }

        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target) return 0;
        var x = thisEnd - thisStart;
        var y = end - start;
        var len = Math.min(x, y);
        var thisCopy = this.slice(thisStart, thisEnd);
        var targetCopy = target.slice(start, end);

        for (var i = 0; i < len; ++i) {
            if (thisCopy[i] !== targetCopy[i]) {
                x = thisCopy[i];
                y = targetCopy[i];
                break;
            }
        }

        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
    };

    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
        if (buffer.length === 0) return -1;

        if (typeof byteOffset === 'string') {
            encoding = byteOffset;
            byteOffset = 0;
        } else if (byteOffset > 0x7fffffff) {
            byteOffset = 0x7fffffff;
        } else if (byteOffset < -2147483648) {
            byteOffset = -2147483648;
        }

        byteOffset = +byteOffset;

        if (numberIsNaN(byteOffset)) {
            byteOffset = dir ? 0 : buffer.length - 1;
        }

        if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

        if (byteOffset >= buffer.length) {
            if (dir) return -1; else byteOffset = buffer.length - 1;
        } else if (byteOffset < 0) {
            if (dir) byteOffset = 0; else return -1;
        }

        if (typeof val === 'string') {
            val = Buffer.from(val, encoding);
        }

        if (Buffer.isBuffer(val)) {
            if (val.length === 0) {
                return -1;
            }

            return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
        } else if (typeof val === 'number') {
            val = val & 0xFF;

            if (typeof Uint8Array.prototype.indexOf === 'function') {
                if (dir) {
                    return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
                } else {
                    return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
                }
            }

            return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
        }

        throw new TypeError('val must be string, number or Buffer');
    }

    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
        var indexSize = 1;
        var arrLength = arr.length;
        var valLength = val.length;

        if (encoding !== undefined) {
            encoding = String(encoding).toLowerCase();

            if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
                if (arr.length < 2 || val.length < 2) {
                    return -1;
                }

                indexSize = 2;
                arrLength /= 2;
                valLength /= 2;
                byteOffset /= 2;
            }
        }

        function read(buf, i) {
            if (indexSize === 1) {
                return buf[i];
            } else {
                return buf.readUInt16BE(i * indexSize);
            }
        }

        var i;

        if (dir) {
            var foundIndex = -1;

            for (i = byteOffset; i < arrLength; i++) {
                if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                    if (foundIndex === -1) foundIndex = i;
                    if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
                } else {
                    if (foundIndex !== -1) i -= i - foundIndex;
                    foundIndex = -1;
                }
            }
        } else {
            if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

            for (i = byteOffset; i >= 0; i--) {
                var found = true;

                for (var j = 0; j < valLength; j++) {
                    if (read(arr, i + j) !== read(val, j)) {
                        found = false;
                        break;
                    }
                }

                if (found) return i;
            }
        }

        return -1;
    }

    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
        return this.indexOf(val, byteOffset, encoding) !== -1;
    };

    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };

    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };

    function hexWrite(buf, string, offset, length) {
        offset = Number(offset) || 0;
        var remaining = buf.length - offset;

        if (!length) {
            length = remaining;
        } else {
            length = Number(length);

            if (length > remaining) {
                length = remaining;
            }
        }

        var strLen = string.length;

        if (length > strLen / 2) {
            length = strLen / 2;
        }

        for (var i = 0; i < length; ++i) {
            var parsed = parseInt(string.substr(i * 2, 2), 16);
            if (numberIsNaN(parsed)) return i;
            buf[offset + i] = parsed;
        }

        return i;
    }

    function utf8Write(buf, string, offset, length) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
    }

    function asciiWrite(buf, string, offset, length) {
        return blitBuffer(asciiToBytes(string), buf, offset, length);
    }

    function latin1Write(buf, string, offset, length) {
        return asciiWrite(buf, string, offset, length);
    }

    function base64Write(buf, string, offset, length) {
        return blitBuffer(base64ToBytes(string), buf, offset, length);
    }

    function ucs2Write(buf, string, offset, length) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
    }

    Buffer.prototype.write = function write(string, offset, length, encoding) {
        if (offset === undefined) {
            encoding = 'utf8';
            length = this.length;
            offset = 0;
        } else if (length === undefined && typeof offset === 'string') {
            encoding = offset;
            length = this.length;
            offset = 0;
        } else if (isFinite(offset)) {
            offset = offset >>> 0;

            if (isFinite(length)) {
                length = length >>> 0;
                if (encoding === undefined) encoding = 'utf8';
            } else {
                encoding = length;
                length = undefined;
            }
        } else {
            throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
        }

        var remaining = this.length - offset;
        if (length === undefined || length > remaining) length = remaining;

        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
            throw new RangeError('Attempt to write outside buffer bounds');
        }

        if (!encoding) encoding = 'utf8';
        var loweredCase = false;

        for (; ;) {
            switch (encoding) {
                case 'hex':
                    return hexWrite(this, string, offset, length);

                case 'utf8':
                case 'utf-8':
                    return utf8Write(this, string, offset, length);

                case 'ascii':
                    return asciiWrite(this, string, offset, length);

                case 'latin1':
                case 'binary':
                    return latin1Write(this, string, offset, length);

                case 'base64':
                    return base64Write(this, string, offset, length);

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return ucs2Write(this, string, offset, length);

                default:
                    if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                    encoding = ('' + encoding).toLowerCase();
                    loweredCase = true;
            }
        }
    };

    Buffer.prototype.toJSON = function toJSON() {
        return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0)
        };
    };

    function base64Slice(buf, start, end) {
        if (start === 0 && end === buf.length) {
            return base64.fromByteArray(buf);
        } else {
            return base64.fromByteArray(buf.slice(start, end));
        }
    }

    function utf8Slice(buf, start, end) {
        end = Math.min(buf.length, end);
        var res = [];
        var i = start;

        while (i < end) {
            var firstByte = buf[i];
            var codePoint = null;
            var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

            if (i + bytesPerSequence <= end) {
                var secondByte, thirdByte, fourthByte, tempCodePoint;

                switch (bytesPerSequence) {
                    case 1:
                        if (firstByte < 0x80) {
                            codePoint = firstByte;
                        }

                        break;

                    case 2:
                        secondByte = buf[i + 1];

                        if ((secondByte & 0xC0) === 0x80) {
                            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

                            if (tempCodePoint > 0x7F) {
                                codePoint = tempCodePoint;
                            }
                        }

                        break;

                    case 3:
                        secondByte = buf[i + 1];
                        thirdByte = buf[i + 2];

                        if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

                            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                                codePoint = tempCodePoint;
                            }
                        }

                        break;

                    case 4:
                        secondByte = buf[i + 1];
                        thirdByte = buf[i + 2];
                        fourthByte = buf[i + 3];

                        if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

                            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                                codePoint = tempCodePoint;
                            }
                        }

                }
            }

            if (codePoint === null) {
                codePoint = 0xFFFD;
                bytesPerSequence = 1;
            } else if (codePoint > 0xFFFF) {
                codePoint -= 0x10000;
                res.push(codePoint >>> 10 & 0x3FF | 0xD800);
                codePoint = 0xDC00 | codePoint & 0x3FF;
            }

            res.push(codePoint);
            i += bytesPerSequence;
        }

        return decodeCodePointsArray(res);
    }

    var MAX_ARGUMENTS_LENGTH = 0x1000;

    function decodeCodePointsArray(codePoints) {
        var len = codePoints.length;

        if (len <= MAX_ARGUMENTS_LENGTH) {
            return String.fromCharCode.apply(String, codePoints);
        }

        var res = '';
        var i = 0;

        while (i < len) {
            res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
        }

        return res;
    }

    function asciiSlice(buf, start, end) {
        var ret = '';
        end = Math.min(buf.length, end);

        for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i] & 0x7F);
        }

        return ret;
    }

    function latin1Slice(buf, start, end) {
        var ret = '';
        end = Math.min(buf.length, end);

        for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i]);
        }

        return ret;
    }

    function hexSlice(buf, start, end) {
        var len = buf.length;
        if (!start || start < 0) start = 0;
        if (!end || end < 0 || end > len) end = len;
        var out = '';

        for (var i = start; i < end; ++i) {
            out += toHex(buf[i]);
        }

        return out;
    }

    function utf16leSlice(buf, start, end) {
        var bytes = buf.slice(start, end);
        var res = '';

        for (var i = 0; i < bytes.length; i += 2) {
            res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
        }

        return res;
    }

    Buffer.prototype.slice = function slice(start, end) {
        var len = this.length;
        start = ~~start;
        end = end === undefined ? len : ~~end;

        if (start < 0) {
            start += len;
            if (start < 0) start = 0;
        } else if (start > len) {
            start = len;
        }

        if (end < 0) {
            end += len;
            if (end < 0) end = 0;
        } else if (end > len) {
            end = len;
        }

        if (end < start) end = start;
        var newBuf = this.subarray(start, end);
        newBuf.__proto__ = Buffer.prototype;
        return newBuf;
    };

    function checkOffset(offset, ext, length) {
        if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
        if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
    }

    Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
        offset = offset >>> 0;
        byteLength = byteLength >>> 0;
        if (!noAssert) checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;

        while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
        }

        return val;
    };

    Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
        offset = offset >>> 0;
        byteLength = byteLength >>> 0;

        if (!noAssert) {
            checkOffset(offset, byteLength, this.length);
        }

        var val = this[offset + --byteLength];
        var mul = 1;

        while (byteLength > 0 && (mul *= 0x100)) {
            val += this[offset + --byteLength] * mul;
        }

        return val;
    };

    Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 1, this.length);
        return this[offset];
    };

    Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
    };

    Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
    };

    Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
    };

    Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
    };

    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
        offset = offset >>> 0;
        byteLength = byteLength >>> 0;
        if (!noAssert) checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;

        while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
        }

        mul *= 0x80;
        if (val >= mul) val -= Math.pow(2, 8 * byteLength);
        return val;
    };

    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
        offset = offset >>> 0;
        byteLength = byteLength >>> 0;
        if (!noAssert) checkOffset(offset, byteLength, this.length);
        var i = byteLength;
        var mul = 1;
        var val = this[offset + --i];

        while (i > 0 && (mul *= 0x100)) {
            val += this[offset + --i] * mul;
        }

        mul *= 0x80;
        if (val >= mul) val -= Math.pow(2, 8 * byteLength);
        return val;
    };

    Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 1, this.length);
        if (!(this[offset] & 0x80)) return this[offset];
        return (0xff - this[offset] + 1) * -1;
    };

    Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        var val = this[offset] | this[offset + 1] << 8;
        return val & 0x8000 ? val | 0xFFFF0000 : val;
    };

    Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        var val = this[offset + 1] | this[offset] << 8;
        return val & 0x8000 ? val | 0xFFFF0000 : val;
    };

    Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
    };

    Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
    };

    Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
    };

    Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
    };

    Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
    };

    Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
    };

    function checkInt(buf, value, offset, ext, max, min) {
        if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length) throw new RangeError('Index out of range');
    }

    Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset = offset >>> 0;
        byteLength = byteLength >>> 0;

        if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
        }

        var mul = 1;
        var i = 0;
        this[offset] = value & 0xFF;

        while (++i < byteLength && (mul *= 0x100)) {
            this[offset + i] = value / mul & 0xFF;
        }

        return offset + byteLength;
    };

    Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset = offset >>> 0;
        byteLength = byteLength >>> 0;

        if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
        }

        var i = byteLength - 1;
        var mul = 1;
        this[offset + i] = value & 0xFF;

        while (--i >= 0 && (mul *= 0x100)) {
            this[offset + i] = value / mul & 0xFF;
        }

        return offset + byteLength;
    };

    Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
        this[offset] = value & 0xff;
        return offset + 1;
    };

    Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
        this[offset] = value & 0xff;
        this[offset + 1] = value >>> 8;
        return offset + 2;
    };

    Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
        this[offset] = value >>> 8;
        this[offset + 1] = value & 0xff;
        return offset + 2;
    };

    Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
        this[offset + 3] = value >>> 24;
        this[offset + 2] = value >>> 16;
        this[offset + 1] = value >>> 8;
        this[offset] = value & 0xff;
        return offset + 4;
    };

    Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 0xff;
        return offset + 4;
    };

    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset = offset >>> 0;

        if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);
            checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }

        var i = 0;
        var mul = 1;
        var sub = 0;
        this[offset] = value & 0xFF;

        while (++i < byteLength && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                sub = 1;
            }

            this[offset + i] = (value / mul >> 0) - sub & 0xFF;
        }

        return offset + byteLength;
    };

    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset = offset >>> 0;

        if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);
            checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }

        var i = byteLength - 1;
        var mul = 1;
        var sub = 0;
        this[offset + i] = value & 0xFF;

        while (--i >= 0 && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                sub = 1;
            }

            this[offset + i] = (value / mul >> 0) - sub & 0xFF;
        }

        return offset + byteLength;
    };

    Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
        if (value < 0) value = 0xff + value + 1;
        this[offset] = value & 0xff;
        return offset + 1;
    };

    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
        this[offset] = value & 0xff;
        this[offset + 1] = value >>> 8;
        return offset + 2;
    };

    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
        this[offset] = value >>> 8;
        this[offset + 1] = value & 0xff;
        return offset + 2;
    };

    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
        this[offset] = value & 0xff;
        this[offset + 1] = value >>> 8;
        this[offset + 2] = value >>> 16;
        this[offset + 3] = value >>> 24;
        return offset + 4;
    };

    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
        if (value < 0) value = 0xffffffff + value + 1;
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 0xff;
        return offset + 4;
    };

    function checkIEEE754(buf, value, offset, ext, max, min) {
        if (offset + ext > buf.length) throw new RangeError('Index out of range');
        if (offset < 0) throw new RangeError('Index out of range');
    }

    function writeFloat(buf, value, offset, littleEndian, noAssert) {
        value = +value;
        offset = offset >>> 0;

        if (!noAssert) {
            checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
        }

        ieee754.write(buf, value, offset, littleEndian, 23, 4);
        return offset + 4;
    }

    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
        return writeFloat(this, value, offset, true, noAssert);
    };

    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
        return writeFloat(this, value, offset, false, noAssert);
    };

    function writeDouble(buf, value, offset, littleEndian, noAssert) {
        value = +value;
        offset = offset >>> 0;

        if (!noAssert) {
            checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
        }

        ieee754.write(buf, value, offset, littleEndian, 52, 8);
        return offset + 8;
    }

    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
        return writeDouble(this, value, offset, true, noAssert);
    };

    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
        return writeDouble(this, value, offset, false, noAssert);
    };

    Buffer.prototype.copy = function copy(target, targetStart, start, end) {
        if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
        if (!start) start = 0;
        if (!end && end !== 0) end = this.length;
        if (targetStart >= target.length) targetStart = target.length;
        if (!targetStart) targetStart = 0;
        if (end > 0 && end < start) end = start;
        if (end === start) return 0;
        if (target.length === 0 || this.length === 0) return 0;

        if (targetStart < 0) {
            throw new RangeError('targetStart out of bounds');
        }

        if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
        if (end < 0) throw new RangeError('sourceEnd out of bounds');
        if (end > this.length) end = this.length;

        if (target.length - targetStart < end - start) {
            end = target.length - targetStart + start;
        }

        var len = end - start;

        if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
            this.copyWithin(targetStart, start, end);
        } else if (this === target && start < targetStart && targetStart < end) {
            for (var i = len - 1; i >= 0; --i) {
                target[i + targetStart] = this[i + start];
            }
        } else {
            Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
        }

        return len;
    };

    Buffer.prototype.fill = function fill(val, start, end, encoding) {
        if (typeof val === 'string') {
            if (typeof start === 'string') {
                encoding = start;
                start = 0;
                end = this.length;
            } else if (typeof end === 'string') {
                encoding = end;
                end = this.length;
            }

            if (encoding !== undefined && typeof encoding !== 'string') {
                throw new TypeError('encoding must be a string');
            }

            if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
                throw new TypeError('Unknown encoding: ' + encoding);
            }

            if (val.length === 1) {
                var code = val.charCodeAt(0);

                if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
                    val = code;
                }
            }
        } else if (typeof val === 'number') {
            val = val & 255;
        }

        if (start < 0 || this.length < start || this.length < end) {
            throw new RangeError('Out of range index');
        }

        if (end <= start) {
            return this;
        }

        start = start >>> 0;
        end = end === undefined ? this.length : end >>> 0;
        if (!val) val = 0;
        var i;

        if (typeof val === 'number') {
            for (i = start; i < end; ++i) {
                this[i] = val;
            }
        } else {
            var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
            var len = bytes.length;

            if (len === 0) {
                throw new TypeError('The value "' + val + '" is invalid for argument "value"');
            }

            for (i = 0; i < end - start; ++i) {
                this[i + start] = bytes[i % len];
            }
        }

        return this;
    };

    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

    function base64clean(str) {
        str = str.split('=')[0];
        str = str.trim().replace(INVALID_BASE64_RE, '');
        if (str.length < 2) return '';

        while (str.length % 4 !== 0) {
            str = str + '=';
        }

        return str;
    }

    function toHex(n) {
        if (n < 16) return '0' + n.toString(16);
        return n.toString(16);
    }

    function utf8ToBytes(string, units) {
        units = units || Infinity;
        var codePoint;
        var length = string.length;
        var leadSurrogate = null;
        var bytes = [];

        for (var i = 0; i < length; ++i) {
            codePoint = string.charCodeAt(i);

            if (codePoint > 0xD7FF && codePoint < 0xE000) {
                if (!leadSurrogate) {
                    if (codePoint > 0xDBFF) {
                        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                        continue;
                    } else if (i + 1 === length) {
                        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                        continue;
                    }

                    leadSurrogate = codePoint;
                    continue;
                }

                if (codePoint < 0xDC00) {
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    leadSurrogate = codePoint;
                    continue;
                }

                codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
            } else if (leadSurrogate) {
                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            }

            leadSurrogate = null;

            if (codePoint < 0x80) {
                if ((units -= 1) < 0) break;
                bytes.push(codePoint);
            } else if (codePoint < 0x800) {
                if ((units -= 2) < 0) break;
                bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
            } else if (codePoint < 0x10000) {
                if ((units -= 3) < 0) break;
                bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
            } else if (codePoint < 0x110000) {
                if ((units -= 4) < 0) break;
                bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
            } else {
                throw new Error('Invalid code point');
            }
        }

        return bytes;
    }

    function asciiToBytes(str) {
        var byteArray = [];

        for (var i = 0; i < str.length; ++i) {
            byteArray.push(str.charCodeAt(i) & 0xFF);
        }

        return byteArray;
    }

    function utf16leToBytes(str, units) {
        var c, hi, lo;
        var byteArray = [];

        for (var i = 0; i < str.length; ++i) {
            if ((units -= 2) < 0) break;
            c = str.charCodeAt(i);
            hi = c >> 8;
            lo = c % 256;
            byteArray.push(lo);
            byteArray.push(hi);
        }

        return byteArray;
    }

    function base64ToBytes(str) {
        return base64.toByteArray(base64clean(str));
    }

    function blitBuffer(src, dst, offset, length) {
        for (var i = 0; i < length; ++i) {
            if (i + offset >= dst.length || i >= src.length) break;
            dst[i + offset] = src[i];
        }

        return i;
    }

    function isInstance(obj, type) {
        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
    }

    function numberIsNaN(obj) {
        return obj !== obj;
    }
}, 22399, [10207, 22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    exports.read = function (buffer, offset, isLE, mLen, nBytes) {
        var e, m;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = -7;
        var i = isLE ? nBytes - 1 : 0;
        var d = isLE ? -1 : 1;
        var s = buffer[offset + i];
        i += d;
        e = s & (1 << -nBits) - 1;
        s >>= -nBits;
        nBits += eLen;

        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) { }

        m = e & (1 << -nBits) - 1;
        e >>= -nBits;
        nBits += mLen;

        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) { }

        if (e === 0) {
            e = 1 - eBias;
        } else if (e === eMax) {
            return m ? NaN : (s ? -1 : 1) * Infinity;
        } else {
            m = m + Math.pow(2, mLen);
            e = e - eBias;
        }

        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
    };

    exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
        var e, m, c;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
        var i = isLE ? 0 : nBytes - 1;
        var d = isLE ? 1 : -1;
        var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
        value = Math.abs(value);

        if (isNaN(value) || value === Infinity) {
            m = isNaN(value) ? 1 : 0;
            e = eMax;
        } else {
            e = Math.floor(Math.log(value) / Math.LN2);

            if (value * (c = Math.pow(2, -e)) < 1) {
                e--;
                c *= 2;
            }

            if (e + eBias >= 1) {
                value += rt / c;
            } else {
                value += rt * Math.pow(2, 1 - eBias);
            }

            if (value * c >= 2) {
                e++;
                c /= 2;
            }

            if (e + eBias >= eMax) {
                m = 0;
                e = eMax;
            } else if (e + eBias >= 1) {
                m = (value * c - 1) * Math.pow(2, mLen);
                e = e + eBias;
            } else {
                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
                e = 0;
            }
        }

        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) { }

        e = e << mLen | m;
        eLen += mLen;

        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) { }

        buffer[offset + i - d] |= s * 128;
    };
}, 22402, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
        value: true
    });
    var UNKNOWN_FUNCTION = '<unknown>';

    function parse(stackString) {
        var lines = stackString.split('\n');
        return lines.reduce(function (stack, line) {
            var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);

            if (parseResult) {
                stack.push(parseResult);
            }

            return stack;
        }, []);
    }

    var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
    var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

    function parseChrome(line) {
        var parts = chromeRe.exec(line);

        if (!parts) {
            return null;
        }

        var isNative = parts[2] && parts[2].indexOf('native') === 0;
        var isEval = parts[2] && parts[2].indexOf('eval') === 0;
        var submatch = chromeEvalRe.exec(parts[2]);

        if (isEval && submatch != null) {
            parts[2] = submatch[1];
            parts[3] = submatch[2];
            parts[4] = submatch[3];
        }

        return {
            file: !isNative ? parts[2] : null,
            methodName: parts[1] || UNKNOWN_FUNCTION,
            arguments: isNative ? [parts[2]] : [],
            lineNumber: parts[3] ? +parts[3] : null,
            column: parts[4] ? +parts[4] : null
        };
    }

    var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

    function parseWinjs(line) {
        var parts = winjsRe.exec(line);

        if (!parts) {
            return null;
        }

        return {
            file: parts[2],
            methodName: parts[1] || UNKNOWN_FUNCTION,
            arguments: [],
            lineNumber: +parts[3],
            column: parts[4] ? +parts[4] : null
        };
    }

    var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
    var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

    function parseGecko(line) {
        var parts = geckoRe.exec(line);

        if (!parts) {
            return null;
        }

        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
        var submatch = geckoEvalRe.exec(parts[3]);

        if (isEval && submatch != null) {
            parts[3] = submatch[1];
            parts[4] = submatch[2];
            parts[5] = null;
        }

        return {
            file: parts[3],
            methodName: parts[1] || UNKNOWN_FUNCTION,
            arguments: parts[2] ? parts[2].split(',') : [],
            lineNumber: parts[4] ? +parts[4] : null,
            column: parts[5] ? +parts[5] : null
        };
    }

    var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

    function parseJSC(line) {
        var parts = javaScriptCoreRe.exec(line);

        if (!parts) {
            return null;
        }

        return {
            file: parts[3],
            methodName: parts[1] || UNKNOWN_FUNCTION,
            arguments: [],
            lineNumber: +parts[4],
            column: parts[5] ? +parts[5] : null
        };
    }

    var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

    function parseNode(line) {
        var parts = nodeRe.exec(line);

        if (!parts) {
            return null;
        }

        return {
            file: parts[2],
            methodName: parts[1] || UNKNOWN_FUNCTION,
            arguments: [],
            lineNumber: +parts[3],
            column: parts[4] ? +parts[4] : null
        };
    }

    exports.parse = parse;
}, 22405, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Radio", {
        enumerable: true,
        get: function get() {
            return _radio.Radio;
        }
    });
    Object.defineProperty(exports, "Switch", {
        enumerable: true,
        get: function get() {
            return _switch.Switch;
        }
    });
    Object.defineProperty(exports, "Checkbox", {
        enumerable: true,
        get: function get() {
            return _checkbox.Checkbox;
        }
    });
    Object.defineProperty(exports, "ImageButton", {
        enumerable: true,
        get: function get() {
            return _imageButton.ImageButton;
        }
    });
    Object.defineProperty(exports, "TitleBar", {
        enumerable: true,
        get: function get() {
            return _titleBar.TitleBar;
        }
    });
    Object.defineProperty(exports, "NavigationBar", {
        enumerable: true,
        get: function get() {
            return _navigationBar.NavigationBar;
        }
    });
    Object.defineProperty(exports, "Card", {
        enumerable: true,
        get: function get() {
            return _card.Card;
        }
    });
    Object.defineProperty(exports, "MHCard", {
        enumerable: true,
        get: function get() {
            return _card.MHCard;
        }
    });
    Object.defineProperty(exports, "ModeCard", {
        enumerable: true,
        get: function get() {
            return _card.ModeCard;
        }
    });
    Object.defineProperty(exports, "IndependentCard", {
        enumerable: true,
        get: function get() {
            return _card.IndependentCard;
        }
    });
    Object.defineProperty(exports, "NormalGear", {
        enumerable: true,
        get: function get() {
            return _gear.NormalGear;
        }
    });
    Object.defineProperty(exports, "SlideGear", {
        enumerable: true,
        get: function get() {
            return _gear.SlideGear;
        }
    });
    Object.defineProperty(exports, "DragGear", {
        enumerable: true,
        get: function get() {
            return _gear.DragGear;
        }
    });
    Object.defineProperty(exports, "Separator", {
        enumerable: true,
        get: function get() {
            return _separator.Separator;
        }
    });
    Object.defineProperty(exports, "StringSpinner", {
        enumerable: true,
        get: function get() {
            return _spinner.StringSpinner;
        }
    });
    Object.defineProperty(exports, "NumberSpinner", {
        enumerable: true,
        get: function get() {
            return _spinner.NumberSpinner;
        }
    });
    Object.defineProperty(exports, "MHDatePicker", {
        enumerable: true,
        get: function get() {
            return _mhDatePicker.MHDatePicker;
        }
    });
    Object.defineProperty(exports, "AbstractDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.AbstractDialog;
        }
    });
    Object.defineProperty(exports, "ActionSheet", {
        enumerable: true,
        get: function get() {
            return _dialog.ActionSheet;
        }
    });
    Object.defineProperty(exports, "ChoiceDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.ChoiceDialog;
        }
    });
    Object.defineProperty(exports, "InputDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.InputDialog;
        }
    });
    Object.defineProperty(exports, "LoadingDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.LoadingDialog;
        }
    });
    Object.defineProperty(exports, "MessageDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.MessageDialog;
        }
    });
    Object.defineProperty(exports, "PinCodeDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.PinCodeDialog;
        }
    });
    Object.defineProperty(exports, "ProgressDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.ProgressDialog;
        }
    });
    Object.defineProperty(exports, "ShareDialog", {
        enumerable: true,
        get: function get() {
            return _dialog.ShareDialog;
        }
    });
    Object.defineProperty(exports, "ListItem", {
        enumerable: true,
        get: function get() {
            return _listItem.ListItem;
        }
    });
    Object.defineProperty(exports, "ChoiceItem", {
        enumerable: true,
        get: function get() {
            return _listItem.ChoiceItem;
        }
    });
    Object.defineProperty(exports, "ListItemWithSlider", {
        enumerable: true,
        get: function get() {
            return _listItem.ListItemWithSlider;
        }
    });
    Object.defineProperty(exports, "ListItemWithSwitch", {
        enumerable: true,
        get: function get() {
            return _listItem.ListItemWithSwitch;
        }
    });
    Object.defineProperty(exports, "FadeSlide", {
        enumerable: true,
        get: function get() {
            return _fadeSlide.FadeSlide;
        }
    });
    Object.defineProperty(exports, "BlankPage", {
        enumerable: true,
        get: function get() {
            return _blankPage.BlankPage;
        }
    });
    Object.defineProperty(exports, "TouchableView", {
        enumerable: true,
        get: function get() {
            return _touchableView.TouchableView;
        }
    });
    Object.defineProperty(exports, "Locale", {
        enumerable: true,
        get: function get() {
            return _locale.Locale;
        }
    });
    Object.defineProperty(exports, "ConfigProvider", {
        enumerable: true,
        get: function get() {
            return _configProvider.ConfigProvider;
        }
    });

    var _radio = _$$_REQUIRE(_dependencyMap[0]);

    var _switch = _$$_REQUIRE(_dependencyMap[1]);

    var _checkbox = _$$_REQUIRE(_dependencyMap[2]);

    var _imageButton = _$$_REQUIRE(_dependencyMap[3]);

    var _titleBar = _$$_REQUIRE(_dependencyMap[4]);

    var _navigationBar = _$$_REQUIRE(_dependencyMap[5]);

    var _card = _$$_REQUIRE(_dependencyMap[6]);

    var _gear = _$$_REQUIRE(_dependencyMap[7]);

    var _separator = _$$_REQUIRE(_dependencyMap[8]);

    var _spinner = _$$_REQUIRE(_dependencyMap[9]);

    var _mhDatePicker = _$$_REQUIRE(_dependencyMap[10]);

    var _dialog = _$$_REQUIRE(_dependencyMap[11]);

    var _listItem = _$$_REQUIRE(_dependencyMap[12]);

    var _fadeSlide = _$$_REQUIRE(_dependencyMap[13]);

    var _blankPage = _$$_REQUIRE(_dependencyMap[14]);

    var _touchableView = _$$_REQUIRE(_dependencyMap[15]);

    var _locale = _$$_REQUIRE(_dependencyMap[16]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[17]);
}, 22411, [22414, 22447, 22783, 22792, 22798, 22855, 22861, 22879, 22903, 22909, 22921, 22993, 23026, 23047, 23053, 23062, 22933, 22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Radio", {
        enumerable: true,
        get: function get() {
            return _Radio.default;
        }
    });

    var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22414, [14305, 22417]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

    var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var Radio = function (_Component) {
        (0, _inherits2.default)(Radio, _Component);

        function Radio(props) {
            var _this;

            (0, _classCallCheck2.default)(this, Radio);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).call(this, props));
            _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');

            _this.changeStatus = function (scaleTo, opacityTo) {
                var _this$state = _this.state,
                    scale = _this$state.scale,
                    opacity = _this$state.opacity;

                _reactNative.Animated.parallel([_reactNative.Animated.spring(scale, {
                    toValue: scaleTo,
                    bounciness: 15,
                    speed: 9
                }), _reactNative.Animated.timing(opacity, {
                    toValue: opacityTo,
                    duration: 200
                })]).start();
            };

            _this.changeRadioCheck = function () {
                var _this$props = _this.props,
                    changeCheck = _this$props.changeCheck,
                    id = _this$props.id;
                changeCheck(id);
            };

            (0, _reportDecorator.referenceReport)('Radio');
            var isChecked = props.isChecked;
            var circleOpacity = isChecked ? 1 : 0;
            var circleScale = isChecked ? 0.5 : 0.4;
            _this.state = {
                scale: new _reactNative.Animated.Value(circleScale),
                opacity: new _reactNative.Animated.Value(circleOpacity)
            };
            return _this;
        }

        (0, _createClass2.default)(Radio, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(nextProps) {
                var isChecked = nextProps.isChecked;

                if (isChecked) {
                    this.changeStatus(0.5, 1);
                } else {
                    this.changeStatus(0.4, 0);
                }
            }
        }, {
            key: "render",
            value: function render() {
                var colorScheme = this.context.colorScheme;
                var _this$props2 = this.props,
                    smallCircleBg = _this$props2.smallCircleBg,
                    isChecked = _this$props2.isChecked,
                    bigCircleStyle = _this$props2.bigCircleStyle,
                    checkedBigCircleStyle = _this$props2.checkedBigCircleStyle,
                    disabled = _this$props2.disabled,
                    accessible = _this$props2.accessible,
                    accessibilityRole = _this$props2.accessibilityRole,
                    label = _this$props2.label,
                    accessibilityLabel = _this$props2.accessibilityLabel,
                    accessibilityHint = _this$props2.accessibilityHint,
                    accessibilityState = _this$props2.accessibilityState;
                var borderColorChecked = checkedBigCircleStyle.borderColorChecked,
                    backgroundColorChecked = checkedBigCircleStyle.backgroundColorChecked,
                    borderColor = checkedBigCircleStyle.borderColor,
                    backgroundColor = checkedBigCircleStyle.backgroundColor;
                var _this$state2 = this.state,
                    scale = _this$state2.scale,
                    opacity = _this$state2.opacity;
                var colorSmallCircleBg = smallCircleBg || this.colorSwitchCircle.color(colorScheme);
                return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
                    onPress: this.changeRadioCheck,
                    disabled: disabled
                }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
                    accessibilityRole: accessibilityRole || _accessibilityHelper.AccessibilityRoles.radio,
                    accessibilityLabel: accessibilityLabel || label,
                    accessibilityState: accessibilityState || {
                        disabled: !!disabled,
                        checked: !!isChecked
                    }
                }))), _react.default.createElement(_reactNative.View, {
                    style: [styles.btn, bigCircleStyle, {
                        borderColor: isChecked ? borderColorChecked : borderColor,
                        backgroundColor: isChecked ? backgroundColorChecked : backgroundColor,
                        opacity: disabled ? 0.3 : 1
                    }]
                }, _react.default.createElement(_reactNative.Animated.View, {
                    style: [styles.smallCircle, bigCircleStyle, {
                        borderWidth: 0,
                        transform: [{
                            scale: scale
                        }],
                        opacity: opacity,
                        backgroundColor: colorSmallCircleBg
                    }]
                })));
            }
        }]);
        return Radio;
    }(_react.Component);

    Radio.contextType = _configProvider.ConfigContext;
    Radio.defaultProps = {
        bigCircleStyle: {},
        checkedBigCircleStyle: {
            borderColorChecked: '#060',
            backgroundColorChecked: '#090',
            borderColor: '#666',
            backgroundColor: '#999'
        },
        isChecked: false,
        changeCheck: function changeCheck() { },
        id: -1,
        disabled: false
    };
    Radio.propTypes = (0, _objectSpread2.default)({
        bigCircleStyle: _propTypes.default.object,
        checkedBigCircleStyle: _propTypes.default.object,
        smallCircleBg: _propTypes.default.string,
        isChecked: _propTypes.default.bool,
        disabled: _propTypes.default.bool,
        changeCheck: _propTypes.default.func,
        id: _propTypes.default.number
    }, _accessibilityHelper.AccessibilityPropTypes);

    var styles = _reactNative.StyleSheet.create({
        btn: {
            justifyContent: 'center',
            alignItems: 'center',
            borderStyle: 'solid',
            borderWidth: 2,
            borderRadius: 40,
            width: 80,
            height: 80
        },
        smallCircle: {
            borderRadius: 40,
            width: 80,
            height: 80
        }
    });

    var _default = Radio;
    exports.default = _default;
}, 22417, [14308, 14305, 14344, 14314, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22420, 22423, 22426, 22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.getAccessibilityConfig = getAccessibilityConfig;
    exports.AccessibilityPropTypes = exports.AccessibilityRoles = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var isAndroid = _reactNative.Platform.OS === 'android';
    var roles = ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'];
    var AccessibilityRoles = roles.reduce(function (total, role) {
        total[role] = role;
        return total;
    }, {});
    exports.AccessibilityRoles = AccessibilityRoles;
    var AccessibilityPropTypes = {
        accessible: _propTypes.default.bool,
        accessibilityRole: _propTypes.default.oneOf(roles),
        accessibilityLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
        accessibilityHint: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
        accessibilityState: _propTypes.default.shape({
            disabled: _propTypes.default.bool,
            selected: _propTypes.default.bool,
            checked: _propTypes.default.bool,
            busy: _propTypes.default.bool,
            expanded: _propTypes.default.bool
        }),
        accessibilityValue: _propTypes.default.shape({
            min: _propTypes.default.number,
            max: _propTypes.default.number,
            now: _propTypes.default.number,
            text: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
        })
    };
    exports.AccessibilityPropTypes = AccessibilityPropTypes;

    function getAccessibilityConfig() {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            accessible = _ref.accessible,
            accessibilityRole = _ref.accessibilityRole,
            accessibilityLabel = _ref.accessibilityLabel,
            accessibilityHint = _ref.accessibilityHint,
            accessibilityState = _ref.accessibilityState,
            accessibilityValue = _ref.accessibilityValue;

        var isAccessible = accessible !== false;
        var accessibility = {
            accessible: isAccessible
        };

        if (!accessibility.accessible) {
            if (isAndroid) {
                accessibility.focusable = false;
            }

            return accessibility;
        }

        accessibility.accessibilityRole = String(accessibilityRole || AccessibilityRoles.none);

        if (accessibilityLabel !== undefined && accessibilityLabel !== null) {
            accessibility.accessibilityLabel = String(accessibilityLabel);
        } else if ([AccessibilityRoles.image, AccessibilityRoles.imagebutton].indexOf(accessibility.accessibilityRole) !== -1) {
            accessibility.accessibilityLabel = ' ';
        }

        if (accessibilityHint !== undefined && accessibilityHint !== null) {
            accessibility.accessibilityHint = String(accessibilityHint);
        }

        if (accessibilityState && typeof accessibilityState === 'object') {
            accessibility.accessibilityState = accessibilityState;
        }

        if (accessibilityValue && typeof accessibilityValue === 'object') {
            accessibility.accessibilityValue = accessibilityValue;
        }

        return accessibility;
    }
}, 22420, [14305, 10033, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.withReport = withReport;
    exports.referenceReport = undefined;

    var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

    var MIOTPackage = _reactNative.NativeModules.MIOTPackage;

    function _doReport(moduleName, methodName, success, cost) {
        var errcode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 200404;

        if (!MIOTPackage) {
            return;
        }

        var reportInfo = {
            module: moduleName,
            method: methodName,
            success: success,
            cost: cost,
            tip: '6.0.0.0.114',
            errcode: errcode
        };
        MIOTPackage.apiReport(reportInfo);
    }

    var referenceReport = function referenceReport(moduleName) {
        var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'constructor';
        {
            _doReport(moduleName, methodName, true, 0);
        }
    };

    exports.referenceReport = referenceReport;

    function withReport(target, moduleName) {
        if (MIOTPackage && typeof Proxy === 'function') {
            return new Proxy(target, {
                construct: function construct(target, args) {
                    referenceReport(moduleName);
                    return (0, _construct2.default)(target, (0, _toConsumableArray2.default)(args));
                }
            });
        } else {
            return target;
        }
    }
}, 22423, [14305, 14464, 14359, 10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ConfigProvider = exports.ConfigConsumer = exports.ConfigContext = undefined;

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _themes = _$$_REQUIRE(_dependencyMap[9]);

    var _mihome = _$$_REQUIRE(_dependencyMap[10]);

    var ConfigContext = (0, _react.createContext)({
        language: _mihome.language,
        theme: (0, _themes.getTheme)('default', _mihome.currentDarkMode),
        colorScheme: _mihome.currentDarkMode,
        environment: 'mihome'
    });
    exports.ConfigContext = ConfigContext;
    var ConfigConsumer = ConfigContext.Consumer;
    exports.ConfigConsumer = ConfigConsumer;

    var ConfigProvider = function (_PureComponent) {
        (0, _inherits2.default)(ConfigProvider, _PureComponent);

        function ConfigProvider() {
            (0, _classCallCheck2.default)(this, ConfigProvider);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConfigProvider).apply(this, arguments));
        }

        (0, _createClass2.default)(ConfigProvider, [{
            key: "render",
            value: function render() {
                var config = {
                    language: this.props.language || 'zh',
                    theme: (0, _themes.getTheme)('default', this.props.colorScheme || 'light'),
                    colorScheme: this.props.colorScheme || 'light',
                    environment: this.props.environment || 'native'
                };
                return _react.default.createElement(ConfigContext.Provider, {
                    value: (0, _objectSpread2.default)({}, config)
                }, this.props.children);
            }
        }]);
        return ConfigProvider;
    }(_react.PureComponent);

    exports.ConfigProvider = ConfigProvider;
}, 22426, [14308, 14305, 14314, 14320, 14323, 14371, 14377, 14386, 10297, 22429, 22444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.getTheme = getTheme;
    Object.defineProperty(exports, "ITheme", {
        enumerable: true,
        get: function get() {
            return _ITheme.default;
        }
    });

    var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _ITheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var themes = {
        default: _default.default
    };

    function getTheme() {
        var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
        var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'light';
        var result = {};
        Object.entries(themes[theme]).forEach(function (_ref) {
            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
                key = _ref2[0],
                value = _ref2[1];

            result[key] = value[colorScheme];
        });
        return result;
    }
}, 22429, [14305, 14347, 22432, 22441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var defaultTheme = {
        colorPrimary: new _DynamicColor.default('#32bac0', '#25a9af'),
        colorPrimaryFocus: new _DynamicColor.default('#25a9af', '#158b90'),
        colorPrimaryDisabled: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(37,169,175, 0.3)'),
        colorWarn: new _DynamicColor.default('#f43f31', '#d92719'),
        colorWarnFocus: new _DynamicColor.default('#d53c32', '#b62920'),
        colorWarnDisabled: new _DynamicColor.default('rgba(244,63,49,0.3)', '#b62920'),
        colorBlack: new _DynamicColor.default('#000000', '#e6e6e6'),
        colorGrayHeavier: new _DynamicColor.default('#333333', '#cccccc'),
        colorGrayHeavy: new _DynamicColor.default('#4c4c4c', '#b3b3b3'),
        colorGrayNormal: new _DynamicColor.default('#666666', '#999999'),
        colorGrayLight: new _DynamicColor.default('#7f7f7f', '#808080'),
        colorGrayLighter: new _DynamicColor.default('#999999', '#666666'),
        colorWhite: new _DynamicColor.default('#ffffff', '#000000'),
        colorBtnGreenNor: new _DynamicColor.default('#32bac0', '#25a9af'),
        colorBtnGreenPres: new _DynamicColor.default('#25a9af', '#158b90'),
        colorBtnGrayNor: new _DynamicColor.default('#f5f5f5', '#333333'),
        colorBtnGrayPres: new _DynamicColor.default('#e2e2e2', '#666666'),
        colorBackground: new _DynamicColor.default('#f7f7f7', '#000000'),
        colorOverLayerBlack: new _DynamicColor.default('rgba(0,0,0,0.4)', 'rgba(0,0,0,0.6)'),
        colorSeparator: new _DynamicColor.default('#e5e5e5', '#262626'),
        colorForeground: new _DynamicColor.default('#ffffff', '#1a1a1a')
    };
    var _default = defaultTheme;
    exports.default = _default;
}, 22432, [14305, 22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _check = _$$_REQUIRE(_dependencyMap[3]);

    var DynamicColor = function () {
        function DynamicColor(light, dark) {
            (0, _classCallCheck2.default)(this, DynamicColor);

            if (_check.isIOS && _check.isMiHome) {
                this.light = "xm" + light;
                this.dark = "xm" + dark;
            } else {
                this.light = light;
                this.dark = dark;
            }
        }

        (0, _createClass2.default)(DynamicColor, [{
            key: "color",
            value: function color() {
                var colorScheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
                return colorScheme === 'light' ? this.light : this.dark;
            }
        }]);
        return DynamicColor;
    }();

    var _default = DynamicColor;
    exports.default = _default;
}, 22435, [14305, 14320, 14323, 22438]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.isAndroid = exports.isIOS = exports.isMiHome = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var MIOTPackage = _reactNative.NativeModules.MIOTPackage;
    var isMiHome = !!MIOTPackage;
    exports.isMiHome = isMiHome;
    var isIOS = _reactNative.Platform.OS === 'ios';
    exports.isIOS = isIOS;
    var isAndroid = _reactNative.Platform.OS === 'android';
    exports.isAndroid = isAndroid;
}, 22438, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    ;
}, 22441, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.language = exports.currentDarkMode = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var MIOTHost = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.MHPluginSDK : _reactNative.NativeModules.MIOTHost;
    var MIOTService = _reactNative.NativeModules.MIOTService;
    var LanguageNameMap = _reactNative.Platform.OS === 'ios' ? {
        zh: ['zh_CN', 'zh-CN', 'zh-Hans'],
        zh_tw: ['zh_TW', 'zh-TW', 'zh-Hant'],
        zh_hk: ['zh_HK', 'zh-HK', 'zh-Hant-HK'],
        zh_bo: /bo($|_)/,
        en: /^en($|_)/,
        es: /^es($|_)/,
        ko: /^ko($|_)/,
        ru: /^ru($|_)/,
        it: /^it($|_)/,
        fr: /^fr($|_)/,
        de: /^de($|_)/,
        id: /^id($|_)/,
        pl: /^pl($|_)/,
        vi: /^vi($|_)/,
        ja: /^ja($|_)/,
        th: /^th($|_)/,
        pt: /^pt($|_)/,
        nl: /^nl($|_)/,
        ar: /^ar($|_)/,
        tr: /^tr($|_)/
    } : {
        zh: ['zh', 'zh_CN'],
        zh_tw: 'zh_TW',
        zh_hk: 'zh_HK',
        zh_bo: /bo($|_)/,
        en: /^en($|_)/,
        es: /^es($|_)/,
        ko: /^ko($|_)/,
        ru: /^ru($|_)/,
        it: /^it($|_)/,
        fr: /^fr($|_)/,
        de: /^de($|_)/,
        id: /(^|_)id($|_)/,
        pl: /^pl($|_)/,
        vi: /^vi($|_)/,
        ja: /^ja($|_)/,
        th: /^th($|_)/,
        pt: /^pt($|_)/,
        nl: /^nl($|_)/,
        ar: /^ar($|_)/,
        tr: /^tr($|_)/
    };

    function getStandardLanguageName(name, nameMap) {
        if (!name) return 'en';

        var std = function std(n) {
            return n.toLowerCase().replace(/-/g, '_');
        };

        name = std(name);
        var ns = Object.keys(nameMap);

        for (var i = 0; i < ns.length; i++) {
            var lang = ns[i];
            var nm = nameMap[lang];
            if (!nm) continue;

            if (Array.isArray(nm)) {
                for (var j = 0; j < nm.length; j++) {
                    if (typeof nm[j].test === 'function') {
                        if (nm[j].test(name)) return lang;
                    } else if (name == std(nm[j])) {
                        return lang;
                    }
                }
            } else if (typeof nm === 'function') {
                if (nm(name)) return lang;
            } else if (typeof nm.test === 'function') {
                if (nm.test(name)) return lang;
            } else if (name == std(nm)) {
                return lang;
            }
        }

        return 'en';
    }

    function getSystemLanguage() {
        return getStandardLanguageName((MIOTHost == null ? undefined : MIOTHost.language) || 'en', LanguageNameMap);
    }

    var currentDarkMode = (MIOTService == null ? undefined : MIOTService.currentDarkMode) || 'light';
    exports.currentDarkMode = currentDarkMode;
    var language = getSystemLanguage();
    exports.language = language;
}, 22444, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Switch", {
        enumerable: true,
        get: function get() {
            return _Switch.default;
        }
    });

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22447, [14305, 22450]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

    var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var OFF_COLOR = '#f0f0f0';
    var BORDER_COLOR = 'rgba(0,0,0,0.1)';
    var BACK_WIDTH = 44;
    var BACK_HEIGHT = 24;
    var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
    var ratio = 6.5;
    var minMargin = 2.5;

    var Switch = function (_React$Component) {
        (0, _inherits2.default)(Switch, _React$Component);

        function Switch(props) {
            var _this;

            (0, _classCallCheck2.default)(this, Switch);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).call(this, props));
            _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');
            _this.colorSwitchOff = new _DynamicColor.default('#f0f0f0', '#333333');
            (0, _reportDecorator.referenceReport)('Switch');
            _this.state = {
                value: _this.props.value
            };
            var _this$props$style = _this.props.style,
                width = _this$props$style.width,
                height = _this$props$style.height;
            var backWidth = width || BACK_WIDTH;
            var backHeight = height || BACK_HEIGHT;
            var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
            var circleSize = backHeight - 2 * margin;
            _this.offsetXMax = backWidth - backHeight;
            var toValue = _this.props.value ? _this.offsetXMax : 0;
            _this.offsetX = new _reactNative.Animated.Value(toValue);
            _this.backStyle = {
                width: backWidth,
                height: backHeight,
                borderRadius: backHeight / 2
            };
            _this.circleStyle = {
                margin: margin,
                width: circleSize,
                height: circleSize,
                borderRadius: circleSize / 2
            };
            return _this;
        }

        (0, _createClass2.default)(Switch, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.value !== this.state.value) {
                    this.setState({
                        value: newProps.value
                    }, this.animated);
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var _this$context = this.context,
                    theme = _this$context.theme,
                    colorScheme = _this$context.colorScheme;
                var onTintColor = this.props.onTintColor ? this.props.onTintColor : theme.colorPrimary;
                var tintColor = this.props.tintColor ? this.props.tintColor : this.colorSwitchOff.color(colorScheme);
                var backgroundColor = this.state.value ? onTintColor : tintColor;
                var opacity = this.props.disabled ? 0.3 : 1;
                return _react.default.createElement(_reactNative.View, {
                    style: [styles.container, {
                        opacity: opacity
                    }]
                }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
                    style: [styles.back, this.backStyle, {
                        backgroundColor: backgroundColor
                    }],
                    disabled: this.props.disabled,
                    activeOpacity: 0.8,
                    onPress: function onPress() {
                        return _this2._onValueChange();
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
                    accessibilityRole: this.props.accessibilityRole || _accessibilityHelper.AccessibilityRoles.switch,
                    accessibilityState: this.props.accessibilityState || {
                        disabled: this.props.disabled,
                        checked: !!this.state.value
                    }
                }))), this.context.colorScheme === 'dark' ? _react.default.createElement(_reactNative.Animated.Image, {
                    style: [styles.circle, this.circleStyle, {
                        backgroundColor: this.colorSwitchCircle.color(colorScheme),
                        transform: [{
                            translateX: this.offsetX
                        }]
                    }]
                }) : _react.default.createElement(_reactNative.Animated.View, {
                    style: [styles.circle, this.circleStyle, {
                        backgroundColor: this.colorSwitchCircle.color(colorScheme),
                        transform: [{
                            translateX: this.offsetX
                        }]
                    }]
                })));
            }
        }, {
            key: "animated",
            value: function animated() {
                var toValue = this.state.value ? this.offsetXMax : 0;

                _reactNative.Animated.spring(this.offsetX, {
                    toValue: toValue,
                    bounciness: 9,
                    speed: 9
                }).start();
            }
        }, {
            key: "_onValueChange",
            value: function _onValueChange() {
                var value = !this.state.value;

                if (this.props.onValueChange) {
                    this.props.onValueChange(value);
                }

                this.setState({
                    value: value
                }, this.animated);
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.animated();
            }
        }]);
        return Switch;
    }(_react.default.Component);

    Switch.contextType = _configProvider.ConfigContext;
    Switch.propTypes = (0, _objectSpread2.default)({
        value: _propTypes.default.bool.isRequired,
        style: _propTypes.default.object,
        onTintColor: _propTypes.default.string,
        tintColor: _propTypes.default.string,
        disabled: _propTypes.default.bool,
        onValueChange: _propTypes.default.func.isRequired
    }, _accessibilityHelper.AccessibilityPropTypes);
    Switch.defaultProps = {
        value: false,
        style: {},
        onTintColor: _resources.Styles.common.MHGreen,
        tintColor: OFF_COLOR,
        disabled: false
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        back: {
            justifyContent: 'center',
            borderWidth: BORDER_WIDTH,
            borderColor: BORDER_COLOR
        },
        circle: {
            position: 'absolute',
            borderWidth: BORDER_WIDTH,
            borderColor: BORDER_COLOR,
            backgroundColor: '#fff'
        }
    });

    var _default = Switch;
    exports.default = _default;
}, 22450, [14305, 14344, 14314, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22426, 22435, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Images", {
        enumerable: true,
        get: function get() {
            return _Images.default;
        }
    });
    Object.defineProperty(exports, "Styles", {
        enumerable: true,
        get: function get() {
            return _Styles.default;
        }
    });

    var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
}, 22453, [14305, 22456, 22780]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;
    var _default = {
        common: {
            right_arrow: _$$_REQUIRE(_dependencyMap[0]),
            close: _$$_REQUIRE(_dependencyMap[1]),
            mihome: _$$_REQUIRE(_dependencyMap[2]),
            selectIcon: _$$_REQUIRE(_dependencyMap[3])
        },
        navigation: {
            dot: _$$_REQUIRE(_dependencyMap[4]),
            dark: {
                add: {
                    normal: _$$_REQUIRE(_dependencyMap[5]),
                    press: _$$_REQUIRE(_dependencyMap[6]),
                    disable: _$$_REQUIRE(_dependencyMap[7])
                },
                back: {
                    normal: _$$_REQUIRE(_dependencyMap[8]),
                    press: _$$_REQUIRE(_dependencyMap[9]),
                    disable: _$$_REQUIRE(_dependencyMap[10])
                },
                close: {
                    normal: _$$_REQUIRE(_dependencyMap[11]),
                    press: _$$_REQUIRE(_dependencyMap[12]),
                    disable: _$$_REQUIRE(_dependencyMap[13])
                },
                collect: {
                    normal: _$$_REQUIRE(_dependencyMap[14]),
                    press: _$$_REQUIRE(_dependencyMap[15]),
                    disable: _$$_REQUIRE(_dependencyMap[16])
                },
                complete: {
                    normal: _$$_REQUIRE(_dependencyMap[17]),
                    press: _$$_REQUIRE(_dependencyMap[18]),
                    disable: _$$_REQUIRE(_dependencyMap[19])
                },
                delete: {
                    normal: _$$_REQUIRE(_dependencyMap[20]),
                    press: _$$_REQUIRE(_dependencyMap[21]),
                    disable: _$$_REQUIRE(_dependencyMap[22])
                },
                detail: {
                    normal: _$$_REQUIRE(_dependencyMap[23]),
                    press: _$$_REQUIRE(_dependencyMap[24]),
                    disable: _$$_REQUIRE(_dependencyMap[25])
                },
                more: {
                    normal: _$$_REQUIRE(_dependencyMap[26]),
                    press: _$$_REQUIRE(_dependencyMap[27]),
                    disable: _$$_REQUIRE(_dependencyMap[28])
                },
                next: {
                    normal: _$$_REQUIRE(_dependencyMap[29]),
                    press: _$$_REQUIRE(_dependencyMap[30]),
                    disable: _$$_REQUIRE(_dependencyMap[31])
                },
                profile: {
                    normal: _$$_REQUIRE(_dependencyMap[32]),
                    press: _$$_REQUIRE(_dependencyMap[33]),
                    disable: _$$_REQUIRE(_dependencyMap[34])
                },
                qr: {
                    normal: _$$_REQUIRE(_dependencyMap[35]),
                    press: _$$_REQUIRE(_dependencyMap[36]),
                    disable: _$$_REQUIRE(_dependencyMap[37])
                },
                search: {
                    normal: _$$_REQUIRE(_dependencyMap[38]),
                    press: _$$_REQUIRE(_dependencyMap[39]),
                    disable: _$$_REQUIRE(_dependencyMap[40])
                },
                select_all: {
                    normal: _$$_REQUIRE(_dependencyMap[41]),
                    press: _$$_REQUIRE(_dependencyMap[42]),
                    disable: _$$_REQUIRE(_dependencyMap[43])
                },
                selected_all: {
                    normal: _$$_REQUIRE(_dependencyMap[44]),
                    press: _$$_REQUIRE(_dependencyMap[45]),
                    disable: _$$_REQUIRE(_dependencyMap[46])
                },
                setting: {
                    normal: _$$_REQUIRE(_dependencyMap[47]),
                    press: _$$_REQUIRE(_dependencyMap[48]),
                    disable: _$$_REQUIRE(_dependencyMap[49])
                },
                share: {
                    normal: _$$_REQUIRE(_dependencyMap[50]),
                    press: _$$_REQUIRE(_dependencyMap[51]),
                    disable: _$$_REQUIRE(_dependencyMap[52])
                },
                edit: {
                    normal: _$$_REQUIRE(_dependencyMap[53]),
                    press: _$$_REQUIRE(_dependencyMap[54]),
                    disable: _$$_REQUIRE(_dependencyMap[55])
                },
                record: {
                    normal: _$$_REQUIRE(_dependencyMap[56]),
                    press: _$$_REQUIRE(_dependencyMap[57]),
                    disable: _$$_REQUIRE(_dependencyMap[58])
                }
            },
            light: {
                add: {
                    normal: _$$_REQUIRE(_dependencyMap[59]),
                    press: _$$_REQUIRE(_dependencyMap[60]),
                    disable: _$$_REQUIRE(_dependencyMap[61])
                },
                back: {
                    normal: _$$_REQUIRE(_dependencyMap[62]),
                    press: _$$_REQUIRE(_dependencyMap[63]),
                    disable: _$$_REQUIRE(_dependencyMap[64])
                },
                close: {
                    normal: _$$_REQUIRE(_dependencyMap[65]),
                    press: _$$_REQUIRE(_dependencyMap[66]),
                    disable: _$$_REQUIRE(_dependencyMap[67])
                },
                collect: {
                    normal: _$$_REQUIRE(_dependencyMap[68]),
                    press: _$$_REQUIRE(_dependencyMap[69]),
                    disable: _$$_REQUIRE(_dependencyMap[70])
                },
                complete: {
                    normal: _$$_REQUIRE(_dependencyMap[71]),
                    press: _$$_REQUIRE(_dependencyMap[72]),
                    disable: _$$_REQUIRE(_dependencyMap[73])
                },
                delete: {
                    normal: _$$_REQUIRE(_dependencyMap[74]),
                    press: _$$_REQUIRE(_dependencyMap[75]),
                    disable: _$$_REQUIRE(_dependencyMap[76])
                },
                detail: {
                    normal: _$$_REQUIRE(_dependencyMap[77]),
                    press: _$$_REQUIRE(_dependencyMap[78]),
                    disable: _$$_REQUIRE(_dependencyMap[79])
                },
                more: {
                    normal: _$$_REQUIRE(_dependencyMap[80]),
                    press: _$$_REQUIRE(_dependencyMap[81]),
                    disable: _$$_REQUIRE(_dependencyMap[82])
                },
                next: {
                    normal: _$$_REQUIRE(_dependencyMap[83]),
                    press: _$$_REQUIRE(_dependencyMap[84]),
                    disable: _$$_REQUIRE(_dependencyMap[85])
                },
                profile: {
                    normal: _$$_REQUIRE(_dependencyMap[86]),
                    press: _$$_REQUIRE(_dependencyMap[87]),
                    disable: _$$_REQUIRE(_dependencyMap[88])
                },
                qr: {
                    normal: _$$_REQUIRE(_dependencyMap[89]),
                    press: _$$_REQUIRE(_dependencyMap[90]),
                    disable: _$$_REQUIRE(_dependencyMap[91])
                },
                search: {
                    normal: _$$_REQUIRE(_dependencyMap[92]),
                    press: _$$_REQUIRE(_dependencyMap[93]),
                    disable: _$$_REQUIRE(_dependencyMap[94])
                },
                select_all: {
                    normal: _$$_REQUIRE(_dependencyMap[95]),
                    press: _$$_REQUIRE(_dependencyMap[96]),
                    disable: _$$_REQUIRE(_dependencyMap[97])
                },
                selected_all: {
                    normal: _$$_REQUIRE(_dependencyMap[98]),
                    press: _$$_REQUIRE(_dependencyMap[99]),
                    disable: _$$_REQUIRE(_dependencyMap[100])
                },
                setting: {
                    normal: _$$_REQUIRE(_dependencyMap[101]),
                    press: _$$_REQUIRE(_dependencyMap[102]),
                    disable: _$$_REQUIRE(_dependencyMap[103])
                },
                share: {
                    normal: _$$_REQUIRE(_dependencyMap[104]),
                    press: _$$_REQUIRE(_dependencyMap[105]),
                    disable: _$$_REQUIRE(_dependencyMap[106])
                },
                edit: {
                    normal: _$$_REQUIRE(_dependencyMap[107]),
                    press: _$$_REQUIRE(_dependencyMap[108]),
                    disable: _$$_REQUIRE(_dependencyMap[109])
                },
                record: {
                    normal: _$$_REQUIRE(_dependencyMap[110]),
                    press: _$$_REQUIRE(_dependencyMap[111]),
                    disable: _$$_REQUIRE(_dependencyMap[112])
                }
            }
        },
        loading: {
            dark: {
                empty: _$$_REQUIRE(_dependencyMap[113])
            },
            light: {
                empty: _$$_REQUIRE(_dependencyMap[114])
            }
        }
    };
    exports.default = _default;
}, 22456, [22459, 22462, 22465, 22468, 22471, 22474, 22477, 22480, 22483, 22486, 22489, 22492, 22495, 22498, 22501, 22504, 22507, 22510, 22513, 22516, 22519, 22522, 22525, 22528, 22531, 22534, 22537, 22540, 22543, 22546, 22549, 22552, 22555, 22558, 22561, 22564, 22567, 22570, 22573, 22576, 22579, 22582, 22585, 22588, 22591, 22594, 22597, 22600, 22603, 22606, 22609, 22612, 22615, 22618, 22621, 22624, 23188, 23191, 23194, 22627, 22630, 22633, 22636, 22639, 22642, 22645, 22648, 22651, 22654, 22657, 22660, 22663, 22666, 22669, 22672, 22675, 22678, 22681, 22684, 22687, 22690, 22693, 22696, 22699, 22702, 22705, 22708, 22711, 22714, 22717, 22720, 22723, 22726, 22729, 22732, 22735, 22738, 22741, 22744, 22747, 22750, 22753, 22756, 22759, 22762, 22765, 22768, 22771, 22774, 22777, 23197, 23200, 23203, 23206, 23209]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
        "width": 24,
        "height": 24,
        "scales": [1, 1.5, 2, 3, 4],
        "hash": "429182adb27a0752e9ed335169b6e7cd",
        "name": "right_arrow",
        "type": "png"
    });
}, 22459, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
        "width": 20,
        "height": 20,
        "scales": [2, 3],
        "hash": "513efe08c931e5bdfb2d0fade0a99585",
        "name": "close",
        "type": "png"
    });
}, 22462, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
        "width": 170,
        "height": 170,
        "scales": [1],
        "hash": "c749a1206e5e8038ce207871a9d3efdf",
        "name": "mihome",
        "type": "png"
    });
}, 22465, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
        "width": 6,
        "height": 10,
        "scales": [2, 3],
        "hash": "0fa399f5d3ff3ccfa6349b4fadce3ec2",
        "name": "select_icon",
        "type": "png"
    });
}, 22468, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d64f463ebe229908246c9458f507dbf3",
        "name": "dot",
        "type": "png"
    });
}, 22471, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "9bd423b230418efeb7f166e7d58ef6ba",
        "name": "add_n_dark",
        "type": "png"
    });
}, 22474, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "eadfcd6310ce848ab88c395d24515f67",
        "name": "add_p_dark",
        "type": "png"
    });
}, 22477, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "212ae3dd040f06a3b7275f07bac925ac",
        "name": "add_d_dark",
        "type": "png"
    });
}, 22480, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "0d175986353189419a421f22df98236c",
        "name": "back_n_dark",
        "type": "png"
    });
}, 22483, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "61088f5ae4334497423ed4ba4d0efd57",
        "name": "back_p_dark",
        "type": "png"
    });
}, 22486, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d71a75220ff84f218dc74b8c9d643d9d",
        "name": "back_d_dark",
        "type": "png"
    });
}, 22489, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "3aa862c6c1a8e0d751e6c0060ec8e936",
        "name": "close_n_dark",
        "type": "png"
    });
}, 22492, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "67a1d09012ca0bf153eec6d399bdf8cb",
        "name": "close_p_dark",
        "type": "png"
    });
}, 22495, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "38396687cc2aed9e12a24f0e4d8d6d52",
        "name": "close_d_dark",
        "type": "png"
    });
}, 22498, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "c0aa419f7ab32a31ece8cbe06f3df918",
        "name": "collect_n_dark",
        "type": "png"
    });
}, 22501, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "92d1cf303e84b2f49636c7f1774bb117",
        "name": "collect_p_dark",
        "type": "png"
    });
}, 22504, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "f63b4a7eadbd183ff6f0528a77f85fa9",
        "name": "collect_d_dark",
        "type": "png"
    });
}, 22507, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "0a4bc632ff6618367f4a8268b94539e0",
        "name": "complete_n_dark",
        "type": "png"
    });
}, 22510, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "e1ce6460ed6bea45b04c8408365aeb55",
        "name": "complete_p_dark",
        "type": "png"
    });
}, 22513, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "aea57b6079a28e34f5cdf64aeefa9d10",
        "name": "complete_d_dark",
        "type": "png"
    });
}, 22516, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "5b4f878534e8df6f1db628336f7942a1",
        "name": "delete_n_dark",
        "type": "png"
    });
}, 22519, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "5fe3bd8bd680430c3c0893cd838509ac",
        "name": "delete_p_dark",
        "type": "png"
    });
}, 22522, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "a62a8690a84ac16c06ddc49e2500035a",
        "name": "delete_d_dark",
        "type": "png"
    });
}, 22525, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "06d360cd217e890d502905d042d8ab70",
        "name": "detail_n_dark",
        "type": "png"
    });
}, 22528, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "36adf09873ef8f4cb8e9c3293a073b2c",
        "name": "detail_p_dark",
        "type": "png"
    });
}, 22531, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "a6260dff61235a9308ccae6a43f6326c",
        "name": "detail_d_dark",
        "type": "png"
    });
}, 22534, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "01768feec61a58fedc099e1bce9944a1",
        "name": "more_n_dark",
        "type": "png"
    });
}, 22537, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "818473fe7ed624d1ef8a94b71fb44f85",
        "name": "more_p_dark",
        "type": "png"
    });
}, 22540, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "bddb75affe70f164ce1e438f4409f17b",
        "name": "more_d_dark",
        "type": "png"
    });
}, 22543, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "8ec7c38f272c0f55f23be22336145074",
        "name": "next_n_dark",
        "type": "png"
    });
}, 22546, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "f0d7968b2b57b3029789298b23cfc17f",
        "name": "next_p_dark",
        "type": "png"
    });
}, 22549, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "46c88f2e3560d5b2d85fe2577eda345b",
        "name": "next_d_dark",
        "type": "png"
    });
}, 22552, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "3fc8a34d07b39ab0975eeea5513b8c29",
        "name": "profile_n_dark",
        "type": "png"
    });
}, 22555, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "4e4af3425de30ca74529cd83a5fa8cc4",
        "name": "profile_p_dark",
        "type": "png"
    });
}, 22558, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "1e146ef52c0cd2c2b1296453ae202c3b",
        "name": "profile_d_dark",
        "type": "png"
    });
}, 22561, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "43558cf6431c2a80d0996e83087ed74a",
        "name": "qr_n_dark",
        "type": "png"
    });
}, 22564, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "ca67ebbf39a108d2051be0f43022b309",
        "name": "qr_p_dark",
        "type": "png"
    });
}, 22567, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "bf1c3f93c8df793ac79b6fb7ae12b368",
        "name": "qr_d_dark",
        "type": "png"
    });
}, 22570, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "ef8d45b7107fa1997a340a6cde17d846",
        "name": "search_n_dark",
        "type": "png"
    });
}, 22573, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "9f3cbff8a37a52b57f9630e779cbbf50",
        "name": "search_p_dark",
        "type": "png"
    });
}, 22576, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "9bc47c03cb46538e397812dbe9130779",
        "name": "search_d_dark",
        "type": "png"
    });
}, 22579, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "ec06b11be77df9693ec1e8e5eee2584a",
        "name": "select_all_n_dark",
        "type": "png"
    });
}, 22582, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "0d6d205ce85797276f1e56d9f3a69036",
        "name": "select_all_p_dark",
        "type": "png"
    });
}, 22585, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "af7f244b41795961799676b2bb03572b",
        "name": "select_all_d_dark",
        "type": "png"
    });
}, 22588, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "feb1e39bc2f9f74ffa3b5e43dd2576d0",
        "name": "selected_all_n_dark",
        "type": "png"
    });
}, 22591, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "1edf29ddf9b1bd821cb81f0545ae4213",
        "name": "selected_all_p_dark",
        "type": "png"
    });
}, 22594, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "f332bb6a35b954c4b5a5a156b5a318cb",
        "name": "selected_all_d_dark",
        "type": "png"
    });
}, 22597, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "ea3bcaa2adbb2e5c69d294c1a785f1ff",
        "name": "setting_n_dark",
        "type": "png"
    });
}, 22600, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "0f4e2e5b336a3e6df2ee61b442d525f8",
        "name": "setting_p_dark",
        "type": "png"
    });
}, 22603, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "399e720ce64e830a32e655050ca9650c",
        "name": "setting_d_dark",
        "type": "png"
    });
}, 22606, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "ac348a4120eb9a807f6f26de2d54ed6c",
        "name": "share_n_dark",
        "type": "png"
    });
}, 22609, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "48ccaaa711bb0765271a227810c0b2a5",
        "name": "share_p_dark",
        "type": "png"
    });
}, 22612, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "af7d9b9276788b5babab6dee0010718a",
        "name": "share_d_dark",
        "type": "png"
    });
}, 22615, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d0600233b9840af9fb9d2c886a2c1318",
        "name": "edit_n_dark",
        "type": "png"
    });
}, 22618, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "dfed43b3fb99a8a6f29255d2fcb85595",
        "name": "edit_p_dark",
        "type": "png"
    });
}, 22621, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "be2507d558cd74c7be64aa2d95701cd1",
        "name": "edit_d_dark",
        "type": "png"
    });
}, 22624, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "8bafdbd4b0404adf0853ac00532b1e79",
        "name": "add_n_light",
        "type": "png"
    });
}, 22627, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "0164cec94f8ec71e4e9adb97fc870ab3",
        "name": "add_p_light",
        "type": "png"
    });
}, 22630, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "0ceb7837a4c9b50b2cc41ae511436394",
        "name": "add_d_light",
        "type": "png"
    });
}, 22633, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d35c428ca5b361dee0fc11c6ed857d85",
        "name": "back_n_light",
        "type": "png"
    });
}, 22636, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "40ac17d325f10a6d829ad1555800ce72",
        "name": "back_p_light",
        "type": "png"
    });
}, 22639, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "65d7cc395c9e1964da242475a5cf5463",
        "name": "back_d_light",
        "type": "png"
    });
}, 22642, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "ea16ea01af17c8f1d5a1a75cfa0fa4da",
        "name": "close_n_light",
        "type": "png"
    });
}, 22645, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2],
        "hash": "120e386ff9e57f96b116f4a74926eec6",
        "name": "close_p_light",
        "type": "png"
    });
}, 22648, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "2b639ed6f188a166393c35cbebba5a98",
        "name": "close_d_light",
        "type": "png"
    });
}, 22651, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "dbb118618abcff775dce42a48115207d",
        "name": "collect_n_light",
        "type": "png"
    });
}, 22654, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "c191261b7355631ee834af49dc32685f",
        "name": "collect_p_light",
        "type": "png"
    });
}, 22657, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "18f9db9e4605e20d0fd44ca7d0f23fbd",
        "name": "collect_d_light",
        "type": "png"
    });
}, 22660, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "b1bd45768499eff55cc3d05773043ad9",
        "name": "complete_n_light",
        "type": "png"
    });
}, 22663, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "4eb8ac68188682e0cd6e1c8eeada1caf",
        "name": "complete_p_light",
        "type": "png"
    });
}, 22666, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "7da108cda8573079daeea58daa1f9804",
        "name": "complete_d_light",
        "type": "png"
    });
}, 22669, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "276b44f481b127e60909bef6af54bec1",
        "name": "delete_n_light",
        "type": "png"
    });
}, 22672, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "8506cca89f55c8cc2eed16cc74f56943",
        "name": "delete_p_light",
        "type": "png"
    });
}, 22675, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "9da9b53b85d9dceca54de2cac5418b19",
        "name": "delete_d_light",
        "type": "png"
    });
}, 22678, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d1829d99bed03923f1b8f1ebf0010130",
        "name": "detail_n_light",
        "type": "png"
    });
}, 22681, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d50634fa85b7ae6995b9e3e87d5a4d4d",
        "name": "detail_p_light",
        "type": "png"
    });
}, 22684, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "64fe4c41e9f9e03cb43bdf9ef74c3b1d",
        "name": "detail_d_light",
        "type": "png"
    });
}, 22687, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "7d796b935e6bc3314cb02944228d96ba",
        "name": "more_n_light",
        "type": "png"
    });
}, 22690, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "f72680ce6545ce33ea92cd05d6d0b781",
        "name": "more_p_light",
        "type": "png"
    });
}, 22693, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "b1555c8200e8033bd520e486c62d50f6",
        "name": "more_d_light",
        "type": "png"
    });
}, 22696, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "b06e919c1aabe23c6b6204ed4c6be2f2",
        "name": "next_n_light",
        "type": "png"
    });
}, 22699, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d9e2fbca34f818935153d5cd14bfe308",
        "name": "next_p_light",
        "type": "png"
    });
}, 22702, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "a83f2f4e7a6a06ec0aca2e5d9c2d6425",
        "name": "next_d_light",
        "type": "png"
    });
}, 22705, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "80df0a9c305f460e686305b20a4121e5",
        "name": "profile_n_light",
        "type": "png"
    });
}, 22708, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "a324d91d85f4ebb75c79d149113d2986",
        "name": "profile_p_light",
        "type": "png"
    });
}, 22711, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "a27828fbcbc4f32763f5b16003e77fda",
        "name": "profile_d_light",
        "type": "png"
    });
}, 22714, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "bc698fecd6edf342a8abd9935a26c54f",
        "name": "qr_n_light",
        "type": "png"
    });
}, 22717, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "7148f22f62b47295594876ac7e59b627",
        "name": "qr_p_light",
        "type": "png"
    });
}, 22720, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "1d5e61ff437c1fed89412bb1414b0e12",
        "name": "qr_d_light",
        "type": "png"
    });
}, 22723, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "f51992416b82a3978180624bbcd3aa6b",
        "name": "search_n_light",
        "type": "png"
    });
}, 22726, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "7343717d2172db8e7e809f333304bf18",
        "name": "search_p_light",
        "type": "png"
    });
}, 22729, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "8ca380593445ff388dc5d46cc2f9372b",
        "name": "search_d_light",
        "type": "png"
    });
}, 22732, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "9df30e16d642ba2f9208fe5fb6912941",
        "name": "select_all_n_light",
        "type": "png"
    });
}, 22735, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "e07a585ed15f6298ceda6c57d112af5a",
        "name": "select_all_p_light",
        "type": "png"
    });
}, 22738, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "79a9f622c8a14ca78e1c22fbb7552f93",
        "name": "select_all_d_light",
        "type": "png"
    });
}, 22741, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "31ceea4acc13d14db8013f4e9f285a5c",
        "name": "selected_all_n_light",
        "type": "png"
    });
}, 22744, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "6e5cd5f673df012ba88b127147b7fcf8",
        "name": "selected_all_p_light",
        "type": "png"
    });
}, 22747, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "efc658ab288e2a7a6812d5043c23101b",
        "name": "selected_all_d_light",
        "type": "png"
    });
}, 22750, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "84f010399151dba78c3632943d118f51",
        "name": "setting_n_light",
        "type": "png"
    });
}, 22753, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "3443dad864861e535b7069114e900875",
        "name": "setting_p_light",
        "type": "png"
    });
}, 22756, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "e8c9e0ccf400909f5fafc5876055be7c",
        "name": "setting_d_light",
        "type": "png"
    });
}, 22759, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "d169ce4c6a497c942dc9e79158cb31d0",
        "name": "share_n_light",
        "type": "png"
    });
}, 22762, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "5267a30047ef07ac0f81f0d2c41eb9d4",
        "name": "share_p_light",
        "type": "png"
    });
}, 22765, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "2bbd5837d46a53fa4cfd901ff339721f",
        "name": "share_d_light",
        "type": "png"
    });
}, 22768, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "20eeed0f6e9ec17338bd85b45f839d5e",
        "name": "edit_n_light",
        "type": "png"
    });
}, 22771, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "bcf1344a655071e586f35b03c192b126",
        "name": "edit_p_light",
        "type": "png"
    });
}, 22774, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "7ba5916e8c4ce832feb18527d230fed6",
        "name": "edit_d_light",
        "type": "png"
    });
}, 22777, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var PADDING = 24;
    var SEPARATOR_HEIGHT = _reactNative.StyleSheet.hairlineWidth;
    var HAIRLINE_COLOR = 'rgba(0,0,0,0.15)';
    var MODAL_MARGIN = 10;
    var MODAL_WIDTH = width - 20;
    var _default = {
        MODAL_MARGIN: MODAL_MARGIN,
        common: {
            padding: PADDING,
            MHGreen: '#32BAC0',
            underlayColor: 'rgba(0,0,0,0.25)',
            hairlineColor: HAIRLINE_COLOR,
            backgroundColor: '#f7f7f7',
            separatorHeight: SEPARATOR_HEIGHT,
            title: {
                fontSize: 15,
                lineHeight: 20,
                color: '#000'
            },
            subtitle: {
                fontSize: 12,
                color: 'rgba(0,0,0,0.6)'
            },
            separator: {
                height: SEPARATOR_HEIGHT,
                backgroundColor: HAIRLINE_COLOR
            }
        },
        dialog: {
            background: {
                flex: 1,
                backgroundColor: 'rgba(0,0,0,0.4)'
            },
            modal: {
                position: 'absolute',
                bottom: 20,
                marginHorizontal: MODAL_MARGIN,
                width: MODAL_WIDTH,
                borderRadius: 20,
                backgroundColor: '#fff'
            },
            title: {
                titleHeightThin: 66,
                titleHeightFat: 85
            },
            subtitle: {
                width: MODAL_WIDTH * 0.75,
                textAlign: 'center',
                fontSize: 13,
                color: '#666'
            },
            buttons: {
                height: 50,
                flexDirection: 'row',
                backgroundColor: 'transparent',
                justifyContent: 'space-between'
            },
            button: {
                flex: 1,
                backgroundColor: 'transparent',
                justifyContent: 'center',
                alignItems: 'center'
            },
            buttonText: {
                fontSize: 14,
                lineHeight: 19,
                color: '#666',
                fontFamily: 'D-DINCondensed-Bold'
            }
        }
    };
    exports.default = _default;
}, 22780, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Checkbox", {
        enumerable: true,
        get: function get() {
            return _Checkbox.default;
        }
    });

    var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22783, [14305, 22786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _Checkable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

    var SIZE = 40;
    var UNCHECKED_BACKGROUNDCOLOR = '#f0f0f0';
    var UNCHECKED_BORDER_COLOR = 'rgba(0,0,0,0.1)';

    var Checkbox = function (_React$Component) {
        (0, _inherits2.default)(Checkbox, _React$Component);

        function Checkbox(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, Checkbox);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props, context));
            _this.backgroundColor = new _reactNative.Animated.Value(0);
            (0, _reportDecorator.referenceReport)('Checkbox');
            _this.state = {
                checked: _this.props.checked
            };
            return _this;
        }

        (0, _createClass2.default)(Checkbox, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.checked !== this.state.checked) {
                    this.setState({
                        checked: newProps.checked
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var toValue = this.state.checked ? 1 : 0;
                var backgroundColor = this.backgroundColor.interpolate({
                    inputRange: [0, 1],
                    outputRange: [UNCHECKED_BACKGROUNDCOLOR, this.props.checkedColor]
                });
                var _this$props$style = this.props.style,
                    borderWidth = _this$props$style.borderWidth,
                    borderColor = _this$props$style.borderColor,
                    width = _this$props$style.width,
                    height = _this$props$style.height;
                var size = Math.min(width || SIZE, height || SIZE);
                var borderStyle = this.state.checked ? {
                    borderWidth: 0
                } : {
                    borderWidth: borderWidth || 1,
                    borderColor: borderColor || UNCHECKED_BORDER_COLOR
                };

                _reactNative.Animated.timing(this.backgroundColor, {
                    toValue: toValue,
                    duration: 200
                }).start();

                return _react.default.createElement(_reactNative.Animated.View, {
                    style: [styles.container, this.props.style, borderStyle, {
                        backgroundColor: backgroundColor
                    }]
                }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
                    disabled: this.props.disabled,
                    onPress: function onPress() {
                        return _this2._onValueChange();
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
                    accessibilityLabel: this.props.accessibilityLabel || this.props.label,
                    accessibilityState: {
                        disabled: !!this.props.disabled,
                        checked: !!this.state.checked
                    }
                }))), _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1,
                        justifyContent: 'center',
                        alignItems: 'center'
                    }
                }, _react.default.createElement(_Checkable.default, {
                    size: size,
                    visible: this.state.checked
                }))));
            }
        }, {
            key: "_onValueChange",
            value: function _onValueChange() {
                var checked = !this.state.checked;

                if (this.props.onValueChange) {
                    this.props.onValueChange(checked);
                }

                this.setState({
                    checked: checked
                });
            }
        }]);
        return Checkbox;
    }(_react.default.Component);

    Checkbox.propTypes = {
        style: _propTypes.default.object,
        disabled: _propTypes.default.bool,
        checked: _propTypes.default.bool,
        onValueChange: _propTypes.default.func,
        checkedColor: _propTypes.default.string,
        label: _propTypes.default.string,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    Checkbox.defaultProps = {
        style: {},
        disabled: false,
        checked: false,
        checkedColor: _resources.Styles.common.MHGreen
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            width: SIZE,
            height: SIZE
        }
    });

    var _default = Checkbox;
    exports.default = _default;
}, 22786, [14305, 14344, 14314, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22789, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

    var Surface = _reactNative.ART.Surface,
        Shape = _reactNative.ART.Shape,
        Path = _reactNative.ART.Path,
        Transform = _reactNative.ART.Transform;

    var Rectangle = function (_React$Component) {
        (0, _inherits2.default)(Rectangle, _React$Component);

        function Rectangle() {
            (0, _classCallCheck2.default)(this, Rectangle);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rectangle).apply(this, arguments));
        }

        (0, _createClass2.default)(Rectangle, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    width = _this$props.width,
                    height = _this$props.height;
                if (width < height) return null;
                var newWidth = width - height;
                var path = Path().moveTo(height / 2 - width / 2, height / 2).arc(0, -height, height / 2).line(newWidth, 0).arc(0, height, height / 2).line(-newWidth, 0).close();
                return _react.default.createElement(Shape, (0, _extends2.default)({
                    transform: new Transform().rotate(this.props.degree)
                }, this.props, {
                    d: path
                }));
            }
        }]);
        return Rectangle;
    }(_react.default.Component);

    Rectangle.propTypes = {
        width: _propTypes.default.number.isRequired,
        height: _propTypes.default.number.isRequired,
        degree: _propTypes.default.number.isRequired
    };

    var AnimatedRectangle = _reactNative.Animated.createAnimatedComponent(Rectangle);

    var degree = 43;

    var Checkable = function (_React$Component2) {
        (0, _inherits2.default)(Checkable, _React$Component2);

        function Checkable(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, Checkable);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkable).call(this, props, context));
            _this.state = {
                animatedWidth: new _reactNative.Animated.Value(0)
            };
            var size = _this.props.size;
            var containerHeight = size;
            var leftWidth = size * 0.45;
            var rightWidth = size - leftWidth;
            var intersectionHeight = Math.floor(size * 2 / 3);
            var leftRectangleWidth = intersectionHeight;
            var rightRectangleWidth = size;
            var rectangleHeight = size / 10;
            _this.animationConfig = {
                toValue: rightRectangleWidth,
                speed: 9,
                bounciness: 9
            };
            _this.containerHeight = containerHeight;
            _this.leftWidth = leftWidth;
            _this.rightWidth = rightWidth;
            _this.intersectionHeight = intersectionHeight;
            _this.leftRectangleWidth = leftRectangleWidth;
            _this.rightRectangleWidth = rightRectangleWidth;
            _this.rectangleHeight = rectangleHeight;
            return _this;
        }

        (0, _createClass2.default)(Checkable, [{
            key: "render",
            value: function render() {
                if (!this.props.visible) {
                    this.preVisible = false;
                    return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: false
                    }));
                }

                if (!this.preVisible) {
                    this.state.animatedWidth.setValue(0);

                    _reactNative.Animated.spring(this.state.animatedWidth, this.animationConfig).start();
                }

                this.preVisible = true;
                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: {
                        flexDirection: 'row'
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), _react.default.createElement(Surface, {
                    width: this.leftWidth,
                    height: this.containerHeight,
                    style: {
                        backgroundColor: 'transparent'
                    }
                }, _react.default.createElement(AnimatedRectangle, {
                    degree: degree,
                    fill: "#fff",
                    width: this.leftRectangleWidth,
                    height: this.rectangleHeight,
                    y: this.intersectionHeight,
                    x: this.leftWidth
                })), _react.default.createElement(Surface, {
                    width: this.rightWidth,
                    height: this.containerHeight,
                    style: {
                        backgroundColor: 'transparent',
                        marginLeft: -0.5
                    }
                }, _react.default.createElement(AnimatedRectangle, {
                    degree: -43,
                    fill: "#fff",
                    width: this.state.animatedWidth,
                    height: this.rectangleHeight,
                    y: this.intersectionHeight,
                    x: 0
                })));
            }
        }]);
        return Checkable;
    }(_react.default.Component);

    exports.default = Checkable;
    Checkable.propTypes = {
        size: _propTypes.default.number.isRequired,
        visible: _propTypes.default.bool.isRequired
    };
    Checkable.defaultProps = {
        size: 50,
        visible: false
    };
}, 22789, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "ImageButton", {
        enumerable: true,
        get: function get() {
            return _ImageButton.default;
        }
    });

    var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22792, [14305, 22795]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[11]);

    var ImageButton = function (_React$Component) {
        (0, _inherits2.default)(ImageButton, _React$Component);

        function ImageButton(props) {
            var _this;

            (0, _classCallCheck2.default)(this, ImageButton);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageButton).call(this, props));
            (0, _reportDecorator.referenceReport)('ImageButton');
            _this.state = {
                buttonPressed: false
            };
            return _this;
        }

        (0, _createClass2.default)(ImageButton, [{
            key: "_buttonPressIn",
            value: function _buttonPressIn() {
                this.setState({
                    buttonPressed: true
                });
            }
        }, {
            key: "_buttonPressOut",
            value: function _buttonPressOut() {
                this.setState({
                    buttonPressed: false
                });
            }
        }, {
            key: "_isButtonPressed",
            value: function _isButtonPressed() {
                return this.state.buttonPressed;
            }
        }, {
            key: "render",
            value: function render() {
                var source = this.props.source;

                if (this._isButtonPressed() && this.props.highlightedSource) {
                    source = this.props.highlightedSource;
                }

                return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
                    disabled: this.props.disabled,
                    onPress: this.props.onPress,
                    onPressIn: this._buttonPressIn.bind(this),
                    onPressOut: this._buttonPressOut.bind(this)
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.imagebutton,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        disabled: !!this.props.disabled
                    }
                })), _react.default.createElement(_reactNative.Image, {
                    style: this.props.style,
                    source: source
                }));
            }
        }]);
        return ImageButton;
    }(_react.default.Component);

    ImageButton.initialState = {
        buttonPressed: false
    };
    ImageButton.propTypes = {
        source: _propTypes.default.any,
        highlightedSource: _propTypes.default.any,
        onPress: _propTypes.default.func,
        disabled: _propTypes.default.bool,
        style: _propTypes.default.any,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    ImageButton.defaultProps = {
        source: null,
        highlightedSource: null,
        onPress: null
    };
    var _default = ImageButton;
    exports.default = _default;
}, 22795, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "TitleBar", {
        enumerable: true,
        get: function get() {
            return _TitleBar.default;
        }
    });

    var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22798, [14305, 22801]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[11]);

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

    var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

    var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

    var isIOS = _reactNative.Platform.OS === 'ios';

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
    var titleHeight = 55;
    var imgHeight = 28;
    var containerHeight = (_reactNative.StatusBar.currentHeight || 0) + titleHeight;
    var marginV = 13.5;
    var marginH = 14;
    var dotSize = 10;

    var TitleBar = function (_Component) {
        (0, _inherits2.default)(TitleBar, _Component);

        function TitleBar(props) {
            var _this;

            (0, _classCallCheck2.default)(this, TitleBar);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
            (0, _reportDecorator.referenceReport)('TitleBar');
            return _this;
        }

        (0, _createClass2.default)(TitleBar, [{
            key: "UNSAFE_componentWillMount",
            value: function UNSAFE_componentWillMount() {
                this.isDarkStyle = this.props.type === 'dark';

                if (_reactNative.Platform.OS == 'android') {
                    _reactNative.StatusBar.setTranslucent(true);
                }
            }
        }, {
            key: "render",
            value: function render() {
                this.isDarkStyle = this.props.type === 'dark';

                if (isIOS && this.context.colorScheme === 'dark') {
                    if (this.isDarkStyle === false) {
                        if (this.props.style !== undefined && this.props.style.backgroundColor !== undefined) {
                            this.props.style.backgroundColor = "xm" + this.props.style.backgroundColor;
                        }
                    }

                    this.isDarkStyle = false;
                } else if (this.context.colorScheme === 'dark') {
                    this.isDarkStyle = false;
                }

                this.isDarkStyle ? _reactNative.StatusBar.setBarStyle('dark-content') : _reactNative.StatusBar.setBarStyle('light-content');
                var containerStyle = this.isDarkStyle ? styles.blackTitleBarContainer : styles.lightTitleBarContainer;
                var leftWidth = this.props.leftTextStyle ? this.props.leftTextStyle.width : 0;
                var rightWidth = this.props.rightTextStyle ? this.props.rightTextStyle.width : 0;
                var titleTextStyle = this.isDarkStyle ? styles.blackTitleText : styles.whiteTitleText;
                var subtitleTextStyle = this.isDarkStyle ? styles.blackSubtitleText : styles.whiteSubtitleText;
                var leftRightTextStyle = this.isDarkStyle ? styles.blackLeftRightText : styles.whiteLeftRightText;
                var back_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19]);
                var back_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21]);
                var set_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23]);
                var set_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25]);
                var share_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]);
                var share_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[28]) : _$$_REQUIRE(_dependencyMap[29]);
                var more_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[30]) : _$$_REQUIRE(_dependencyMap[31]);
                var more_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[32]) : _$$_REQUIRE(_dependencyMap[33]);
                var message = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[34]) : _$$_REQUIRE(_dependencyMap[34]);

                var _ref = this.props.style || {},
                    height = _ref.height;

                var containerHeight = {};
                var dotTop = {};
                var offset;

                if (height !== undefined) {
                    containerHeight = {
                        height: (_reactNative.StatusBar.currentHeight || 0) + height
                    };
                    offset = height - titleHeight;
                    dotTop = {
                        top: statusBarHeight + marginV + offset
                    };
                }

                return _react.default.createElement(_reactNavigation.SafeAreaView, {
                    style: [containerStyle, this.props.style, containerHeight]
                }, this.props.leftText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
                    onPress: this.props.onPressLeft,
                    contentStyle: [leftRightTextStyle, this.props.leftTextStyle],
                    style: [leftRightTextStyle, {
                        height: this.props.onPressLeft ? titleHeight : 0,
                        width: leftWidth || 56
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.onPressLeft ? this.props.accessible : false,
                    accessibilityLabel: this.props.leftAccessibilityLabel || this.props.leftText,
                    accessibilityHint: this.props.leftAccessibilityHint
                })), this.props.leftText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
                    onPress: this.props.onPressLeft,
                    style: [styles.img, {
                        height: this.props.onPressLeft ? imgHeight : 0
                    }],
                    source: back_n,
                    highlightedSource: back_p
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.onPressLeft ? this.props.accessible : false,
                    accessibilityLabel: this.props.leftAccessibilityLabel,
                    accessibilityHint: this.props.leftAccessibilityHint
                }))), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
                    onPress: this.props.onPressLeft2,
                    style: [styles.img, {
                        marginLeft: 0,
                        height: this.props.onPressLeft2 ? imgHeight : 0
                    }],
                    source: set_n,
                    highlightedSource: set_p
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.onPressLeft2 ? this.props.accessible : false,
                    accessibilityLabel: this.props.left2AccessibilityLabel,
                    accessibilityHint: this.props.left2AccessibilityHint
                }))), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.textContainer]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
                })), _react.default.createElement(_reactNative.Text, {
                    numberOfLines: 1,
                    style: [titleTextStyle, this.props.titleStyle],
                    allowFontScaling: this.props.allowFontScaling,
                    onPress: this.props.onPressTitle
                }, this.props.title), this.props.subTitle ? _react.default.createElement(_reactNative.Text, {
                    numberOfLines: 1,
                    style: [subtitleTextStyle, this.props.subtitleStyle],
                    allowFontScaling: this.props.allowFontScaling,
                    onPress: this.props.onPressTitle
                }, this.props.subTitle) : null), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
                    onPress: this.props.onPressRight2,
                    style: [styles.img, {
                        marginRight: 0,
                        height: this.props.onPressRight2 ? imgHeight : 0
                    }],
                    source: share_n,
                    highlightedSource: share_p
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.onPressRight2 ? this.props.accessible : false,
                    accessibilityLabel: this.props.right2AccessibilityLabel,
                    accessibilityHint: this.props.right2AccessibilityHint
                }))), this.props.rightText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
                    onPress: this.props.onPressRight,
                    contentStyle: [leftRightTextStyle, this.props.rightTextStyle],
                    style: [leftRightTextStyle, {
                        height: this.props.onPressRight ? titleHeight : 0,
                        width: rightWidth || 56
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.onPressRight ? this.props.accessible : false,
                    accessibilityLabel: this.props.rightAccessibilityLabel || this.props.rightText,
                    accessibilityHint: this.props.rightAccessibilityHint
                })), this.props.rightText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
                    onPress: this.props.onPressRight,
                    style: [styles.img, {
                        height: this.props.onPressRight ? imgHeight : 0
                    }],
                    source: more_n,
                    highlightedSource: more_p
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.onPressRight ? this.props.accessible : false,
                    accessibilityLabel: this.props.rightAccessibilityLabel,
                    accessibilityHint: this.props.rightAccessibilityHint
                }))), this.props.showDot && _react.default.createElement(_reactNative.Image, {
                    style: [styles.dot, dotTop],
                    resizeMode: "contain",
                    source: message
                }));
            }
        }]);
        return TitleBar;
    }(_react.Component);

    TitleBar.contextType = _configProvider.ConfigContext;
    TitleBar.propTypes = {
        type: _propTypes.default.oneOf(['dark', 'light']),
        leftTextStyle: _propTypes.default.any,
        rightTextStyle: _propTypes.default.any,
        style: _propTypes.default.any,
        leftText: _propTypes.default.string,
        rightText: _propTypes.default.string,
        onPressLeft: _propTypes.default.func,
        onPressLeft2: _propTypes.default.func,
        onPressRight: _propTypes.default.func,
        onPressRight2: _propTypes.default.func,
        onPressTitle: _propTypes.default.func,
        title: _propTypes.default.string,
        subTitle: _propTypes.default.string,
        titleStyle: _reactNative.Text.propTypes.style,
        subtitleStyle: _reactNative.Text.propTypes.style,
        allowFontScaling: _propTypes.default.bool,
        showDot: _propTypes.default.bool,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        leftAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        leftAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
        left2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        left2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
        rightAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        rightAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
        right2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        right2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    TitleBar.defaultProps = {
        type: 'light',
        allowFontScaling: true,
        titleStyle: {},
        subtitleStyle: {}
    };

    var styles = _reactNative.StyleSheet.create({
        lightTitleBarContainer: {
            flexDirection: 'row',
            width: width,
            alignItems: 'flex-end',
            height: containerHeight,
            backgroundColor: 'xmblack'
        },
        blackTitleBarContainer: {
            flexDirection: 'row',
            width: width,
            alignItems: 'flex-end',
            height: containerHeight,
            backgroundColor: 'xmwhite'
        },
        textContainer: {
            minHeight: titleHeight,
            flex: 1,
            alignItems: 'stretch',
            justifyContent: 'center'
        },
        blackTitleText: {
            color: 'xm#000000cc',
            fontSize: 15,
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        whiteTitleText: {
            color: 'xm#ffffffcc',
            fontSize: 15,
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        blackSubtitleText: {
            color: 'xm#00000088',
            fontSize: 12,
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        whiteSubtitleText: {
            color: 'xm#ffffff88',
            fontSize: 12,
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        blackLeftRightText: {
            backgroundColor: 'xm#0000',
            color: 'xm#00000088',
            fontSize: 14,
            alignItems: 'center',
            justifyContent: 'center',
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        whiteLeftRightText: {
            backgroundColor: 'xm#0000',
            color: 'xm#ffffff88',
            fontSize: 14,
            alignItems: 'center',
            justifyContent: 'center',
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        img: {
            width: imgHeight,
            height: imgHeight,
            resizeMode: 'contain',
            marginHorizontal: marginH,
            marginVertical: marginV
        },
        dot: {
            position: 'absolute',
            width: dotSize,
            height: dotSize,
            resizeMode: 'contain',
            right: marginH,
            top: statusBarHeight + marginV
        }
    });

    var _default = TitleBar;
    exports.default = _default;
}, 22801, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 13696, 11251, 10918, 22795, 22426, 22420, 22423, 22804, 22807, 22810, 22813, 22816, 22819, 22822, 22825, 22828, 22831, 22834, 22837, 22840, 22843, 22846, 22849, 22852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "3ac342e621b9ffa0c200ab5ec4651fd5",
        "name": "std_tittlebar_main_device_back_normal",
        "type": "png"
    });
}, 22804, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "3b5c33e031f042072bfd34104bdd2f0e",
        "name": "std_tittlebar_main_device_back_white_normal",
        "type": "png"
    });
}, 22807, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "03d2a427cd538718957f203472bb1909",
        "name": "std_tittlebar_main_device_back_press",
        "type": "png"
    });
}, 22810, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "e2cd9dae60d00bdaaf370d0ce935bcd1",
        "name": "std_tittlebar_main_device_back_white_press",
        "type": "png"
    });
}, 22813, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 87,
        "height": 87,
        "scales": [1],
        "hash": "1f87d21e189f8407cf2193f497a3009b",
        "name": "std_tittlebar_main_device_back2_normal",
        "type": "png"
    });
}, 22816, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 87,
        "height": 87,
        "scales": [1],
        "hash": "245580044e6fde980a40017d0a84b8a0",
        "name": "std_titlebar_setting_back_normal",
        "type": "png"
    });
}, 22819, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 87,
        "height": 87,
        "scales": [1],
        "hash": "58b0bbb3fe18c3f9f403a7462df13b16",
        "name": "std_tittlebar_main_device_back2_press",
        "type": "png"
    });
}, 22822, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 87,
        "height": 87,
        "scales": [1],
        "hash": "04afc8dcfd074448cf6df1dd0ccc1834",
        "name": "std_titlebar__setting_back_press",
        "type": "png"
    });
}, 22825, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "c1de7bdd3f696c32718913b813324785",
        "name": "std_tittlebar_main_device_share_normal",
        "type": "png"
    });
}, 22828, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "f7e6cada2c77978f5ba39df82526dbd4",
        "name": "std_tittlebar_main_device_share_white_normal",
        "type": "png"
    });
}, 22831, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "94f64d86d775616685fbd8d0551af687",
        "name": "std_tittlebar_main_device_share_press",
        "type": "png"
    });
}, 22834, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "44be9deb2614f593e6ef99df7db8de8e",
        "name": "std_tittlebar_main_device_share_white_press",
        "type": "png"
    });
}, 22837, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "a5bb68ab122b74c581fd2454e5218cea",
        "name": "std_tittlebar_main_device_more_normal",
        "type": "png"
    });
}, 22840, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "24d81d84c61d4181f21e615e4a6d3918",
        "name": "std_tittlebar_main_device_more_white_normal",
        "type": "png"
    });
}, 22843, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "1fe8ece2871c461ef1644d01f207c332",
        "name": "std_tittlebar_main_device_more_press",
        "type": "png"
    });
}, 22846, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 84,
        "height": 84,
        "scales": [1],
        "hash": "d6f11d70982f64f3a70d831f321355fe",
        "name": "std_tittlebar_main_device_more_white_press",
        "type": "png"
    });
}, 22849, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 30,
        "height": 30,
        "scales": [1],
        "hash": "522ed59eaa31441e8b11ae8bab872663",
        "name": "std_tittlebar_main_device_massage_point",
        "type": "png"
    });
}, 22852, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "NavigationBar", {
        enumerable: true,
        get: function get() {
            return _NavigationBar.default;
        }
    });

    var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22855, [14305, 22858]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _reactNavigation = _$$_REQUIRE(_dependencyMap[12]);

    var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

    var TYPE = {
        DARK: 'dark',
        LIGHT: 'light'
    };
    Object.freeze(TYPE);
    var ICON = {
        ADD: 'add',
        BACK: 'back',
        CLOSE: 'close',
        COLLECT: 'collect',
        COMPLETE: 'complete',
        DELETE: 'delete',
        DETAIL: 'detail',
        MORE: 'more',
        NEXT: 'next',
        PROFILE: 'profile',
        QR: 'qr',
        SEARCH: 'search',
        SELECT_ALL: 'select_all',
        SELECTED_ALL: 'selected_all',
        SETTING: 'setting',
        SHARE: 'share',
        EDIT: 'edit',
        RECORD: 'record'
    };
    Object.freeze(ICON);
    var _Images$navigation = _Images.default.navigation,
        light = _Images$navigation.light,
        dark = _Images$navigation.dark,
        dot = _Images$navigation.dot;

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var navigationBarHeightThin = 52;
    var navigationBarHeightFat = 65;
    var paddingHorizontal = 9;
    var iconSize = 40;
    var lightTitleColor = 'xm#000000';
    var darkTitleColor = 'xm#ffffff';
    var colorSubtitleNormal = new _DynamicColor.default('#666666', '#ffffff');
    var colorSubtitleWarning = new _DynamicColor.default('#f43f31', '#d92719');
    var colorSubtitleException = new _DynamicColor.default('#f5a623', '#db8e0d');
    var COLOR_SUBTITLE = {
        normal: colorSubtitleNormal,
        warning: colorSubtitleWarning,
        exception: colorSubtitleException
    };

    var NavigationBar = function (_Component) {
        (0, _inherits2.default)(NavigationBar, _Component);

        function NavigationBar(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, NavigationBar);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationBar).call(this, props, context));
            (0, _reportDecorator.referenceReport)('NavigationBar');
            return _this;
        }

        (0, _createClass2.default)(NavigationBar, [{
            key: "getIconsOfType",
            value: function getIconsOfType(arr) {
                var icons = this.isDarkStyle ? dark : light;
                return arr.map(function (item) {
                    var key = item.key,
                        disable = item.disable;

                    if (disable) {
                        item.source = icons[key] ? icons[key].disable : null;
                        item.highlightedSource = null;
                    } else {
                        item.source = icons[key] ? icons[key].normal : null;
                        item.highlightedSource = icons[key] ? icons[key].press : null;
                    }

                    return item;
                }).filter(function (item) {
                    return item.source;
                });
            }
        }, {
            key: "renderIcons",
            value: function renderIcons(arr) {
                var _this2 = this;

                var icons = (arr || []).slice(0, 2);
                return icons.map(function (icon, i) {
                    if (!icon.source) {
                        return _react.default.createElement(_reactNative.View, {
                            key: icon.key + i,
                            style: {
                                width: iconSize
                            }
                        });
                    }

                    return _react.default.createElement(_reactNative.View, {
                        key: icon.key + i,
                        style: {
                            width: iconSize,
                            height: iconSize
                        }
                    }, icon.showDot ? _react.default.createElement(_reactNative.Image, {
                        style: styles.dot,
                        resizeMode: "contain",
                        source: dot
                    }) : null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
                        disabled: !!icon.disable,
                        onPress: icon.onPress,
                        style: styles.icon,
                        source: icon.source,
                        highlightedSource: icon.highlightedSource
                    }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, icon, {
                        accessible: icon.accessible || _this2.props.accessible,
                        accessibilityLabel: icon.accessibilityLabel,
                        accessibilityHint: icon.accessibilityHint
                    })))));
                });
            }
        }, {
            key: "renderTitle",
            value: function renderTitle() {
                var _this$props = this.props,
                    title = _this$props.title,
                    subtitle = _this$props.subtitle,
                    subtitleStyle = _this$props.subtitleStyle,
                    titleStyle = _this$props.titleStyle,
                    onPressTitle = _this$props.onPressTitle;
                var titleColor = {
                    color: this.isDarkStyle ? darkTitleColor : lightTitleColor
                };
                var newSubtitleStyle = (0, _objectSpread2.default)({
                    colorType: 'normal',
                    fontSize: 14,
                    fontFamily: 'MI-LANTING--GBK1-Light'
                }, subtitleStyle);
                var customSubtitleStyle = {
                    fontFamily: newSubtitleStyle.fontFamily,
                    fontSize: newSubtitleStyle.fontSize,
                    lineHeight: newSubtitleStyle.fontSize * 1.3,
                    color: this.isDarkStyle ? COLOR_SUBTITLE[newSubtitleStyle.colorType].dark : COLOR_SUBTITLE[newSubtitleStyle.colorType][this.context.colorScheme]
                };
                var newTitleStyle = (0, _objectSpread2.default)({
                    fontSize: 18
                }, titleStyle);
                var customTitleStyle = {
                    fontSize: newTitleStyle.fontSize,
                    lineHeight: newTitleStyle.fontSize * 1.3
                };
                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.titleContainer]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
                })), _react.default.isValidElement(title) ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    numberOfLines: this.props.titleNumberOfLines,
                    style: [styles.titleView, titleColor],
                    onPress: onPressTitle
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), title || '') : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: this.props.titleNumberOfLines,
                    allowFontScaling: this.props.allowFontScaling,
                    style: [styles.title, titleColor, customTitleStyle],
                    onPress: onPressTitle
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), title || ''), subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [styles.subtitle, customSubtitleStyle],
                    numberOfLines: this.props.subtitleNumberOfLines,
                    allowFontScaling: this.props.allowFontScaling,
                    onPress: onPressTitle
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), subtitle) : null);
            }
        }, {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                this.updateStyleType(this.props, newProps);
            }
        }, {
            key: "UNSAFE_componentWillMount",
            value: function UNSAFE_componentWillMount() {
                this.updateStyleType(this.props, null);
            }
        }, {
            key: "updateStyleType",
            value: function updateStyleType(props, newProps) {
                var newIsDartStyle = (newProps ? newProps.type : props.type) === TYPE.DARK;
                this.shouldKeepColor = false;

                if (_reactNative.Platform.OS === 'ios' && this.context.colorScheme === 'dark') {
                    if (newIsDartStyle) {
                        this.shouldKeepColor = true;
                    }

                    newIsDartStyle = true;
                } else {
                    newIsDartStyle = this.context.colorScheme === 'dark' ? true : (newProps ? newProps.type : props.type) === TYPE.DARK;
                }

                if (newIsDartStyle !== this.isDarkStyle) {
                    this.isDarkStyle = newIsDartStyle;

                    _reactNative.StatusBar.setBarStyle(this.isDarkStyle ? 'light-content' : 'dark-content');

                    if (_reactNative.Platform.OS == 'android') {
                        _reactNative.StatusBar.setTranslucent(true);
                    }
                }
            }
        }, {
            key: "render",
            value: function render() {
                var leftIcons = this.getIconsOfType(this.props.left);
                var rightIcons = this.getIconsOfType(this.props.right);
                leftIcons.length < rightIcons.length && leftIcons.push({});
                leftIcons.length > rightIcons.length && rightIcons.unshift({});
                var containerHeight = _reactNative.StatusBar.currentHeight || 0;
                containerHeight += this.props.subtitle ? navigationBarHeightFat : navigationBarHeightThin;
                var backgroundColor = this.props.backgroundColor ? this.props.backgroundColor : this.isDarkStyle ? 'xm#000000' : 'xm#ffffff';

                if (this.shouldKeepColor && this.props.backgroundColor) {
                    backgroundColor = "xm" + this.props.backgroundColor;
                }

                var containerStyle = {
                    backgroundColor: backgroundColor,
                    minHeight: containerHeight
                };
                return _react.default.createElement(_reactNavigation.SafeAreaView, {
                    style: [styles.container, containerStyle, {
                        paddingTop: _reactNative.StatusBar.currentHeight
                    }]
                }, this.renderIcons(leftIcons), this.renderTitle(), this.renderIcons(rightIcons));
            }
        }]);
        return NavigationBar;
    }(_react.Component);

    NavigationBar.propTypes = {
        type: _propTypes.default.oneOf([TYPE.DARK, TYPE.LIGHT]),
        style: _propTypes.default.object,
        left: _propTypes.default.arrayOf(_propTypes.default.shape({
            key: _propTypes.default.string,
            onPress: _propTypes.default.func,
            disable: _propTypes.default.bool,
            accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        right: _propTypes.default.array,
        title: _propTypes.default.string,
        subtitle: _propTypes.default.string,
        subtitleStyle: _propTypes.default.shape({
            fontFamily: _propTypes.default.string,
            fontSize: _propTypes.default.number,
            colorType: _propTypes.default.oneOf(['normal', 'warning', 'exception'])
        }),
        titleNumberOfLines: _propTypes.default.number,
        subtitleNumberOfLines: _propTypes.default.number,
        titleStyle: _propTypes.default.shape({
            fontSize: _propTypes.default.number
        }),
        allowFontScaling: _propTypes.default.bool,
        backgroundColor: _propTypes.default.any,
        onPressTitle: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    NavigationBar.defaultProps = {
        type: TYPE.LIGHT,
        left: [],
        right: [],
        subtitleStyle: {
            fontFamily: 'MI-LANTING--GBK1-Light',
            colorType: 'normal',
            fontSize: 14
        },
        allowFontScaling: true,
        titleNumberOfLines: 1,
        subtitleNumberOfLines: 1,
        titleStyle: {
            fontSize: 18
        }
    };
    NavigationBar.TYPE = TYPE;
    NavigationBar.ICON = ICON;
    NavigationBar.contextType = _configProvider.ConfigContext;

    var styles = _reactNative.StyleSheet.create({
        container: {
            width: width,
            paddingHorizontal: paddingHorizontal,
            flexDirection: 'row',
            alignItems: 'center'
        },
        titleContainer: {
            flex: 1,
            alignSelf: 'stretch',
            justifyContent: 'center',
            alignItems: 'stretch',
            marginHorizontal: 5
        },
        title: {
            fontSize: 18,
            lineHeight: 24,
            fontFamily: 'D-DINCondensed-Bold',
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        titleView: {
            fontSize: 16,
            fontFamily: 'D-DINCondensed-Bold',
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center'
        },
        subtitle: {
            fontSize: 14,
            lineHeight: 18,
            fontFamily: 'MI-LANTING--GBK1-Light',
            textAlignVertical: 'center',
            textAlign: 'center'
        },
        icon: {
            position: 'absolute',
            width: iconSize,
            height: iconSize
        },
        dot: {
            width: iconSize,
            height: iconSize
        }
    });

    var _default = NavigationBar;
    exports.default = _default;
}, 22858, [14308, 14305, 14344, 14314, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 10918, 22435, 22456, 22795, 22426, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Card", {
        enumerable: true,
        get: function get() {
            return _Card.default;
        }
    });
    Object.defineProperty(exports, "CardProps", {
        enumerable: true,
        get: function get() {
            return _Card.CardProps;
        }
    });
    Object.defineProperty(exports, "MHCard", {
        enumerable: true,
        get: function get() {
            return _MHCard.default;
        }
    });
    Object.defineProperty(exports, "MHCardProps", {
        enumerable: true,
        get: function get() {
            return _MHCard.MHCardProps;
        }
    });
    Object.defineProperty(exports, "ModeCard", {
        enumerable: true,
        get: function get() {
            return _ModeCard.default;
        }
    });
    Object.defineProperty(exports, "ModeCardProps", {
        enumerable: true,
        get: function get() {
            return _ModeCard.ModeCardProps;
        }
    });
    Object.defineProperty(exports, "IndependentCard", {
        enumerable: true,
        get: function get() {
            return _IndependentCard.default;
        }
    });

    var _Card = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

    var _MHCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

    var _ModeCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

    var _IndependentCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
}, 22861, [14305, 14308, 22864, 22870, 22873, 22876]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

    var _CardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var DURATION = 250;
    var DEFAULT_STYLE = {
        HEIGHT: 66,
        WIDTH: width - 30,
        RADIUS: 8,
        MARGIN_TOP: {
            marginTop: 15
        }
    };

    var Card = function (_React$Component) {
        (0, _inherits2.default)(Card, _React$Component);

        function Card(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, Card);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).call(this, props, context));
            (0, _reportDecorator.referenceReport)('Card');
            _this.state = {
                showShadow: _this.props.visible && _this.props.showShadow
            };
            return _this;
        }

        (0, _createClass2.default)(Card, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                var _this2 = this;

                if (newProps.showShadow === false) return;
                if (newProps.visible === this.props.visible) return;

                if (newProps.visible === false) {
                    this.setState({
                        showShadow: false
                    });
                } else if (newProps.visible === true) {
                    setTimeout(function () {
                        return _this2.setState({
                            showShadow: true
                        });
                    }, DURATION);
                }
            }
        }, {
            key: "renderCardIOS",
            value: function renderCardIOS() {
                var shadowIOS = this.props.showShadow ? {
                    position: 'relative',
                    shadowColor: this.props.shadowColor,
                    shadowOpacity: this.props.shadowOpacity,
                    shadowOffset: {
                        width: 0,
                        height: 8
                    }
                } : {};

                var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle, shadowIOS]);

                return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
                    cardStyle: cardStyle
                }));
            }
        }, {
            key: "renderCardAndroid",
            value: function renderCardAndroid() {
                if (!this.state.showShadow) {
                    var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle]);

                    return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
                        cardStyle: cardStyle
                    }));
                } else {
                    var _this$props$cardStyle = this.props.cardStyle,
                        _width = _this$props$cardStyle.width,
                        height = _this$props$cardStyle.height,
                        borderRadius = _this$props$cardStyle.borderRadius;

                    var _this$getCorrectStyle = this.getCorrectStyle(),
                        shadowAndroidStyle = _this$getCorrectStyle.shadowAndroidStyle,
                        _cardStyle = _this$getCorrectStyle.cardStyle;

                    var shadowAndroid = {
                        width: _width || DEFAULT_STYLE.WIDTH,
                        height: height || DEFAULT_STYLE.HEIGHT,
                        radius: borderRadius || DEFAULT_STYLE.RADIUS,
                        color: this.props.shadowColor,
                        border: 10,
                        opacity: this.props.shadowOpacity,
                        x: 0,
                        y: 6,
                        style: shadowAndroidStyle
                    };
                    return _react.default.createElement(_reactNativeShadow.BoxShadow, {
                        setting: shadowAndroid
                    }, _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
                        cardStyle: _cardStyle
                    })));
                }
            }
        }, {
            key: "getCorrectStyle",
            value: function getCorrectStyle() {
                var _this3 = this;

                var shadowAndroidStyle = (0, _extends2.default)({}, DEFAULT_STYLE.MARGIN_TOP);
                var cardStyle = {};
                Object.keys(this.props.cardStyle).forEach(function (key) {
                    if (key.toString().startsWith('margin')) {
                        shadowAndroidStyle[key] = _this3.props.cardStyle[key];
                    } else {
                        cardStyle[key] = _this3.props.cardStyle[key];
                    }
                });
                return {
                    shadowAndroidStyle: shadowAndroidStyle,
                    cardStyle: cardStyle
                };
            }
        }, {
            key: "render",
            value: function render() {
                return _reactNative.Platform.select({
                    android: this.renderCardAndroid(),
                    ios: this.renderCardIOS()
                });
            }
        }]);
        return Card;
    }(_react.default.Component);

    Card.propTypes = {
        innerView: _propTypes.default.object,
        icon: _propTypes.default.number,
        text: _propTypes.default.string,
        visible: _propTypes.default.bool,
        showDismiss: _propTypes.default.bool,
        disabled: _propTypes.default.bool,
        dismiss: _propTypes.default.func,
        showShadow: _propTypes.default.bool,
        onPress: _propTypes.default.func,
        cardStyle: _propTypes.default.object,
        iconStyle: _propTypes.default.object,
        textStyle: _propTypes.default.object,
        underlayColor: _propTypes.default.string,
        shadowColor: _propTypes.default.string,
        shadowOpacity: _propTypes.default.number,
        unlimitedHeightEnable: _propTypes.default.bool,
        allowFontScaling: _propTypes.default.bool,
        numberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
        dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    Card.defaultProps = {
        visible: true,
        showDismiss: false,
        disabled: false,
        showShadow: true,
        cardStyle: {},
        shadowColor: '#000',
        shadowOpacity: 0.03,
        unlimitedHeightEnable: false,
        allowFontScaling: true
    };
    var _default = Card;
    exports.default = _default;
}, 22864, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 13699, 22867, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _resources = _$$_REQUIRE(_dependencyMap[10]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var DURATION_OUT = 250;
    var DURATION_IN = 250;
    var DEFAULT_STYLE = {
        MARGIN_H: 15,
        HEIGHT: 66,
        WIDTH: width - 30,
        ICON_SIZE: 35,
        CLOSE_AREA: 30,
        CLOSE_SIZE: 20
    };

    var CardBase = function (_React$Component) {
        (0, _inherits2.default)(CardBase, _React$Component);

        function CardBase(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, CardBase);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardBase).call(this, props, context));

            _this.onAccessibilityAction = function (_ref) {
                var actionName = _ref.nativeEvent.actionName;
                var _this$props = _this.props,
                    disabled = _this$props.disabled,
                    onPress = _this$props.onPress;

                if (disabled) {
                    return;
                }

                if (onPress && actionName === 'activate') {
                    onPress();
                }
            };

            var _this$props$cardStyle = _this.props.cardStyle,
                height = _this$props$cardStyle.height,
                marginTop = _this$props$cardStyle.marginTop;
            _this.cardHeight = height || DEFAULT_STYLE.HEIGHT;
            var initValue = _this.props.visible ? 1 : 0;
            _this.height = new _reactNative.Animated.Value(initValue);
            _this.opacity = new _reactNative.Animated.Value(initValue);
            _this.marginTop = marginTop || 0;
            return _this;
        }

        (0, _createClass2.default)(CardBase, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;

                this.height.addListener(function (e) {
                    _this2.refCard && _this2.refCard.setNativeProps({
                        marginTop: _this2.marginTop * e.value
                    });
                });
            }
        }, {
            key: "renderInner",
            value: function renderInner() {
                if (this.props.innerView === undefined) {
                    var theme = this.context.theme;
                    var _this$props2 = this.props,
                        icon = _this$props2.icon,
                        text = _this$props2.text,
                        iconStyle = _this$props2.iconStyle,
                        textStyle = _this$props2.textStyle;
                    var textLine = this.props.numberOfLines == undefined ? 1 : this.props.numberOfLines;
                    if (textLine < 0) textLine = 0;
                    return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
                        style: [styles.innerContainer, {
                            opacity: this.opacity
                        }]
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: this.props.accessible,
                        accessibilityRole: this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
                        accessibilityHint: this.props.accessibilityHint || (this.props.onPress ? text : ''),
                        accessibilityState: {
                            disabled: !!this.props.disabled
                        }
                    }), {
                        accessibilityActions: [{
                            name: 'activate'
                        }],
                        onAccessibilityAction: this.onAccessibilityAction
                    }), icon ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
                        style: [styles.innerIcon, iconStyle],
                        source: icon,
                        resizeMode: "contain"
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: false
                    }))) : null, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                        style: [styles.innerText, {
                            color: theme.colorBlack
                        }, textStyle],
                        numberOfLines: textLine,
                        ellipsizeMode: "tail",
                        allowFontScaling: this.props.allowFontScaling
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: true
                    })), text || ''));
                }

                return _react.default.createElement(_reactNative.Animated.View, {
                    style: [{
                        flex: 1
                    }, {
                        opacity: this.opacity
                    }]
                }, this.props.innerView);
            }
        }, {
            key: "renderClose",
            value: function renderClose() {
                var _this3 = this;

                if (!this.props.showDismiss) return null;
                return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
                    style: styles.closeArea,
                    underlayColor: "transparent",
                    onPress: function onPress() {
                        return _this3.dismiss();
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityLabel: this.props.dismissAccessibilityLabel || 'close',
                    accessibilityHint: this.props.dismissAccessibilityHint || 'close'
                })), _react.default.createElement(_reactNative.Animated.Image, {
                    style: [styles.close, {
                        opacity: this.opacity
                    }],
                    source: _resources.Images.common.close
                }));
            }
        }, {
            key: "getCorrectStyle",
            value: function getCorrectStyle(cardStyle) {
                var animatedViewStyle = {};
                var containerStyle = {};
                Object.keys(cardStyle).forEach(function (key) {
                    if (key.toString().startsWith('margin') || key.toString() === 'width') {
                        animatedViewStyle[key] = cardStyle[key];
                    } else {
                        containerStyle[key] = cardStyle[key];
                    }
                });
                return {
                    animatedViewStyle: animatedViewStyle,
                    containerStyle: containerStyle
                };
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                var theme = this.context.theme;
                var toValue = this.props.visible ? 1 : 0;

                if (!this.props.visible) {
                    _reactNative.Animated.parallel([_reactNative.Animated.timing(this.height, {
                        toValue: toValue,
                        duration: DURATION_OUT,
                        easing: _reactNative.Easing.ease
                    }), _reactNative.Animated.timing(this.opacity, {
                        toValue: toValue,
                        duration: 100,
                        easing: _reactNative.Easing.ease
                    })], {
                        stopTogether: false
                    }).start();
                } else {
                    _reactNative.Animated.parallel([_reactNative.Animated.timing(this.opacity, {
                        toValue: toValue,
                        duration: 125,
                        easing: _reactNative.Easing.ease,
                        delay: 125
                    }), _reactNative.Animated.timing(this.height, {
                        toValue: toValue,
                        duration: DURATION_IN,
                        easing: _reactNative.Easing.ease
                    })]).start();
                }

                var cardStyle = _reactNative.StyleSheet.flatten([styles.container, this.props.cardStyle]);

                var _this$getCorrectStyle = this.getCorrectStyle(cardStyle),
                    animatedViewStyle = _this$getCorrectStyle.animatedViewStyle,
                    containerStyle = _this$getCorrectStyle.containerStyle;

                return _react.default.createElement(_reactNative.Animated.View, {
                    ref: function ref(_ref2) {
                        _this4.refCard = _ref2;
                    },
                    style: [animatedViewStyle, {
                        opacity: this.opacity,
                        height: this.props.unlimitedHeightEnable ? undefined : this.height.interpolate({
                            inputRange: [0, 1],
                            outputRange: [0, this.cardHeight]
                        })
                    }]
                }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
                    style: [{
                        backgroundColor: theme.colorForeground
                    }, containerStyle, {
                        flex: 1
                    }],
                    underlayColor: this.props.underlayColor,
                    disabled: this.props.disabled,
                    onPress: this.props.onPress
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1
                    }
                }, this.renderInner(), this.renderClose())));
            }
        }, {
            key: "dismiss",
            value: function dismiss() {
                this.props.dismiss && this.props.dismiss();
            }
        }]);
        return CardBase;
    }(_react.default.Component);

    exports.default = CardBase;
    CardBase.contextType = _configProvider.ConfigContext;
    CardBase.propTypes = {
        innerView: _propTypes.default.object,
        icon: _propTypes.default.number,
        text: _propTypes.default.string,
        showDismiss: _propTypes.default.bool,
        disabled: _propTypes.default.bool,
        dismiss: _propTypes.default.func,
        visible: _propTypes.default.bool,
        onPress: _propTypes.default.func,
        cardStyle: _propTypes.default.object,
        iconStyle: _propTypes.default.object,
        textStyle: _propTypes.default.object,
        underlayColor: _propTypes.default.string,
        unlimitedHeightEnable: _propTypes.default.bool,
        allowFontScaling: _propTypes.default.bool,
        numberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
        dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    CardBase.defaultProps = {
        showDismiss: false,
        disabled: false,
        visible: true,
        underlayColor: _resources.Styles.common.underlayColor,
        unlimitedHeightEnable: false,
        allowFontScaling: true
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            width: DEFAULT_STYLE.WIDTH
        },
        innerContainer: {
            flex: 1,
            alignItems: 'center',
            flexDirection: 'row',
            paddingHorizontal: DEFAULT_STYLE.MARGIN_H
        },
        innerIcon: {
            width: DEFAULT_STYLE.ICON_SIZE,
            height: DEFAULT_STYLE.ICON_SIZE,
            marginRight: DEFAULT_STYLE.MARGIN_H
        },
        innerText: {
            flex: 1,
            fontSize: 14
        },
        closeArea: {
            width: DEFAULT_STYLE.CLOSE_AREA,
            height: DEFAULT_STYLE.CLOSE_AREA,
            position: 'absolute',
            top: 0,
            right: 0,
            justifyContent: 'center',
            alignItems: 'center'
        },
        close: {
            width: DEFAULT_STYLE.CLOSE_SIZE,
            height: DEFAULT_STYLE.CLOSE_SIZE
        }
    });
}, 22867, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22426, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

    var CARD_TYPE = {
        NORMAL: 'normal',
        SWITCH: 'switch'
    };
    Object.freeze(CARD_TYPE);
    var CARD_RADIUS_TYPE = {
        ALL: 'all',
        NONE: 'none',
        TOP: 'top',
        BOTTOM: 'bottom'
    };
    Object.freeze(CARD_RADIUS_TYPE);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var cardMargin = 10;
    var cardWidth = width - 20;
    var cardHeight = 80;
    var cardPadding = 20;
    var ICON_SIZE = 40;

    var ARROW_SIZE = _reactNative.Platform.select({
        android: 26,
        ios: 24
    });

    var disabledOpacity = 0.35;

    var MHCard = function (_React$Component) {
        (0, _inherits2.default)(MHCard, _React$Component);

        function MHCard(props) {
            var _CARD_RADIUS_TYPE$ALL;

            var _this;

            (0, _classCallCheck2.default)(this, MHCard);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHCard).call(this, props));

            _this.onAccessibilityAction = function (_ref) {
                var actionName = _ref.nativeEvent.actionName;
                var _this$props = _this.props,
                    disabled = _this$props.disabled,
                    cardType = _this$props.cardType,
                    onPress = _this$props.onPress,
                    onValueChange = _this$props.onValueChange,
                    switchValue = _this$props.switchValue;

                if (disabled) {
                    return;
                }

                if (actionName === 'activate' && cardType === CARD_TYPE.SWITCH && typeof onValueChange === 'function') {
                    onValueChange(!switchValue);
                }

                if (actionName === 'activate' && cardType === CARD_TYPE.NORMAL && typeof onPress === 'function') {
                    onPress();
                }
            };

            (0, _reportDecorator.referenceReport)('MHCard');
            _this.radiusStyle = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
                borderRadius: 10
            }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
                borderRadius: 0
            }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
                borderTopLeftRadius: 10,
                borderTopRightRadius: 10
            }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
                borderBottomLeftRadius: 10,
                borderBottomRightRadius: 10
            }), _CARD_RADIUS_TYPE$ALL)[_this.props.cardRadiusType];
            _this.cardStyle = _reactNative.StyleSheet.flatten([_this.radiusStyle, {
                width: cardWidth,
                height: cardHeight,
                marginTop: _this.props.marginTop
            }]);
            return _this;
        }

        (0, _createClass2.default)(MHCard, [{
            key: "renderInnerView",
            value: function renderInnerView() {
                var theme = this.context.theme;
                var opacityStyle = {
                    opacity: this.props.disabled ? disabledOpacity : 1
                };
                var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
                if (titleLine < 0) titleLine = 0;
                var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
                if (subtitleLine < 0) subtitleLine = 0;
                var rightTextLine = this.props.rightTextNumberOfLines == undefined ? 2 : this.props.rightTextNumberOfLines;
                if (rightTextLine < 0) rightTextLine = 0;
                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.container, this.radiusStyle, opacityStyle, this.props.style]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: this.props.cardType === CARD_TYPE.SWITCH ? _accessibilityHelper.AccessibilityRoles.switch : this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: this.props.cardType === CARD_TYPE.SWITCH ? {
                        disabled: !!this.props.disabled,
                        checked: this.props.switchValue
                    } : {
                        disabled: !!this.props.disabled
                    }
                }), {
                    accessibilityActions: [{
                        name: 'activate'
                    }],
                    onAccessibilityAction: this.onAccessibilityAction
                }), _react.default.createElement(_reactNative.View, {
                    style: [styles.iconContainer, this.props.iconContainerStyle]
                }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
                    style: [styles.icon, this.props.iconStyle],
                    source: this.props.icon,
                    resizeMode: "contain"
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })))), _react.default.createElement(_reactNative.View, {
                    style: styles.textContainer
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.titleContainer
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [_resources.Styles.common.title, this.props.unlimitedHeightEnable ? {
                        height: undefined,
                        lineHeight: undefined
                    } : {}, this.props.titleStyle],
                    numberOfLines: titleLine
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.title || ''), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [styles.subtitle, {
                        color: theme.colorGrayNormal
                    }, this.props.unlimitedHeightEnable ? {
                        height: undefined,
                        lineHeight: undefined
                    } : {}, this.props.subtitleStyle],
                    numberOfLines: subtitleLine
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.subtitle) : null), this.props.rightText ? _react.default.createElement(_reactNative.View, {
                    style: {
                        maxWidth: '33%'
                    }
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [styles.rightText, {
                        color: theme.colorBlack
                    }, this.props.unlimitedHeightEnable ? {
                        height: undefined,
                        lineHeight: undefined
                    } : {}, this.props.rightTextStyle],
                    allowFontScaling: this.props.allowFontScaling,
                    numberOfLines: rightTextLine
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.rightText || '')) : null), this.renderRight());
            }
        }, {
            key: "renderRight",
            value: function renderRight() {
                if (this.props.cardType === CARD_TYPE.NORMAL) {
                    if (this.props.hideArrow) return null;
                    return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
                        style: styles.arrow,
                        source: _resources.Images.common.right_arrow,
                        resizeMode: "contain"
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: false
                    })));
                }

                if (this.props.cardType === CARD_TYPE.SWITCH) {
                    return _react.default.createElement(_Switch.default, (0, _extends2.default)({
                        value: this.props.switchValue
                    }, this.props, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: false
                    })));
                }
            }
        }, {
            key: "render",
            value: function render() {
                var cardStyle = _reactNative.StyleSheet.flatten([this.cardStyle, !this.props.allowFontScaling ? {
                    height: undefined
                } : {}]);

                return _react.default.createElement(_Card.default, (0, _extends2.default)({
                    innerView: this.renderInnerView(),
                    cardStyle: cardStyle
                }, this.props));
            }
        }]);
        return MHCard;
    }(_react.default.Component);

    MHCard.contextType = _configProvider.ConfigContext;
    MHCard.propTypes = {
        cardType: _propTypes.default.oneOf([CARD_TYPE.NORMAL, CARD_TYPE.SWITCH]),
        cardRadiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.BOTTOM]),
        style: _propTypes.default.object,
        iconContainerStyle: _propTypes.default.object,
        icon: _propTypes.default.number.isRequired,
        iconStyle: _propTypes.default.object,
        title: _propTypes.default.string.isRequired,
        titleStyle: _propTypes.default.object,
        subtitle: _propTypes.default.string,
        subtitleStyle: _propTypes.default.object,
        rightText: _propTypes.default.string,
        rightTextStyle: _propTypes.default.object,
        hideArrow: _propTypes.default.bool,
        onPress: _propTypes.default.func,
        switchValue: _propTypes.default.bool,
        onTintColor: _propTypes.default.string,
        tintColor: _propTypes.default.string,
        onValueChange: _propTypes.default.func,
        disabled: _propTypes.default.bool,
        visible: _propTypes.default.bool,
        showShadow: _propTypes.default.bool,
        marginTop: _propTypes.default.number,
        unlimitedHeightEnable: _propTypes.default.bool,
        allowFontScaling: _propTypes.default.bool,
        titleNumberOfLines: _propTypes.default.number,
        subtitleNumberOfLines: _propTypes.default.number,
        rightTextNumberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    MHCard.defaultProps = {
        cardType: CARD_TYPE.NORMAL,
        cardRadiusType: CARD_RADIUS_TYPE.ALL,
        icon: _resources.Images.common.mihome,
        hideArrow: false,
        switchValue: false,
        disabled: false,
        visible: true,
        showShadow: false,
        marginTop: 0,
        unlimitedHeightEnable: false,
        allowFontScaling: true
    };
    MHCard.CARD_TYPE = CARD_TYPE;
    MHCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            paddingHorizontal: cardPadding,
            backgroundColor: '#fff',
            flexDirection: 'row',
            alignItems: 'center'
        },
        iconContainer: {
            width: ICON_SIZE,
            height: ICON_SIZE,
            justifyContent: 'center',
            alignItems: 'center'
        },
        icon: {
            width: ICON_SIZE,
            height: ICON_SIZE,
            borderRadius: 20
        },
        textContainer: {
            flex: 1,
            flexDirection: 'row',
            alignItems: 'center',
            marginLeft: 14
        },
        titleContainer: {
            flex: 1,
            justifyContent: 'center'
        },
        subtitle: {
            fontSize: 12,
            lineHeight: 16
        },
        rightText: {
            paddingLeft: 10,
            textAlign: 'right',
            fontSize: 16
        },
        arrow: {
            width: ARROW_SIZE,
            height: ARROW_SIZE
        }
    });

    var _default = MHCard;
    exports.default = _default;
}, 22870, [14305, 14344, 14317, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22864, 22450, 22426, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _resources = _$$_REQUIRE(_dependencyMap[13]);

    var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

    var radiusValue = 10;
    var iconLength = 56;
    var padding3 = 30;
    var padding4 = 28;
    var padding5 = 20;
    var CARD_RADIUS_TYPE = {
        ALL: 'all',
        NONE: 'none',
        TOP: 'top',
        BOTTOM: 'bottom'
    };

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var ModeCard = function (_Component) {
        (0, _inherits2.default)(ModeCard, _Component);

        function ModeCard(props) {
            var _CARD_RADIUS_TYPE$ALL;

            var _this;

            (0, _classCallCheck2.default)(this, ModeCard);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeCard).call(this, props));

            _this.createModesRN = function () {
                var _this$props = _this.props,
                    modes = _this$props.modes,
                    descriptionStyle = _this$props.descriptionStyle,
                    activeDescriptionStyle = _this$props.activeDescriptionStyle,
                    accessible = _this$props.accessible;
                var theme = _this.context.theme;
                var length = modes.length;
                var modeStyle = {};
                var iconStyle = {};

                if (length === 4) {
                    iconLength = 50;
                    modeStyle = {
                        width: iconLength,
                        marginRight: 33
                    };
                    iconStyle = {
                        width: iconLength,
                        height: iconLength
                    };
                } else if (length === 5) {
                    iconLength = 46;
                    modeStyle = {
                        width: iconLength,
                        marginRight: 17
                    };
                    iconStyle = {
                        width: iconLength,
                        height: iconLength
                    };
                }

                var modesRN = modes.map(function (mode, index) {
                    var isDisabled = mode.isDisabled,
                        isActive = mode.isActive,
                        icon = mode.icon,
                        description = mode.description,
                        isPressing = mode.isPressing,
                        accessibilityLabel = mode.accessibilityLabel,
                        accessibilityHint = mode.accessibilityHint;
                    var iconSource = -1;
                    var iconOpacity = 1;
                    var descriptionRN = null;
                    var last = {};
                    var activeDescription = {};
                    var descriptionOpacity = 1;

                    if (isDisabled && isActive) {
                        iconSource = icon.activeDisabled;
                    } else if (isDisabled) {
                        iconSource = icon.normal;
                        iconOpacity = 0.3;
                    } else if (isActive) {
                        iconSource = icon.active;
                        activeDescription = {
                            color: _resources.Styles.common.MHGreen
                        };
                        (0, _extends2.default)(activeDescription, activeDescriptionStyle);
                    } else if (isPressing) {
                        iconSource = icon.press;
                    } else {
                        iconSource = icon.normal;
                    }

                    if (isDisabled) {
                        descriptionOpacity = 0.3;
                    }

                    if (description && length < 5) {
                        var style = _reactNative.StyleSheet.flatten([styles.description, _this.props.unlimitedHeightEnable ? {
                            fontSize: undefined,
                            lineHeight: undefined
                        } : {}]);

                        var textLine = _this.props.numberOfLines == undefined ? 1 : _this.props.numberOfLines;
                        if (textLine < 0) textLine = 0;
                        descriptionRN = _react.default.createElement(_reactNative.Text, {
                            style: [{
                                color: theme.colorGrayLight
                            }, style, descriptionStyle, activeDescription, {
                                opacity: descriptionOpacity
                            }],
                            numberOfLines: textLine
                        }, ' ', description);
                    }

                    if (index === length - 1) {
                        last = {
                            marginRight: 0
                        };
                    }

                    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
                        key: index,
                        onPressIn: function onPressIn() {
                            _this.pressInIcon(index);
                        },
                        onPressOut: function onPressOut() {
                            _this.pressOutIcon(index);
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
                        accessibilityLabel: accessibilityLabel || description,
                        accessibilityHint: accessibilityHint,
                        accessibilityState: {
                            disabled: !!isDisabled,
                            selected: !!isActive
                        }
                    })), _react.default.createElement(_reactNative.View, {
                        style: [styles.mode, modeStyle, last]
                    }, _react.default.createElement(_reactNative.Image, {
                        style: [styles.icon, {
                            opacity: iconOpacity
                        }, iconStyle],
                        resizeMode: "contain",
                        source: iconSource
                    }), descriptionRN));
                });
                return modesRN;
            };

            _this.pressInIcon = function (index) {
                var _this$props2 = _this.props,
                    pressIn = _this$props2.pressIn,
                    modesKey = _this$props2.modesKey;

                if (pressIn && modesKey) {
                    pressIn(index, modesKey);
                }
            };

            _this.pressOutIcon = function (index) {
                var _this$props3 = _this.props,
                    pressOut = _this$props3.pressOut,
                    modesKey = _this$props3.modesKey;

                if (pressOut && modesKey) {
                    pressOut(index, modesKey);
                }
            };

            _this.renderModeCard = function () {
                var theme = _this.context.theme;
                var modes = _this.props.modes;
                var length = modes.length;
                var cardPadding = {};

                if (length === 4) {
                    cardPadding = {
                        paddingTop: padding4,
                        paddingBottom: padding4
                    };
                } else if (length === 5) {
                    cardPadding = {
                        paddingTop: padding5,
                        paddingBottom: padding5
                    };
                }

                return _react.default.createElement(_reactNative.View, {
                    style: [styles.card, {
                        backgroundColor: theme.colorForeground
                    }, _this.radius, cardPadding]
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.main
                }, _this.createModesRN()));
            };

            (0, _reportDecorator.referenceReport)('ModeCard');
            _this.cardWrapStyle = {};
            var _modes = props.modes;
            var _length = _modes.length;
            var cardWrapStyle = {
                height: 116
            };

            var hasDescription = _modes.some(function (mode) {
                return mode.description;
            });

            if (_length === 3 && hasDescription) {
                cardWrapStyle = {
                    height: 140
                };
            } else if (_length === 4 && !hasDescription) {
                cardWrapStyle = {
                    height: 106
                };
            } else if (_length === 4 && hasDescription) {
                cardWrapStyle = {
                    height: 130
                };
            } else if (_length === 5) {
                cardWrapStyle = {
                    height: 86
                };
            }

            _this.cardWrapStyle = cardWrapStyle;
            _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
                borderRadius: radiusValue
            }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
                borderRadius: 0
            }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
                borderTopLeftRadius: radiusValue,
                borderTopRightRadius: radiusValue
            }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
                borderBottomLeftRadius: radiusValue,
                borderBottomRightRadius: radiusValue
            }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
            return _this;
        }

        (0, _createClass2.default)(ModeCard, [{
            key: "componentDidMount",
            value: function componentDidMount() { }
        }, {
            key: "render",
            value: function render() {
                var _this$props4 = this.props,
                    showShadow = _this$props4.showShadow,
                    modeCardStyle = _this$props4.modeCardStyle;
                var defaultCardStyle = {
                    marginTop: 0,
                    width: width - 20
                };
                var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, modeCardStyle, this.cardWrapStyle, this.radius, !this.props.allowFontScaling ? {
                    height: undefined
                } : {});
                return _react.default.createElement(_Card.default, {
                    showShadow: showShadow,
                    disabled: true,
                    innerView: this.renderModeCard(),
                    cardStyle: mixCardStyle,
                    allowFontScaling: this.props.allowFontScaling,
                    unlimitedHeightEnable: this.props.unlimitedHeightEnable,
                    numberOfLines: this.props.numberOfLines
                });
            }
        }]);
        return ModeCard;
    }(_react.Component);

    ModeCard.contextType = _configProvider.ConfigContext;
    ModeCard.defaultProps = {
        radiusType: 'all',
        modes: [{
            description: '',
            icon: {},
            isDisabled: false,
            isActive: false,
            isPressing: false
        }],
        pressIn: function pressIn() { },
        pressOut: function pressOut() { },
        modesKey: '',
        descriptionStyle: {},
        activeDescriptionStyle: {},
        showShadow: true,
        modeCardStyle: {},
        unlimitedHeightEnable: false,
        allowFontScaling: true
    };
    ModeCard.propTypes = {
        radiusType: _propTypes.default.string,
        modesKey: _propTypes.default.string,
        modes: _propTypes.default.arrayOf(_propTypes.default.shape({
            isDisabled: _propTypes.default.bool,
            isActive: _propTypes.default.bool,
            icon: _propTypes.default.shape({
                normal: _propTypes.default.any,
                press: _propTypes.default.any,
                active: _propTypes.default.any,
                activeDisabled: _propTypes.default.any
            }),
            description: _propTypes.default.string,
            isPressing: _propTypes.default.bool,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        pressIn: _propTypes.default.func,
        pressOut: _propTypes.default.func,
        descriptionStyle: _propTypes.default.object,
        activeDescriptionStyle: _propTypes.default.object,
        showShadow: _propTypes.default.bool,
        modeCardStyle: _propTypes.default.object,
        allowFontScaling: _propTypes.default.bool,
        unlimitedHeightEnable: _propTypes.default.bool,
        numberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };

    var styles = _reactNative.StyleSheet.create({
        card: {
            paddingTop: padding3,
            paddingBottom: padding3
        },
        main: {
            flexDirection: 'row',
            justifyContent: 'center'
        },
        mode: {
            width: iconLength,
            marginRight: 40
        },
        icon: {
            width: iconLength,
            height: iconLength
        },
        description: {
            fontSize: 13,
            marginTop: 10,
            textAlign: 'center',
            lineHeight: 14
        }
    });

    var _default = ModeCard;
    exports.default = _default;
}, 22873, [14308, 14305, 14314, 14317, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22864, 22426, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

    var radiusValue = 10;
    var pictureLength = 40;
    var OFF_COLOR = '#f0f0f0';

    var IndependentCard = function (_Component) {
        (0, _inherits2.default)(IndependentCard, _Component);

        function IndependentCard(props) {
            var _this;

            (0, _classCallCheck2.default)(this, IndependentCard);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IndependentCard).call(this, props));

            _this.changeSwitchValue = function () {
                var _this$props = _this.props,
                    value = _this$props.value,
                    changeValue = _this$props.changeValue,
                    switchKey = _this$props.switchKey;

                if (changeValue) {
                    changeValue(value, switchKey);
                }
            };

            _this.onAccessibilityAction = function (_ref) {
                var actionName = _ref.nativeEvent.actionName;
                var _this$props2 = _this.props,
                    disabled = _this$props2.disabled,
                    disabledCard = _this$props2.disabledCard,
                    changeValue = _this$props2.changeValue,
                    value = _this$props2.value,
                    switchKey = _this$props2.switchKey;

                if (disabled || disabledCard) {
                    return;
                }

                if (actionName === 'activate' && typeof changeValue === 'function') {
                    changeValue(value, switchKey);
                }
            };

            (0, _reportDecorator.referenceReport)('IndependentCard');
            _this.state = {
                radius: {}
            };
            return _this;
        }

        (0, _createClass2.default)(IndependentCard, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var radius = {};
                this.setState(function (state, props) {
                    var radiusType = props.radiusType;

                    switch (radiusType) {
                        case 'none':
                            radius = {};
                            break;

                        case 'top':
                            radius = {
                                borderTopLeftRadius: radiusValue,
                                borderTopRightRadius: radiusValue
                            };
                            break;

                        case 'bottom':
                            radius = {
                                borderBottomLeftRadius: radiusValue,
                                borderBottomRightRadius: radiusValue
                            };
                            break;

                        default:
                            radius = {
                                borderRadius: radiusValue
                            };
                    }

                    return {
                        radius: radius
                    };
                });
            }
        }, {
            key: "render",
            value: function render() {
                var theme = this.context.theme;
                var _this$props3 = this.props,
                    picture = _this$props3.picture,
                    title1 = _this$props3.title1,
                    title2 = _this$props3.title2,
                    value = _this$props3.value,
                    onTintColor = _this$props3.onTintColor,
                    tintColor = _this$props3.tintColor,
                    switchStyle = _this$props3.switchStyle,
                    disabled = _this$props3.disabled,
                    disabledCard = _this$props3.disabledCard,
                    accessible = _this$props3.accessible,
                    accessibilityLabel = _this$props3.accessibilityLabel,
                    accessibilityHint = _this$props3.accessibilityHint;

                var subTitleRN = _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [styles.title2, {
                        color: theme.colorGrayNormal
                    }],
                    numberOfLines: 1
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), title2);

                var subTitle = title2 ? subTitleRN : null;
                var opacity = disabledCard ? 0.3 : 1;
                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.card, {
                        opacity: opacity
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
                    accessibilityLabel: accessibilityLabel,
                    accessibilityHint: accessibilityHint,
                    accessibilityState: {
                        disabled: disabled,
                        checked: !!value
                    }
                }), {
                    accessibilityActions: [{
                        name: 'activate'
                    }],
                    onAccessibilityAction: this.onAccessibilityAction
                }), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
                    source: picture,
                    style: styles.picture
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                }))), _react.default.createElement(_reactNative.View, {
                    style: styles.title
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: 1,
                    style: [styles.title1, {
                        color: theme.colorBlack
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), title1), subTitle), _react.default.createElement(_reactNative.View, {
                    style: styles.switchView
                }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
                    value: value,
                    onValueChange: this.changeSwitchValue,
                    onTintColor: onTintColor,
                    tintColor: tintColor,
                    style: switchStyle,
                    disabled: disabled
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })))));
            }
        }]);
        return IndependentCard;
    }(_react.Component);

    IndependentCard.contextType = _configProvider.ConfigContext;
    IndependentCard.defaultProps = {
        radiusType: 'all',
        picture: -1,
        title1: '',
        title2: '',
        value: false,
        switchKey: '',
        changeValue: function changeValue() { },
        onTintColor: '',
        tintColor: '',
        switchStyle: {},
        disabled: false,
        disabledCard: false
    };
    IndependentCard.propTypes = {
        radiusType: _propTypes.default.string,
        picture: _propTypes.default.number,
        title1: _propTypes.default.string,
        title2: _propTypes.default.string,
        switchKey: _propTypes.default.string,
        value: _propTypes.default.bool,
        changeValue: _propTypes.default.func,
        onTintColor: _propTypes.default.string,
        tintColor: _propTypes.default.string,
        switchStyle: _propTypes.default.object,
        disabled: _propTypes.default.bool,
        disabledCard: _propTypes.default.bool,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };

    var styles = _reactNative.StyleSheet.create({
        card: {
            flex: 1,
            height: 80,
            paddingLeft: 20,
            paddingRight: 20,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-between'
        },
        picture: {
            width: pictureLength,
            height: pictureLength,
            borderRadius: 20,
            marginRight: 14
        },
        title: {
            flex: 1
        },
        title1: {
            fontSize: 15
        },
        title2: {
            fontSize: 12
        },
        switchView: {
            paddingLeft: 30
        }
    });

    var _default = IndependentCard;
    exports.default = _default;
}, 22876, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22450, 22426, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "DragGear", {
        enumerable: true,
        get: function get() {
            return _DragGear.default;
        }
    });
    Object.defineProperty(exports, "NormalGear", {
        enumerable: true,
        get: function get() {
            return _NormalGear.default;
        }
    });
    Object.defineProperty(exports, "SlideGear", {
        enumerable: true,
        get: function get() {
            return _SlideGear.default;
        }
    });

    var _DragGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _NormalGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
}, 22879, [14305, 22882, 22894, 22897]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

    var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        screenWidth = _Dimensions$get.width;

    var DEFAULT_SIZE = 50;
    var DEFAULT_MARGIN = 12;
    var BIGGER_SIZE = 1.35;
    var dragStartAnimationConfig = {
        toValue: BIGGER_SIZE,
        duration: 50,
        useNativeDriver: true
    };
    var releaseAnimationConfig = {
        toValue: 1,
        duration: _reactNative.Platform.select({
            ios: 160,
            android: 100
        }),
        useNativeDriver: true
    };

    var DragGear = function (_React$Component) {
        (0, _inherits2.default)(DragGear, _React$Component);

        function DragGear(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, DragGear);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragGear).call(this, props, context));
            (0, _reportDecorator.referenceReport)('DragGear');

            if (_this.props.options.length === 0) {
                _this.showNothing = true;
                return (0, _possibleConstructorReturn2.default)(_this);
            }

            var _this$getCorrectLayou = _this.getCorrectLayout(),
                optionWidth = _this$getCorrectLayou.optionWidth,
                margin = _this$getCorrectLayou.margin,
                containerWidth = _this$getCorrectLayou.containerWidth;

            _this.optionWidth = optionWidth;
            _this.margin = margin;
            _this.containerWidth = containerWidth;

            if (_this.optionWidth < 20) {
                _this.showNothing = true;

                _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

                return (0, _possibleConstructorReturn2.default)(_this);
            }

            _this.state = {
                pan: new _reactNative.Animated.Value(0),
                moveX: new _reactNative.Animated.Value(0),
                scale: new _reactNative.Animated.Value(1),
                selectIndex: _this.props.selectIndex,
                currentOption: _this.props.options[_this.props.selectIndex],
                dragToValueMin: 0,
                dragToValueMax: 0
            };
            _this.offset = 0;
            _this.panResponder = _reactNative.PanResponder.create({
                onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
                    return true;
                },
                onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
                    return false;
                },
                onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
                    return true;
                },
                onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
                    return true;
                },
                onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
                    return false;
                },
                onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
                    return false;
                },
                onPanResponderGrant: _this._onPanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
                onPanResponderMove: _reactNative.Animated.event([null, {
                    dx: _this.state.pan,
                    moveX: _this.state.moveX
                }]),
                onPanResponderRelease: _this._onPanResponderRelease.bind((0, _assertThisInitialized2.default)(_this))
            });
            return _this;
        }

        (0, _createClass2.default)(DragGear, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (this.showNothing) return;
                var selectIndex = newProps.selectIndex;

                if (selectIndex !== this.props.selectIndex) {
                    if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
                    this.onPress(selectIndex);
                }
            }
        }, {
            key: "UNSAFE_componentWillMount",
            value: function UNSAFE_componentWillMount() {
                var _this2 = this;

                this.state.pan.addListener(function (e) {
                    if (_this2.pressToChoose && _reactNative.Platform.OS === 'ios') {
                        var moveX = _this2.currentCoord + e.value;

                        var index = _this2.getClosetIndex(moveX);

                        _this2.setState({
                            currentOption: _this2.props.options[index]
                        });
                    }
                });

                if (_reactNative.Platform.OS === 'ios') {
                    this.state.moveX.addListener(function (e) {
                        var index = _this2.getClosetIndex(e.value);

                        _this2.setState({
                            currentOption: _this2.props.options[index]
                        });
                    });
                }
            }
        }, {
            key: "getClosetIndex",
            value: function getClosetIndex(moveX) {
                var adjustCoord = moveX - this.offset;
                var diffs = this.coords.map(function (coord) {
                    return Math.abs(coord - adjustCoord);
                });
                return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
            }
        }, {
            key: "_onPanResponderGrant",
            value: function _onPanResponderGrant(e) {
                _reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig).start();

                var pageX = e.nativeEvent.pageX;
                this.offset = pageX - this.currentCoord;
                this.pressToChoose = false;
            }
        }, {
            key: "_onPanResponderRelease",
            value: function _onPanResponderRelease(e, gesture) {
                var index = this.getClosetIndex(gesture.moveX);
                this.animated2TargetIndex(index);

                if (this.props.onSelect) {
                    this.props.onSelect(index);
                }
            }
        }, {
            key: "animated2TargetIndex",
            value: function animated2TargetIndex(index) {
                var _this3 = this;

                this.offset = 0;
                this.setState({
                    selectIndex: index
                }, function () {
                    _this3.getDragRange(function () {
                        _this3.state.pan.setValue(0);

                        _reactNative.Animated.timing(_this3.state.scale, releaseAnimationConfig).start(function () {
                            if (_reactNative.Platform.OS == 'android') {
                                _this3.setState({
                                    currentOption: _this3.props.options[index]
                                });
                            }
                        });
                    });
                });
            }
        }, {
            key: "getCorrectLayout",
            value: function getCorrectLayout() {
                var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
                var _this$props = this.props,
                    margin = _this$props.margin,
                    maxWidth = _this$props.maxWidth;
                var length = this.props.options.length;
                this.length = length;
                var containerWidth = (optionWidth + margin) * length + margin;
                if (containerWidth <= maxWidth) return {
                    optionWidth: optionWidth,
                    margin: margin,
                    containerWidth: containerWidth
                };
                var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
                var newMargin = newOptionWidth / 2;
                var newContainerWidth = (3 * length + 1) * newMargin;
                return {
                    optionWidth: newOptionWidth,
                    margin: newMargin,
                    containerWidth: newContainerWidth
                };
            }
        }, {
            key: "calculateCoord",
            value: function calculateCoord() {
                var _this4 = this;

                this._container.measure(function (x, y, w, h, px, py) {
                    var startCoord = x - _this4.optionWidth / 2;
                    _this4.coords = [];

                    for (var i = 0; i < _this4.props.options.length; i++) {
                        _this4.coords[i] = startCoord + (_this4.optionWidth + _this4.margin) * (i + 1);
                    }

                    _this4.getDragRange();
                });
            }
        }, {
            key: "getDragRange",
            value: function getDragRange(callback) {
                var _this5 = this;

                this.currentCoord = this.coords[this.state.selectIndex];
                this.dragToValueArray = this.coords.map(function (coord) {
                    return coord - _this5.currentCoord;
                });
                this.setState({
                    dragToValueMin: this.dragToValueArray[0] || 0,
                    dragToValueMax: this.dragToValueArray[this.length - 1] || 0
                }, function () {
                    callback && callback();
                });
            }
        }, {
            key: "renderOptions",
            value: function renderOptions() {
                var _this6 = this;

                var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
                    width: this.optionWidth,
                    height: this.optionWidth,
                    borderRadius: this.optionWidth / 2,
                    borderWidth: 0
                }]);

                var selectIndex = this.state.selectIndex;
                return this.props.options.map(function (option, index) {
                    return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
                        key: option,
                        allowFontScaling: _this6.props.allowFontScaling,
                        numberOfLines: _this6.props.numberOfLines,
                        onPress: function onPress() {
                            return _this6.onPress(index);
                        },
                        text: option,
                        select: selectIndex === index,
                        style: style,
                        textStyle: _this6.props.textStyle
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this6.props.accessible,
                        accessibilityLabel: _this6.props.clickAccessibilityLables[index] || option,
                        accessibilityHint: _this6.props.clickAccessibilityHints[index]
                    })));
                });
            }
        }, {
            key: "renderDraggable",
            value: function renderDraggable() {
                var _this$state = this.state,
                    min = _this$state.dragToValueMin,
                    max = _this$state.dragToValueMax;
                if (min === undefined) return null;
                var position = {
                    position: 'absolute',
                    left: -min
                };
                var innerCircle = {
                    width: this.optionWidth,
                    height: this.optionWidth,
                    borderRadius: this.optionWidth / 2,
                    backgroundColor: this.props.selectColor,
                    alignItems: 'center',
                    justifyContent: 'center'
                };
                var touchArea = {
                    width: this.optionWidth + this.margin * 2,
                    height: this.optionWidth * BIGGER_SIZE,
                    backgroundColor: 'transparent',
                    alignItems: 'center',
                    justifyContent: 'center'
                };
                var panStyle = {
                    transform: [{
                        translateX: this.state.pan.interpolate({
                            inputRange: [min - 1, min, max, max + 1],
                            outputRange: [min, min, max, max]
                        })
                    }, {
                        scale: this.state.scale
                    }]
                };
                return _react.default.createElement(_Block.default, {
                    panHandlers: this.panResponder.panHandlers,
                    style: [position, panStyle]
                }, _react.default.createElement(_reactNative.View, {
                    style: touchArea
                }, _react.default.createElement(_reactNative.View, {
                    style: innerCircle
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [this.props.textStyle, {
                        color: '#fff'
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                }), {
                    allowFontScaling: this.props.allowFontScaling,
                    numberOfLines: this.props.numberOfLines
                }), this.state.currentOption))));
            }
        }, {
            key: "render",
            value: function render() {
                var _this7 = this;

                if (this.showNothing) return null;
                var container = {
                    width: this.containerWidth,
                    height: this.optionWidth * BIGGER_SIZE
                };
                return _react.default.createElement(_reactNative.View, {
                    onLayout: function onLayout() {
                        return _this7.calculateCoord();
                    },
                    ref: function ref(container) {
                        return _this7._container = container;
                    },
                    style: [this.props.containerStyle, styles.container, container]
                }, this.renderOptions(), this.renderDraggable());
            }
        }, {
            key: "onPress",
            value: function onPress(index) {
                var _this8 = this;

                this.pressToChoose = true;

                _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig), _reactNative.Animated.timing(this.state.pan, {
                    toValue: this.dragToValueArray[index],
                    duration: 200,
                    useNativeDriver: true
                })]).start(function () {
                    return _this8.animated2TargetIndex(index);
                });

                if (this.props.onSelect) {
                    this.props.onSelect(index);
                }
            }
        }]);
        return DragGear;
    }(_react.default.Component);

    DragGear.propTypes = {
        options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
        containerStyle: _propTypes.default.object,
        normalStyle: _propTypes.default.object,
        textStyle: _propTypes.default.object,
        margin: _propTypes.default.number,
        maxWidth: _propTypes.default.number,
        selectColor: _propTypes.default.string,
        selectIndex: _propTypes.default.number,
        onSelect: _propTypes.default.func.isRequired,
        allowFontScaling: _propTypes.default.bool,
        numberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
        clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
    };
    DragGear.defaultProps = {
        options: [],
        normalStyle: {},
        margin: DEFAULT_MARGIN,
        maxWidth: screenWidth,
        selectColor: '#f0ac3d',
        selectIndex: 0,
        allowFontScaling: true,
        clickAccessibilityLables: [],
        clickAccessibilityHints: []
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-evenly'
        }
    });

    var _default = DragGear;
    exports.default = _default;
}, 22882, [14305, 14344, 14359, 14320, 14323, 14371, 14377, 14374, 14386, 10318, 10297, 10033, 22885, 22888, 22891, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

    var Block = function (_React$Component) {
        (0, _inherits2.default)(Block, _React$Component);

        function Block() {
            (0, _classCallCheck2.default)(this, Block);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Block).apply(this, arguments));
        }

        (0, _createClass2.default)(Block, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
                    style: this.props.style
                }, this.props.panHandlers), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
                    onLongPress: this.props.onLongPress
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.children));
            }
        }]);
        return Block;
    }(_react.default.Component);

    exports.default = Block;
    Block.propTypes = {
        style: _propTypes.default.any,
        panHandlers: _propTypes.default.object,
        onLongPress: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    };
}, 22885, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

    var SIZE = 40;
    var TEXT_COLOR = '#bbb';
    var BORDER_COLOR = '#ccc';

    var Clickable = function (_React$Component) {
        (0, _inherits2.default)(Clickable, _React$Component);

        function Clickable() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, Clickable);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Clickable)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.animatedValue = new _reactNative.Animated.Value(0);
            return _this;
        }

        (0, _createClass2.default)(Clickable, [{
            key: "render",
            value: function render() {
                var color = this.props.select ? '#fff' : TEXT_COLOR;
                var boderStyle = this.props.select ? {
                    borderWidth: 0
                } : {
                    borderColor: BORDER_COLOR,
                    borderWidth: 1
                };
                var backgroundColor = this.props.select ? this.props.selectColor : '#fff';
                return _react.default.createElement(_reactNative.Animated.View, {
                    style: [styles.animationContainer, boderStyle, this.props.style, {
                        backgroundColor: backgroundColor
                    }]
                }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
                    onPress: this.props.onPress
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
                    accessibilityLabel: this.props.accessibilityLabel || this.props.text,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        checked: !!this.props.select
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.container
                }, _react.default.createElement(_reactNative.Text, {
                    style: [styles.text, this.props.textStyle, {
                        color: color
                    }],
                    allowFontScaling: this.props.allowFontScaling,
                    numberOfLines: this.props.numberOfLines
                }, this.props.text))));
            }
        }]);
        return Clickable;
    }(_react.default.Component);

    exports.default = Clickable;
    Clickable.propTypes = {
        select: _propTypes.default.bool,
        selectColor: _propTypes.default.string,
        style: _propTypes.default.object,
        onPress: _propTypes.default.func.isRequired,
        text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
        textStyle: _propTypes.default.object,
        allowFontScaling: _propTypes.default.bool,
        numberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    Clickable.defaultProps = {
        select: false,
        selectColor: '#f0ac3d',
        allowFontScaling: true
    };

    var styles = _reactNative.StyleSheet.create({
        animationContainer: {
            width: SIZE,
            height: SIZE,
            borderRadius: 20
        },
        container: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
        },
        text: {
            fontSize: 11,
            textAlign: 'center'
        }
    });
}, 22888, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var Logger = function () {
        function Logger() {
            (0, _classCallCheck2.default)(this, Logger);
        }

        (0, _createClass2.default)(Logger, null, [{
            key: "warn",
            value: function warn(message) {
                var styles = ["color: " + Logger.theme.warning.color, "background: " + Logger.theme.warning.background, 'padding: 5px', 'font-size: 14px'].join(';');
            }
        }]);
        return Logger;
    }();

    Logger.theme = {
        ok: {
            background: 'purple',
            color: 'white'
        },
        error: {
            background: 'red',
            color: 'white'
        },
        warning: {
            background: 'darkorange',
            color: 'white'
        },
        attention: {
            background: '#ffdc00',
            color: 'black'
        },
        success: {
            background: '#bada55',
            color: 'black'
        },
        info: {
            background: '#abdcfb',
            color: 'black'
        },
        default: {
            background: 'white',
            color: 'black'
        }
    };
    var _default = Logger;
    exports.default = _default;
}, 22891, [14305, 14320, 14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

    var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        screenWidth = _Dimensions$get.width;

    var DEFAULT_SIZE = 50;
    var DEFAULT_MARGIN = 12;

    var NormalGear = function (_React$Component) {
        (0, _inherits2.default)(NormalGear, _React$Component);

        function NormalGear(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, NormalGear);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NormalGear).call(this, props, context));
            (0, _reportDecorator.referenceReport)('NormalGear');

            if (_this.props.options.length === 0) {
                _this.showNothing = true;
                return (0, _possibleConstructorReturn2.default)(_this);
            }

            var _this$getCorrectLayou = _this.getCorrectLayout(),
                optionWidth = _this$getCorrectLayou.optionWidth,
                margin = _this$getCorrectLayou.margin,
                containerWidth = _this$getCorrectLayou.containerWidth;

            _this.optionWidth = optionWidth;
            _this.margin = margin;
            _this.containerWidth = containerWidth;

            if (_this.optionWidth < 20) {
                _this.showNothing = true;

                _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

                return (0, _possibleConstructorReturn2.default)(_this);
            }

            _this.selectArray = Array.from({
                length: _this.props.options.length
            }, function () {
                return false;
            });
            var selectArray = Array.from(_this.selectArray);
            selectArray[_this.props.selectIndex] = true;
            _this.state = {
                selectArray: selectArray
            };
            return _this;
        }

        (0, _createClass2.default)(NormalGear, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (this.showNothing) return;
                var selectIndex = newProps.selectIndex;

                if (selectIndex !== this.props.selectIndex) {
                    if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
                    this.onPress(selectIndex);
                }
            }
        }, {
            key: "renderOptions",
            value: function renderOptions() {
                var _this2 = this;

                var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
                    width: this.optionWidth,
                    height: this.optionWidth,
                    borderRadius: this.optionWidth / 2
                }]);

                return this.props.options.map(function (option, index) {
                    return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
                        key: option,
                        allowFontScaling: _this2.props.allowFontScaling,
                        numberOfLines: _this2.props.numberOfLines,
                        select: _this2.state.selectArray[index],
                        selectColor: _this2.props.selectColor,
                        onPress: function onPress() {
                            return _this2.onPress(index);
                        },
                        text: option,
                        style: style,
                        textStyle: _this2.props.textStyle
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this2.props.accessible,
                        accessibilityLabel: _this2.props.clickAccessibilityLables[index] || option,
                        accessibilityHint: _this2.props.clickAccessibilityHints[index]
                    })));
                });
            }
        }, {
            key: "getCorrectLayout",
            value: function getCorrectLayout() {
                var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
                var _this$props = this.props,
                    margin = _this$props.margin,
                    maxWidth = _this$props.maxWidth;
                var length = this.props.options.length;
                var containerWidth = (optionWidth + margin) * length + margin;
                if (containerWidth <= maxWidth) return {
                    optionWidth: optionWidth,
                    margin: margin,
                    containerWidth: containerWidth
                };
                var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
                var newMargin = newOptionWidth / 2;
                var newContainerWidth = (3 * length + 1) * newMargin;
                return {
                    optionWidth: newOptionWidth,
                    margin: newMargin,
                    containerWidth: newContainerWidth
                };
            }
        }, {
            key: "render",
            value: function render() {
                if (this.showNothing) return null;
                return _react.default.createElement(_reactNative.View, {
                    style: [this.props.containerStyle, styles.container, {
                        width: this.containerWidth
                    }]
                }, this.renderOptions());
            }
        }, {
            key: "onPress",
            value: function onPress(index) {
                var selectArray = Array.from(this.selectArray);
                selectArray[index] = true;
                this.setState({
                    selectArray: selectArray
                });

                if (this.props.onSelect) {
                    this.props.onSelect(index);
                }
            }
        }]);
        return NormalGear;
    }(_react.default.Component);

    NormalGear.propTypes = {
        options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
        containerStyle: _propTypes.default.object,
        normalStyle: _propTypes.default.object,
        textStyle: _propTypes.default.object,
        margin: _propTypes.default.number,
        maxWidth: _propTypes.default.number,
        selectColor: _propTypes.default.string,
        selectIndex: _propTypes.default.number,
        onSelect: _propTypes.default.func.isRequired,
        allowFontScaling: _propTypes.default.bool,
        numberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
        clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
    };
    NormalGear.defaultProps = {
        options: [],
        normalStyle: {},
        margin: DEFAULT_MARGIN,
        maxWidth: screenWidth,
        selectIndex: 0,
        allowFontScaling: true,
        clickAccessibilityLables: [],
        clickAccessibilityHints: []
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-evenly'
        }
    });

    var _default = NormalGear;
    exports.default = _default;
}, 22894, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22888, 22420, 22891, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _color = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var TYPE = {
        CIRCLE: 'circle',
        RECTANGLE: 'rectangle'
    };
    var CONTENTTYPE = {
        NUM: 'num',
        COLOR: 'color',
        COLORTEM: 'colorTem'
    };
    var COLORRANGE = {
        "0.00": '#FFA100',
        "0.10": '#FFFA00',
        "0.20": '#9AFF00',
        "0.30": '#01FF00',
        "0.40": '#00FDA4',
        "0.50": '#00EEFF',
        "0.60": '#007CFF',
        "0.70": '#0600F9',
        "0.80": '#BF00FC',
        "0.90": '#FF0081',
        "1.00": '#FF0000'
    };
    var COLORTEMRANGE = {
        "0.00": '#FFAE00',
        "0.50": '#F6EFD6',
        "1.00": '#8AB2D4'
    };
    Object.freeze(TYPE);
    Object.freeze(CONTENTTYPE);
    var DEFAULT_SIZE = 40;
    var MIN_MARGIN = 5;
    var MARGIN = 7.5;
    var MAX_MARGIN = 10;
    var DEFAULT_HEIGHT = 55;
    var DEFAULT_BLOCK_COLOR = '#fff';

    var SlideGear = function (_React$Component) {
        (0, _inherits2.default)(SlideGear, _React$Component);

        function SlideGear(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, SlideGear);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlideGear).call(this, props, context));
            (0, _reportDecorator.referenceReport)('SlideGear');

            if (_this.props.options.length === 0) {
                if (!_this.props.optionStep) {
                    _this.showNothing = true;
                    return (0, _possibleConstructorReturn2.default)(_this);
                } else {
                    _this.optionMin = _this.props.optionMin;
                    _this.optionMax = _this.props.optionMax;
                    _this.optionStep = _this.props.optionStep;
                    _this.length = (_this.optionMax - _this.optionMin) / _this.optionStep + 1;
                }
            } else {
                _this.options = _this.props.options;
                _this.length = _this.props.options.length;
            }

            var _this$getCorrectLayou = _this.getCorrectLayout(),
                margin = _this$getCorrectLayou.margin,
                blockWidth = _this$getCorrectLayou.blockWidth,
                blockHeight = _this$getCorrectLayou.blockHeight,
                containerHeight = _this$getCorrectLayou.containerHeight;

            _this.margin = margin;
            _this.blockWidth = blockWidth;
            _this.blockHeight = blockHeight;
            _this.containerHeight = containerHeight;
            _this.value = _this.props.value;
            _this.state = {
                pan: new _reactNative.Animated.Value(0),
                moveX: new _reactNative.Animated.Value(0),
                value: _this.props.value,
                dragToValueMin: 0,
                dragToValueMax: 0
            };
            _this.translateX = 0;
            _this.offset = 0;

            _this.constructPanResponder(props);

            return _this;
        }

        (0, _createClass2.default)(SlideGear, [{
            key: "constructPanResponder",
            value: function constructPanResponder(props) {
                this.panResponder = _reactNative.PanResponder.create({
                    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
                        return true;
                    },
                    onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
                        return false;
                    },
                    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
                        return !props.disabled;
                    },
                    onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
                        return !props.disabled;
                    },
                    onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
                        return true;
                    },
                    onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
                        return false;
                    },
                    onPanResponderGrant: this._onPanResponderGrant.bind(this),
                    onPanResponderMove: _reactNative.Animated.event([null, {
                        dx: this.state.pan,
                        moveX: this.state.moveX
                    }]),
                    onPanResponderRelease: this._onPanResponderRelease.bind(this),
                    onPanResponderTerminate: this._onPanResponderRelease.bind(this)
                });
            }
        }, {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (this.sliding) {
                    return;
                }

                var value = newProps.value,
                    disabled = newProps.disabled;

                if (disabled !== this.props.disabled) {
                    this.constructPanResponder(newProps);
                }

                if (this.optionStep) {
                    var optionMin = newProps.optionMin,
                        optionMax = newProps.optionMax,
                        optionStep = newProps.optionStep;

                    if (optionMin === this.state.optionMin && optionMax === this.state.optionMax && optionStep === this.state.optionStep && value === this.props.value) {
                        return;
                    }

                    this.optionMin = optionMin;
                    this.optionMax = optionMax;
                    this.optionStep = optionStep;
                    this.length = (this.optionMax - this.optionMin) / this.optionStep + 1;

                    if (value !== this.props.value) {
                        this.value = value;
                    }
                } else {
                    var options = newProps.options;
                    if (value === this.value && this.isSameArray(options, this.props.options)) return;

                    if (!this.isSameArray(options, this.props.options)) {
                        if (!(options instanceof Array) || options.length === 0) {
                            this.showNothing = true;
                            return;
                        } else {
                            this.showNothing = false;
                            this.options = options;
                            this.length = options.length;
                        }
                    }

                    if (value !== this.props.value) {
                        if (value < 0 || value >= this.length) {
                            this.value = 0;
                        } else {
                            this.value = value;
                        }
                    }
                }

                this.calculateCoord(this.containerLayout);
            }
        }, {
            key: "isSameArray",
            value: function isSameArray(arr1, arr2) {
                if (!(arr1 instanceof Array) || !(arr2 instanceof Array)) return false;
                if (arr1.length !== arr2.length) return false;

                for (var i = 0; i < arr1.length; i++) {
                    if (arr1[i] !== arr2[i]) return false;
                }

                return true;
            }
        }, {
            key: "UNSAFE_componentWillMount",
            value: function UNSAFE_componentWillMount() {
                var _this2 = this;

                this.state.pan.addListener(function (e) {
                    var _this2$state = _this2.state,
                        min = _this2$state.dragToValueMin,
                        max = _this2$state.dragToValueMax;

                    if (e.value >= min && e.value <= max) {
                        _this2.translateX = e.value;
                    } else {
                        _this2.translateX = e.value < min ? min : max;
                    }

                    _this2._background.setNativeProps({
                        width: _this2.translateX + _this2.margin * 2 + _this2.blockWidth - _this2.state.dragToValueMin
                    });
                });
                this.state.moveX.addListener(function (e) {
                    var index = _this2.getClosetIndex(e.value);

                    if (_this2.props.onValueChange) {
                        if (_this2.props.contentType === CONTENTTYPE.COLOR) {
                            var colorValue = _this2.getColorFromValue(index);

                            _this2.props.onValueChange(colorValue);
                        } else {
                            _this2.props.onValueChange(index);
                        }
                    }
                });
            }
        }, {
            key: "getClosetIndex",
            value: function getClosetIndex(moveX) {
                var adjustCoord = moveX - this.offset;

                if (this.optionStep) {
                    var value;

                    if (adjustCoord <= this.firstCoord) {
                        value = this.optionMin;
                    } else if (adjustCoord >= this.endCoord) {
                        value = this.optionMax;
                    } else {
                        var index = Math.round((adjustCoord - this.firstCoord) / this.d);
                        value = index * this.optionStep + this.optionMin;
                        if (value > this.optionMax) value = this.optionMax;
                    }

                    return value;
                } else {
                    var diffs = this.coords.map(function (coord) {
                        return Math.abs(coord - adjustCoord);
                    });
                    return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
                }
            }
        }, {
            key: "getColorFromValue",
            value: function getColorFromValue(value) {
                var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
                var colorHex = getter.getColorFromPercent((value - this.props.optionMin) / (this.props.optionMax - this.props.optionMin) * 100);
                var colorValue = (0, _color.transformHexToDigtal)(colorHex);
                return colorValue;
            }
        }, {
            key: "getValueFromColor",
            value: function getValueFromColor(colorValue) {
                var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
                var percent = getter.getPercentFromColor((0, _color.transformDigtalToHex)(colorValue));
                var value = this.props.optionMin + (this.props.optionMax - this.props.optionMin) * (percent / 100);
                return value;
            }
        }, {
            key: "_onPanResponderGrant",
            value: function _onPanResponderGrant(e) {
                this.sliding = true;
                this.state.pan.setOffset(this.translateX);
                this.state.pan.setValue(0);
                var pageX = e.nativeEvent.pageX;
                this.offset = pageX - this.currentCoord;
            }
        }, {
            key: "_onPanResponderRelease",
            value: function _onPanResponderRelease(e, gesture) {
                var coord = gesture.moveX - this.offset;

                if (this.optionStep) {
                    if (coord >= this.firstCoord && coord <= this.endCoord) {
                        this.currentCoord = coord;
                    } else {
                        this.currentCoord = coord < this.firstCoord ? this.firstCoord : this.endCoord;
                    }
                } else {
                    var min = this.coords[0];
                    var max = this.coords[this.length - 1];

                    if (coord >= min && coord <= max) {
                        this.currentCoord = coord;
                    } else {
                        this.currentCoord = coord < min ? min : max;
                    }
                }

                var index = this.getClosetIndex(gesture.moveX);

                if (this.props.contentType !== CONTENTTYPE.COLOR) {
                    this.value = index;
                }

                if (this.props.onSlidingComplete) {
                    if (this.props.contentType === CONTENTTYPE.COLOR) {
                        var colorValue = this.getColorFromValue(index);
                        this.value = colorValue;
                        this.props.onSlidingComplete(colorValue);
                    } else {
                        this.props.onSlidingComplete(index);
                        this.value = index;
                    }
                }

                this.offset = 0;
                this.sliding = false;
            }
        }, {
            key: "getCorrectLayout",
            value: function getCorrectLayout() {
                var containerHeight = this.props.containerStyle.height || DEFAULT_HEIGHT;
                var blockWidth = this.props.blockStyle.width || DEFAULT_SIZE;
                var margin = ~~(containerHeight / 10);
                margin = margin > MAX_MARGIN ? MAX_MARGIN : margin;
                margin = margin < MIN_MARGIN ? MIN_MARGIN : margin;
                var blockHeight = containerHeight - margin * 2;
                return {
                    margin: margin,
                    blockWidth: this.props.type === TYPE.CIRCLE ? blockHeight : blockWidth,
                    blockHeight: blockHeight,
                    containerHeight: containerHeight
                };
            }
        }, {
            key: "_onLayout",
            value: function _onLayout() {
                var _this3 = this;

                this._container.measure(function (x, y, w, h, px, py) {
                    _this3.calculateCoord({
                        x: x,
                        y: y,
                        w: w,
                        h: h,
                        px: px,
                        py: py
                    });
                });
            }
        }, {
            key: "calculateCoord",
            value: function calculateCoord(obj) {
                if (!obj) {
                    return;
                }

                var x = obj.x,
                    w = obj.w;
                this.containerLayout = obj;
                var offset = this.margin * 2 + this.blockWidth;
                var startCoord = x + offset / 2;
                var d = this.optionStep ? (w - offset) / this.length : (w - offset) / (this.length - 1);
                this.d = d;

                if (d <= 0) { }

                if (!this.optionStep) {
                    this.coords = this.options.map(function (v, i) {
                        return d > 0 ? startCoord + d * i : 0;
                    });
                    this.currentCoord = this.coords[this.value];
                } else {
                    this.firstCoord = startCoord;
                    this.endCoord = startCoord + d * this.length;

                    if (this.props.contentType !== CONTENTTYPE.COLOR) {
                        this.currentCoord = startCoord + d * ((this.value - this.optionMin) / this.optionStep);
                    } else {
                        var value = this.getValueFromColor(this.value);
                        this.currentCoord = startCoord + d * Math.round((value - this.optionMin) / this.optionStep);
                    }
                }

                this.totalWidth = w;
                this.getDragRange();
            }
        }, {
            key: "getDragRange",
            value: function getDragRange(callback) {
                var _this4 = this;

                if (!this.optionStep) {
                    this.setState({
                        dragToValueMin: this.coords[0] - this.currentCoord || 0,
                        dragToValueMax: this.coords[this.length - 1] - this.currentCoord || 0
                    }, function () {
                        callback && callback();

                        _this4.state.pan.setOffset(0);

                        _this4.state.pan.setValue(0);
                    });
                } else {
                    this.setState({
                        dragToValueMin: this.firstCoord - this.currentCoord || 0,
                        dragToValueMax: this.endCoord - this.currentCoord || 0
                    }, function () {
                        callback && callback();

                        _this4.state.pan.setOffset(0);

                        _this4.state.pan.setValue(0);
                    });
                }
            }
        }, {
            key: "renderDraggable",
            value: function renderDraggable() {
                var _this$state = this.state,
                    min = _this$state.dragToValueMin,
                    max = _this$state.dragToValueMax;
                if (min === undefined) return null;
                var position = {
                    position: 'absolute',
                    left: -min - this.margin,
                    top: -this.margin
                };
                var innerCircle = this.props.type === TYPE.CIRCLE ? {
                    width: this.blockHeight,
                    height: this.blockHeight,
                    borderRadius: this.blockHeight / 2
                } : {
                    width: this.blockWidth,
                    height: this.blockHeight,
                    borderRadius: 0
                };
                var touchArea = {
                    width: this.blockWidth + this.margin * 4,
                    height: this.containerHeight + this.margin * 2,
                    backgroundColor: 'transparent',
                    alignItems: 'center',
                    justifyContent: 'center'
                };
                var panStyle = {
                    transform: [{
                        translateX: this.state.pan.interpolate({
                            inputRange: [min - 1, min, max, max + 1],
                            outputRange: [min, min, max, max]
                        })
                    }]
                };
                return _react.default.createElement(_Block.default, {
                    panHandlers: this.panResponder.panHandlers,
                    style: [position, panStyle]
                }, _react.default.createElement(_reactNative.View, {
                    style: touchArea
                }, _react.default.createElement(_reactNative.View, {
                    style: [{
                        backgroundColor: DEFAULT_BLOCK_COLOR
                    }, this.props.blockStyle, innerCircle]
                })));
            }
        }, {
            key: "renderBackground",
            value: function renderBackground() {
                var _this5 = this;

                var _this$state2 = this.state,
                    min = _this$state2.dragToValueMin,
                    max = _this$state2.dragToValueMax;
                if (min === undefined) return null;
                return _react.default.createElement(_reactNative.Animated.View, {
                    ref: function ref(background) {
                        return _this5._background = background;
                    },
                    style: {
                        position: 'absolute',
                        width: this.state.pan.interpolate({
                            inputRange: [min - 1, min, max, max + 1],
                            outputRange: [this.margin * 2 + this.blockWidth, this.margin * 2 + this.blockWidth, this.totalWidth, this.totalWidth]
                        }),
                        height: this.containerHeight,
                        borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
                        backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? this.props.minimumTrackTintColor : ''
                    }
                }, this.props.showEndText ? _react.default.createElement(_reactNative.View, {
                    style: [styles.textContainer, {
                        margin: this.margin,
                        alignSelf: 'flex-start',
                        minWidth: this.blockWidth + this.margin * 2,
                        height: this.blockHeight
                    }]
                }, _react.default.createElement(_reactNative.Text, {
                    style: [styles.text, {
                        color: this.props.leftTextColor
                    }, this.props.leftTextStyle],
                    allowFontScaling: this.props.allowFontScaling,
                    numberOfLines: this.props.numberOfLines
                }, this.optionStep ? this.optionMin : this.options[0])) : null);
            }
        }, {
            key: "renderRightText",
            value: function renderRightText() {
                var width = this.blockWidth + this.margin * 2;

                if (this.optionStep && this.optionMax > 999999) {
                    width += 20;
                }

                return _react.default.createElement(_reactNative.View, {
                    style: [styles.textContainer, {
                        margin: this.margin,
                        alignSelf: 'flex-end',
                        minWidth: width,
                        height: this.blockHeight
                    }]
                }, this.props.showEndText ? _react.default.createElement(_reactNative.Text, {
                    style: [styles.text, {
                        color: this.props.rightTextColor
                    }, this.props.rightTextStyle],
                    allowFontScaling: this.props.allowFontScaling,
                    numberOfLines: this.props.numberOfLines
                }, this.optionStep ? this.optionMax : this.options[this.length - 1]) : null);
            }
        }, {
            key: "render",
            value: function render() {
                var _this6 = this;

                if (this.showNothing) return null;
                var containerStyle = {
                    height: this.containerHeight,
                    borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
                    backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? this.props.maximumTrackTintColor : ''
                };
                var opacity = this.props.disabled ? 0.3 : 1;
                return _react.default.createElement(_reactNative.View, {
                    onLayout: function onLayout() {
                        return _this6._onLayout();
                    },
                    ref: function ref(container) {
                        return _this6._container = container;
                    },
                    style: [this.props.containerStyle, containerStyle, {
                        opacity: opacity
                    }]
                }, this.props.contentType === CONTENTTYPE.NUM ? _react.default.createElement(_reactNative.View, null, this.renderRightText(), this.renderBackground(), this.renderDraggable()) : _react.default.createElement(_reactNativeLinearGradient.default, {
                    start: {
                        x: 0,
                        y: 0
                    },
                    end: {
                        x: 1,
                        y: 0
                    },
                    locations: this.props.contentType === CONTENTTYPE.COLOR ? Object.keys(this.props.colorRangeObject).map(function (value) {
                        return Number(value);
                    }) : Object.keys(this.props.colorTemRangeObject).map(function (value) {
                        return Number(value);
                    }),
                    colors: this.props.contentType === CONTENTTYPE.COLOR ? Object.values(this.props.colorRangeObject) : Object.values(this.props.colorTemRangeObject),
                    style: {
                        borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0
                    }
                }, this.renderRightText(), this.renderBackground(), this.renderDraggable()));
            }
        }]);
        return SlideGear;
    }(_react.default.Component);

    SlideGear.propTypes = {
        type: _propTypes.default.oneOf([TYPE.CIRCLE, TYPE.RECTANGLE]),
        options: _propTypes.default.array.isRequired,
        showEndText: _propTypes.default.bool,
        containerStyle: _propTypes.default.object,
        blockStyle: _propTypes.default.object,
        minimumTrackTintColor: _propTypes.default.string,
        leftTextColor: _propTypes.default.string,
        leftTextStyle: _reactNative.Text.propTypes.style,
        maximumTrackTintColor: _propTypes.default.string,
        rightTextColor: _propTypes.default.string,
        rightTextStyle: _reactNative.Text.propTypes.style,
        value: _propTypes.default.number,
        disabled: _propTypes.default.bool,
        onValueChange: _propTypes.default.func,
        onSlidingComplete: _propTypes.default.func.isRequired,
        optionMin: _propTypes.default.number,
        optionMax: _propTypes.default.number,
        optionStep: _propTypes.default.number,
        contentType: _propTypes.default.oneOf([CONTENTTYPE.NUM, CONTENTTYPE.COLOR, CONTENTTYPE.COLORTEM]),
        colorRangeObject: _propTypes.default.object,
        colorTemRangeObject: _propTypes.default.object,
        allowFontScaling: _propTypes.default.bool,
        numberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    SlideGear.defaultProps = {
        type: TYPE.CIRCLE,
        options: [],
        showEndText: true,
        containerStyle: {},
        blockStyle: {},
        minimumTrackTintColor: _Styles.default.common.MHGreen,
        leftTextColor: '#eee',
        leftTextStyle: {},
        maximumTrackTintColor: '#dfe2e3',
        rightTextColor: '#999',
        rightTextStyle: {},
        value: 0,
        disabled: false,
        optionMin: 0,
        optionMax: 0,
        optionStep: 0,
        contentType: CONTENTTYPE.NUM,
        colorRangeObject: COLORRANGE,
        colorTemRangeObject: COLORTEMRANGE,
        allowFontScaling: true
    };
    SlideGear.TYPE = TYPE;
    SlideGear.CONTENTTYPE = CONTENTTYPE;

    var styles = _reactNative.StyleSheet.create({
        textContainer: {
            justifyContent: 'center',
            alignItems: 'center'
        },
        text: {
            fontSize: 15,
            width: '100%',
            textAlign: 'center'
        }
    });

    var _default = SlideGear;
    exports.default = _default;
}, 22897, [14305, 14359, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22780, 22885, 14299, 22900, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.fixHex = fixHex;
    exports.transformHexToDigtal = transformHexToDigtal;
    exports.transformDigtalToHex = transformDigtalToHex;
    exports.colorGetterforRange = colorGetterforRange;

    var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    function fixHex(hex) {
        hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
        var length = hex.length;

        if (length < 6) {
            hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
        }

        hex = "#" + hex.slice(0, 6).join('');
        return hex.toUpperCase();
    }

    function transformHexToDigtal(hex) {
        hex = fixHex(hex).slice(1);
        return parseInt(hex, 16);
    }

    function transformDigtalToHex(digtal) {
        return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
    }

    function splitRgb(color) {
        color = fixHex(color);

        var _color$split = color.split(''),
            _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
            _1 = _color$split2[0],
            r1 = _color$split2[1],
            r2 = _color$split2[2],
            g1 = _color$split2[3],
            g2 = _color$split2[4],
            b1 = _color$split2[5],
            b2 = _color$split2[6];

        var r = parseInt(r1 + r2, 16);
        var g = parseInt(g1 + g2, 16);
        var b = parseInt(b1 + b2, 16);
        return {
            r: r,
            g: g,
            b: b
        };
    }

    function colorGetterforRange(range) {
        var colors = formatColors(range);

        function formatColors(range) {
            var colors = [];

            for (var k in range) {
                if (range.hasOwnProperty(k)) {
                    var p = parseFloat(k);
                    var c = fixHex(range[k]);

                    if (typeof p === 'number' && p >= 0 && p <= 1) {
                        colors.push([p, c]);
                    }
                }
            }

            colors.sort(function (a, b) {
                return a[0] > b[0] ? 1 : -1;
            });

            if (colors.length < 1) {
                colors = [[0, '#000000'], [1, '#ffffff']];
            }

            if (colors[0][0] > 0) {
                colors[0] = [0, colors[0][1]];
            }

            if (colors[colors.length - 1][0] < 1) {
                colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
            }

            return colors;
        }

        function getColorFromPercent(p) {
            p = Math.max(0, Math.min(1, p / 100));
            var s1 = null;
            var s2 = null;

            for (var i = 1, l = colors.length; i < l; i++) {
                var c = colors[i];
                var cp = colors[i - 1];

                if (cp[0] <= p && c[0] >= p) {
                    s1 = cp;
                    s2 = c;
                    break;
                }
            }

            if (s1[0] >= s2[0]) {
                return s1[1];
            }

            var p0 = (p - s1[0]) / (s2[0] - s1[0]);

            var _splitRgb = splitRgb(s1[1]),
                r1 = _splitRgb.r,
                g1 = _splitRgb.g,
                b1 = _splitRgb.b;

            var _splitRgb2 = splitRgb(s2[1]),
                r2 = _splitRgb2.r,
                g2 = _splitRgb2.g,
                b2 = _splitRgb2.b;

            var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
            var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
            var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
            return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
        }

        function getPercentFromColor(color) {
            var _splitRgb3 = splitRgb(color),
                r = _splitRgb3.r,
                g = _splitRgb3.g,
                b = _splitRgb3.b;

            for (var i = 0, l = 1000; i < l; i++) {
                var c = getColorFromPercent(i / 10);

                var _splitRgb4 = splitRgb(c),
                    rc = _splitRgb4.r,
                    gc = _splitRgb4.g,
                    bc = _splitRgb4.b;

                if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
                    return i / 10;
                }
            }

            return 50;
        }

        return {
            getColorFromPercent: getColorFromPercent,
            getPercentFromColor: getPercentFromColor
        };
    }
}, 22900, [14305, 14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "Separator", {
        enumerable: true,
        get: function get() {
            return _Separator.default;
        }
    });

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22903, [14305, 22906]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _resources = _$$_REQUIRE(_dependencyMap[9]);

    var TYPE = {
        ROW: 'row',
        COLUMN: 'column'
    };

    var Separator = function (_React$PureComponent) {
        (0, _inherits2.default)(Separator, _React$PureComponent);

        function Separator() {
            (0, _classCallCheck2.default)(this, Separator);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Separator).apply(this, arguments));
        }

        (0, _createClass2.default)(Separator, [{
            key: "render",
            value: function render() {
                var separatorContainer;
                var separatorStyle;

                if (this.props.type === TYPE.ROW) {
                    var maxHeight = {};

                    if (this.props.style && this.props.style.height) {
                        if (this.props.style.height > 1) {
                            maxHeight = {
                                height: 1
                            };
                        }
                    }

                    separatorContainer = {
                        backgroundColor: 'transparent',
                        height: 1,
                        justifyContent: 'center'
                    };
                    separatorStyle = _reactNative.StyleSheet.flatten([_resources.Styles.common.separator, this.props.style, maxHeight]);
                } else {
                    var maxWidth = {};

                    if (this.props.style && this.props.style.width) {
                        if (this.props.style.width > 1) {
                            maxWidth = {
                                width: 1
                            };
                        }
                    }

                    separatorContainer = {
                        backgroundColor: 'transparent',
                        width: 1,
                        alignItems: 'center'
                    };
                    separatorStyle = _reactNative.StyleSheet.flatten([{
                        width: _reactNative.StyleSheet.hairlineWidth,
                        backgroundColor: _resources.Styles.common.hairlineColor
                    }, this.props.style, maxWidth]);
                }

                return _reactNative.Platform.select({
                    android: _react.default.createElement(_reactNative.View, {
                        style: separatorContainer
                    }, _react.default.createElement(_reactNative.View, {
                        style: separatorStyle
                    })),
                    ios: _react.default.createElement(_reactNative.View, {
                        style: separatorStyle
                    })
                });
            }
        }]);
        return Separator;
    }(_react.default.PureComponent);

    Separator.propTypes = {
        type: _propTypes.default.string,
        style: _propTypes.default.any
    };
    Separator.defaultProps = {
        type: TYPE.ROW
    };
    var _default = Separator;
    exports.default = _default;
}, 22906, [14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "StringSpinner", {
        enumerable: true,
        get: function get() {
            return _StringSpinner.default;
        }
    });
    Object.defineProperty(exports, "NumberSpinner", {
        enumerable: true,
        get: function get() {
            return _NumberSpinner.default;
        }
    });

    var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
}, 22909, [14305, 22912, 22918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

    var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

    var StringSpinner = function (_React$Component) {
        (0, _inherits2.default)(StringSpinner, _React$Component);

        function StringSpinner(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, StringSpinner);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StringSpinner).call(this, props, context));
            (0, _reportDecorator.referenceReport)('StringSpinner');
            return _this;
        }

        (0, _createClass2.default)(StringSpinner, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                var pickerStyle = this.props.pickerInnerStyle;

                if (pickerStyle && pickerStyle.textColor) {
                    pickerStyle.textColor = pickerStyle.textColor + "text";
                }

                if (pickerStyle && pickerStyle.selectTextColor) {
                    pickerStyle.selectTextColor = pickerStyle.selectTextColor + "text";
                }

                if (pickerStyle && pickerStyle.unitTextColor) {
                    pickerStyle.unitTextColor = pickerStyle.unitTextColor + "text";
                }

                return _react.default.createElement(_nativeModules.MIOTStringPicker, (0, _extends2.default)({}, this.props, pickerStyle, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                }), {
                    onValueChanged: function onValueChanged(event) {
                        if (_this2.props.onValueChanged) {
                            _this2.props.onValueChanged((0, _objectSpread2.default)({}, event.nativeEvent));
                        }
                    }
                }));
            }
        }]);
        return StringSpinner;
    }(_react.default.Component);

    StringSpinner.propTypes = (0, _objectSpread2.default)({
        visible: _propTypes.default.bool,
        dataSource: _propTypes.default.array,
        defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
        onValueChanged: _propTypes.default.func,
        pickerInnerStyle: _propTypes.default.object
    }, _reactNative.ViewPropTypes, {
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    });
    var _default = StringSpinner;
    exports.default = _default;
}, 22912, [14305, 14344, 14314, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22420, 22915, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.MIOTStringPicker = exports.MIOTNumberPicker = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var MIOTNumberPicker = (0, _reactNative.requireNativeComponent)('MIOTNumberPicker');
    exports.MIOTNumberPicker = MIOTNumberPicker;
    var MIOTStringPicker = (0, _reactNative.requireNativeComponent)('MHStringPicker');
    exports.MIOTStringPicker = MIOTStringPicker;
}, 22915, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

    var isAndroid = _reactNative.Platform.OS === 'android';
    var NumberPicker = isAndroid ? _nativeModules.MIOTNumberPicker : null;

    var NumberSpinner = function (_React$Component) {
        (0, _inherits2.default)(NumberSpinner, _React$Component);

        function NumberSpinner(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, NumberSpinner);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NumberSpinner).call(this, props, context));
            (0, _reportDecorator.referenceReport)('NumberSpinner');
            return _this;
        }

        (0, _createClass2.default)(NumberSpinner, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return isAndroid ? _react.default.createElement(NumberPicker, (0, _extends2.default)({}, this.props, this.props.pickerInnerStyle, {
                    lineStyle: this.props.lineStyle || 'default',
                    onValueChanged: function onValueChanged(event) {
                        if (_this2.props.onNumberChanged) {
                            var val = event.nativeEvent || {};
                            var result = {
                                newValue: parseFloat("" + val.newValue),
                                oldValue: parseFloat("" + val.oldValue)
                            };

                            _this2.props.onNumberChanged(result);
                        }
                    }
                })) : _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
                    type: 1
                }, this.props, {
                    defaultValue: "" + this.props.defaultValue,
                    onValueChanged: this.props.onNumberChanged
                }));
            }
        }]);
        return NumberSpinner;
    }(_react.default.Component);

    NumberSpinner.defaultProps = {
        valueFormat: _reactNative.Platform.select({
            ios: '%0.0f'
        })
    };
    NumberSpinner.propTypes = (0, _objectSpread2.default)({
        visible: _propTypes.default.bool,
        unit: _propTypes.default.string,
        maxValue: _propTypes.default.number,
        minValue: _propTypes.default.number,
        interval: _propTypes.default.number,
        defaultValue: _propTypes.default.number,
        valueFormat: _propTypes.default.string,
        onNumberChanged: _propTypes.default.func
    }, _reactNative.ViewPropTypes);
    var _default = NumberSpinner;
    exports.default = _default;
}, 22918, [14305, 14314, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22912, 22915, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "MHDatePicker", {
        enumerable: true,
        get: function get() {
            return _MHDatePicker.default;
        }
    });

    var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 22921, [14305, 22924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

    var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _string = _$$_REQUIRE(_dependencyMap[14]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

    var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var _utils = _$$_REQUIRE(_dependencyMap[17]);

    var _locale = _$$_REQUIRE(_dependencyMap[18]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[20]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[21]);

    var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

    var _singleDataSource;

    var TYPE = {
        SINGLE: 'single',
        TIME24: 'time24',
        TIME12: 'time12',
        DATE: 'date'
    };
    Object.freeze(TYPE);
    var SINGLE_TYPE = {
        MONTH: 'month',
        DAY: 'day',
        HOUR: 'hour',
        MINUTE: 'minute',
        SECOND: 'second'
    };
    Object.freeze(SINGLE_TYPE);
    var screenBackgroundColor = 'rgba(0,0,0,0.4)';
    var margin = 10;
    var borderRadius = 15;
    var titleHeightThin = 66;
    var titleHeightFat = 85;
    var rowHeight = 52;

    var pickerContainerHeight = _reactNative.Platform.select({
        android: 260,
        ios: 220
    });

    var buttonHeight = 50;

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    var modalWidth = width - 20;
    var pickerInnerStyle = {
        lineColor: _Styles.default.common.hairlineColor,
        textColor: '#666666',
        fontSize: 15,
        selectTextColor: '#333333',
        selectFontSize: 20,
        unitTextColor: '#333333',
        unitFontSize: 10,
        rowHeight: rowHeight,
        selectBgColor: '#f3f3f3'
    };
    var months = (0, _utils.constructArray)(12, true, false);
    var days = (0, _utils.constructArray)(31, true, false);
    var hours24 = (0, _utils.constructArray)(24, true, true);
    var hours12 = hours24.slice(1, 13);
    var minutes = (0, _utils.constructArray)(60, true, true);
    var singleDataSource = (_singleDataSource = {}, (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MONTH, months), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.DAY, days), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.HOUR, (0, _utils.constructArray)(24, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MINUTE, (0, _utils.constructArray)(60, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.SECOND, (0, _utils.constructArray)(60, true, false)), _singleDataSource);
    Object.freeze(singleDataSource);
    var days31 = ['01', '03', '05', '07', '08', '10', '12'];
    var days30 = ['04', '06', '09', '11'];
    var defaultYearOffset = 15;

    var MHDatePicker = function (_React$Component) {
        (0, _inherits2.default)(MHDatePicker, _React$Component);

        function MHDatePicker(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, MHDatePicker);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHDatePicker).call(this, props));
            _this.colorDatePickerSelectBg = new _DynamicColor.default('#f3f3f3', '#242424');
            (0, _reportDecorator.referenceReport)('MHDatePicker');

            var _this$init = _this.init(props, context),
                currentArray = _this$init.currentArray,
                dataSourceArray = _this$init.dataSourceArray;

            var subtitle = _this.getSubtitle(currentArray, context);

            _this.state = {
                visible: _this.props.visible,
                dataSourceArray: dataSourceArray,
                currentArray: currentArray,
                subtitle: subtitle
            };
            return _this;
        }

        (0, _createClass2.default)(MHDatePicker, [{
            key: "getSubtitle",
            value: function getSubtitle(arr, context) {
                var _TYPE$DATE$TYPE$TIME;

                if (this.props.type === TYPE.SINGLE) {
                    var count = parseInt(arr[0], 10);
                    var unit = count > 1 ? _locale.Locale.of(context.language)[this.props.singleType + "s"] : _locale.Locale.of(context.language)[this.props.singleType];
                    return (0, _string.formatString)(_locale.Locale.of(context.language).singleSubTitle, count, unit);
                }

                return _string.formatString.apply(undefined, [(_TYPE$DATE$TYPE$TIME = {}, (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.DATE, _locale.Locale.of(context.language).dateSubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME24, _locale.Locale.of(context.language).time24SubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME12, _locale.Locale.of(context.language).time12SubTitle), _TYPE$DATE$TYPE$TIME)[this.props.type]].concat((0, _toConsumableArray2.default)(arr)));
            }
        }, {
            key: "convert",
            value: function convert(cur, context) {
                var type = this.props.type;

                if (cur instanceof Date) {
                    switch (type) {
                        case TYPE.DATE:
                            return this.convert([cur.getFullYear(), cur.getMonth() + 1, cur.getDate()], context);

                        case TYPE.TIME24:
                            return this.convert([cur.getHours(), cur.getMinutes()], context);

                        case TYPE.TIME12:
                            return this.convertTo12([cur.getHours(), cur.getMinutes()], context);

                        case TYPE.SINGLE:
                            return ['01'];

                        default:
                            return ['01'];
                    }
                } else if (cur instanceof Array) {
                    switch (type) {
                        case TYPE.DATE:
                            return cur.slice(0, 3).map(function (v, i) {
                                return i === 0 ? "" + v : ("0" + v).slice(-2);
                            });

                        case TYPE.TIME24:
                            return cur.slice(0, 2).map(function (v) {
                                return ("0" + v).slice(-2);
                            });

                        case TYPE.TIME12:
                            return this.convertTo12(cur, context);

                        case TYPE.SINGLE:
                            return cur.slice(0, 1).map(function (v) {
                                return ("0" + v).slice(-2);
                            });

                        default:
                            return ['01'];
                    }
                } else if (typeof cur === 'string' || typeof cur === 'number') {
                    return ["" + cur];
                } else {
                    return ['01'];
                }
            }
        }, {
            key: "convertTo12",
            value: function convertTo12(arr, context) {
                if (arr.length === 2) {
                    var newArr = arr.map(function (v) {
                        return parseInt(v);
                    });

                    if (newArr.every(function (v) {
                        return Number.isInteger;
                    })) {
                        var res;

                        if (newArr[0] === 0) {
                            res = [_locale.Locale.of(context.language).am, 12, newArr[1]];
                        } else {
                            var timeSystemString = newArr[0] > 11 ? _locale.Locale.of(context.language).pm : _locale.Locale.of(context.language).am;
                            var hour = newArr[0] > 12 ? "" + (newArr[0] - 12) : "" + newArr[0];
                            var minute = "" + newArr[1];
                            res = [timeSystemString, hour, minute];
                        }

                        return res.map(function (v, i) {
                            return i > 0 ? ("0" + v).slice(-2) : v;
                        });
                    }
                }

                return this.convert(new Date(), context);
            }
        }, {
            key: "slice",
            value: function slice(arr, head, tail) {
                if (head === undefined && tail === undefined) return arr;
                var index = arr.indexOf(("0" + head).slice(-2)) || 0;
                var lastIndex = arr.lastIndexOf(("0" + tail).slice(-2)) || arr.length - 1;
                return arr.slice(index, lastIndex + 1);
            }
        }, {
            key: "getYears",
            value: function getYears(min, max, context) {
                this.min = this.convert(min, context);
                this.max = this.convert(max, context);
                var minY = Number.parseInt(this.min[0]);
                var maxY = Number.parseInt(this.max[0]);
                return this.generateArray(minY, maxY);
            }
        }, {
            key: "generateArray",
            value: function generateArray(min, max) {
                if (min > max) {
                    return [];
                }

                return Array.from({
                    length: max - min + 1
                }, function (v, i) {
                    return i + min;
                }).map(function (v) {
                    return "" + v;
                });
            }
        }, {
            key: "init",
            value: function init(props, context) {
                var type = props.type,
                    singleType = props.singleType,
                    current = props.current,
                    min = props.min,
                    max = props.max;
                var currentArray = this.convert(current || new Date(), context);

                switch (type) {
                    case TYPE.DATE:
                        var yearNow = new Date().getFullYear();
                        var minDefault = new Date();
                        minDefault.setFullYear(yearNow - defaultYearOffset);
                        var maxDefault = new Date();
                        maxDefault.setFullYear(yearNow + defaultYearOffset);
                        var years = this.getYears(min || minDefault, max || maxDefault, context);
                        var dataSourceArray = [years, months, days];
                        this.updateDays(currentArray, dataSourceArray);
                        this.unitArray = [_locale.Locale.of(context.language).yearUnit, _locale.Locale.of(context.language).monthUnit, _locale.Locale.of(context.language).dayUnit];
                        return {
                            currentArray: currentArray,
                            dataSourceArray: dataSourceArray
                        };

                    case TYPE.TIME24:
                        this.unitArray = [_locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
                        return {
                            currentArray: currentArray,
                            dataSourceArray: [hours24, minutes]
                        };

                    case TYPE.TIME12:
                        this.unitArray = ['', _locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
                        return {
                            currentArray: currentArray,
                            dataSourceArray: [[_locale.Locale.of(context.language).am, _locale.Locale.of(context.language).pm], hours12, minutes]
                        };

                    case TYPE.SINGLE:
                    default:
                        this.unitArray = [_locale.Locale.of(context.language)[singleType + "Unit"]];
                        return {
                            currentArray: currentArray,
                            dataSourceArray: [this.slice(singleDataSource[singleType], min, max)]
                        };
                }
            }
        }, {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.visible !== this.state.visible) {
                    this.setState({
                        visible: newProps.visible
                    });
                }

                if (newProps.current === undefined || newProps.current !== this.props.current) {
                    var currentArray = this.convert(newProps.current || new Date(), this.context);
                    this.setState({
                        currentArray: currentArray,
                        subtitle: this.getSubtitle(currentArray, this.context)
                    });
                }
            }
        }, {
            key: "checkUnlimitedHeightEnable",
            value: function checkUnlimitedHeightEnable() {
                var result = false;

                if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('unlimitedHeightEnable')) {
                    result = this.props.datePickerStyle.unlimitedHeightEnable;
                }

                return result;
            }
        }, {
            key: "renderTitle",
            value: function renderTitle() {
                var theme = this.context.theme;
                var styleHeight = {
                    height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
                };
                var heightStyle = {
                    height: styleHeight.height,
                    minHeight: styleHeight.height
                };

                if (this.checkUnlimitedHeightEnable()) {
                    heightStyle.height = null;
                }

                var numberOfLines = {
                    titleNumberOfLines: 1,
                    subTitleNumberOfLines: 1
                };

                if (this.props.datePickerStyle) {
                    if (this.props.datePickerStyle.hasOwnProperty('titleNumberOfLines')) {
                        numberOfLines.titleNumberOfLines = this.props.datePickerStyle.titleNumberOfLines;
                    }

                    if (this.props.datePickerStyle.hasOwnProperty('subTitleNumberOfLines')) {
                        numberOfLines.subTitleNumberOfLines = this.props.datePickerStyle.subTitleNumberOfLines;
                    }
                }

                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.titleContainer, heightStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
                    accessibilityLabel: this.props.accessibilityLabel
                })), _react.default.createElement(_reactNative.Text, {
                    numberOfLines: numberOfLines.titleNumberOfLines,
                    allowFontScaling: this.props.datePickerStyle.allowFontScaling,
                    style: [_Styles.default.common.title, styles.title, {
                        color: theme == null ? undefined : theme.colorBlack
                    }, this.props.datePickerStyle.titleStyle]
                }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
                    numberOfLines: numberOfLines.subTitleNumberOfLines,
                    allowFontScaling: this.props.datePickerStyle.allowFontScaling,
                    style: [styles.subtitle, {
                        color: theme == null ? undefined : theme.colorGrayNormal
                    }, this.props.datePickerStyle.subTitleStyle]
                }, this.state.subtitle) : null);
            }
        }, {
            key: "renderContent",
            value: function renderContent() {
                var _this2 = this;

                var _this$context = this.context,
                    theme = _this$context.theme,
                    colorScheme = _this$context.colorScheme;
                var _this$state = this.state,
                    currentArray = _this$state.currentArray,
                    dataSourceArray = _this$state.dataSourceArray;
                var length = currentArray.length;
                var actualWidth = modalWidth - (length - 1) * _reactNative.StyleSheet.hairlineWidth;
                var normalWidth = actualWidth / length;
                var yearWidth = normalWidth + 10;
                var monthWidth = (actualWidth - yearWidth) / 2;
                var tempPickerInnerStyle = {
                    lineColor: theme.colorSeparator,
                    textColor: theme.colorGrayNormal,
                    fontSize: 15,
                    selectTextColor: theme.colorGrayHeavier,
                    selectFontSize: 20,
                    unitTextColor: theme.colorGrayHeavier,
                    unitFontSize: 10,
                    rowHeight: rowHeight,
                    selectBgColor: this.colorDatePickerSelectBg.color(colorScheme)
                };

                if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('pickerInnerStyle')) {
                    tempPickerInnerStyle = this.props.datePickerStyle.pickerInnerStyle;
                }

                tempPickerInnerStyle.allowFontScaling = this.props.datePickerStyle.allowFontScaling;
                return _react.default.createElement(_reactNative.View, {
                    style: styles.pickerContainer
                }, dataSourceArray.map(function (dataSource, index) {
                    var style = {
                        width: normalWidth
                    };

                    if (_this2.props.type === TYPE.DATE) {
                        if (index === 0) style = {
                            width: yearWidth
                        }; else style = {
                            width: monthWidth
                        };
                    }

                    return _react.default.createElement(_reactNative.View, {
                        key: index + _this2.unitArray[index],
                        style: [{
                            flexDirection: 'row'
                        }, style]
                    }, _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
                        key: index + _this2.unitArray[index],
                        style: style,
                        unit: _this2.unitArray[index],
                        dataSource: dataSource,
                        defaultValue: currentArray[index],
                        pickerInnerStyle: tempPickerInnerStyle,
                        onValueChanged: function onValueChanged(data) {
                            return _this2._onValueChanged(index, data);
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this2.props.accessible,
                        accessibilityHint: _this2.props.accessibilityHint
                    }))), index < length - 1 ? _react.default.createElement(_Separator.default, {
                        type: "column",
                        style: {
                            height: pickerContainerHeight
                        }
                    }) : null);
                }));
            }
        }, {
            key: "renderButton",
            value: function renderButton() {
                var _this3 = this;

                var theme = this.context.theme;
                var heightStyle = {
                    height: styles.buttons.minHeight,
                    minHeight: styles.buttons.minHeight
                };

                if (this.checkUnlimitedHeightEnable()) {
                    heightStyle.height = null;
                }

                var numberOfLines = {
                    leftButtonNumberOfLines: 1,
                    rightButtonNumberOfLines: 1
                };

                if (this.props.datePickerStyle) {
                    if (this.props.datePickerStyle.hasOwnProperty('leftButtonNumberOfLines')) {
                        numberOfLines.leftButtonNumberOfLines = this.props.datePickerStyle.leftButtonNumberOfLines;
                    }

                    if (this.props.datePickerStyle.hasOwnProperty('rightButtonNumberOfLines')) {
                        numberOfLines.rightButtonNumberOfLines = this.props.datePickerStyle.rightButtonNumberOfLines;
                    }
                }

                return _react.default.createElement(_reactNative.View, {
                    style: [styles.buttons, heightStyle]
                }, _react.default.createElement(_reactNative.TouchableHighlight, {
                    style: [styles.button, {
                        borderBottomLeftRadius: borderRadius
                    }],
                    onPress: function onPress() {
                        return _this3.dismiss();
                    },
                    underlayColor: "rgba(0,0,0,.05)",
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: [styles.buttonText, {
                        color: theme.colorGrayNormal
                    }, this.props.datePickerStyle.leftButtonStyle],
                    numberOfLines: numberOfLines.leftButtonNumberOfLines,
                    allowFontScaling: this.props.datePickerStyle.allowFontScaling
                }, _locale.Locale.of(this.context.language).cancel)), _react.default.createElement(_Separator.default, {
                    type: "column",
                    style: {
                        height: buttonHeight
                    }
                }), _react.default.createElement(_reactNative.TouchableHighlight, {
                    style: [styles.button, {
                        borderBottomRightRadius: borderRadius
                    }],
                    onPress: function onPress() {
                        return _this3.confirm();
                    },
                    underlayColor: "rgba(0,0,0,.05)",
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button
                }, _react.default.createElement(_reactNative.Text, {
                    style: [styles.buttonText, {
                        color: theme.colorGrayNormal
                    }, {
                        color: this.props.confirmColor
                    }, this.props.datePickerStyle.rightButtonStyle],
                    numberOfLines: numberOfLines.rightButtonNumberOfLines,
                    allowFontScaling: this.props.datePickerStyle.allowFontScaling
                }, _locale.Locale.of(this.context.language).ok)));
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                var theme = this.context.theme;
                return _react.default.createElement(_reactNative.Modal, {
                    animationType: this.props.animationType,
                    transparent: true,
                    visible: this.state.visible,
                    onRequestClose: function onRequestClose() {
                        return _this4.dismiss();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.background
                }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
                    onPress: function onPress() {
                        return _this4.dismiss();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        width: width,
                        height: height
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: [styles.modal, {
                        backgroundColor: theme == null ? undefined : theme.colorForeground
                    }]
                }, this.renderTitle(), _react.default.createElement(_Separator.default, null), this.renderContent(), _react.default.createElement(_Separator.default, null), this.renderButton())));
            }
        }, {
            key: "updateDays",
            value: function updateDays(newCurrentArray, newDataSourceArray) {
                var _newCurrentArray = (0, _slicedToArray2.default)(newCurrentArray, 3),
                    year = _newCurrentArray[0],
                    month = _newCurrentArray[1],
                    day = _newCurrentArray[2];

                if (days31.includes(month)) {
                    newDataSourceArray[2] = days;
                } else if (days30.includes(month)) {
                    newDataSourceArray[2] = days.slice(0, 30);
                } else {
                    if ((0, _utils.isLeapYear)(parseInt(year))) {
                        newDataSourceArray[2] = days.slice(0, 29);
                    } else {
                        newDataSourceArray[2] = days.slice(0, 28);
                    }
                }

                if (!newDataSourceArray[2].includes(day)) {
                    newCurrentArray[2] = newDataSourceArray[2][newDataSourceArray[2].length - 1];
                }
            }
        }, {
            key: "_onValueChanged",
            value: function _onValueChanged(index, data) {
                var _this5 = this;

                var newCurrentArray = (0, _toConsumableArray2.default)(this.state.currentArray);
                newCurrentArray[index] = data.newValue;
                var newDataSourceArray = (0, _toConsumableArray2.default)(this.state.dataSourceArray);
                this.setState({
                    currentArray: newCurrentArray,
                    subtitle: this.getSubtitle(newCurrentArray, this.context)
                }, function (_) {
                    if (_this5.props.type === TYPE.DATE) {
                        var needUpdate = false;

                        if ((0, _utils.compareDateArray)(newCurrentArray, _this5.max) > 0) {
                            newCurrentArray = _this5.max;
                            needUpdate = true;
                        }

                        if ((0, _utils.compareDateArray)(newCurrentArray, _this5.min) < 0) {
                            newCurrentArray = _this5.min;
                            needUpdate = true;
                        }

                        _this5.updateDays(newCurrentArray, newDataSourceArray);

                        if (newDataSourceArray[2].length !== _this5.state.dataSourceArray[2].length) {
                            needUpdate = true;
                        }

                        needUpdate && _this5.setState({
                            subtitle: _this5.getSubtitle(newCurrentArray, _this5.context),
                            currentArray: newCurrentArray,
                            dataSourceArray: newDataSourceArray
                        });
                    }
                });
            }
        }, {
            key: "dismiss",
            value: function dismiss() {
                this.setState({
                    visible: false
                });
                this.props.onDismiss && this.props.onDismiss();
            }
        }, {
            key: "array2Date",
            value: function array2Date() {
                var currentArray = this.state.currentArray;
                var date = new Date();

                switch (this.props.type) {
                    case TYPE.DATE:
                        date.setFullYear(currentArray[0]);
                        date.setMonth(parseInt(currentArray[1], 10) - 1, parseInt(currentArray[2], 10));
                        date.setDate(parseInt(currentArray[2], 10));
                        break;

                    case TYPE.TIME24:
                        date.setHours(currentArray[0]);
                        date.setMinutes(currentArray[1]);
                        break;

                    case TYPE.TIME12:
                        var hour = parseInt(currentArray[1], 10);

                        if (currentArray[0] === _locale.Locale.of(this.context.language).am) {
                            hour = hour === 12 ? 0 : hour;
                        } else {
                            hour = hour < 12 ? hour + 12 : hour;
                        }

                        date.setHours(hour);
                        date.setMinutes(currentArray[2]);
                        break;

                    case TYPE.SINGLE:
                    default:
                        return null;
                }

                return date;
            }
        }, {
            key: "confirm",
            value: function confirm() {
                if (this.props.onSelect) {
                    this.props.onSelect({
                        rawArray: this.state.currentArray,
                        rawString: this.state.subtitle,
                        date: this.array2Date()
                    });
                }

                this.dismiss();
            }
        }]);
        return MHDatePicker;
    }(_react.default.Component);

    MHDatePicker.contextType = _configProvider.ConfigContext;
    MHDatePicker.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        title: _propTypes.default.string,
        showSubtitle: _propTypes.default.bool,
        confirmColor: _propTypes.default.string,
        type: _propTypes.default.oneOf([TYPE.DATE, TYPE.SINGLE, TYPE.TIME12, TYPE.TIME24]),
        singleType: _propTypes.default.oneOf([SINGLE_TYPE.MONTH, SINGLE_TYPE.DAY, SINGLE_TYPE.HOUR, SINGLE_TYPE.MINUTE, SINGLE_TYPE.SECOND]),
        current: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]).isRequired,
        min: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
        max: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
        datePickerStyle: _propTypes.default.object,
        onSelect: _propTypes.default.func,
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    MHDatePicker.defaultProps = {
        animationType: 'fade',
        visible: false,
        title: '开启时间',
        showSubtitle: true,
        confirmColor: _Styles.default.common.MHGreen,
        type: TYPE.TIME24,
        singleType: SINGLE_TYPE.MINUTE,
        datePickerStyle: {
            pickerInnerStyle: pickerInnerStyle,
            unlimitedHeightEnable: false,
            allowFontScaling: true,
            titleNumberOfLines: 1,
            subTitleNumberOfLines: 1,
            titleStyle: null,
            subTitleStyle: null,
            leftButtonNumberOfLines: 1,
            rightButtonNumberOfLines: 1,
            leftButtonStyle: null,
            rightButtonStyle: null
        },
        onSelect: function onSelect() { }
    };
    MHDatePicker.TYPE = TYPE;
    MHDatePicker.SINGLE_TYPE = SINGLE_TYPE;

    var styles = _reactNative.StyleSheet.create({
        background: {
            flex: 1,
            backgroundColor: screenBackgroundColor
        },
        modal: {
            position: 'absolute',
            bottom: 20,
            width: modalWidth,
            marginHorizontal: margin,
            backgroundColor: '#fff',
            borderRadius: borderRadius
        },
        titleContainer: {
            justifyContent: 'center',
            alignItems: 'center'
        },
        title: {
            fontFamily: 'D-DINCondensed-Bold'
        },
        subtitle: {
            width: modalWidth,
            textAlign: 'center',
            fontSize: 13,
            color: '#666'
        },
        pickerContainer: {
            flexDirection: 'row',
            height: pickerContainerHeight,
            justifyContent: 'space-between'
        },
        buttons: {
            minHeight: buttonHeight,
            flexDirection: 'row',
            backgroundColor: 'transparent',
            justifyContent: 'space-between'
        },
        button: {
            flex: 1,
            backgroundColor: 'transparent',
            justifyContent: 'center',
            alignItems: 'center'
        },
        buttonText: {
            fontSize: 14,
            lineHeight: 19,
            color: '#666',
            fontFamily: 'D-DINCondensed-Bold'
        }
    });

    var _default = MHDatePicker;
    exports.default = _default;
}, 22924, [14305, 14347, 14344, 14359, 14320, 14323, 14371, 14377, 14386, 14317, 10318, 10297, 10033, 22780, 22927, 22906, 22912, 22930, 22933, 22426, 22420, 22423, 22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.formatString = undefined;
    var placeholderRegex = /(\{[\d|\w]+\})/;

    var formatString = function formatString(str) {
        for (var _len = arguments.length, valuesForPlaceholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            valuesForPlaceholders[_key - 1] = arguments[_key];
        }

        return (str || '').split(placeholderRegex).filter(function (textPart) {
            return !!textPart;
        }).map(function (textPart) {
            if (textPart.match(placeholderRegex)) {
                var matchedKey = textPart.slice(1, -1);
                var valueForPlaceholder = valuesForPlaceholders[matchedKey];

                if (valueForPlaceholder == undefined) {
                    var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];

                    if (valueFromObjectPlaceholder !== undefined) {
                        valueForPlaceholder = valueFromObjectPlaceholder;
                    } else {
                        return valueForPlaceholder;
                    }
                }

                return valueForPlaceholder;
            }

            return textPart;
        }).join('');
    };

    exports.formatString = formatString;
}, 22927, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.constructArray = constructArray;
    exports.isLeapYear = isLeapYear;
    exports.compareDateArray = compareDateArray;

    function constructArray(length) {
        var zeroPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var fromZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var maxLength = (length - (fromZero ? 1 : 0)).toString().length;
        return Array.from({
            length: length
        }, function (v, i) {
            return ((zeroPrefix ? '0000000000000' : '') + (i + (fromZero ? 0 : 1))).slice(-maxLength);
        });
    }

    function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 && year % 3200 !== 0;
    }

    function compareDateArray(arrA, arrB) {
        return Number(arrA.join('')) - Number(arrB.join(''));
    }
}, 22930, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Locale = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var langs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

    var Locale = function () {
        function Locale() {
            (0, _classCallCheck2.default)(this, Locale);
        }

        (0, _createClass2.default)(Locale, null, [{
            key: "of",
            value: function of() {
                var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'zh';
                return langs[lang];
            }
        }]);
        return Locale;
    }();

    exports.Locale = Locale;
}, 22933, [14308, 14305, 14320, 14323, 22936]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "zh", {
        enumerable: true,
        get: function get() {
            return _zh.zh;
        }
    });
    Object.defineProperty(exports, "zh_tw", {
        enumerable: true,
        get: function get() {
            return _zh_tw.zh_tw;
        }
    });
    Object.defineProperty(exports, "zh_hk", {
        enumerable: true,
        get: function get() {
            return _zh_hk.zh_hk;
        }
    });
    Object.defineProperty(exports, "en", {
        enumerable: true,
        get: function get() {
            return _en.en;
        }
    });
    Object.defineProperty(exports, "ko", {
        enumerable: true,
        get: function get() {
            return _ko.ko;
        }
    });
    Object.defineProperty(exports, "ru", {
        enumerable: true,
        get: function get() {
            return _ru.ru;
        }
    });
    Object.defineProperty(exports, "es", {
        enumerable: true,
        get: function get() {
            return _es.es;
        }
    });
    Object.defineProperty(exports, "fr", {
        enumerable: true,
        get: function get() {
            return _fr.fr;
        }
    });
    Object.defineProperty(exports, "it", {
        enumerable: true,
        get: function get() {
            return _it.it;
        }
    });
    Object.defineProperty(exports, "de", {
        enumerable: true,
        get: function get() {
            return _de.de;
        }
    });
    Object.defineProperty(exports, "id", {
        enumerable: true,
        get: function get() {
            return _id.id;
        }
    });
    Object.defineProperty(exports, "pl", {
        enumerable: true,
        get: function get() {
            return _pl.pl;
        }
    });
    Object.defineProperty(exports, "vi", {
        enumerable: true,
        get: function get() {
            return _vi.vi;
        }
    });
    Object.defineProperty(exports, "ja", {
        enumerable: true,
        get: function get() {
            return _ja.ja;
        }
    });
    Object.defineProperty(exports, "th", {
        enumerable: true,
        get: function get() {
            return _th.th;
        }
    });
    Object.defineProperty(exports, "tr", {
        enumerable: true,
        get: function get() {
            return _tr.tr;
        }
    });
    Object.defineProperty(exports, "nl", {
        enumerable: true,
        get: function get() {
            return _nl.nl;
        }
    });
    Object.defineProperty(exports, "pt", {
        enumerable: true,
        get: function get() {
            return _pt.pt;
        }
    });

    var _zh = _$$_REQUIRE(_dependencyMap[0]);

    var _zh_tw = _$$_REQUIRE(_dependencyMap[1]);

    var _zh_hk = _$$_REQUIRE(_dependencyMap[2]);

    var _en = _$$_REQUIRE(_dependencyMap[3]);

    var _ko = _$$_REQUIRE(_dependencyMap[4]);

    var _ru = _$$_REQUIRE(_dependencyMap[5]);

    var _es = _$$_REQUIRE(_dependencyMap[6]);

    var _fr = _$$_REQUIRE(_dependencyMap[7]);

    var _it = _$$_REQUIRE(_dependencyMap[8]);

    var _de = _$$_REQUIRE(_dependencyMap[9]);

    var _id = _$$_REQUIRE(_dependencyMap[10]);

    var _pl = _$$_REQUIRE(_dependencyMap[11]);

    var _vi = _$$_REQUIRE(_dependencyMap[12]);

    var _ja = _$$_REQUIRE(_dependencyMap[13]);

    var _th = _$$_REQUIRE(_dependencyMap[14]);

    var _tr = _$$_REQUIRE(_dependencyMap[15]);

    var _nl = _$$_REQUIRE(_dependencyMap[16]);

    var _pt = _$$_REQUIRE(_dependencyMap[17]);
}, 22936, [22939, 22942, 22945, 22948, 22951, 22954, 22957, 22960, 22963, 22966, 22969, 22972, 22975, 22978, 22981, 22984, 22987, 22990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.zh = undefined;
    var zh = {
        setting: '设置',
        featureSetting: '功能设置',
        commonSetting: '通用设置',
        name: '设备名称',
        location: '位置管理',
        memberSet: '按键设置',
        share: '设备共享',
        btGateway: '蓝牙网关',
        voiceAuth: '语音授权',
        ifttt: '智能场景',
        firmwareUpgrade: '固件升级',
        more: '更多设置',
        help: '使用帮助',
        legalInfo: '法律信息',
        deleteDevice: '删除设备',
        autoUpgrade: '固件自动升级',
        checkUpgrade: '检查固件升级',
        security: '安全设置',
        networkInfo: '网络信息',
        feedback: '反馈问题',
        timezone: '设备时区',
        addToDesktop: '添加桌面快捷方式',
        cancel: '取消',
        ok: '确定',
        am: '上午',
        pm: '下午',
        months: '个月',
        days: '天',
        hours: '小时',
        minutes: '分钟',
        seconds: '秒钟',
        month: '个月',
        day: '天',
        hour: '小时',
        minute: '分钟',
        second: '秒钟',
        yearUnit: '年',
        monthUnit: '月',
        dayUnit: '日',
        hourUnit: '时',
        minuteUnit: '分',
        secondUnit: '秒',
        dateSubTitle: '{0}年{1}月{2}日',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{0} {1}:{2}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: '退出',
        firmwareUpgradeUpdate: '升级',
        firmwareUpgradeLook: '去看看',
        firmwareUpgradeForceUpdate: '由于您当前的设备固件版本过低，一些功能可能无法正常使用。请升级至最新版本，以体验更丰富的功能',
        firmwareUpgradeForceUpdating: '您的设备正在升级，请稍后，以体验更丰富的功能',
        firmwareUpgradeNewPre: '检测到设备有最新固件版本',
        firmwareUpgradeNewSub: '，是否升级',
        handling: '操作中...',
        error: '处理失败，请稍后再试',
        createLightGroup: '创建灯组（新）',
        manageLightGroup: '灯组管理（新）',
        deleteLightGroup: '解散灯组'
    };
    exports.zh = zh;
}, 22939, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.zh_tw = undefined;
    var zh_tw = {
        setting: '設定',
        featureSetting: '裝置設定',
        commonSetting: '一般設定',
        name: '裝置名稱',
        location: '位置管理',
        memberSet: '按鍵設定',
        share: '裝置共用',
        btGateway: '藍牙網關',
        voiceAuth: '語音授權',
        ifttt: '智能場景',
        firmwareUpgrade: '韌體更新',
        more: '更多設定',
        help: '使用説明',
        legalInfo: '法律資訊',
        deleteDevice: '刪除裝置',
        autoUpgrade: '韌體自动更新',
        checkUpgrade: '檢查韌體更新',
        security: '安全設定',
        networkInfo: '網路資訊',
        feedback: '反饋問題',
        timezone: '裝置時區',
        addToDesktop: '新増捷徑至桌面',
        cancel: '取消',
        ok: '確認',
        am: '上午',
        pm: '下午',
        months: '個月',
        days: '天',
        hours: '小時',
        minutes: '分鐘',
        seconds: '秒鐘',
        month: '個月',
        day: '天',
        hour: '小時',
        minute: '分鐘',
        second: '秒鐘',
        yearUnit: '年',
        monthUnit: '月',
        dayUnit: '日',
        hourUnit: '时',
        minuteUnit: '分',
        secondUnit: '秒',
        dateSubTitle: '{0}年{1}月{2}日',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{0} {1}:{2}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: '退出',
        firmwareUpgradeUpdate: '升級',
        firmwareUpgradeLook: '看看',
        firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
        firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
        firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
        firmwareUpgradeNewSub: '，是否升級？',
        handling: '執行中...',
        error: '處理失敗，請重試',
        createLightGroup: '建立燈組 (新)',
        manageLightGroup: '燈組管理 (新)',
        deleteLightGroup: '解散燈組'
    };
    exports.zh_tw = zh_tw;
}, 22942, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.zh_hk = undefined;
    var zh_hk = {
        setting: '設定',
        featureSetting: '裝置設定',
        commonSetting: '一般設定',
        name: '裝置名稱',
        location: '位置管理',
        memberSet: '按鍵設定',
        share: '裝置共用',
        btGateway: '藍牙網關',
        voiceAuth: '語音授權',
        ifttt: '智慧場景',
        firmwareUpgrade: '韌體更新',
        more: '更多設定',
        help: '使用説明',
        legalInfo: '法律資訊',
        deleteDevice: '刪除裝置',
        autoUpgrade: '韌體自动更新',
        checkUpgrade: '檢查韌體更新',
        security: '安全設定',
        networkInfo: '網路資訊',
        feedback: '反饋問題',
        timezone: '裝置時區',
        addToDesktop: '新增捷徑到桌面',
        cancel: '取消',
        ok: '確認',
        am: '上午',
        pm: '下午',
        months: '個月',
        days: '天',
        hours: '小時',
        minutes: '分鐘',
        seconds: '秒鐘',
        month: '個月',
        day: '天',
        hour: '小時',
        minute: '分鐘',
        second: '秒鐘',
        yearUnit: '年',
        monthUnit: '月',
        dayUnit: '日',
        hourUnit: '时',
        minuteUnit: '分',
        secondUnit: '秒',
        dateSubTitle: '{0}年{1}月{2}日',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{0} {1}:{2}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: '退出',
        firmwareUpgradeUpdate: '升級',
        firmwareUpgradeLook: '去看看',
        firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
        firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
        firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
        firmwareUpgradeNewSub: '，是否升級？',
        handling: '執行中...',
        error: '處理失敗，請重試',
        createLightGroup: '建立燈組（新）',
        manageLightGroup: '燈組管理（新）',
        deleteLightGroup: '解散燈組'
    };
    exports.zh_hk = zh_hk;
}, 22945, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.en = undefined;
    var en = {
        setting: 'Settings',
        featureSetting: 'Device settings',
        commonSetting: 'General settings',
        name: 'Device name',
        location: 'Manage location',
        memberSet: 'Key settings',
        share: 'Share device',
        btGateway: 'BLE Gateway',
        voiceAuth: 'Voice authorization',
        ifttt: 'Automation',
        firmwareUpgrade: 'Firmware update',
        more: 'Additional settings',
        help: 'Help',
        legalInfo: 'Legal information',
        deleteDevice: 'Delete device',
        autoUpgrade: 'Automatically update firmware',
        checkUpgrade: 'Check for firmware update',
        security: 'Security settings',
        networkInfo: 'Network info',
        feedback: 'Feedback',
        timezone: 'Device time zone',
        addToDesktop: 'Add to Home screen',
        cancel: 'Cancel',
        ok: 'Confirm',
        am: 'AM',
        pm: 'PM',
        months: 'months',
        days: 'days',
        hours: 'hours',
        minutes: 'minutes',
        seconds: 'seconds',
        month: 'month',
        day: 'day',
        hour: 'hour',
        minute: 'minute',
        second: 'second',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Exit',
        firmwareUpgradeUpdate: 'Update',
        firmwareUpgradeLook: 'Take a look',
        firmwareUpgradeForceUpdate: 'Current firmware may be too old to run some features. Update to the latest version for better experience.',
        firmwareUpgradeForceUpdating: 'Your device is updating, try again later',
        firmwareUpgradeNewPre: 'Firmware update ',
        firmwareUpgradeNewSub: ' available. Update now?',
        handling: 'Running…',
        error: 'Could not operate, please try again later',
        createLightGroup: 'Create light group(new)',
        manageLightGroup: 'Manage devices(new)',
        deleteLightGroup: 'Disband light group'
    };
    exports.en = en;
}, 22948, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ko = undefined;
    var ko = {
        setting: '설정',
        featureSetting: '기기 설정',
        commonSetting: '일반 설정',
        name: '기기 이름',
        location: '위치 관리',
        memberSet: '버튼 설정',
        share: '기기 공유',
        btGateway: 'BLE 게이트웨이',
        voiceAuth: '음성 권한',
        ifttt: '자동화',
        firmwareUpgrade: '펌웨어 업데이트',
        more: '추가 설정',
        help: '도움말',
        legalInfo: '법률 정보',
        deleteDevice: '기기 제거',
        autoUpgrade: '펌웨어 자동 업데이트',
        checkUpgrade: '펌웨어 업데이트 확인',
        security: '보안 설정',
        networkInfo: '네트워크 정보',
        feedback: '피드백',
        timezone: '디바이스 시간대',
        addToDesktop: '홈 화면에 추가',
        cancel: '취소',
        ok: '정보 확인',
        am: '오전',
        pm: '오후',
        months: '달',
        days: '일',
        hours: '시간',
        minutes: '분',
        seconds: '초',
        month: '월',
        day: '일',
        hour: '시',
        minute: '분',
        second: '초',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: '나가기',
        firmwareUpgradeUpdate: '업데이트',
        firmwareUpgradeLook: '확인해보세요',
        firmwareUpgradeForceUpdate: '현재 펌웨어 버전이 너무 오래되었습니다. 몇몇 기능이 정상적으로 작동하지 않을 수 있습니다. 더 나은 사용을 위해 최신 버전으로 업데이트 하십시오.',
        firmwareUpgradeForceUpdating: '기기를 업데이트 중입니다. 나중에 다시 시도하십시오.',
        firmwareUpgradeNewPre: '펌웨어 업데이트 ',
        firmwareUpgradeNewSub: ' 가능, 지금 업데이트 하시겠습니까?',
        handling: '실행 중...',
        error: '다시 시도',
        createLightGroup: '전등 그룹 생성(신규)',
        manageLightGroup: '전등 그룹 관리(신규)',
        deleteLightGroup: '전등 그룹 해제'
    };
    exports.ko = ko;
}, 22951, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ru = undefined;
    var ru = {
        setting: 'Настройки',
        featureSetting: 'Настройки устройств',
        commonSetting: 'Общие настройки',
        name: 'Имя устройства',
        location: 'Управление местами',
        memberSet: 'Настройка кнопок',
        share: 'Поделиться устройством',
        btGateway: 'BLE шлюз',
        voiceAuth: 'Голосовая авторизация',
        ifttt: 'Автоматизация',
        firmwareUpgrade: 'Проверить наличие обновлений',
        more: 'Дополнительные настройки',
        help: 'Справка',
        legalInfo: 'Легальная информация',
        deleteDevice: 'Удалить устройство',
        autoUpgrade: 'Автоматическое обновление встроенного ПО',
        checkUpgrade: 'Проверить наличие обновлений',
        security: 'Параметры безопасности',
        networkInfo: 'Информация о сети',
        feedback: 'Отзыв',
        timezone: 'Часовой пояс устройства',
        addToDesktop: 'Добавить на главный экран',
        cancel: 'Отменить',
        ok: 'Подтвердить',
        am: 'ДП',
        pm: 'ПП',
        months: 'месяцы',
        days: 'дни',
        hours: 'часы',
        minutes: 'минуты',
        seconds: 'секунды',
        month: 'месяц ',
        day: 'день',
        hour: 'час ',
        minute: 'минута',
        second: 'сеунда',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Выход',
        firmwareUpgradeUpdate: 'Обновление',
        firmwareUpgradeLook: 'Посмотреть',
        firmwareUpgradeForceUpdate: 'Текущая версия ПО устарела, некоторые возможности могут быть недоступны. Обновите до последней версии ПО.',
        firmwareUpgradeForceUpdating: 'Устройство обновляется, попробуйте позже',
        firmwareUpgradeNewPre: 'Доступно обновление ПО ',
        firmwareUpgradeNewSub: ', обновить сейчас?',
        handling: 'Загрузка...',
        error: 'Попробовать снова',
        createLightGroup: 'Создать группу светильников (новинка)',
        manageLightGroup: 'Управление устройствами (новинка)',
        deleteLightGroup: 'Расформировать группу светильников'
    };
    exports.ru = ru;
}, 22954, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.es = undefined;
    var es = {
        setting: 'Ajustes',
        featureSetting: 'Ajustes de dispositivo',
        commonSetting: 'Ajustes generales',
        name: 'Nombre del dispositivo',
        location: 'Gestionar ubicaciones',
        memberSet: 'Ajustes de los botones',
        share: 'Compartir dispositivo',
        btGateway: 'Entrada BLE',
        voiceAuth: 'Autorización de voz',
        ifttt: 'Automatización',
        firmwareUpgrade: 'Actualizaciones de firmware',
        more: 'Ajustes adicionales',
        help: 'Ayuda',
        legalInfo: 'Información legal',
        deleteDevice: 'Eliminar dispositivo',
        autoUpgrade: 'Actualizar automáticamente el firmware',
        checkUpgrade: 'Buscar actualizaciones de firmware',
        security: 'Ajustes de seguridad',
        networkInfo: 'Información de red',
        feedback: 'Comentario',
        timezone: 'Zona horaria del dispositivo',
        addToDesktop: 'Añadir a la pantalla de Inicio',
        cancel: 'Cancelar',
        ok: 'Confirmar',
        am: 'AM',
        pm: 'PM',
        months: 'meses',
        days: 'días',
        hours: 'horas',
        minutes: 'minutos',
        seconds: 'segundos',
        month: 'meses',
        day: 'día',
        hour: 'hora',
        minute: 'minuto',
        second: 'segundo ',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Salir',
        firmwareUpgradeUpdate: 'Actualizar',
        firmwareUpgradeLook: 'Echa un vistazo',
        firmwareUpgradeForceUpdate: 'La versión de firmware actual es demasiado antigua, puede que algunas características no funcionen correctamente. Actualiza a la última versión para una mejor experiencia.',
        firmwareUpgradeForceUpdating: 'Tu dispositivo se está actualizando, inténtalo más tarde',
        firmwareUpgradeNewPre: 'Actualización ',
        firmwareUpgradeNewSub: ' de firmware disponible, ¿actualizar ahora?',
        handling: 'Ejecutándose...',
        error: 'Reintentar',
        createLightGroup: 'Crear grupo de luces (nuevo)',
        manageLightGroup: 'Administrar dispositivos (nuevo)',
        deleteLightGroup: 'Deshacer grupo de luces'
    };
    exports.es = es;
}, 22957, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.fr = undefined;
    var fr = {
        setting: 'Paramètres',
        featureSetting: "Paramètres de l'appareil",
        commonSetting: 'Paramètres généraux',
        name: "Nom de l'appareil",
        location: 'Gérer emplacement',
        memberSet: 'Paramètres des boutons',
        share: "Partager l'appareil",
        btGateway: 'Passerelle BLE',
        voiceAuth: 'Autorisation vocale',
        ifttt: 'Automatisation',
        firmwareUpgrade: 'Mise à jour logiciel',
        more: 'Paramètres supplémentaires',
        help: 'Aide',
        legalInfo: 'Information légale',
        deleteDevice: "Supprimer l'appareil",
        autoUpgrade: 'Mettre à jour le logiciel automatiquement',
        checkUpgrade: 'Vérifier les mises à jour du micrologiciel',
        security: 'Paramètres de sécurité',
        networkInfo: 'Informations sur le réseau',
        feedback: 'Commentaire',
        timezone: 'Fuseau horaire de l’appareil',
        addToDesktop: "Ajouter à l'écran d'accueil",
        cancel: 'Annuler',
        ok: 'Confirmer',
        am: 'AM',
        pm: 'PM',
        months: 'mois',
        days: 'jours',
        hours: 'heures',
        minutes: 'minutes',
        seconds: 'secondes',
        month: 'mois',
        day: 'jours',
        hour: 'heure',
        minute: 'minute',
        second: 'seconde',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Quitter',
        firmwareUpgradeUpdate: 'Mettre à jour',
        firmwareUpgradeLook: 'Jeter un coup d\'œil',
        firmwareUpgradeForceUpdate: 'La version actuelle du micrologiciel est trop ancienne. Certaines fonctionnalités peuvent ne pas fonctionner correctement. Mettez à jour la dernière version pour une meilleure expérience',
        firmwareUpgradeForceUpdating: 'Votre appareil est en cours de mise à jour. Réessayez plus tard',
        firmwareUpgradeNewPre: 'Mise à jour du micrologiciel ',
        firmwareUpgradeNewSub: ' disponible. Mettre à jour maintenant ?',
        handling: 'En cours d’exécution…',
        error: "Échec de l'opération, veuillez réessayer plus tard",
        createLightGroup: 'Créer un groupe d’éclairage (nouveau)',
        manageLightGroup: 'Gérer les appareils (nouveau)',
        deleteLightGroup: 'Supprimer un groupe d’éclairage'
    };
    exports.fr = fr;
}, 22960, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.it = undefined;
    var it = {
        setting: 'Impostazioni',
        featureSetting: 'Impostazioni dispositivo',
        commonSetting: 'Impostazioni generali',
        name: 'Nome dispositivo',
        location: 'Gestisci posizione',
        memberSet: 'Impostazioni pulsante',
        share: 'Condividi dispositivo',
        btGateway: 'Gateway BLE',
        voiceAuth: 'Autorizzazione vocale',
        ifttt: 'Automazione',
        firmwareUpgrade: 'Aggiornamento firmware',
        more: 'Impostazioni aggiuntive',
        help: 'Guida',
        legalInfo: 'Informazioni legali',
        deleteDevice: 'Rimuovi dispositivo',
        autoUpgrade: 'Aggiorna automaticamente il firmware',
        checkUpgrade: 'Controlla aggiornamento firmware',
        security: 'Impostazioni di sicurezza',
        networkInfo: 'Informazioni di rete',
        feedback: 'Feedback',
        timezone: 'Fuso orario del dispositivo',
        addToDesktop: 'Aggiungi a schermata iniziale',
        cancel: 'Annulla',
        ok: 'Conferma',
        am: 'AM',
        pm: 'PM',
        months: 'Mesi',
        days: 'Giorni',
        hours: 'Ore',
        minutes: 'Minuti',
        seconds: 'Secondi',
        month: 'Mese',
        day: 'Giorno',
        hour: 'Ora',
        minute: 'Minuto',
        second: 'Secondo',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Esci',
        firmwareUpgradeUpdate: 'Aggiorna',
        firmwareUpgradeLook: 'Guarda',
        firmwareUpgradeForceUpdate: "La versione firmware in uso è obsoleta. Alcune funzioni potrebbero non funzionare correttamente. Aggiorna all'ultima versione per una migliore esperienza.",
        firmwareUpgradeForceUpdating: 'Il dispositivo è in fase di aggiornamento. Riprova più tardi',
        firmwareUpgradeNewPre: 'Aggiornamento firmware ',
        firmwareUpgradeNewSub: ' disponibile. Aggiornare adesso?',
        handling: 'In esecuzione…',
        error: 'Potrebbe non funzionare, riprova più tardi',
        createLightGroup: 'Crea gruppo luci(nuovo)',
        manageLightGroup: 'Gestisci dispositivi(nuovo)',
        deleteLightGroup: 'Elimina gruppo luci'
    };
    exports.it = it;
}, 22963, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.de = undefined;
    var de = {
        setting: 'Einstellungen',
        featureSetting: 'Geräteinstellungen',
        commonSetting: 'Allgemeine einstellungen',
        name: 'Gerätename',
        location: 'Standort verwalten',
        memberSet: 'Schaltflächen-Einstellungen',
        share: 'Gerät teilen',
        btGateway: 'BLE-Gateway',
        voiceAuth: 'Sprachautorisierung',
        ifttt: 'Automatisierung',
        firmwareUpgrade: 'Firmware-Aktualisierung',
        more: 'Zusätzliche Einstellungen',
        help: 'Hilfe',
        legalInfo: 'Rechtsinformation',
        deleteDevice: 'Gerät entfernen',
        autoUpgrade: 'Firmware automatisch aktualisieren',
        checkUpgrade: 'Nach Firmware-Aktualisierung suchen.',
        security: 'Sicherheitseinstellungen',
        networkInfo: 'Netzwerk-Info',
        feedback: 'Feedback',
        timezone: 'Gerätezeitzone',
        addToDesktop: 'Zum Startbildschirm hinzufügen',
        cancel: 'Abbrechen',
        ok: 'Bestätigen',
        am: 'AM',
        pm: 'PM',
        months: 'Monate',
        days: 'Tage',
        hours: 'Stunden',
        minutes: 'Minuten',
        seconds: 'Sekunden',
        month: 'Monat ',
        day: 'Tag ',
        hour: 'Stunde ',
        minute: 'Minute ',
        second: 'Sekunde ',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Beenden',
        firmwareUpgradeUpdate: 'Aktualisieren',
        firmwareUpgradeLook: 'Ansehen',
        firmwareUpgradeForceUpdate: 'Die aktuelle Firmware ist möglicherweise zu alt, um einige Funktionen auszuführen. Aktualisieren Sie auf die neueste Version, um eine verbesserte Funktionsausführung zu erzielen.',
        firmwareUpgradeForceUpdating: 'Ihr Gerät wird aktualisiert, versuchen Sie es später erneut',
        firmwareUpgradeNewPre: 'Firmware-Aktualisierung ',
        firmwareUpgradeNewSub: ' verfügbar, jetzt aktualisieren?',
        handling: 'Wird ausgeführt...',
        error: 'Funktionierte nicht, bitte versuchen Sie es später erneut.',
        createLightGroup: 'Lichtgruppe erstellen (neu)',
        manageLightGroup: 'Geräte verwalten (neu)',
        deleteLightGroup: 'Lichtgruppe auflösen'
    };
    exports.de = de;
}, 22966, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.id = undefined;
    var id = {
        setting: 'Pengaturan',
        featureSetting: 'Pengaturan perangkat',
        commonSetting: 'Pengaturan umum',
        name: 'Nama perangkat',
        location: 'Kelola lokasi',
        memberSet: 'Pengaturan tombol',
        share: 'Bagikan perangkat',
        btGateway: 'Gerbang BLE',
        voiceAuth: 'Otorisasi suara',
        ifttt: 'Otomatisasi',
        firmwareUpgrade: 'Pembaruan firmware',
        more: 'Pengaturan tambahan',
        help: 'Bantuan',
        legalInfo: 'Informasi hukum',
        deleteDevice: 'Hapus perangkat',
        autoUpgrade: 'Perbarui firmware secara otomatis',
        checkUpgrade: 'Periksa pembaruan firmware',
        security: 'Pengaturan keamanan',
        networkInfo: 'Pengaturan jaringan',
        feedback: 'Umpan balik',
        timezone: 'Zona waktu perangkat',
        addToDesktop: 'Tambahkan ke layar Beranda',
        cancel: 'Batal',
        ok: 'Konfirmasi',
        am: 'AM',
        pm: 'PM',
        months: 'bulan',
        days: 'hari',
        hours: 'jam',
        minutes: 'menit',
        seconds: 'detik',
        month: 'bulan',
        day: 'hari ',
        hour: 'jam',
        minute: 'menit',
        second: 'detik',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Keluar',
        firmwareUpgradeUpdate: 'Perbarui',
        firmwareUpgradeLook: 'Lihat',
        firmwareUpgradeForceUpdate: 'Versi firmware saat ini sudah terlalu lama. Beberapa fitur mungkin tidak berfungsi dengan benar. Perbarui ke versi terbaru untuk menikmati pengalaman yang lebih baik.',
        firmwareUpgradeForceUpdating: 'Perangkat sedang diperbarui, coba lagi nanti',
        firmwareUpgradeNewPre: 'Pembaruan firmware ',
        firmwareUpgradeNewSub: ' tersedia, perbarui sekarang?',
        handling: 'Menjalankan...',
        error: 'Tidak dapat beroperasi, coba lagi nanti',
        createLightGroup: 'Buat grup lampu(baru)',
        manageLightGroup: 'Kelola perangkat(baru)',
        deleteLightGroup: 'Hapus grup lampu'
    };
    exports.id = id;
}, 22969, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.pl = undefined;
    var pl = {
        setting: 'Ustawienia',
        featureSetting: 'Ustawienia urządzenia',
        commonSetting: 'Ustawienia ogólne',
        name: 'Nazwa urządzenia',
        location: 'Zarządzaj lokalizacją',
        memberSet: 'Ustawienia przycisku',
        share: 'Udostępnij urządzenie',
        btGateway: 'Bramka BLE',
        voiceAuth: 'Autoryzacja głosu',
        ifttt: 'Automatyzacja',
        firmwareUpgrade: 'Aktualizacja oprogramowania sprzętowego',
        more: 'Dodatkowe ustawienia',
        help: 'Pomoc',
        legalInfo: 'Informacje prawne',
        deleteDevice: 'Usuń urządzenie',
        autoUpgrade: 'Automatyczna aktualizacja oprogramowania sprzętowego',
        checkUpgrade: 'Sprawdź aktualizacje oprogramowania sprzętowego',
        security: 'Ustawienia bezpieczeństwa',
        networkInfo: 'Informacje o sieci',
        feedback: 'Informacje zwrotne',
        timezone: 'Strefa czasowa urządzenia',
        addToDesktop: 'Dodaj do ekranu głównego',
        cancel: 'Anuluj',
        ok: 'Potwierdź',
        am: 'AM ',
        pm: 'PM',
        months: 'miesiące',
        days: 'dni',
        hours: 'godziny',
        minutes: 'minuty',
        seconds: 'sekundy',
        month: 'miesiąc',
        day: 'dzień',
        hour: 'godzina',
        minute: 'minuta',
        second: 'sekunda',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Wyjdź',
        firmwareUpgradeUpdate: 'Aktualizuj',
        firmwareUpgradeLook: 'Przeglądaj',
        firmwareUpgradeForceUpdate: 'Aktualna wersja oprogramowania sprzętowego jest zbyt stara, aby niektóre funkcje działały poprawnie. Zaktualizuj do najnowszej wersji, aby działo sprawniej.',
        firmwareUpgradeForceUpdating: 'Urządzenie jest aktualizowane, spróbuj ponownie później.',
        firmwareUpgradeNewPre: 'Dostępna jest aktualizacja oprogramowania sprzętowego',
        firmwareUpgradeNewSub: '. Zaktualizować teraz?',
        handling: 'Pracuje…',
        error: 'Spróbuj ponownie',
        createLightGroup: 'Utwórz grupę oświetleniową (nowość)',
        manageLightGroup: 'Zarządzaj urządzeniami (nowość)',
        deleteLightGroup: 'Rozgrupuj grupę oświetleniową'
    };
    exports.pl = pl;
}, 22972, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.vi = undefined;
    var vi = {
        setting: 'Cài đặt',
        featureSetting: 'Cài đặt thiết bị',
        commonSetting: 'Cài đặt chung',
        name: 'Tên thiết bị',
        location: 'Quản lí vị trí',
        memberSet: 'Cài đặt nút',
        share: 'Chia sẻ thiết bị',
        btGateway: 'Cổng BLE',
        voiceAuth: 'Cấp quyền bằng giọng nói',
        ifttt: 'Tự động',
        firmwareUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
        more: 'Cài đặt khác',
        help: 'Trợ giúp',
        legalInfo: 'Thông tin hợp pháp',
        deleteDevice: 'Xóa thiết bị',
        autoUpgrade: 'Tự động cập nhật chương trình cơ sở',
        checkUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
        security: 'Cài đặt bảo mật',
        networkInfo: 'Thiết lập mạng',
        feedback: 'Phản hồi',
        timezone: 'Múi giờ thiết bị',
        addToDesktop: 'Thêm vào Màn hình chính',
        cancel: 'Huỷ bỏ',
        ok: 'Xác nhận',
        am: 'Sáng',
        pm: 'Tối',
        months: 'Tháng',
        days: 'Ngày',
        hours: 'Giờ',
        minutes: 'Phút',
        seconds: 'Giây',
        month: 'Tháng',
        day: 'Ngày',
        hour: 'Giờ',
        minute: 'Phút',
        second: 'Giây',
        yearUnit: 'Năm',
        monthUnit: 'Tháng',
        dayUnit: 'Ngày',
        hourUnit: 'Giờ',
        minuteUnit: 'Phút',
        secondUnit: 'Giây',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Thoát',
        firmwareUpgradeUpdate: 'Cập nhật',
        firmwareUpgradeLook: 'Xem xét',
        firmwareUpgradeForceUpdate: 'Phiên bản chương trình cơ sở hiện tại quá cũ, một số tính năng có thể không hoạt động bình thường. Cập nhật lên phiên bản mới nhất để có trải nghiệm tốt hơn.',
        firmwareUpgradeForceUpdating: 'Thiết bị của bạn đang cập nhật, hãy thử lại sau',
        firmwareUpgradeNewPre: 'Đã có bản cập nhật chương trình cơ sở ',
        firmwareUpgradeNewSub: ', cập nhật ngay bây giờ?',
        handling: 'Đang thực hiện',
        error: 'Thử lại',
        createLightGroup: 'Tạo nhóm đèn (mới)',
        manageLightGroup: 'Quản lý thiết bị (mới)',
        deleteLightGroup: 'Hủy nhóm đèn'
    };
    exports.vi = vi;
}, 22975, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ja = undefined;
    var ja = {
        setting: '設定',
        featureSetting: 'デバイス設定',
        commonSetting: '全般設定',
        name: 'デバイス名',
        location: '位置を管理する',
        memberSet: 'ボタン設定',
        share: 'デバイスを共有する',
        btGateway: 'BLE ゲートウェイ',
        voiceAuth: '音声承認',
        ifttt: '自動化',
        firmwareUpgrade: 'ファームウェア更新する',
        more: '詳細設定',
        help: 'ヘルプ',
        legalInfo: '法情報',
        deleteDevice: 'デバイスを削除する',
        autoUpgrade: 'ファームウェアの自動アップグレード',
        checkUpgrade: 'ファームウェア更新プログラムの有無を確認する',
        security: 'セキュリティ設定',
        networkInfo: 'ネットワーク情報',
        feedback: 'フィードバック',
        timezone: 'デバイスタイムゾーン',
        addToDesktop: 'ホーム画面に追加する',
        cancel: 'キャンセル',
        ok: '確定',
        am: '午前',
        pm: '午後',
        months: '月',
        days: '日',
        hours: '時間',
        minutes: '分',
        seconds: '秒',
        month: '月',
        day: '日',
        hour: '時間',
        minute: '分',
        second: '秒',
        yearUnit: '年',
        monthUnit: '月',
        dayUnit: '日',
        hourUnit: '時',
        minuteUnit: '分',
        secondUnit: '秒',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: '終了',
        firmwareUpgradeUpdate: '更新',
        firmwareUpgradeLook: '調べる',
        firmwareUpgradeForceUpdate: '現在ご使用のファームウェアは旧バージョンのため、一部の機能が正しく作動しない場合があります。より良いエクスペリエンスのために、最新バージョンに更新してください。',
        firmwareUpgradeForceUpdating: 'デバイス更新中です。後ほど再試行してください。',
        firmwareUpgradeNewPre: 'ファームウェア更新',
        firmwareUpgradeNewSub: '使用可能です。今すぐ更新しますか？',
        handling: '実行中',
        error: '再試行する',
        createLightGroup: '照明グループ作成（新）',
        manageLightGroup: '照明グループ管理（新）',
        deleteLightGroup: '照明グループ解除'
    };
    exports.ja = ja;
}, 22978, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.th = undefined;
    var th = {
        setting: 'การตั้งค่า',
        featureSetting: 'การตั้งค่าอุปกรณ์',
        commonSetting: 'การตั้งค่าทั่วไป',
        name: 'ชื่ออุปกรณ์',
        location: 'จัดการตำแหน่งที่ตั้ง',
        memberSet: 'การตั้งค่าปุ่ม',
        share: 'แชร์อุปกรณ์',
        btGateway: 'เกตเวย์ BLE',
        voiceAuth: 'การอนุญาตด้วยเสียง',
        ifttt: 'ระบบอัตโนมัติ',
        firmwareUpgrade: 'การอัปเดตเฟิร์มแวร์',
        more: 'การตั้งค่าเพิ่มเติม',
        help: 'ความช่วยเหลือ',
        legalInfo: 'ข้อมูลทางกฎหมาย',
        deleteDevice: 'ลบอุปกรณ์ออก',
        autoUpgrade: 'อัปเดตเฟิร์มแวร์โดยอัตโนมัติ',
        checkUpgrade: 'ตรวจสอบหาการอัปเดตเฟิร์มแวร์',
        security: 'การตั้งค่าความปลอดภัย',
        networkInfo: 'การตั้งค่าเครือข่าย',
        feedback: 'คำติชม',
        timezone: 'โซนเวลาของอุปกรณ์',
        addToDesktop: 'เพิ่มไปยังหน้าโฮม',
        cancel: 'ยกเลิก',
        ok: 'ตกลง',
        am: 'AM',
        pm: 'PM',
        months: 'เดือน',
        days: 'วัน',
        hours: 'ชั่วโมง',
        minutes: 'นาที',
        seconds: 'วินาที',
        month: 'เดือน',
        day: 'วัน',
        hour: 'ชั่วโมง',
        minute: 'นาที',
        second: 'วินาที',
        yearUnit: 'ปี',
        monthUnit: 'เดือน',
        dayUnit: 'วัน',
        hourUnit: 'ชั่วโมง',
        minuteUnit: 'นาที',
        secondUnit: 'วินาที',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'ออก',
        firmwareUpgradeUpdate: 'อัปเดต',
        firmwareUpgradeLook: 'ลองดู',
        firmwareUpgradeForceUpdate: 'เวอร์ชั่นเฟิร์มแวร์ปัจจุบันเก่าไป ฟีเจอร์บางอย่างอาจทำงานไม่ถูกต้อง อัปเดตเป็นเวอร์ชั่นล่าสุดเพื่อประสบการณ์การใช้งานที่ดีขึ้น',
        firmwareUpgradeForceUpdating: 'อุปกรณ์กำลังอัปเดต ลองอีกครั้งในภายหลัง',
        firmwareUpgradeNewPre: 'เฟิร์มแวร์อัปเดต ',
        firmwareUpgradeNewSub: ' ใช้ได้แล้ว อัปเดตตอนนี้หรือไม่',
        handling: 'ในการดำเนินการ',
        error: 'ลองอีกครั้ง',
        createLightGroup: 'สร้างกลุ่มแสงไฟ(ใหม่)',
        manageLightGroup: 'จัดการอุปกรณ์(ใหม่)',
        deleteLightGroup: 'สลายกลุ่มแสงไฟ'
    };
    exports.th = th;
}, 22981, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.tr = undefined;
    var tr = {
        setting: 'Ayarlar',
        featureSetting: 'Cihaz ayarları',
        commonSetting: 'Genel ayarlar',
        name: 'Cihaz adı',
        location: 'Konum yönetimi',
        memberSet: 'Tuş ayarları',
        share: 'Cihazı paylaş',
        btGateway: 'BLE ağ geçidi',
        voiceAuth: 'Sesli yetkilendirme',
        ifttt: 'Otomasyon',
        firmwareUpgrade: 'Cihaz güncelleştirmeleri',
        more: 'Ek ayarlar',
        help: 'Yardım',
        legalInfo: 'Yasal bilgi',
        deleteDevice: 'Cihazı sil',
        autoUpgrade: 'Ürün yazılımını otomatik olarak güncelle',
        checkUpgrade: 'Üretici yazılımı güncelleştirmelerini denetle',
        security: 'Güvenlik ayarları',
        networkInfo: 'Ağ bilgileri',
        feedback: 'Geri bildirimlerim',
        timezone: 'Cihazın saat dilimi',
        addToDesktop: 'Ana ekrana ekleyin',
        cancel: 'İptal ',
        ok: 'Onayla',
        am: 'AM',
        pm: 'PM',
        months: 'aylar',
        days: 'günler',
        hours: 'saatler',
        minutes: 'dakikalar',
        seconds: 'saniyeler',
        month: 'ay',
        day: 'gün',
        hour: 'saat',
        minute: 'dakika',
        second: 'saniye',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: 'sa. ',
        minuteUnit: 'dk.',
        secondUnit: 'sn.',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Çıkış',
        firmwareUpgradeUpdate: 'Şimdi güncelleştir',
        firmwareUpgradeLook: 'Şimdi göz atın',
        firmwareUpgradeForceUpdate: 'Mevcut ürün yazılımı bazı özellikleri çalıştırmak için çok eski olabilir. Daha iyi bir deneyim için en son sürüme güncelleyin.',
        firmwareUpgradeForceUpdating: 'Cihazınız güncelleştiriliyor, daha sonra yeniden deneyin',
        firmwareUpgradeNewPre: 'Üretici yazılımı güncelleştirmesi',
        firmwareUpgradeNewSub: 'kullanılabilir. Şimdi güncelleştir',
        handling: 'İşleniyor…',
        error: 'Kon niet werken, probeer het later opnieuw.',
        createLightGroup: 'Işık grubu oluştur (yeni)',
        manageLightGroup: 'Cihazları yönet (yeni)',
        deleteLightGroup: 'Işık grubunu kaldır'
    };
    exports.tr = tr;
}, 22984, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.nl = undefined;
    var nl = {
        setting: 'Instellingen',
        featureSetting: 'Apparaatinstellingen',
        commonSetting: 'Algemene instellingen',
        name: 'Apparaatnaam',
        location: 'Locatiebeheer',
        memberSet: 'Toetsinstellingen',
        share: 'Apparaat delen',
        btGateway: 'BLE-gateway',
        voiceAuth: 'Autorisatie via spraak',
        ifttt: 'Automatisering',
        firmwareUpgrade: 'Updates van het apparaat',
        more: 'Extra instellingen',
        help: 'Help',
        legalInfo: 'Legale informatie',
        deleteDevice: 'Apparaat verwijderen',
        autoUpgrade: 'Firmware automatisch bijwerken',
        checkUpgrade: 'Controleren op firmware-updates',
        security: 'Beveiligingsinstellingen',
        networkInfo: 'Netwerkgegevens',
        feedback: 'Mijn feedback',
        timezone: 'Tijdzone van het apparaat',
        addToDesktop: 'Toevoegen aan het startscherm',
        cancel: 'Annuleren',
        ok: 'Bevestigen',
        am: 'AM',
        pm: 'PM',
        months: 'Maanden',
        days: 'Dagen',
        hours: 'Uren',
        minutes: 'Minuten',
        seconds: 'Seconden',
        month: 'Maand ',
        day: 'Dag ',
        hour: 'Uur',
        minute: 'Minuut',
        second: 'Seconde ',
        yearUnit: '',
        monthUnit: '',
        dayUnit: '',
        hourUnit: '',
        minuteUnit: '',
        secondUnit: '',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Afsluiten',
        firmwareUpgradeUpdate: 'Nu updaten',
        firmwareUpgradeLook: 'Nu rondkijken',
        firmwareUpgradeForceUpdate: 'De huidige firmware is mogelijk te oud om bepaalde functies uit te voeren. Update naar de nieuwste versie voor een betere ervaring.',
        firmwareUpgradeForceUpdating: 'Uw toestel is aan het updaten, probeer het later nog eens',
        firmwareUpgradeNewPre: 'Firmware-update',
        firmwareUpgradeNewSub: 'beschikbaar. Nu updaten',
        handling: 'Verwerken...',
        error: 'Kon niet werken, probeer het later opnieuw',
        createLightGroup: 'Lichtgroep aanmaken (nieuw)',
        manageLightGroup: 'Apparaten beheren (nieuw)',
        deleteLightGroup: 'Lichtgroep opheffen'
    };
    exports.nl = nl;
}, 22987, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.pt = undefined;
    var pt = {
        setting: 'Configurações',
        featureSetting: 'Configurações do dispositivo',
        commonSetting: 'Configurações gerais',
        name: 'Nome do dispositivo',
        location: 'Gerenciamento de localização',
        memberSet: 'Configurações do teclado',
        share: 'Compartilhar dispositivo',
        btGateway: 'Gateway BLE',
        voiceAuth: 'Autorização de voz',
        ifttt: 'Automação',
        firmwareUpgrade: 'Atualizações de dispositivo',
        more: 'Configurações adicionais',
        help: 'Ajuda',
        legalInfo: 'Informação legal',
        deleteDevice: 'Excluir dispositivo',
        autoUpgrade: 'Atualizar automaticamente o firmware',
        checkUpgrade: 'Verificar se há atualizações de firmware',
        security: 'Configurações de segurança',
        networkInfo: 'Informações de rede',
        feedback: 'Meu feedback',
        timezone: 'Fuso horário do dispositivo',
        addToDesktop: 'Adicionar à tela de início',
        cancel: 'Cancelar',
        ok: 'Confirmar',
        am: 'Manhã',
        pm: 'Tarde',
        months: 'meses',
        days: 'dias',
        hours: 'horas',
        minutes: 'minutos',
        seconds: 'segundos',
        month: 'mês',
        day: 'dia',
        hour: 'hora',
        minute: 'minuto',
        second: 'segundo',
        yearUnit: 'a',
        monthUnit: 'm',
        dayUnit: 'd',
        hourUnit: 'h',
        minuteUnit: 'min',
        secondUnit: 's',
        dateSubTitle: '{0}-{1}-{2}',
        time24SubTitle: '{0}:{1}',
        time12SubTitle: '{1}:{2} {0}',
        singleSubTitle: '{0} {1}',
        firmwareUpgradeExit: 'Sair',
        firmwareUpgradeUpdate: 'Atualizar agora',
        firmwareUpgradeLook: 'Ver agora',
        firmwareUpgradeForceUpdate: 'O firmware atual pode ser muito antigo para executar alguns recursos. Atualize para a versão mais recente para obter uma melhor experiência.',
        firmwareUpgradeForceUpdating: 'Seu dispositivo está sendo atualizado. Tente novamente mais tarde',
        firmwareUpgradeNewPre: 'Atualização de firmware',
        firmwareUpgradeNewSub: 'disponível. Atualizar agora',
        handling: 'Processando...',
        error: 'Não foi possível operar, tente novamente mais tarde',
        createLightGroup: 'Criar grupo de lâmpadas (novo)',
        manageLightGroup: 'Gerenciar dispositivos (novo)',
        deleteLightGroup: 'Desfazer grupo de lâmpadas'
    };
    exports.pt = pt;
}, 22990, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "AbstractDialog", {
        enumerable: true,
        get: function get() {
            return _AbstractDialog.default;
        }
    });
    Object.defineProperty(exports, "ActionSheet", {
        enumerable: true,
        get: function get() {
            return _ActionSheet.default;
        }
    });
    Object.defineProperty(exports, "ChoiceDialog", {
        enumerable: true,
        get: function get() {
            return _ChoiceDialog.default;
        }
    });
    Object.defineProperty(exports, "InputDialog", {
        enumerable: true,
        get: function get() {
            return _InputDialog.default;
        }
    });
    Object.defineProperty(exports, "LoadingDialog", {
        enumerable: true,
        get: function get() {
            return _LoadingDialog.default;
        }
    });
    Object.defineProperty(exports, "MessageDialog", {
        enumerable: true,
        get: function get() {
            return _MessageDialog.default;
        }
    });
    Object.defineProperty(exports, "PinCodeDialog", {
        enumerable: true,
        get: function get() {
            return _PinCodeDialog.default;
        }
    });
    Object.defineProperty(exports, "ProgressDialog", {
        enumerable: true,
        get: function get() {
            return _ProgressDialog.default;
        }
    });
    Object.defineProperty(exports, "ShareDialog", {
        enumerable: true,
        get: function get() {
            return _ShareDialog.default;
        }
    });

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _PinCodeDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _ProgressDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _ShareDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
}, 22993, [14305, 22996, 22999, 23005, 23008, 23011, 23014, 23017, 23020, 23023]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _resources = _$$_REQUIRE(_dependencyMap[10]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

    var _locale = _$$_REQUIRE(_dependencyMap[14]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

    var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

    var MODAL_MARGIN = _resources.Styles.MODAL_MARGIN;

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    var underlayColor = 'rgba(0,0,0,.05)';

    var AbstractDialog = function (_React$Component) {
        (0, _inherits2.default)(AbstractDialog, _React$Component);

        function AbstractDialog(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, AbstractDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('AbstractDialog');
            _this.state = {
                visible: _this.props.visible
            };
            return _this;
        }

        (0, _createClass2.default)(AbstractDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.visible !== this.state.visible) {
                    this.setState({
                        visible: newProps.visible
                    });
                }
            }
        }, {
            key: "_checkUnlimitedHeightEnable",
            value: function _checkUnlimitedHeightEnable() {
                var result = false;

                if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('unlimitedHeightEnable')) {
                    result = this.props.dialogStyle.unlimitedHeightEnable;
                }

                return result;
            }
        }, {
            key: "renderTitle",
            value: function renderTitle() {
                if (!this.props.showTitle) return null;
                var _Styles$dialog$title = _resources.Styles.dialog.title,
                    titleHeightFat = _Styles$dialog$title.titleHeightFat,
                    titleHeightThin = _Styles$dialog$title.titleHeightThin;
                var theme = this.context.theme;
                var height = {
                    height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
                };
                var marginBottom = this.props.showSubtitle ? {
                    marginBottom: 6
                } : {};
                var language = this.context.language;
                var titleLines = 1;

                if (language !== 'zh') {
                    titleLines = 3;
                    height.maxHeight = 86;
                }

                var fontFamily = {};

                if (_reactNative.Platform.OS === 'android') {
                    fontFamily.fontFamily = '';
                }

                var titleNumberOfLines = titleLines;
                var subTitleNumberOfLines = 1;

                if (this.props.dialogStyle) {
                    if (this.props.dialogStyle.hasOwnProperty('titleNumberOfLines') && this.props.dialogStyle.titleNumberOfLines > 1) {
                        titleNumberOfLines = this.props.dialogStyle.titleNumberOfLines;
                        height = null;
                    }

                    if (this.props.dialogStyle.hasOwnProperty('subTitleNumberOfLines') && this.props.dialogStyle.subTitleNumberOfLines > 1) {
                        subTitleNumberOfLines = this.props.dialogStyle.subTitleNumberOfLines;
                        height = null;
                    }

                    if (this._checkUnlimitedHeightEnable()) {
                        height = null;
                    }
                }

                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.titleContainer, height]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                })), _react.default.createElement(_reactNative.Text, {
                    numberOfLines: titleNumberOfLines,
                    allowFontScaling: this.props.dialogStyle.allowFontScaling,
                    style: [{
                        width: _resources.Styles.dialog.modal.width * 0.75,
                        textAlign: 'center',
                        fontSize: 15,
                        fontWeight: 'bold',
                        color: '#000',
                        marginTop: height ? 0 : 10
                    }, marginBottom, fontFamily, this.props.dialogStyle.titleStyle]
                }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
                    numberOfLines: subTitleNumberOfLines,
                    allowFontScaling: this.props.dialogStyle.allowFontScaling,
                    style: [_resources.Styles.dialog.subtitle, {
                        color: theme.colorGrayNormal
                    }, this.props.dialogStyle.subTitleStyle]
                }, this.props.subtitle) : null);
            }
        }, {
            key: "renderContent",
            value: function renderContent() {
                if (this.props.children) return this.props.children;
                return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
                    style: styles.content
                }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), _react.default.createElement(_Separator.default, null));
            }
        }, {
            key: "renderButtonGroup",
            value: function renderButtonGroup() {
                if (!this.props.showButton) return null;
                var buttons = this.props.buttons;

                if (!buttons) {
                    buttons = [{
                        text: _locale.Locale.of(this.context.language).cancel
                    }, {
                        text: _locale.Locale.of(this.context.language).ok,
                        style: {
                            color: _resources.Styles.common.MHGreen
                        }
                    }];
                }

                if (buttons.length === 1) return this.renderOneButton(buttons);
                if (buttons.length === 2) return this.renderTwoButtons(buttons);

                _Logger.default.warn('只允许设置1～2个按钮');

                return null;
            }
        }, {
            key: "renderOneButton",
            value: function renderOneButton(buttons) {
                var _this2 = this;

                var button0 = buttons[0];
                if (typeof button0 !== 'object') return null;
                var callback = button0.callback;

                if (callback === undefined || !(callback instanceof Function)) {
                    callback = function callback() {
                        return _this2.dismiss();
                    };
                }

                var height = _resources.Styles.dialog.buttons.height;
                var buttonNumberOfLines;

                if (button0.hasOwnProperty('numberOfLines')) {
                    buttonNumberOfLines = button0.numberOfLines;

                    if (buttonNumberOfLines > 1) {
                        height = null;
                    }
                }

                var allowFontScaling = this.props.dialogStyle.allowFontScaling;

                if (button0.hasOwnProperty('allowFontScaling')) {
                    allowFontScaling = button0.allowFontScaling;
                }

                if (this._checkUnlimitedHeightEnable()) {
                    height = null;
                }

                var theme = this.context.theme;
                return _react.default.createElement(_reactNative.View, {
                    style: [_resources.Styles.dialog.buttons, {
                        height: height
                    }]
                }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
                    style: [_resources.Styles.dialog.button, {
                        borderBottomLeftRadius: _resources.Styles.dialog.modal.borderRadius
                    }],
                    onPress: callback,
                    underlayColor: underlayColor
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityHint: button0.accessibilityHint
                })), _react.default.createElement(_reactNative.Text, {
                    style: [_resources.Styles.dialog.buttonText, {
                        color: theme.colorGrayNormal
                    }, button0.style],
                    numberOfLines: buttonNumberOfLines,
                    allowFontScaling: allowFontScaling
                }, button0.text || _locale.Locale.of(this.context.language).ok)));
            }
        }, {
            key: "renderTwoButtons",
            value: function renderTwoButtons(buttons) {
                var _this3 = this;

                var button0 = buttons[0];
                var button1 = buttons[1];
                if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
                var callback0 = button0.callback;
                var callback1 = button1.callback;

                if (callback0 === undefined || !(callback0 instanceof Function)) {
                    callback0 = function callback0() {
                        return _this3.dismiss();
                    };
                }

                if (callback1 === undefined || !(callback1 instanceof Function)) {
                    callback1 = function callback1() {
                        return _this3.dismiss();
                    };
                }

                var height = _resources.Styles.dialog.buttons.height;
                var button0NumberOfLines;
                var button1NumberOfLines;

                if (button0.hasOwnProperty('numberOfLines')) {
                    button0NumberOfLines = button0.numberOfLines;

                    if (button0NumberOfLines > 1) {
                        height = null;
                    }
                }

                if (button1.hasOwnProperty('numberOfLines')) {
                    button1NumberOfLines = button1.numberOfLines;

                    if (button1NumberOfLines > 1) {
                        height = null;
                    }
                }

                if (this._checkUnlimitedHeightEnable()) {
                    height = null;
                }

                var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
                var button1AllowFontScaling = button0AllowFontScaling;

                if (button0.hasOwnProperty('allowFontScaling')) {
                    button0AllowFontScaling = button0.allowFontScaling;
                }

                if (button1.hasOwnProperty('allowFontScaling')) {
                    button1AllowFontScaling = button0.allowFontScaling;
                }

                var theme = this.context.theme;
                return _react.default.createElement(_reactNative.View, {
                    style: [_resources.Styles.dialog.buttons, {
                        height: height
                    }]
                }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
                    style: [_resources.Styles.dialog.button, {
                        borderBottomLeftRadius: _resources.Styles.dialog.modal.borderRadius
                    }],
                    onPress: callback0,
                    underlayColor: underlayColor
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityHint: button0.accessibilityHint
                })), _react.default.createElement(_reactNative.Text, {
                    style: [_resources.Styles.dialog.buttonText, {
                        color: theme.colorGrayNormal
                    }, button0.style],
                    numberOfLines: button0NumberOfLines,
                    allowFontScaling: button0AllowFontScaling
                }, button0.text || _locale.Locale.of(this.context.language).cancel)), _reactNative.Platform.select({
                    android: _react.default.createElement(_Separator.default, {
                        type: "column",
                        style: {
                            flex: 1
                        }
                    }),
                    ios: _react.default.createElement(_Separator.default, {
                        type: "column",
                        style: {
                            height: '100%'
                        }
                    })
                }), _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
                    style: [_resources.Styles.dialog.button, {
                        borderBottomRightRadius: _resources.Styles.dialog.modal.borderRadius
                    }],
                    onPress: callback1,
                    underlayColor: underlayColor
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityHint: button1.accessibilityHint
                })), _react.default.createElement(_reactNative.Text, {
                    style: [_resources.Styles.dialog.buttonText, {
                        color: theme.colorPrimary
                    }, button1.style],
                    numberOfLines: button1NumberOfLines,
                    allowFontScaling: button1AllowFontScaling
                }, button1.text || _locale.Locale.of(this.context.language).ok)));
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                var theme = this.context.theme;
                return _react.default.createElement(_reactNative.Modal, {
                    animationType: this.props.animationType,
                    transparent: true,
                    visible: this.state.visible,
                    onRequestClose: function onRequestClose() {
                        return _this4.dismiss();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: [_resources.Styles.dialog.background, {
                        backgroundColor: theme.colorOverLayerBlack
                    }]
                }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
                    onPress: function onPress() {
                        return _this4.dismiss();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        width: width,
                        height: height
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: [_resources.Styles.dialog.modal, {
                        backgroundColor: theme.colorForeground
                    }, {
                        width: _reactNative.Dimensions.get('window').width - MODAL_MARGIN * 2
                    }, this.props.style]
                }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
            }
        }, {
            key: "dismiss",
            value: function dismiss() {
                if (this.props.canDismiss) {
                    this.setState({
                        visible: false
                    });
                    this.props.onDismiss && this.props.onDismiss();
                }
            }
        }]);
        return AbstractDialog;
    }(_react.default.Component);

    AbstractDialog.contextType = _configProvider.ConfigContext;
    AbstractDialog.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),
        title: _propTypes.default.string,
        subtitle: _propTypes.default.string,
        showTitle: _propTypes.default.bool,
        showSubtitle: _propTypes.default.bool,
        canDismiss: _propTypes.default.bool,
        buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
            text: _propTypes.default.string,
            style: _propTypes.default.any,
            callback: _propTypes.default.func,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        showButton: _propTypes.default.bool,
        dialogStyle: _propTypes.default.object,
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    AbstractDialog.defaultProps = {
        animationType: 'fade',
        visible: false,
        showTitle: true,
        showSubtitle: false,
        dialogStyle: {
            unlimitedHeightEnable: false,
            allowFontScaling: true,
            titleNumberOfLines: 1,
            subTitleNumberOfLines: 1,
            titleStyle: {},
            subTitleStyle: {}
        },
        canDismiss: true,
        buttons: null,
        showButton: true
    };

    var styles = _reactNative.StyleSheet.create({
        titleContainer: {
            justifyContent: 'center',
            alignItems: 'center'
        },
        content: {
            width: _resources.Styles.dialog.modal.width,
            height: 150,
            justifyContent: 'center',
            alignItems: 'center'
        }
    });

    var _default = AbstractDialog;
    exports.default = _default;
}, 22996, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22906, 22420, 22423, 22933, 22426, 22891]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

    var ActionSheet = function (_React$Component) {
        (0, _inherits2.default)(ActionSheet, _React$Component);
        (0, _createClass2.default)(ActionSheet, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.visible !== this.state.visible) {
                    this.setState({
                        visible: newProps.visible
                    });
                }
            }
        }]);

        function ActionSheet(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ActionSheet);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ActionSheet).call(this, props, context));
            (0, _reportDecorator.referenceReport)('ActionSheet');
            _this.state = {
                visible: props.visible
            };
            return _this;
        }

        (0, _createClass2.default)(ActionSheet, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
                    animationType: this.props.animationType,
                    visible: this.state.visible,
                    dialogStyle: this.props.dialogStyle,
                    showTitle: false,
                    buttons: this.props.buttons,
                    onDismiss: function onDismiss() {
                        return _this2._onDismiss();
                    },
                    canDismiss: this.props.canDismiss
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible
                })), this.props.options.map(function (option, index) {
                    return _react.default.createElement(_reactNative.View, {
                        key: (option.title || '') + index
                    }, _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
                        title: option.title || '',
                        titleStyle: _this2.props.dialogStyle.itemTitleStyle,
                        subtitle: option.subtitle || '',
                        subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
                        allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
                        unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
                        titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
                        subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
                        onPress: function onPress() {
                            return _this2._onPress(option.onPress);
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this2.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                        accessibilityLabel: option.accessibilityLabel,
                        accessibilityHint: option.accessibilityHint
                    }))), _react.default.createElement(_Separator.default, null));
                }));
            }
        }, {
            key: "_onPress",
            value: function _onPress(callback) {
                callback && callback();
                this.setState({
                    visible: false
                });

                this._onDismiss();
            }
        }, {
            key: "_onDismiss",
            value: function _onDismiss() {
                this.props.onDismiss && this.props.onDismiss();
            }
        }]);
        return ActionSheet;
    }(_react.default.Component);

    ActionSheet.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        dialogStyle: _propTypes.default.object,
        options: _propTypes.default.arrayOf(_propTypes.default.shape({
            title: _propTypes.default.string,
            subtitle: _propTypes.default.string,
            onPress: _propTypes.default.func,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
            text: _propTypes.default.string,
            style: _propTypes.default.any,
            callback: _propTypes.default.func,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        onDismiss: _propTypes.default.func,
        canDismiss: _propTypes.default.bool,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    ActionSheet.defaultProps = {
        options: [],
        canDismiss: true,
        dialogStyle: {
            allowFontScaling: true,
            unlimitedHeightEnable: false,
            itemTitleStyle: {},
            itemSubtitleStyle: {},
            itemTitleNumberOfLines: 1,
            itemSubtitleNumberOfLines: 1
        }
    };
    var _default = ActionSheet;
    exports.default = _default;
}, 22999, [14305, 14344, 14320, 14371, 14377, 14323, 14386, 10318, 10297, 10033, 23002, 22906, 22996, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _resources = _$$_REQUIRE(_dependencyMap[10]);

    var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var thinHeight = 50;
    var fatHeight = 60;
    var checkboxSize = 20;
    var TYPE = {
        STATELESS: 'stateless',
        SINGLE: 'single',
        MULTIPLE: 'multiple'
    };
    Object.freeze(TYPE);

    var ChoiceItem = function (_React$Component) {
        (0, _inherits2.default)(ChoiceItem, _React$Component);

        function ChoiceItem(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ChoiceItem);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceItem).call(this, props, context));
            _this.state = {
                selected: props.selected
            };
            return _this;
        }

        (0, _createClass2.default)(ChoiceItem, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.selected !== this.state.selected) {
                    this.setState({
                        selected: newProps.selected
                    });
                }
            }
        }, {
            key: "renderIcon",
            value: function renderIcon() {
                if (this.props.type === TYPE.STATELESS) return null;

                if (!this.state.selected || this.props.type === TYPE.MULTIPLE) {
                    return _react.default.createElement(_reactNative.View, {
                        style: {
                            width: 38,
                            height: fatHeight
                        }
                    });
                }

                var paddingTop = {
                    paddingTop: 20
                };
                if (this.props.subtitle) paddingTop.paddingTop = 16;
                return _react.default.createElement(_reactNative.View, {
                    style: [styles.iconContainer, paddingTop]
                }, _react.default.createElement(_reactNative.Image, {
                    source: this.props.icon,
                    resizeMode: "contain",
                    style: styles.icon
                }));
            }
        }, {
            key: "renderText",
            value: function renderText() {
                var theme = this.context.theme;
                var color = {
                    color: theme.colorBlack
                };
                var textAlign = {};
                if (this.state.selected) color.color = this.props.color;
                if (this.props.type === TYPE.STATELESS) textAlign.textAlign = 'center';
                var adaptedFontStyle = {};

                if (!this.props.unlimitedHeightEnable) {
                    adaptedFontStyle = {
                        height: undefined,
                        lineHeight: undefined
                    };
                }

                return _react.default.createElement(_reactNative.View, {
                    style: styles.textContainer
                }, _react.default.createElement(_reactNative.Text, {
                    style: [styles.title, color, textAlign, adaptedFontStyle, this.props.titleStyle],
                    numberOfLines: this.props.titleNumberOfLines,
                    allowFontScaling: this.props.allowFontScaling
                }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
                    style: [styles.subtitle, {
                        color: theme.colorGrayNormal
                    }, textAlign, adaptedFontStyle, this.props.subtitleStyle],
                    numberOfLines: this.props.subtitleNumberOfLines,
                    allowFontScaling: this.props.allowFontScaling
                }, this.props.subtitle) : null);
            }
        }, {
            key: "renderCheckbox",
            value: function renderCheckbox() {
                var _this2 = this;

                if (this.props.type !== TYPE.MULTIPLE) return null;
                return _react.default.createElement(_Checkbox.default, {
                    style: {
                        width: checkboxSize,
                        height: checkboxSize,
                        borderRadius: 10,
                        marginRight: 20
                    },
                    checked: this.state.selected,
                    checkedColor: this.props.color,
                    onValueChange: function onValueChange(selected) {
                        return _this2._onValueChange(selected);
                    }
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this3 = this;

                var height = {
                    height: thinHeight
                };

                if (this.props.subtitle) {
                    height.height = fatHeight;
                }

                var heightStyle = {
                    minHeight: height.height,
                    height: height.height
                };

                if (this.props.unlimitedHeightEnable) {
                    heightStyle.height = null;
                }

                return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
                    underlayColor: "rgba(0,0,0,0.05)",
                    onPress: function onPress() {
                        return _this3._onPress();
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        selected: this.state.selected,
                        checked: this.state.selected
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: [styles.container, heightStyle]
                }, this.renderIcon(), this.renderText(), this.renderCheckbox()));
            }
        }, {
            key: "_onValueChange",
            value: function _onValueChange(selected) {
                this.setState({
                    selected: selected
                });

                if (this.props.onPress) {
                    this.props.onPress(selected);
                }
            }
        }, {
            key: "_onPress",
            value: function _onPress() {
                var type = this.props.type;
                var selected = this.state.selected;

                if (type !== TYPE.STATELESS) {
                    if (type === TYPE.MULTIPLE) selected = !selected;
                    if (type === TYPE.SINGLE) selected = true;
                    this.setState({
                        selected: selected
                    });
                }

                if (this.props.onPress) {
                    this.props.onPress(selected);
                }
            }
        }]);
        return ChoiceItem;
    }(_react.default.Component);

    exports.default = ChoiceItem;
    ChoiceItem.contextType = _configProvider.ConfigContext;
    ChoiceItem.propTypes = {
        type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
        title: _propTypes.default.string,
        subtitle: _propTypes.default.string,
        selected: _propTypes.default.bool,
        color: _propTypes.default.string,
        icon: _propTypes.default.number,
        onPress: _propTypes.default.func,
        unlimitedHeightEnable: _propTypes.default.bool,
        allowFontScaling: _propTypes.default.bool,
        titleNumberOfLines: _propTypes.default.number,
        subtitleNumberOfLines: _propTypes.default.number,
        titleStyle: _reactNative.Text.propTypes.style,
        subtitleStyle: _reactNative.Text.propTypes.style,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    ChoiceItem.defaultProps = {
        type: TYPE.STATELESS,
        selected: false,
        color: _resources.Styles.common.MHGreen,
        icon: _resources.Images.common.selectIcon,
        unlimitedHeightEnable: false,
        allowFontScaling: true,
        titleNumberOfLines: 1,
        subtitleNumberOfLines: 1,
        titleStyle: {},
        subtitleStyle: {}
    };
    ChoiceItem.TYPE = TYPE;

    var styles = _reactNative.StyleSheet.create({
        container: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        iconContainer: {
            width: 38,
            alignSelf: 'stretch',
            alignItems: 'center'
        },
        icon: {
            width: 10,
            height: 10
        },
        textContainer: {
            flex: 1,
            justifyContent: 'center'
        },
        title: {
            alignSelf: 'stretch',
            fontSize: 15,
            lineHeight: 20
        },
        subtitle: {
            alignSelf: 'stretch',
            fontSize: 12,
            lineHeight: 16
        }
    });
}, 23002, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22786, 22426, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

    var TYPE = {
        SINGLE: 'single',
        MULTIPLE: 'multiple'
    };
    Object.freeze(TYPE);

    var ChoiceDialog = function (_React$Component) {
        (0, _inherits2.default)(ChoiceDialog, _React$Component);
        (0, _createClass2.default)(ChoiceDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.visible !== this.state.visible) {
                    this.setState({
                        visible: newProps.visible
                    });
                }

                var selectedArray = Array.from({
                    length: newProps.options.length
                }, function (v, i) {
                    return newProps.selectedIndexArray.includes(i);
                });
                this.setState({
                    selectedArray: selectedArray
                });
            }
        }]);

        function ChoiceDialog(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ChoiceDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('ChoiceDialog');
            var buttons = props.buttons;

            if (buttons instanceof Array) {
                var button = buttons[buttons.length - 1];

                if (button && button.callback) {
                    var callbackOrigin = button.callback;

                    button.callback = function () {
                        var selectedIndexArray = [];

                        for (var i = 0; i < _this.state.selectedArray.length; i++) {
                            var item = _this.state.selectedArray[i];
                            if (item) selectedIndexArray.push(i);
                        }

                        callbackOrigin(selectedIndexArray);
                    };
                }
            }

            _this.buttons = buttons;
            _this.state = {
                visible: props.visible,
                selectedArray: []
            };
            return _this;
        }

        (0, _createClass2.default)(ChoiceDialog, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                if (!this.props.visible) return null;
                return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
                    animationType: this.props.animationType,
                    visible: this.state.visible,
                    title: this.props.title,
                    dialogStyle: this.props.dialogStyle,
                    showButton: this.props.type === TYPE.MULTIPLE,
                    buttons: this.buttons,
                    onDismiss: function onDismiss() {
                        return _this2._onDismiss();
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessibilityLabel: this.props.accessible
                })), this.props.options.map(function (option, index) {
                    return _react.default.createElement(_reactNative.View, {
                        key: (option.title || '') + index
                    }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
                        type: _this2.props.type,
                        title: option.title || '',
                        titleStyle: _this2.props.dialogStyle.itemTitleStyle,
                        subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
                        allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
                        unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
                        titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
                        subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
                        subtitle: option.subtitle || '',
                        selected: _this2.state.selectedArray[index],
                        color: _this2.props.color,
                        icon: _this2.props.icon,
                        onPress: function onPress(selected) {
                            return _this2._onPress(selected, index);
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this2.props.accessible,
                        accessibilityLabel: option.accessibilityLabel,
                        accessibilityHint: option.accessibilityHint
                    }))));
                }), this.props.type === TYPE.MULTIPLE ? _react.default.createElement(_Separator.default, null) : null);
            }
        }, {
            key: "_onPress",
            value: function _onPress(selected, index) {
                if (selected) { } else { }

                if (this.props.type === TYPE.SINGLE) {
                    var selectedArray = Array.from({
                        length: this.props.options.length
                    }, function () {
                        return false;
                    });
                    selectedArray[index] = selected;
                    this.setState({
                        selectedArray: selectedArray,
                        visible: false
                    });

                    this._onDismiss();

                    this.props.onSelect && this.props.onSelect([index]);
                } else {
                    var _selectedArray = this.state.selectedArray;
                    _selectedArray[index] = selected;
                    this.setState({
                        selectedArray: _selectedArray
                    });
                }
            }
        }, {
            key: "_onDismiss",
            value: function _onDismiss() {
                this.props.onDismiss && this.props.onDismiss();
            }
        }]);
        return ChoiceDialog;
    }(_react.default.Component);

    ChoiceDialog.propTypes = {
        animationType: _propTypes.default.string,
        type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
        visible: _propTypes.default.bool,
        options: _propTypes.default.arrayOf(_propTypes.default.shape({
            title: _propTypes.default.string,
            subtitle: _propTypes.default.string,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        selectedIndexArray: _propTypes.default.arrayOf(_propTypes.default.number),
        color: _propTypes.default.string,
        icon: _propTypes.default.number,
        buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
            text: _propTypes.default.string,
            style: _propTypes.default.any,
            callback: _propTypes.default.func
        })),
        title: _propTypes.default.string,
        dialogStyle: _propTypes.default.object,
        onSelect: _propTypes.default.func,
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    ChoiceDialog.defaultProps = {
        type: TYPE.SINGLE,
        options: [],
        selectedIndexArray: [],
        dialogStyle: {
            allowFontScaling: true,
            unlimitedHeightEnable: false,
            titleStyle: {},
            itemTitleStyle: {},
            itemSubtitleStyle: {},
            itemTitleNumberOfLines: 1,
            itemSubtitleNumberOfLines: 1
        }
    };
    ChoiceDialog.TYPE = TYPE;
    var _default = ChoiceDialog;
    exports.default = _default;
}, 23005, [14305, 14344, 14320, 14371, 14377, 14323, 14386, 10318, 10297, 10033, 23002, 22906, 22996, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

    var paddingHorizontal = 29;
    var paddingVertical = 23;
    var paddingTop = 13;
    var paddingBottom = 6;

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        height = _Dimensions$get.height;

    var TYPE = {
        SIMPLE: 'simple',
        UNDERLINE: 'underline',
        CHECKBOX: 'checkbox',
        BOTH: 'both'
    };
    Object.freeze(TYPE);

    var InputDialog = function (_React$Component) {
        (0, _inherits2.default)(InputDialog, _React$Component);

        function InputDialog(props, context) {
            var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

            var _this;

            (0, _classCallCheck2.default)(this, InputDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('InputDialog');
            _this.state = {
                checked: props.checkboxData.checked || false
            };

            _reactNativeUiKitten.RkTheme.setType('RkTextInput', 'mhtextinput', {
                input: {
                    marginVertical: 0,
                    color: (_this$context$theme = _this.context.theme) == null ? undefined : _this$context$theme.colorBlack,
                    marginLeft: 16,
                    fontSize: 14
                },
                underlineWidth: 0.3,
                marginVertical: 0,
                placeholderTextColor: (_this$context$theme2 = _this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter,
                minHeight: 40,
                backgroundColor: (_this$context$theme3 = _this.context.theme) == null ? undefined : _this$context$theme3.colorBackground,
                borderRadius: 6,
                borderWidth: 0.3,
                borderColor: (_this$context$theme4 = _this.context.theme) == null ? undefined : _this$context$theme4.colorSeparator
            });

            _this.process(props);

            return _this;
        }

        (0, _createClass2.default)(InputDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(props) {
                this.setState({
                    checked: props.checkboxData.checked || false
                });
                this.process(props);
            }
        }, {
            key: "process",
            value: function process(props) {
                var _this2 = this;

                this.textInputArray = [];
                this.inputs = props.inputs || [{
                    placeholder: '自定义占位字符',
                    defaultValue: '自定义默认值',
                    textInputProps: {
                        autoFocus: true
                    }
                }];

                var _loop = function _loop(i) {
                    var input = _this2.inputs[i];

                    if (input !== undefined) {
                        _this2.textInputArray.push(input.defaultValue || '');

                        var onChangeTextOrigin = input.onChangeText;

                        input.onChangeText = function (text) {
                            _this2._onChangeText(text, i);

                            if (onChangeTextOrigin instanceof Function) {
                                onChangeTextOrigin(text);
                            }
                        };
                    }
                };

                for (var i = 0; i < this.inputs.length; i++) {
                    _loop(i);
                }

                this.hasPressUnderlineText = false;
                var buttons = props.buttons;

                if (buttons instanceof Array) {
                    var button = buttons[buttons.length - 1];

                    if (button && button.callback) {
                        var callbackOrigin = button.callback;

                        button.callback = function () {
                            callbackOrigin({
                                hasPressUnderlineText: _this2.hasPressUnderlineText,
                                checked: _this2.state.checked,
                                textInputArray: _this2.textInputArray
                            });
                        };
                    }
                }

                this.buttons = buttons;
            }
        }, {
            key: "_onChangeText",
            value: function _onChangeText(text, index) {
                this.textInputArray[index] = text;
            }
        }, {
            key: "renderUpExtra",
            value: function renderUpExtra() {
                var _this3 = this;

                if (this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) {
                    var _this$props$underline = this.props.underlineData,
                        leftText = _this$props$underline.leftText,
                        underlineText = _this$props$underline.underlineText,
                        accessibilityLabel = _this$props$underline.accessibilityLabel,
                        accessibilityHint = _this$props$underline.accessibilityHint;
                    var leftTextNumberOfLines = 1;
                    var underlineTextNumberOfLines = 1;

                    if (this.props.underlineData && this.props.underlineData.hasOwnProperty('leftTextNumberOfLines')) {
                        leftTextNumberOfLines = this.props.underlineData.leftTextNumberOfLines;
                    }

                    if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
                        underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
                    }

                    return _react.default.createElement(_reactNative.View, {
                        style: styles.underlineContainer
                    }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                        numberOfLines: leftTextNumberOfLines,
                        allowFontScaling: this.props.dialogStyle.allowFontScaling,
                        style: [styles.label, this.props.underlineData.leftTextStyle]
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                    })), leftText || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                        style: [styles.underlineText, {
                            color: this.props.color
                        }, this.props.underlineData.underlineTextStyle],
                        numberOfLines: underlineTextNumberOfLines,
                        allowFontScaling: this.props.dialogStyle.allowFontScaling,
                        onPress: function onPress() {
                            return _this3.onPressUnderlineText();
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
                        accessibilityLabel: accessibilityLabel,
                        accessibilityHint: accessibilityHint
                    })), underlineText || ''));
                }

                return null;
            }
        }, {
            key: "renderInputGroup",
            value: function renderInputGroup() {
                var _this4 = this;

                return this.inputs.map(function (input, index) {
                    if (input === undefined) return null;
                    var margin = index === 0 ? {} : {
                        marginTop: 12
                    };
                    return _react.default.createElement(_reactNativeUiKitten.RkTextInput, (0, _extends2.default)({
                        key: index + (input.placeholder || ''),
                        style: margin,
                        placeholder: input.placeholder || '',
                        onChangeText: input.onChangeText,
                        rkType: "mhtextinput",
                        defaultValue: input.defaultValue || '',
                        placeholderTextColor: "#fff"
                    }, input.textInputProps || {}, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this4.props.accessible,
                        accessibilityLabel: input.accessibilityLabel,
                        accessibilityHint: input.accessibilityHint
                    })));
                });
            }
        }, {
            key: "renderDownExtra",
            value: function renderDownExtra() {
                var _this5 = this;

                if (this.props.type === TYPE.BOTH || this.props.type === TYPE.CHECKBOX) {
                    var _this$props$checkboxD = this.props.checkboxData,
                        text = _this$props$checkboxD.text,
                        accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
                        accessibilityHint = _this$props$checkboxD.accessibilityHint;
                    var numberOfLines = 1;

                    if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
                        numberOfLines = this.props.checkboxData.numberOfLines;
                    }

                    return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
                        onPress: function onPress() {
                            return _this5.onPressCheckbox();
                        },
                        activeOpacity: 1,
                        style: {
                            paddingTop: paddingTop
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
                        accessibilityLabel: accessibilityLabel || text,
                        accessibilityHint: accessibilityHint,
                        accessibilityState: {
                            disabled: false,
                            checked: this.state.checked
                        }
                    })), _react.default.createElement(_reactNative.View, {
                        style: styles.checkboxContainer
                    }, _react.default.createElement(_Checkbox.default, {
                        checked: this.state.checked,
                        checkedColor: this.props.color,
                        style: {
                            width: 20,
                            height: 20,
                            borderRadius: 10
                        },
                        onValueChange: function onValueChange(checked) {
                            _this5.setState({
                                checked: checked
                            });
                        }
                    }), _react.default.createElement(_reactNative.Text, {
                        style: [styles.checkboxText, this.props.checkboxData.textStyle],
                        numberOfLines: numberOfLines,
                        allowFontScaling: this.props.dialogStyle.allowFontScaling
                    }, text || '')));
                }

                return null;
            }
        }, {
            key: "render",
            value: function render() {
                var _this6 = this;

                if (!this.props.visible) return null;
                var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
                    bottom: ~~(height * 0.45)
                } : {};
                return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
                    animationType: this.props.animationType,
                    visible: this.props.visible,
                    title: this.props.title,
                    buttons: this.buttons,
                    dialogStyle: this.props.dialogStyle,
                    onDismiss: function onDismiss() {
                        return _this6._onDismiss();
                    },
                    style: absDialogStyle
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible
                })), _react.default.createElement(_reactNative.View, {
                    style: [styles.container]
                }, this.renderUpExtra(), this.renderInputGroup(), this.renderDownExtra()), _react.default.createElement(_Separator.default, null));
            }
        }, {
            key: "_onDismiss",
            value: function _onDismiss() {
                this.props.onDismiss && this.props.onDismiss();
            }
        }, {
            key: "onPressUnderlineText",
            value: function onPressUnderlineText() {
                this.hasPressUnderlineText = true;
                var onPress = this.props.underlineData.onPress;
                onPress && onPress();
            }
        }, {
            key: "onPressCheckbox",
            value: function onPressCheckbox() {
                this.setState({
                    checked: !this.state.checked
                });
            }
        }]);
        return InputDialog;
    }(_react.default.Component);

    InputDialog.contextType = _configProvider.ConfigContext;
    InputDialog.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX, TYPE.BOTH]),
        color: _propTypes.default.string,
        title: _propTypes.default.string,
        dialogStyle: _propTypes.default.object,
        extra: _propTypes.default.object,
        underlineData: _propTypes.default.shape({
            leftText: _propTypes.default.string,
            underlineText: _propTypes.default.string,
            onPress: _propTypes.default.func,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        }),
        inputs: _propTypes.default.arrayOf(_propTypes.default.shape({
            placeholder: _propTypes.default.string,
            defaultValue: _propTypes.default.string,
            onChangeText: _propTypes.default.func,
            textInputProps: _propTypes.default.object,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        checkboxData: _propTypes.default.shape({
            checked: _propTypes.default.bool,
            text: _propTypes.default.string,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        }),
        buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
            text: _propTypes.default.string,
            style: _propTypes.default.any,
            callback: _propTypes.default.func,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    InputDialog.defaultProps = {
        type: TYPE.SIMPLE,
        color: _resources.Styles.common.MHGreen,
        underlineData: {},
        checkboxData: {},
        dialogStyle: {
            allowFontScaling: true,
            unlimitedHeightEnable: false,
            titleNumberOfLines: 1,
            titleStyle: {}
        }
    };
    InputDialog.TYPE = TYPE;

    var styles = _reactNative.StyleSheet.create({
        container: {
            paddingHorizontal: paddingHorizontal,
            paddingBottom: paddingVertical,
            backgroundColor: 'transparent',
            borderRadius: _resources.Styles.dialog.modal.borderRadius
        },
        underlineContainer: {
            paddingBottom: paddingBottom,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-around'
        },
        label: {
            fontSize: 14,
            color: 'rgba(0,0,0,0.8)',
            flex: 1
        },
        underlineText: {
            flex: 1,
            textAlign: 'right',
            textDecorationLine: 'underline',
            fontSize: 14
        },
        checkboxContainer: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        checkboxText: {
            flex: 1,
            marginLeft: 8,
            fontSize: 14,
            color: '#999'
        }
    });

    var _default = InputDialog;
    exports.default = _default;
}, 23008, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 11251, 22453, 22786, 22906, 22996, 22426, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeIndicators = _$$_REQUIRE(_dependencyMap[10]);

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var LoadingDialog = function (_React$Component) {
        (0, _inherits2.default)(LoadingDialog, _React$Component);

        function LoadingDialog(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, LoadingDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('LoadingDialog');
            _this.state = {
                visible: _this.props.visible
            };
            return _this;
        }

        (0, _createClass2.default)(LoadingDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.visible !== this.state.visible) {
                    this.setState({
                        visible: newProps.visible
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this,
                    _this$context$theme;

                var timeout = this.props.timeout;

                if (timeout && typeof parseInt(timeout) === 'number') {
                    if (!this.state.visible) {
                        this.timer = null;
                        clearTimeout(this.timer);
                    } else if (!this.timer) {
                        this.timer = setTimeout(function () {
                            _this2.setState({
                                visible: false
                            });

                            _this2.props.onDismiss && _this2.props.onDismiss();
                        }, parseInt(timeout));
                    }
                }

                var heightStyle = {
                    height: styles.container.height,
                    minHeight: styles.container.height
                };

                if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('textNumberOfLines')) {
                    if (this.props.dialogStyle.textNumberOfLines > 1) {
                        heightStyle.height = null;
                    }
                }

                if (this.props.dialogStyle && this.props.dialogStyle.unlimitedHeightEnable) {
                    heightStyle.height = null;
                }

                return _react.default.createElement(_AbstractDialog.default, {
                    animationType: this.props.animationType,
                    visible: this.state.visible,
                    showTitle: false,
                    canDismiss: false,
                    showButton: false,
                    accessible: this.props.accessible
                }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.container, heightStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                })), _react.default.createElement(_reactNativeIndicators.BallIndicator, {
                    style: styles.indicator,
                    color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier,
                    size: 20
                }), _react.default.createElement(_reactNative.Text, {
                    style: [styles.message, this.props.dialogStyle.messageStyle],
                    allowFontScaling: this.props.dialogStyle.allowFontScaling,
                    numberOfLines: this.props.dialogStyle.textNumberOfLines
                }, this.props.message || '')));
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.timer = null;
                clearTimeout(this.timer);
            }
        }]);
        return LoadingDialog;
    }(_react.default.Component);

    LoadingDialog.contextType = _configProvider.ConfigContext;
    LoadingDialog.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        message: _propTypes.default.string,
        timeout: _propTypes.default.number,
        dialogStyle: _propTypes.default.object,
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    LoadingDialog.defaultProps = {
        dialogStyle: {
            allowFontScaling: true,
            unlimitedHeightEnable: false,
            messageStyle: {}
        }
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            height: 74,
            flexDirection: 'row',
            alignItems: 'center',
            backgroundColor: '#fff',
            paddingHorizontal: 27,
            borderRadius: _resources.Styles.dialog.modal.borderRadius
        },
        indicator: {
            position: 'absolute',
            left: 27,
            height: 20
        },
        message: {
            marginLeft: 35,
            flex: 1,
            fontSize: 15,
            color: 'rgba(0,0,0,0.8)'
        }
    });

    var _default = LoadingDialog;
    exports.default = _default;
}, 23011, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 13711, 22453, 22996, 22426, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _resources = _$$_REQUIRE(_dependencyMap[10]);

    var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var paddingHorizontal = 29;
    var paddingVertical = 27;
    var paddingTop = 13;
    var TYPE = {
        SIMPLE: 'simple',
        UNDERLINE: 'underline',
        CHECKBOX: 'checkbox'
    };
    Object.freeze(TYPE);

    var MessageDialog = function (_React$Component) {
        (0, _inherits2.default)(MessageDialog, _React$Component);

        function MessageDialog(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, MessageDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MessageDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('MessageDialog');
            _this.state = {
                checked: props.extra.checked || false
            };

            _this.process(props);

            return _this;
        }

        (0, _createClass2.default)(MessageDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(props) {
                this.setState({
                    checked: props.extra.checked || false
                });
                this.process(props);
            }
        }, {
            key: "process",
            value: function process(props) {
                var _this2 = this;

                this.hasPressUnderlineText = false;
                var buttons = props.buttons;

                if (buttons instanceof Array) {
                    var button = buttons[buttons.length - 1];

                    if (button && button.callback) {
                        var callbackOrigin = button.callback;

                        button.callback = function () {
                            if (props.type === TYPE.UNDERLINE) {
                                callbackOrigin({
                                    hasPressUnderlineText: _this2.hasPressUnderlineText
                                });
                            } else if (props.type === TYPE.CHECKBOX) {
                                callbackOrigin({
                                    checked: _this2.state.checked
                                });
                            } else {
                                callbackOrigin({});
                            }
                        };
                    }
                }

                this.buttons = buttons;
            }
        }, {
            key: "renderExtra",
            value: function renderExtra() {
                var _this3 = this;

                var extraTextNumberOfLines = 1;

                if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
                    extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
                }

                switch (this.props.type) {
                    case TYPE.SIMPLE:
                        return null;

                    case TYPE.UNDERLINE:
                        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                            style: [styles.extraContainer, {
                                paddingTop: paddingTop
                            }]
                        }, (0, _accessibilityHelper.getAccessibilityConfig)({
                            accessible: this.props.accessible,
                            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
                            accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
                            accessibilityHint: this.props.accessibilityHint
                        })), _react.default.createElement(_reactNative.Text, {
                            numberOfLines: extraTextNumberOfLines,
                            allowFontScaling: this.props.dialogStyle.allowFontScaling,
                            style: [styles.underlineText, {
                                color: this.props.color
                            }, this.props.dialogStyle.extraTextStyle],
                            onPress: function onPress() {
                                return _this3.onPressUnderlineText();
                            }
                        }, this.props.extraText || ''));

                    case TYPE.CHECKBOX:
                        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
                            onPress: function onPress() {
                                return _this3.onPressCheckbox();
                            },
                            activeOpacity: 1,
                            style: {
                                paddingTop: paddingTop
                            }
                        }, (0, _accessibilityHelper.getAccessibilityConfig)({
                            accessible: false
                        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                            style: styles.extraContainer
                        }, (0, _accessibilityHelper.getAccessibilityConfig)({
                            accessible: this.props.accessible,
                            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
                            accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
                            accessibilityHint: this.props.accessibilityHint,
                            accessibilityState: {
                                disabled: false,
                                checked: this.state.checked
                            }
                        })), _react.default.createElement(_Checkbox.default, {
                            checked: this.state.checked,
                            checkedColor: this.props.color,
                            style: {
                                width: 20,
                                height: 20,
                                borderRadius: 10
                            },
                            onValueChange: function onValueChange(checked) {
                                _this3.setState({
                                    checked: checked
                                });
                            }
                        }), _react.default.createElement(_reactNative.Text, {
                            style: [styles.checkboxText, this.props.dialogStyle.extraTextStyle],
                            numberOfLines: extraTextNumberOfLines,
                            allowFontScaling: this.props.dialogStyle.allowFontScaling
                        }, this.props.extraText || '')));

                    default:
                        return null;
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                if (!this.props.visible) return null;
                var showTitle = !!this.props.title;
                var paddingTop = showTitle ? {
                    paddingTop: 0
                } : {};
                var messageNumberOfLines = 15;

                if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
                    messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
                }

                return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
                    animationType: this.props.animationType,
                    visible: this.props.visible,
                    title: this.props.title,
                    showTitle: showTitle,
                    buttons: this.buttons,
                    dialogStyle: this.props.dialogStyle,
                    onDismiss: function onDismiss() {
                        return _this4._onDismiss();
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible
                })), _react.default.createElement(_reactNative.View, {
                    style: [styles.container, paddingTop]
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: messageNumberOfLines,
                    allowFontScaling: this.props.dialogStyle.allowFontScaling,
                    style: [styles.message, this.props.messageStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                })), this.props.message || ''), this.renderExtra()), _react.default.createElement(_Separator.default, null));
            }
        }, {
            key: "_onDismiss",
            value: function _onDismiss() {
                this.props.onDismiss && this.props.onDismiss();
            }
        }, {
            key: "onPressUnderlineText",
            value: function onPressUnderlineText() {
                this.hasPressUnderlineText = true;
                var onPress = this.props.extra.onPress;
                onPress && onPress();
            }
        }, {
            key: "onPressCheckbox",
            value: function onPressCheckbox() {
                this.setState({
                    checked: !this.state.checked
                });
            }
        }]);
        return MessageDialog;
    }(_react.default.Component);

    MessageDialog.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX]),
        color: _propTypes.default.string,
        title: _propTypes.default.string,
        message: _propTypes.default.string,
        messageStyle: _reactNative.Text.propTypes.style,
        extraText: _propTypes.default.string,
        extra: _propTypes.default.object,
        buttons: _propTypes.default.arrayOf(_propTypes.default.object),
        dialogStyle: _propTypes.default.object,
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    MessageDialog.defaultProps = {
        type: TYPE.SIMPLE,
        color: _resources.Styles.common.MHGreen,
        message: '请自定义提示文案',
        messageStyle: {},
        dialogStyle: {
            allowFontScaling: true,
            unlimitedHeightEnable: false,
            titleNumberOfLines: 1,
            messageNumberOfLines: 15,
            extraTextNumberOfLines: 1,
            titleStyle: {},
            extraTextStyle: {}
        },
        extra: {}
    };
    MessageDialog.TYPE = TYPE;

    var styles = _reactNative.StyleSheet.create({
        container: {
            paddingHorizontal: paddingHorizontal,
            paddingVertical: paddingVertical,
            backgroundColor: '#fff',
            borderRadius: _resources.Styles.dialog.modal.borderRadius
        },
        message: {
            fontSize: 15,
            color: '#666',
            lineHeight: 22,
            fontFamily: 'MI-LANTING--GBK1-Light',
            fontWeight: '400'
        },
        underlineText: {
            flex: 1,
            textDecorationLine: 'underline',
            fontSize: 14
        },
        extraContainer: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        checkboxText: {
            flex: 1,
            marginLeft: 8,
            fontSize: 14,
            color: '#999'
        }
    });

    var _default = MessageDialog;
    exports.default = _default;
}, 23014, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 22786, 22906, 22996, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _resources = _$$_REQUIRE(_dependencyMap[10]);

    var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var paddingHorizontal = 29;
    var paddingVertical = 26;
    var marginVertical = 30;
    var blockSize = 45;

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        height = _Dimensions$get.height;

    var PinCodeDialog = function (_React$Component) {
        (0, _inherits2.default)(PinCodeDialog, _React$Component);
        (0, _createClass2.default)(PinCodeDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(props) {
                if (props.visible === true) {
                    this.setState({
                        numArr: Array.from({
                            length: this.digit
                        }, function () {
                            return undefined;
                        }),
                        value: ''
                    });
                }

                this.setState({
                    checked: (props.checkboxData || {})['checked'] || false
                });
                this.process(props);
            }
        }]);

        function PinCodeDialog(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, PinCodeDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PinCodeDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('PinCodeDialog');
            _this.digit = _this.props.digit;

            if (_this.digit > 6 || _this.digit < 3) {
                _this.digit = 6;
            }

            var numArr = Array.from({
                length: _this.digit
            }, function () {
                return undefined;
            });
            _this.state = {
                numArr: numArr,
                value: '',
                checked: (props.checkboxData || {})['checked'] || false
            };

            _this.process(props);

            return _this;
        }

        (0, _createClass2.default)(PinCodeDialog, [{
            key: "process",
            value: function process(props) {
                var _this2 = this;

                var buttons = props.buttons;

                if (buttons instanceof Array) {
                    var button = buttons[buttons.length - 1];

                    if (button && button.callback) {
                        var callbackOrigin = button.callback;

                        button.callback = function () {
                            callbackOrigin({
                                checked: _this2.state.checked,
                                numArr: _this2.state.numArr
                            });
                        };
                    }
                }

                this.buttons = buttons;
            }
        }, {
            key: "_onChangeText",
            value: function _onChangeText(text) {
                if (/^\d*$/.test(text)) {
                    if (text.length <= this.digit) {
                        var numArr = this.state.numArr.map(function (v, i) {
                            return text[i];
                        });
                        this.setState({
                            numArr: numArr
                        });
                    }

                    this.setState({
                        value: text.slice(0, this.digit)
                    });
                } else {
                    var value = text.match(/\d*/)[0];
                    this.setState({
                        value: value
                    });
                }
            }
        }, {
            key: "renderUpExtra",
            value: function renderUpExtra() {
                if (!this.props.message) return null;
                var numberOfLines = 15;

                if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
                    numberOfLines = this.props.dialogStyle.messageNumberOfLines;
                }

                return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [styles.message, this.props.dialogStyle.messageStyle],
                    allowFontScaling: this.props.dialogStyle.allowFontScaling,
                    numberOfLines: numberOfLines
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                })), this.props.message || '');
            }
        }, {
            key: "renderTextGroup",
            value: function renderTextGroup() {
                var _this3 = this;

                return Array.from({
                    length: this.digit
                }, function (v, i) {
                    return i;
                }).map(function (v, i) {
                    var marginLeft = i === 0 ? {} : {
                        marginLeft: 66 / _this3.digit
                    };

                    var focusIndex = _this3.state.numArr.indexOf(undefined);

                    var borderColor = i === focusIndex ? {
                        borderColor: _this3.props.color
                    } : {};
                    return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                        key: i,
                        style: [styles.blockContainer, marginLeft, borderColor]
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this3.props.accessible
                    })), _react.default.createElement(_reactNative.Text, {
                        style: [styles.blockText, _this3.props.dialogStyle.digitStyle],
                        allowFontScaling: _this3.props.dialogStyle.allowFontScaling
                    }, _this3.state.numArr[i] || ''));
                });
            }
        }, {
            key: "renderDownExtra",
            value: function renderDownExtra() {
                var _this4 = this;

                if (!(this.props.checkboxData instanceof Object)) return null;
                var numberOfLines = 1;

                if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
                    numberOfLines = this.props.checkboxData.numberOfLines;
                }

                var _this$props$checkboxD = this.props.checkboxData,
                    text = _this$props$checkboxD.text,
                    accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
                    accessibilityHint = _this$props$checkboxD.accessibilityHint;
                return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
                    onPress: function onPress() {
                        return _this4.onPressCheckbox();
                    },
                    activeOpacity: 1
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
                    accessibilityLabel: accessibilityLabel,
                    accessibilityHint: accessibilityHint,
                    accessibilityState: {
                        disabled: false,
                        checked: this.state.checked
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.checkboxContainer
                }, _react.default.createElement(_Checkbox.default, {
                    checked: this.state.checked,
                    checkedColor: this.props.color,
                    style: {
                        width: 20,
                        height: 20,
                        borderRadius: 10
                    },
                    onValueChange: function onValueChange(checked) {
                        _this4.setState({
                            checked: checked
                        });
                    }
                }), _react.default.createElement(_reactNative.Text, {
                    style: [styles.checkboxText, this.props.checkboxData.textStyle],
                    numberOfLines: numberOfLines,
                    allowFontScaling: this.props.dialogStyle.allowFontScaling
                }, text || '')));
            }
        }, {
            key: "render",
            value: function render() {
                var _this5 = this;

                if (!this.props.visible) return null;
                var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
                    bottom: ~~(height * 0.38)
                } : {};
                return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
                    animationType: this.props.animationType,
                    visible: this.props.visible,
                    title: this.props.title,
                    buttons: this.buttons,
                    dialogStyle: this.props.dialogStyle,
                    onDismiss: function onDismiss() {
                        return _this5._onDismiss();
                    },
                    style: absDialogStyle
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible
                })), _react.default.createElement(_reactNative.View, {
                    style: [styles.container]
                }, this.renderUpExtra(), _react.default.createElement(_reactNative.View, {
                    style: styles.pinCodeContainer
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.textGroup
                }, this.renderTextGroup()), _react.default.createElement(_reactNative.TextInput, {
                    autoFocus: true,
                    caretHidden: true,
                    style: styles.textinput,
                    value: this.state.value,
                    selectionColor: "#ffffff",
                    underlineColorAndroid: "transparent",
                    onChangeText: function onChangeText(text) {
                        return _this5._onChangeText(text);
                    },
                    keyboardType: "numeric"
                })), this.renderDownExtra()), _react.default.createElement(_Separator.default, null));
            }
        }, {
            key: "_onDismiss",
            value: function _onDismiss() {
                this.props.onDismiss && this.props.onDismiss();
            }
        }, {
            key: "onPressCheckbox",
            value: function onPressCheckbox() {
                this.setState({
                    checked: !this.state.checked
                });
            }
        }]);
        return PinCodeDialog;
    }(_react.default.Component);

    PinCodeDialog.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        title: _propTypes.default.string,
        message: _propTypes.default.string,
        digit: _propTypes.default.oneOf([3, 4, 5, 6]),
        color: _propTypes.default.any,
        dialogStyle: _propTypes.default.object,
        checkboxData: _propTypes.default.shape({
            checked: _propTypes.default.bool,
            text: _propTypes.default.string,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        }),
        buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
            text: _propTypes.default.string,
            style: _propTypes.default.any,
            callback: _propTypes.default.func,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    PinCodeDialog.defaultProps = {
        digit: 6,
        color: _resources.Styles.common.MHGreen,
        checkboxData: {},
        dialogStyle: {
            unlimitedHeightEnable: false,
            allowFontScaling: true,
            titleNumberOfLines: 1,
            messageNumberOfLines: 15,
            titleStyle: {},
            messageStyle: {},
            digitStyle: {}
        }
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            paddingHorizontal: paddingHorizontal,
            paddingBottom: paddingVertical,
            backgroundColor: '#fff',
            borderRadius: _resources.Styles.dialog.modal.borderRadius
        },
        message: {
            fontSize: 15,
            color: '#666666',
            lineHeight: 18,
            flex: 1
        },
        pinCodeContainer: {
            marginVertical: marginVertical,
            alignItems: 'center',
            justifyContent: 'center'
        },
        textinput: {
            position: 'absolute',
            width: _resources.Styles.dialog.modal.width - 58,
            height: 105,
            backgroundColor: 'transparent',
            color: 'transparent'
        },
        textGroup: {
            flexDirection: 'row',
            alignItems: 'center',
            backgroundColor: '#fff'
        },
        blockContainer: {
            height: blockSize,
            width: blockSize,
            backgroundColor: '#ffffff',
            borderRadius: 2,
            borderWidth: 0.8,
            borderColor: '#cccccc',
            alignItems: 'center',
            justifyContent: 'center'
        },
        blockText: {
            color: '#000000',
            fontSize: 30
        },
        checkboxContainer: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        checkboxText: {
            flex: 1,
            marginLeft: 8,
            fontSize: 14,
            color: '#999'
        }
    });

    var _default = PinCodeDialog;
    exports.default = _default;
}, 23017, [14305, 14344, 14320, 14371, 14377, 14323, 14386, 10318, 10297, 10033, 22453, 22786, 22906, 22996, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

    var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

    var _resources = _$$_REQUIRE(_dependencyMap[12]);

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

    var padding = 37;

    var ProgressDialog = function (_React$Component) {
        (0, _inherits2.default)(ProgressDialog, _React$Component);

        function ProgressDialog(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ProgressDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('ProgressDialog');
            _this.state = {
                visible: _this.props.visible
            };
            return _this;
        }

        (0, _createClass2.default)(ProgressDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                if (newProps.visible !== this.state.visible) {
                    this.setState({
                        visible: newProps.visible
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this,
                    _this$context$theme;

                if (this.props.autoDismiss && this.state.visible === true && this.props.progress >= 1) {
                    this.timer = setTimeout(function () {
                        _this2.setState({
                            visible: false
                        });

                        _this2.props.onDismiss && _this2.props.onDismiss();
                    }, 100);
                }

                var progressText = Math.round(this.props.progress * 100) + "%";
                var messageNumberOfLines = 1;

                if (this.props.dialogStyle) {
                    if (this.props.dialogStyle.hasOwnProperty('messageNumberOfLines') && this.props.dialogStyle.messageNumberOfLines > 1) {
                        messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
                    }
                }

                return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
                    animationType: this.props.animationType,
                    visible: this.state.visible,
                    showTitle: false,
                    canDismiss: false,
                    showButton: false
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.container, {
                        backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorForeground
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.progressbar,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityValue: this.props.accessibilityValue || {
                        text: progressText
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: styles.messageContainer
                }, _react.default.createElement(_reactNative.Text, {
                    numberOfLines: messageNumberOfLines,
                    style: [styles.message, {
                        flex: 1
                    }, this.props.dialogStyle.messageStyle],
                    allowFontScaling: this.props.dialogStyle.allowFontScaling
                }, this.props.message || ''), _react.default.createElement(_reactNative.Text, {
                    style: [styles.message, {
                        minWidth: 45,
                        textAlign: 'right'
                    }, {
                        color: this.props.textColor
                    }, this.props.dialogStyle.progressTextStyle],
                    numberOfLines: 1,
                    allowFontScaling: this.props.dialogStyle.allowFontScaling
                }, progressText)), _react.default.createElement(Progress.Bar, {
                    style: {
                        marginBottom: messageNumberOfLines > 1 ? 10 : 0
                    },
                    progress: this.props.progress,
                    color: this.props.color,
                    unfilledColor: this.props.unfilledColor,
                    width: _resources.Styles.dialog.modal.width - 74,
                    height: 3,
                    borderRadius: 2.5,
                    borderWidth: 0.3,
                    borderColor: "#e5e5e5",
                    useNativeDriver: true
                })));
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.timer = null;
                clearTimeout(this.timer);
            }
        }]);
        return ProgressDialog;
    }(_react.default.Component);

    ProgressDialog.contextType = _configProvider.ConfigContext;
    ProgressDialog.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        message: _propTypes.default.string,
        progress: _propTypes.default.number,
        color: _propTypes.default.string,
        unfilledColor: _propTypes.default.string,
        textColor: _propTypes.default.string,
        autoDismiss: _propTypes.default.bool,
        dialogStyle: _propTypes.default.object,
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityValue: _accessibilityHelper.AccessibilityPropTypes.accessibilityValue
    };
    ProgressDialog.defaultProps = {
        progress: 0,
        color: _resources.Styles.common.MHGreen,
        unfilledColor: '#f1f1f1',
        textColor: _resources.Styles.common.MHGreen,
        autoDismiss: false,
        dialogStyle: {
            allowFontScaling: true,
            messageNumberOfLines: 1,
            messageStyle: {},
            progressTextStyle: {}
        }
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            minHeight: 86,
            paddingHorizontal: padding,
            justifyContent: 'center',
            borderRadius: _resources.Styles.dialog.modal.borderRadius
        },
        messageContainer: {
            flexDirection: 'row',
            justifyContent: 'center',
            alignItems: 'center',
            marginBottom: 12
        },
        message: {
            fontSize: 15,
            color: 'rgba(0,0,0,0.8)'
        }
    });

    var _default = ProgressDialog;
    exports.default = _default;
}, 23020, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 13636, 22453, 22996, 22426, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

    var paddingHorizontal = 40;
    var paddingBottomSmall = 20;
    var paddingBottomLarge = 28;
    var iconSize = 55;
    var optionHeight = 95;
    var margin = ~~((_resources.Styles.dialog.modal.width - 80 - 220) / 3);
    var testIcon = _resources.Images.common.mihome;

    var ShareDialog = function (_React$Component) {
        (0, _inherits2.default)(ShareDialog, _React$Component);
        (0, _createClass2.default)(ShareDialog, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                var _this2 = this;

                if (newProps.visible === true) {
                    setTimeout(function () {
                        return _this2.setState({
                            swiperVisible: true
                        });
                    });
                } else {
                    this.setState({
                        swiperVisible: false
                    });
                }
            }
        }]);

        function ShareDialog(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ShareDialog);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ShareDialog).call(this, props, context));
            (0, _reportDecorator.referenceReport)('ShareDialog');
            _this.state = {
                swiperVisible: false,
                pressed: -1
            };
            _this.pages = Array.from({
                length: Math.ceil(props.options.length / 8)
            }, function (v, i) {
                return props.options.slice(8 * i, 8 * i + 8);
            });
            return _this;
        }

        (0, _createClass2.default)(ShareDialog, [{
            key: "renderIcons",
            value: function renderIcons(options, index) {
                var _this3 = this;

                var numberOfLines = 1;

                if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('itemTextNumberOfLines')) {
                    numberOfLines = this.props.dialogStyle.itemTextNumberOfLines;
                }

                var theme = this.context.theme;
                return _react.default.createElement(_reactNative.View, {
                    key: index + "0",
                    style: styles.optionsPage
                }, options.map(function (option, index) {
                    if (option === undefined) return null;
                    var marginLeft = index % 4 === 0 ? {} : {
                        marginLeft: margin
                    };
                    var scale = _this3.state.pressed === index ? 0.95 : 1;
                    var opacity = _this3.state.pressed === index ? 0.88 : 1;
                    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
                        key: index + (option.text || ''),
                        onPress: option.callback,
                        onPressIn: function onPressIn() {
                            return _this3.setState({
                                pressed: index
                            });
                        },
                        onPressOut: function onPressOut() {
                            return _this3.setState({
                                pressed: -1
                            });
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this3.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                        accessibilityLabel: option.accessibilityLabel,
                        accessibilityHint: option.accessibilityHint
                    })), _react.default.createElement(_reactNative.View, {
                        style: [styles.optionContainer, marginLeft]
                    }, _react.default.createElement(_reactNative.Image, {
                        style: [styles.icon, {
                            transform: [{
                                scale: scale
                            }]
                        }],
                        source: option.icon,
                        resizeMode: "center"
                    }), _react.default.createElement(_reactNative.Text, {
                        style: [styles.optionText, {
                            opacity: opacity,
                            color: theme.colorGrayHeavier
                        }, _this3.props.dialogStyle.itemTextStyle],
                        numberOfLines: numberOfLines,
                        allowFontScaling: _this3.props.dialogStyle.allowFontScaling
                    }, option.text || '')));
                }));
            }
        }, {
            key: "renderIconsPages",
            value: function renderIconsPages(options) {
                var _this4 = this;

                if (options.length < 9) return this.renderIcons(options, 0);
                if (!this.state.swiperVisible) return _react.default.createElement(_reactNative.View, {
                    style: styles.swiper
                });
                var theme = this.context.theme;
                return _react.default.createElement(_reactNativeSwiper.default, (0, _extends2.default)({
                    style: styles.swiper,
                    autoplay: false,
                    loop: false,
                    paginationStyle: styles.paginationStyle,
                    dotColor: "rgba(0,0,0,0.2)",
                    activeDotColor: theme.colorPrimary,
                    dotStyle: styles.dot,
                    activeDotStyle: styles.dot
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.pages.map(function (options, index) {
                    return _this4.renderIcons(options, index);
                }));
            }
        }, {
            key: "render",
            value: function render() {
                var _this5 = this;

                var theme = this.context.theme;
                var paddingBottom = this.props.options.length > 8 ? {
                    paddingBottom: paddingBottomLarge
                } : {
                    paddingBottom: paddingBottomSmall
                };
                return _react.default.createElement(_AbstractDialog.default, {
                    animationType: this.props.animationType,
                    visible: this.props.visible,
                    title: this.props.title,
                    dialogStyle: this.props.dialogStyle,
                    buttons: this.props.buttons,
                    onDismiss: function onDismiss() {
                        return _this5._onDismiss();
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: [styles.container, {
                        backgroundColor: theme.colorForeground
                    }, paddingBottom]
                }, this.renderIconsPages(this.props.options)), _react.default.createElement(_Separator.default, null));
            }
        }, {
            key: "_onDismiss",
            value: function _onDismiss() {
                this.setState({
                    swiperVisible: false
                });
                this.props.onDismiss && this.props.onDismiss();
            }
        }]);
        return ShareDialog;
    }(_react.default.Component);

    ShareDialog.contextType = _configProvider.ConfigContext;
    ShareDialog.propTypes = {
        animationType: _propTypes.default.string,
        visible: _propTypes.default.bool,
        title: _propTypes.default.string,
        dialogStyle: _propTypes.default.object,
        options: _propTypes.default.arrayOf(_propTypes.default.shape({
            icon: _propTypes.default.any,
            text: _propTypes.default.string,
            callback: _propTypes.default.func,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
            text: _propTypes.default.string,
            style: _propTypes.default.any,
            callback: _propTypes.default.func,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        onDismiss: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    ShareDialog.defaultProps = {
        options: Array.from({
            length: 6
        }, function () {
            return {
                icon: testIcon,
                text: ['米家', '微信', 'QQ', '微博', '朋友圈', '收藏', '即刻'][~~(Math.random() * 7)],
                callback: function callback() {
                    return undefined;
                }
            };
        }),
        dialogStyle: {
            unlimitedHeightEnable: false,
            allowFontScaling: true,
            titleNumberOfLines: 1,
            itemTextNumberOfLines: 1
        }
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            paddingHorizontal: paddingHorizontal,
            borderRadius: _resources.Styles.dialog.modal.borderRadius
        },
        swiper: {
            minHeight: 209,
            paddingBottom: 19
        },
        optionsPage: {
            flexDirection: 'row',
            flexWrap: 'wrap'
        },
        optionContainer: {
            minHeight: optionHeight,
            alignItems: 'center'
        },
        icon: {
            width: iconSize,
            height: iconSize
        },
        optionText: {
            marginTop: 4,
            marginBottom: 10,
            width: iconSize,
            textAlign: 'center',
            fontSize: 12
        },
        paginationStyle: {
            position: 'absolute',
            bottom: 0
        },
        dot: {
            width: 6,
            height: 6
        }
    });

    var _default = ShareDialog;
    exports.default = _default;
}, 23023, [14305, 14344, 14320, 14371, 14377, 14323, 14386, 10318, 10297, 10033, 13663, 22453, 22906, 22996, 22420, 22423, 22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "ChoiceItem", {
        enumerable: true,
        get: function get() {
            return _ChoiceItem.default;
        }
    });
    Object.defineProperty(exports, "ListItem", {
        enumerable: true,
        get: function get() {
            return _ListItem.default;
        }
    });
    Object.defineProperty(exports, "ListItemWithSlider", {
        enumerable: true,
        get: function get() {
            return _ListItemWithSlider.default;
        }
    });
    Object.defineProperty(exports, "ListItemWithSwitch", {
        enumerable: true,
        get: function get() {
            return _ListItemWithSwitch.default;
        }
    });

    var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _ListItemWithSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
}, 23026, [14305, 23002, 23029, 23038, 23044]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var dot = _$$_REQUIRE(_dependencyMap[15]);

    var THIN_HEIGHT = 50;
    var PADDING = 24;
    var dotSize = 8;

    var ICON_SIZE = _reactNative.Platform.select({
        android: 26,
        ios: 24
    });

    var ListItem = function (_React$Component) {
        (0, _inherits2.default)(ListItem, _React$Component);

        function ListItem(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ListItem);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
            (0, _reportDecorator.referenceReport)('ListItem');
            return _this;
        }

        (0, _createClass2.default)(ListItem, [{
            key: "render",
            value: function render() {
                var extraContainerStyle = {
                    height: THIN_HEIGHT
                };

                if (this.props.subtitle) {
                    extraContainerStyle = {
                        paddingVertical: 8,
                        height: undefined
                    };
                }

                var extraRightStyle = {
                    maxWidth: '40%'
                };
                var valueStyle = {
                    marginRight: -7,
                    textAlignVertical: 'center',
                    textAlign: 'right'
                };
                var adaptedFontStyle = {};

                if (this.props.unlimitedHeightEnable) {
                    adaptedFontStyle = {
                        height: undefined,
                        lineHeight: undefined
                    };
                }

                var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
                var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
                var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
                if (titleLine < 0) titleLine = 0;
                if (subtitleLine < 0) subtitleLine = 0;
                if (valueLine < 0) valueLine = 0;
                var fontFamily = {};

                if (_reactNative.Platform.OS === 'android') {
                    fontFamily = {
                        fontFamily: 'Kmedium'
                    };
                    valueStyle.height = THIN_HEIGHT;
                }

                return _react.default.createElement(_reactNative.View, {
                    style: {
                        backgroundColor: '#fff'
                    }
                }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
                    disabled: this.props.disabled,
                    underlayColor: _resources.Styles.common.underlayColor,
                    onPress: this.props.onPress,
                    onLongPress: this.props.onLongPress,
                    viewStyle: [styles.container, this.props.containerStyle, extraContainerStyle, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        disabled: this.props.disabled
                    }
                })), _react.default.createElement(_reactNative.View, {
                    style: [styles.left]
                }, _react.default.createElement(_reactNative.View, {
                    style: {
                        flexDirection: 'row',
                        paddingVertical: 2
                    }
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: titleLine,
                    allowFontScaling: this.props.allowFontScaling,
                    style: [_resources.Styles.common.title, fontFamily, adaptedFontStyle, this.props.titleStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.title), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
                    style: [styles.dot, this.props.dotStyle],
                    resizeMode: "contain",
                    source: dot
                }) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: subtitleLine,
                    allowFontScaling: this.props.allowFontScaling,
                    style: [_resources.Styles.common.subtitle, this.props.subtitleStyle, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
                    style: {
                        width: 5
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: [styles.right, extraRightStyle]
                }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: valueLine,
                    allowFontScaling: this.props.allowFontScaling,
                    ellipsizeMode: "tail",
                    style: [_resources.Styles.common.subtitle, this.props.valueStyle, valueStyle, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.value) : null), !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
                    style: styles.icon,
                    source: _resources.Images.common.right_arrow
                }) : null), this.renderSeparator());
            }
        }, {
            key: "renderSeparator",
            value: function renderSeparator() {
                if (!this.props.showSeparator) return null;
                return this.props.separator || _react.default.createElement(_Separator.default, {
                    style: {
                        marginLeft: _resources.Styles.common.padding
                    }
                });
            }
        }]);
        return ListItem;
    }(_react.default.Component);

    ListItem.propTypes = {
        title: _propTypes.default.string.isRequired,
        subtitle: _propTypes.default.string,
        value: _propTypes.default.string,
        onPress: _propTypes.default.func.isRequired,
        onLongPress: _propTypes.default.func,
        disabled: _propTypes.default.bool,
        showSeparator: _propTypes.default.bool,
        hideArrow: _propTypes.default.bool,
        showDot: _propTypes.default.bool,
        separator: _propTypes.default.element,
        containerStyle: _propTypes.default.object,
        titleStyle: _propTypes.default.object,
        subtitleStyle: _propTypes.default.object,
        valueStyle: _propTypes.default.object,
        dotStyle: _propTypes.default.object,
        allowFontScaling: _propTypes.default.bool,
        unlimitedHeightEnable: _propTypes.default.bool,
        titleNumberOfLines: _propTypes.default.number,
        subtitleNumberOfLines: _propTypes.default.number,
        valueNumberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    ListItem.defaultProps = {
        title: '',
        subtitle: '',
        value: '',
        onPress: function onPress() { },
        onLongPress: function onLongPress() { },
        disabled: false,
        showSeparator: true,
        hideArrow: false,
        showDot: false,
        containerStyle: {},
        titleStyle: {},
        subtitleStyle: {},
        valueStyle: {},
        dotStyle: {},
        unlimitedHeightEnable: false,
        allowFontScaling: true
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            width: width,
            backgroundColor: '#fff',
            paddingHorizontal: PADDING,
            flexDirection: 'row',
            alignItems: 'center'
        },
        left: {
            flex: 1
        },
        right: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'flex-start'
        },
        icon: {
            width: ICON_SIZE,
            height: ICON_SIZE
        },
        dot: {
            marginTop: -1,
            marginLeft: 1,
            width: dotSize,
            height: dotSize
        }
    });

    var _default = ListItem;
    exports.default = _default;
}, 23029, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 23032, 22453, 22906, 22420, 22423, 23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _resources = _$$_REQUIRE(_dependencyMap[10]);

    var TouchableView = function (_React$Component) {
        (0, _inherits2.default)(TouchableView, _React$Component);

        function TouchableView(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, TouchableView);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableView).call(this, props, context));
            _this.state = {
                inPress: false
            };
            return _this;
        }

        (0, _createClass2.default)(TouchableView, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, this.props, {
                    delayLongPress: this.props.delayLongPress,
                    delayPressIn: this.props.delayPressIn,
                    delayPressOut: this.props.delayPressOut,
                    disabled: this.props.disabled,
                    onLongPress: this.props.onLongPress,
                    onPress: this.props.onPress,
                    onPressIn: function onPressIn() {
                        _this2.setState({
                            inPress: true
                        });
                    },
                    onPressOut: function onPressOut() {
                        _this2.setState({
                            inPress: false
                        });
                    }
                }), _react.default.createElement(_reactNative.View, {
                    style: [{
                        backgroundColor: '#fff'
                    }, this.props.viewStyle, this.state.inPress ? {
                        backgroundColor: this.props.underlayColor
                    } : {}]
                }, this.props.children));
            }
        }]);
        return TouchableView;
    }(_react.default.Component);

    exports.default = TouchableView;
    TouchableView.propTypes = {
        delayLongPress: _propTypes.default.number,
        delayPressIn: _propTypes.default.number,
        delayPressOut: _propTypes.default.number,
        disabled: _propTypes.default.bool,
        onLongPress: _propTypes.default.func,
        onPress: _propTypes.default.func,
        viewStyle: _reactNative.ViewPropTypes.style,
        underlayColor: _propTypes.default.string
    };
    TouchableView.defaultProps = {
        delayLongPress: 100,
        delayPressIn: 100,
        delayPressOut: 100,
        disabled: false,
        viewStyle: {},
        underlayColor: _resources.Styles.common.underlayColor
    };
}, 23032, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
        "width": 30,
        "height": 30,
        "scales": [1],
        "hash": "522ed59eaa31441e8b11ae8bab872663",
        "name": "dot",
        "type": "png"
    });
}, 23035, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _font = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var HEIGHT = 77;
    var PADDING = 24;
    var THUMB_SIZE = 24;
    var THUMB_TOUCH_SIZE = {
        width: 50,
        height: 50
    };

    var ListItemWithSlider = function (_React$Component) {
        (0, _inherits2.default)(ListItemWithSlider, _React$Component);

        function ListItemWithSlider(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ListItemWithSlider);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSlider).call(this, props, context));

            _this.onAccessibilityAction = function (_ref) {
                var actionName = _ref.nativeEvent.actionName;
                var _this$sliderProps = _this.sliderProps,
                    minimumValue = _this$sliderProps.minimumValue,
                    maximumValue = _this$sliderProps.maximumValue,
                    step = _this$sliderProps.step;
                var disabled = _this.props.disabled;

                if (disabled) {
                    return;
                }

                var value = _this.state.value;
                var totalSteps = (maximumValue - minimumValue) / step;
                var everyStep = totalSteps >= 10 ? Math.floor(totalSteps / 10) : 1;
                var currentStep = (value - minimumValue) / step;
                var actionStep = currentStep;

                switch (actionName) {
                    case 'increment':
                        actionStep += everyStep;
                        break;

                    case 'decrement':
                        actionStep -= everyStep;
                        break;
                }

                var targetValue = Math.min(maximumValue, Math.max(minimumValue, actionStep * step + minimumValue));

                _this._onValueChange(targetValue, function () {
                    _this._onSlidingComplete(targetValue);
                });
            };

            (0, _reportDecorator.referenceReport)('ListItemWithSlider');
            _this.sliderProps = (0, _extends2.default)({
                minimumValue: 0,
                maximumValue: 100,
                step: 1,
                value: 50
            }, _this.props.sliderProps);
            _this.sliderStyle = (0, _extends2.default)({
                minimumTrackTintColor: _resources.Styles.common.MHGreen,
                maximumTrackTintColor: "rgba(0,0,0,0.15)",
                thumbTintColor: _resources.Styles.common.MHGreen
            }, _this.props.sliderStyle);
            _this.state = {
                value: _this.sliderProps.value,
                valueStr: _this.format(_this.sliderProps.value)
            };
            return _this;
        }

        (0, _createClass2.default)(ListItemWithSlider, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                var extraStyle = {
                    maxWidth: (width - 48) * 0.7,
                    fontFamily: _font.FontDefault
                };

                if (this.props.containerStyle.width) {
                    extraStyle = {
                        maxWidth: (this.props.containerStyle.width - 48) * 0.7
                    };
                }

                var adaptedFontStyle = {};

                if (this.props.unlimitedHeightEnable) {
                    adaptedFontStyle = {
                        height: undefined,
                        lineHeight: undefined
                    };
                }

                var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
                var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
                if (titleLine < 0) titleLine = 0;
                if (valueLine < 0) valueLine = 0;
                return _react.default.createElement(_reactNative.View, {
                    style: {
                        backgroundColor: '#fff'
                    }
                }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [styles.container, this.props.containerStyle, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        disabled: !!this.props.disabled
                    },
                    accessibilityValue: {
                        min: this.sliderProps.minimumValue,
                        max: this.sliderProps.maximumValue,
                        now: this.state.value
                    }
                }), {
                    accessibilityActions: [{
                        name: 'increment'
                    }, {
                        name: 'decrement'
                    }],
                    onAccessibilityAction: this.onAccessibilityAction
                }), _react.default.createElement(_reactNative.View, {
                    style: [styles.up]
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: titleLine,
                    ellipsizeMode: "tail",
                    allowFontScaling: this.props.allowFontScaling,
                    style: [_resources.Styles.common.title, this.props.titleStyle, extraStyle, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.title), _react.default.createElement(_reactNative.View, {
                    style: [styles.separatorCol, this.props.unlimitedHeightEnable ? {
                        height: '80%'
                    } : {}]
                }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    style: [styles.value, this.props.valueStyle, adaptedFontStyle],
                    numberOfLines: valueLine,
                    allowFontScaling: this.props.allowFontScaling
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.subtitle || this.state.valueStr)), _react.default.createElement(_reactNative.View, {
                    style: styles.down
                }, _react.default.createElement(_reactNativeSlider.default, (0, _extends2.default)({
                    disabled: this.props.disabled,
                    style: [this.sliderStyle.style],
                    maximumValue: this.sliderProps.maximumValue,
                    minimumValue: this.sliderProps.minimumValue,
                    step: this.sliderProps.step,
                    minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
                    maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
                    thumbTintColor: this.sliderStyle.thumbTintColor,
                    thumbTouchSize: THUMB_TOUCH_SIZE,
                    trackStyle: [styles.trackStyle, this.sliderStyle.trackStyle],
                    thumbStyle: [styles.thumbStyle, this.sliderStyle.thumbStyle],
                    value: this.state.value,
                    onValueChange: function onValueChange(value) {
                        return _this2._onValueChange(value);
                    },
                    onSlidingComplete: function onSlidingComplete(value) {
                        return _this2._onSlidingComplete(value);
                    }
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                }))))), this.renderSeparator());
            }
        }, {
            key: "renderSeparator",
            value: function renderSeparator() {
                if (!this.props.showSeparator) return null;
                return this.props.separator || _react.default.createElement(_Separator.default, {
                    style: {
                        marginLeft: _resources.Styles.common.padding
                    }
                });
            }
        }, {
            key: "format",
            value: function format(val) {
                if (this.props.showWithPercent) {
                    var _this$sliderProps2 = this.sliderProps,
                        min = _this$sliderProps2.minimumValue,
                        max = _this$sliderProps2.maximumValue;
                    return Math.round((val - min) / (max - min) * 100) + " %";
                }

                return val + " " + this.props.unit;
            }
        }, {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(nextProps) {
                if (nextProps.sliderProps === undefined) return;

                if (typeof nextProps.sliderProps.value !== 'number') {
                    return;
                }

                var _nextProps$sliderProp = nextProps.sliderProps,
                    value = _nextProps$sliderProp.value,
                    minimumValue = _nextProps$sliderProp.minimumValue,
                    maximumValue = _nextProps$sliderProp.maximumValue;

                if (minimumValue !== undefined && minimumValue !== this.sliderProps.minimumValue) {
                    this.sliderProps.minimumValue = minimumValue;
                }

                if (maximumValue !== undefined && maximumValue !== this.sliderProps.maximumValue) {
                    this.sliderProps.maximumValue = maximumValue;
                }

                if (value !== this.state.value) {
                    this.setState({
                        value: value,
                        valueStr: this.format(value)
                    });
                }
            }
        }, {
            key: "_onValueChange",
            value: function _onValueChange(value) {
                this.setState({
                    value: value,
                    valueStr: this.format(value)
                });

                if (this.props.onValueChange) {
                    this.props.onValueChange(value);
                }
            }
        }, {
            key: "_onSlidingComplete",
            value: function _onSlidingComplete(value) {
                if (this.props.onSlidingComplete) {
                    this.props.onSlidingComplete(value);
                }
            }
        }]);
        return ListItemWithSlider;
    }(_react.default.Component);

    ListItemWithSlider.propTypes = {
        title: _propTypes.default.string.isRequired,
        subtitle: _propTypes.default.string,
        sliderProps: _propTypes.default.object,
        showWithPercent: _propTypes.default.bool,
        unit: _propTypes.default.string,
        sliderStyle: _propTypes.default.object,
        onValueChange: _propTypes.default.func,
        onSlidingComplete: _propTypes.default.func.isRequired,
        disabled: _propTypes.default.bool,
        containerStyle: _propTypes.default.object,
        titleStyle: _propTypes.default.object,
        valueStyle: _propTypes.default.object,
        showSeparator: _propTypes.default.bool,
        separator: _propTypes.default.element,
        allowFontScaling: _propTypes.default.bool,
        unlimitedHeightEnable: _propTypes.default.bool,
        titleNumberOfLines: _propTypes.default.number,
        valueNumberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    ListItemWithSlider.defaultProps = {
        title: '',
        subtitle: '',
        showWithPercent: true,
        unit: '',
        disabled: false,
        containerStyle: {},
        titleStyle: {},
        valueStyle: {},
        showSeparator: true,
        onSlidingComplete: function onSlidingComplete() { },
        unlimitedHeightEnable: false,
        allowFontScaling: true
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            width: width,
            backgroundColor: '#fff',
            paddingHorizontal: PADDING,
            height: HEIGHT
        },
        up: {
            marginTop: 11,
            flexDirection: 'row',
            alignItems: 'center'
        },
        down: {
            flex: 1,
            justifyContent: 'center'
        },
        separatorCol: {
            height: 14,
            width: 0.5,
            marginHorizontal: 5,
            backgroundColor: 'rgba(0,0,0,0.2)'
        },
        value: {
            fontSize: 12,
            color: _resources.Styles.common.MHGreen,
            lineHeight: 16,
            flex: 1
        },
        trackStyle: {
            height: 2,
            borderRadius: 1
        },
        thumbStyle: {
            width: THUMB_SIZE,
            height: THUMB_SIZE,
            borderRadius: 12
        }
    });

    var _default = ListItemWithSlider;
    exports.default = _default;
}, 23038, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 13687, 22453, 22906, 23041, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var FontKmedium = 'KMedium';
    exports.FontKmedium = FontKmedium;
    var FontLantingLight = 'MI-LANTING--GBK1-Light';
    exports.FontLantingLight = FontLantingLight;
    var FontDsDigital = 'DS-Digital';
    exports.FontDsDigital = FontDsDigital;
    var FontDefault = _reactNative.Platform.OS === 'ios' ? null : FontKmedium;
    exports.FontDefault = FontDefault;
}, 23041, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _resources = _$$_REQUIRE(_dependencyMap[10]);

    var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width;

    var THIN_HEIGHT = 50;
    var PADDING = 24;

    var ListItemWithSwitch = function (_React$Component) {
        (0, _inherits2.default)(ListItemWithSwitch, _React$Component);

        function ListItemWithSwitch(props, context) {
            var _this;

            (0, _classCallCheck2.default)(this, ListItemWithSwitch);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSwitch).call(this, props, context));

            _this.onAccessibilityAction = function (_ref) {
                var actionName = _ref.nativeEvent.actionName;
                var _this$props = _this.props,
                    disabled = _this$props.disabled,
                    onValueChange = _this$props.onValueChange,
                    onPress = _this$props.onPress,
                    value = _this$props.value;

                if (disabled) {
                    return;
                }

                if (actionName === 'activate' && typeof onValueChange === 'function') {
                    onValueChange(!value);
                }

                if (actionName === 'activate' && typeof onPress === 'function') {
                    onPress();
                }
            };

            (0, _reportDecorator.referenceReport)('ListItemWithSwitch');
            return _this;
        }

        (0, _createClass2.default)(ListItemWithSwitch, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                var extraContainerStyle = {
                    height: THIN_HEIGHT
                };

                if (this.props.subtitle) {
                    extraContainerStyle = {
                        paddingVertical: 8,
                        height: 60
                    };
                }

                var extraStyle = {};

                if (this.props.valueText) {
                    extraStyle.maxWidth = (width - 48) * 0.4;

                    if (this.props.containerStyle.width) {
                        extraStyle.maxWidth = (this.props.containerStyle.width - 48) * 0.4;
                    }
                }

                if (_reactNative.Platform.OS === 'android') {
                    extraStyle.fontFamily = 'KMedium';
                }

                var adaptedFontStyle = {};
                var adaptedContainerStyle = {};

                if (this.props.unlimitedHeightEnable) {
                    adaptedFontStyle = {
                        height: undefined,
                        lineHeight: undefined
                    };
                    adaptedContainerStyle = {
                        height: undefined,
                        paddingVertical: 10
                    };
                }

                var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
                var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
                var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
                if (titleLine < 0) titleLine = 0;
                if (subtitleLine < 0) subtitleLine = 0;
                if (valueLine < 0) valueLine = 0;
                return _react.default.createElement(_reactNative.View, {
                    style: {
                        backgroundColor: '#fff'
                    }
                }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
                    disabled: !this.props.onPress,
                    underlayColor: _resources.Styles.common.underlayColor,
                    onPress: this.props.onPress,
                    viewStyle: [styles.container, this.props.containerStyle, extraContainerStyle, adaptedContainerStyle]
                }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                }) : (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        disabled: this.props.disabled,
                        checked: this.props.value
                    }
                }), {
                    accessibilityActions: this.props.onPress ? [] : [{
                        name: 'activate'
                    }],
                    onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
                }), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: styles.left
                }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        disabled: this.props.disabled
                    }
                }), {
                    accessibilityActions: !this.props.onPress ? [] : [{
                        name: 'activate'
                    }],
                    onAccessibilityAction: !this.props.onPress ? null : this.onAccessibilityAction
                }), _react.default.createElement(_reactNative.View, {
                    style: [styles.up]
                }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: titleLine,
                    allowFontScaling: this.props.allowFontScaling,
                    ellipsizeMode: "tail",
                    style: [_resources.Styles.common.title, extraStyle, this.props.titleStyle, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.title), this.props.valueText ? _react.default.createElement(_reactNative.View, {
                    style: [styles.up]
                }, _react.default.createElement(_reactNative.View, {
                    style: [styles.separatorCol]
                }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: valueLine,
                    ellipsizeMode: "tail",
                    allowFontScaling: this.props.allowFontScaling,
                    style: [_resources.Styles.common.subtitle, this.props.valueTextStyle, {
                        flex: 1
                    }, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.valueText)) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: subtitleLine,
                    ellipsizeMode: "tail",
                    allowFontScaling: this.props.allowFontScaling,
                    style: [_resources.Styles.common.subtitle, this.props.subtitleStyle, adaptedFontStyle]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
                    style: styles.right
                }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
                    style: this.props.switchStyle,
                    value: this.props.value,
                    disabled: this.props.disabled,
                    tintColor: this.props.tintColor,
                    onTintColor: this.props.onTintColor,
                    onValueChange: function onValueChange(value) {
                        return _this2._onValueChange(value);
                    }
                }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityLabel: this.props.accessibilityLabel || this.props.title,
                    accessibilityHint: this.props.accessibilityHint
                }))))), this.renderSeparator());
            }
        }, {
            key: "renderSeparator",
            value: function renderSeparator() {
                if (!this.props.showSeparator) return null;
                return this.props.separator || _react.default.createElement(_Separator.default, {
                    style: {
                        marginLeft: _resources.Styles.common.padding
                    }
                });
            }
        }, {
            key: "_onValueChange",
            value: function _onValueChange(value) {
                if (this.props.onValueChange) {
                    this.props.onValueChange(value);
                }
            }
        }]);
        return ListItemWithSwitch;
    }(_react.default.Component);

    ListItemWithSwitch.propTypes = {
        title: _propTypes.default.string.isRequired,
        subtitle: _propTypes.default.string,
        valueText: _propTypes.default.string,
        value: _propTypes.default.bool,
        disabled: _propTypes.default.bool,
        onPress: _propTypes.default.func,
        onValueChange: _propTypes.default.func.isRequired,
        showSeparator: _propTypes.default.bool,
        separator: _propTypes.default.element,
        containerStyle: _propTypes.default.object,
        titleStyle: _propTypes.default.object,
        subtitleStyle: _propTypes.default.object,
        valueTextStyle: _propTypes.default.object,
        switchStyle: _propTypes.default.object,
        tintColor: _propTypes.default.string,
        onTintColor: _propTypes.default.string,
        allowFontScaling: _propTypes.default.bool,
        unlimitedHeightEnable: _propTypes.default.bool,
        titleNumberOfLines: _propTypes.default.number,
        subtitleNumberOfLines: _propTypes.default.number,
        valueNumberOfLines: _propTypes.default.number,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    ListItemWithSwitch.defaultProps = {
        title: '',
        subtitle: '',
        valueText: '',
        value: false,
        disabled: false,
        showSeparator: true,
        containerStyle: {},
        titleStyle: {},
        subtitleStyle: {},
        valueTextStyle: {},
        switchStyle: {},
        tintColor: undefined,
        onTintColor: undefined,
        unlimitedHeightEnable: false,
        allowFontScaling: true
    };

    var styles = _reactNative.StyleSheet.create({
        container: {
            width: width,
            paddingHorizontal: PADDING,
            flexDirection: 'row',
            alignItems: 'center'
        },
        left: {
            flex: 4
        },
        right: {
            flex: 1,
            alignItems: 'flex-end'
        },
        up: {
            flexDirection: 'row',
            alignItems: 'center',
            flex: 1
        },
        separatorCol: {
            height: 14,
            width: 0.5,
            marginHorizontal: 5,
            backgroundColor: 'rgba(0,0,0,0.2)'
        }
    });

    var _default = ListItemWithSwitch;
    exports.default = _default;
}, 23044, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22453, 23032, 22906, 22450, 22420, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "FadeSlide", {
        enumerable: true,
        get: function get() {
            return _FadeSlide.default;
        }
    });

    var _FadeSlide = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 23047, [14305, 23050]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[10]);

    var FadeSlide = function (_Component) {
        (0, _inherits2.default)(FadeSlide, _Component);

        function FadeSlide(props) {
            var _this;

            (0, _classCallCheck2.default)(this, FadeSlide);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FadeSlide).call(this, props));

            _this.changeStatus = function (heightTo, opacityTo) {
                var _this$state = _this.state,
                    height = _this$state.height,
                    opacity = _this$state.opacity;

                _reactNative.Animated.parallel([_reactNative.Animated.timing(height, {
                    toValue: heightTo,
                    duration: 250
                }), _reactNative.Animated.timing(opacity, {
                    toValue: opacityTo,
                    duration: 250
                })]).start();
            };

            (0, _reportDecorator.referenceReport)('FadeSlide');
            var isShown = props.isShown,
                childrenHeight = props.childrenHeight;
            var blockOpacity = isShown ? 1 : 0;
            var blockHeight = isShown ? childrenHeight : 0;
            _this.state = {
                height: new _reactNative.Animated.Value(blockHeight),
                opacity: new _reactNative.Animated.Value(blockOpacity)
            };
            return _this;
        }

        (0, _createClass2.default)(FadeSlide, [{
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(nextProps) {
                var isShown = nextProps.isShown,
                    childrenHeight = nextProps.childrenHeight;

                if (isShown) {
                    this.changeStatus(childrenHeight, 1);
                } else {
                    this.changeStatus(0, 0);
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this$state2 = this.state,
                    opacity = _this$state2.opacity,
                    height = _this$state2.height;
                return _react.default.createElement(_reactNative.Animated.View, {
                    style: {
                        opacity: opacity,
                        height: height
                    }
                }, this.props.children);
            }
        }]);
        return FadeSlide;
    }(_react.Component);

    FadeSlide.defaultProps = {
        isShown: false,
        childrenHeight: 0
    };
    FadeSlide.propTypes = {
        isShown: _propTypes.default.bool,
        childrenHeight: _propTypes.default.number
    };
    var _default = FadeSlide;
    exports.default = _default;
}, 23050, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "BlankPage", {
        enumerable: true,
        get: function get() {
            return _BlankPage.default;
        }
    });

    var _BlankPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 23053, [14305, 23056]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

    var _resources = _$$_REQUIRE(_dependencyMap[11]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

    var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

    var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    var ratio = 0.2;
    var imageMarginTop = height * ratio;
    var imageContainerSize = 138;
    var imageWidth = 84;
    var imageHeight = 114;

    var imageSource = _$$_REQUIRE(_dependencyMap[15]);

    var padding = 40;
    var safeBottom = 20;
    var TYPE = {
        BUTTON: 'button',
        UNDERLINE: 'underline'
    };
    Object.freeze(TYPE);

    var BlankPage = function (_React$Component) {
        (0, _inherits2.default)(BlankPage, _React$Component);

        function BlankPage(props) {
            var _this;

            (0, _classCallCheck2.default)(this, BlankPage);
            _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankPage).call(this, props));
            (0, _reportDecorator.referenceReport)('BlankPage');
            return _this;
        }

        (0, _createClass2.default)(BlankPage, [{
            key: "renderCenter",
            value: function renderCenter() {
                var theme = this.context.theme;
                return _react.default.createElement(_reactNative.View, {
                    style: styles.center
                }, _react.default.createElement(_reactNative.View, {
                    style: styles.imageContainer
                }, _react.default.createElement(_reactNative.Image, {
                    source: this.props.icon,
                    style: [styles.image, this.props.iconStyle],
                    resizeMode: "contain"
                })), _react.default.createElement(_reactNative.Text, {
                    numberOfLines: 1,
                    style: [styles.message, {
                        color: theme.colorGrayLighter
                    }]
                }, this.props.message), this.props.desc ? _react.default.createElement(_reactNative.Text, {
                    numberOfLines: 3,
                    style: [styles.desc, {
                        marginTop: 10,
                        color: theme.colorGrayLighter
                    }]
                }, this.props.desc || '') : null);
            }
        }, {
            key: "renderBottom",
            value: function renderBottom() {
                var _this2 = this;

                var theme = this.context.theme;

                if (this.props.type === TYPE.UNDERLINE) {
                    var _this$props$underline = this.props.underline,
                        _text = _this$props$underline.text,
                        _callback = _this$props$underline.callback,
                        _textStyle = _this$props$underline.textStyle;
                    return _react.default.createElement(_reactNative.View, {
                        style: [styles.bottom, {
                            marginBottom: 40
                        }]
                    }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                        onPress: function onPress() {
                            return _this2.onPress(_callback);
                        },
                        numberOfLines: 1,
                        style: [styles.desc, {
                            textDecorationLine: 'underline',
                            color: theme.colorPrimary,
                            textAlign: 'center'
                        }, _textStyle]
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
                        accessibilityLabel: _text,
                        accessibilityHint: this.props.accessibilityHint
                    })), _text));
                }

                var fontFamily = {};
                if (_reactNative.Platform.OS === 'android') fontFamily = {
                    fontFamily: 'Kmedium'
                };
                var _this$props$button = this.props.button,
                    text = _this$props$button.text,
                    callback = _this$props$button.callback,
                    buttonStyle = _this$props$button.buttonStyle,
                    textStyle = _this$props$button.textStyle;
                return _react.default.createElement(_reactNative.View, {
                    style: styles.bottom
                }, this.props.extraInfo ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                    numberOfLines: 2,
                    style: [styles.desc, {
                        color: theme.colorGrayLighter
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
                    accessibilityLabel: this.props.extraInfo,
                    accessibilityHint: this.props.accessibilityHint
                })), this.props.extraInfo) : null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
                    style: [styles.buttonContainer, {
                        backgroundColor: theme.colorPrimary
                    }, buttonStyle],
                    onPress: function onPress() {
                        return _this2.onPress(callback);
                    },
                    activeOpacity: 0.8
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityLabel: text,
                    accessibilityHint: this.props.accessibilityHint
                })), _react.default.createElement(_reactNative.Text, {
                    style: [styles.buttonText, fontFamily, textStyle]
                }, text)));
            }
        }, {
            key: "onPress",
            value: function onPress(callback) {
                if (typeof callback === 'function') {
                    callback();
                } else { }
            }
        }, {
            key: "render",
            value: function render() {
                var theme = this.context.theme;
                return _react.default.createElement(_reactNative.View, {
                    style: [styles.container, theme.colorBackground]
                }, this.renderCenter(), _react.default.createElement(_reactNative.View, {
                    style: {
                        flex: 1
                    }
                }), this.renderBottom());
            }
        }]);
        return BlankPage;
    }(_react.default.Component);

    BlankPage.contextType = _configProvider.ConfigContext;
    BlankPage.propTypes = {
        type: _propTypes.default.oneOf([TYPE.BUTTON, TYPE.UNDERLINE]),
        icon: _propTypes.default.any,
        underline: _propTypes.default.object,
        button: _propTypes.default.object,
        iconStyle: _reactNative.ViewPropTypes.style,
        message: _propTypes.default.string.isRequired,
        desc: _propTypes.default.string,
        extraInfo: _propTypes.default.string,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    BlankPage.defaultProps = {
        type: TYPE.BUTTON,
        underline: {},
        button: {},
        icon: imageSource
    };
    BlankPage.TYPE = TYPE;

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            width: width
        },
        center: {
            marginTop: imageMarginTop,
            width: width,
            alignItems: 'center'
        },
        imageContainer: {
            width: imageContainerSize,
            height: imageContainerSize,
            alignItems: 'center'
        },
        image: {
            width: imageWidth,
            height: imageHeight,
            marginTop: 5
        },
        message: {
            width: width,
            fontSize: 15,
            color: '#999',
            textAlign: 'center'
        },
        desc: {
            width: width,
            paddingHorizontal: padding,
            fontSize: 13,
            color: '#999',
            lineHeight: 18
        },
        bottom: {
            width: width,
            marginBottom: safeBottom
        },
        buttonContainer: {
            width: width - _resources.Styles.common.padding * 2,
            height: 42,
            borderRadius: 5,
            marginTop: 21,
            marginHorizontal: _resources.Styles.common.padding
        },
        buttonText: {
            flex: 1,
            fontSize: 13,
            fontWeight: 'bold',
            textAlign: 'center',
            color: '#ffffff',
            lineHeight: 18
        }
    });

    var _default = BlankPage;
    exports.default = _default;
}, 23056, [14305, 14344, 14320, 14323, 14371, 14377, 14386, 10318, 10297, 10033, 11251, 22453, 22420, 22423, 22426, 23059]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
        "width": 84,
        "height": 114,
        "scales": [2, 3],
        "hash": "9fa4438dffed7ccf84357debec9c8e5d",
        "name": "blank_page_icon",
        "type": "png"
    });
}, 23059, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "TouchableView", {
        enumerable: true,
        get: function get() {
            return _TouchableView.default;
        }
    });

    var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 23062, [14305, 23032]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _sizes = _$$_REQUIRE(_dependencyMap[11]);

    var _fonts = _$$_REQUIRE(_dependencyMap[12]);

    var _colors = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var BigNumber = function (_PureComponent) {
        (0, _inherits2.default)(BigNumber, _PureComponent);

        function BigNumber() {
            (0, _classCallCheck2.default)(this, BigNumber);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BigNumber).apply(this, arguments));
        }

        (0, _createClass2.default)(BigNumber, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    title = _this$props.title,
                    number = _this$props.number,
                    themeColor = _this$props.themeColor;

                if (title === undefined || number === undefined) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: Styles.container
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
                    accessibilityLabel: this.props.accessibilityLabel
                })), _react.default.createElement(_reactNative.Text, {
                    style: Styles.title
                }, title), _react.default.createElement(_reactNative.Text, {
                    style: [Styles.number, themeColor ? {
                        color: themeColor
                    } : null]
                }, number));
            }
        }]);
        return BigNumber;
    }(_react.PureComponent);

    exports.default = BigNumber;
    BigNumber.propTypes = {
        title: _propTypes.default.string,
        number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
        themeColor: _propTypes.default.any,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            alignItems: 'center'
        },
        title: {
            fontSize: (0, _sizes.adjustSize)(42),
            fontFamily: _fonts.FontDefault,
            color: 'rgba(0, 0, 0, 0.9)'
        },
        number: {
            fontSize: (0, _sizes.adjustSize)(196),
            fontFamily: _fonts.FontKmedium,
            color: _colors.ColorGreen
        }
    });
}, 23065, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23068, 23071, 23074, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.adjustSize = adjustSize;
    exports.window = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        windowWidth = _Dimensions$get.width,
        windowHeight = _Dimensions$get.height;

    var window = {
        get width() {
            return windowWidth;
        },

        get height() {
            if (_reactNative.Platform.OS === 'android') {
                return windowHeight / windowWidth > 1.8 ? windowHeight + _reactNative.NativeModules.StatusBarManager.HEIGHT : windowHeight;
            }

            return windowHeight;
        }

    };
    exports.window = window;

    function adjustSize(n) {
        return n / 1080 * window.width;
    }
}, 23068, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var FontKmedium = 'KMedium';
    exports.FontKmedium = FontKmedium;
    var FontLantingLight = 'MI-LANTING--GBK1-Light';
    exports.FontLantingLight = FontLantingLight;
    var FontDsDigital = 'DS-Digital';
    exports.FontDsDigital = FontDsDigital;
    var FontDefault = _reactNative.Platform.OS === 'ios' ? undefined : FontKmedium;
    exports.FontDefault = FontDefault;
}, 23071, [10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.fixHex = fixHex;
    exports.transformHexToDigtal = transformHexToDigtal;
    exports.transformDigtalToHex = transformDigtalToHex;
    exports.colorGetterforRange = colorGetterforRange;
    exports.ColorRed = exports.ColorOrange = exports.ColorGreen = undefined;

    var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var ColorGreen = '#00B7A2';
    exports.ColorGreen = ColorGreen;
    var ColorOrange = '#FFA943';
    exports.ColorOrange = ColorOrange;
    var ColorRed = '#FC675F';
    exports.ColorRed = ColorRed;

    function fixHex(hex) {
        hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
        var length = hex.length;

        if (length < 6) {
            hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
        }

        hex = "#" + hex.slice(0, 6).join('');
        return hex.toUpperCase();
    }

    function transformHexToDigtal(hex) {
        hex = fixHex(hex).slice(1);
        return parseInt(hex, 16);
    }

    function transformDigtalToHex(digtal) {
        return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
    }

    function splitRgb(color) {
        color = fixHex(color);

        var _color$split = color.split(''),
            _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
            _1 = _color$split2[0],
            r1 = _color$split2[1],
            r2 = _color$split2[2],
            g1 = _color$split2[3],
            g2 = _color$split2[4],
            b1 = _color$split2[5],
            b2 = _color$split2[6];

        var r = parseInt(r1 + r2, 16);
        var g = parseInt(g1 + g2, 16);
        var b = parseInt(b1 + b2, 16);
        return {
            r: r,
            g: g,
            b: b
        };
    }

    function colorGetterforRange(range) {
        var colors = formatColors(range);

        function formatColors(range) {
            var colors = [];

            for (var k in range) {
                if (range.hasOwnProperty(k)) {
                    var p = parseFloat(k);
                    var c = fixHex(range[k]);

                    if (typeof p === 'number' && p >= 0 && p <= 1) {
                        colors.push([p, c]);
                    }
                }
            }

            colors.sort(function (a, b) {
                return a[0] > b[0] ? 1 : -1;
            });

            if (colors.length < 1) {
                colors = [[0, '#000000'], [1, '#ffffff']];
            }

            if (colors[0][0] > 0) {
                colors[0] = [0, colors[0][1]];
            }

            if (colors[colors.length - 1][0] < 1) {
                colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
            }

            return colors;
        }

        function getColorFromPercent(p) {
            p = Math.max(0, Math.min(1, p / 100));
            var s1 = null;
            var s2 = null;

            for (var i = 1, l = colors.length; i < l; i++) {
                var c = colors[i];
                var cp = colors[i - 1];

                if (cp[0] <= p && c[0] >= p) {
                    s1 = cp;
                    s2 = c;
                    break;
                }
            }

            if (s1[0] >= s2[0]) {
                return s1[1];
            }

            var p0 = (p - s1[0]) / (s2[0] - s1[0]);

            var _splitRgb = splitRgb(s1[1]),
                r1 = _splitRgb.r,
                g1 = _splitRgb.g,
                b1 = _splitRgb.b;

            var _splitRgb2 = splitRgb(s2[1]),
                r2 = _splitRgb2.r,
                g2 = _splitRgb2.g,
                b2 = _splitRgb2.b;

            var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
            var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
            var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
            return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
        }

        function getPercentFromColor(color) {
            var _splitRgb3 = splitRgb(color),
                r = _splitRgb3.r,
                g = _splitRgb3.g,
                b = _splitRgb3.b;

            for (var i = 0, l = 1000; i < l; i++) {
                var c = getColorFromPercent(i / 10);

                var _splitRgb4 = splitRgb(c),
                    rc = _splitRgb4.r,
                    gc = _splitRgb4.g,
                    bc = _splitRgb4.b;

                if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
                    return i / 10;
                }
            }

            return 50;
        }

        return {
            getColorFromPercent: getColorFromPercent,
            getPercentFromColor: getPercentFromColor
        };
    }
}, 23074, [14305, 14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _Icons = _$$_REQUIRE(_dependencyMap[9]);

    var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _switch = _$$_REQUIRE(_dependencyMap[11]);

    var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[12]);

    var _sizes = _$$_REQUIRE(_dependencyMap[13]);

    var _fonts = _$$_REQUIRE(_dependencyMap[14]);

    var CardButton = function (_PureComponent) {
        (0, _inherits2.default)(CardButton, _PureComponent);

        function CardButton() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, CardButton);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CardButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

            _this.onPress = function () {
                var _this$props = _this.props,
                    disabled = _this$props.disabled,
                    onPress = _this$props.onPress;

                if (typeof onPress === 'function' && !disabled) {
                    onPress();
                }
            };

            return _this;
        }

        (0, _createClass2.default)(CardButton, [{
            key: "render",
            value: function render() {
                var _this$props2 = this.props,
                    containerStyle = _this$props2.containerStyle,
                    themeColor = _this$props2.themeColor,
                    themeBackgroundColor = _this$props2.themeBackgroundColor,
                    underlayColor = _this$props2.underlayColor,
                    hasShadow = _this$props2.hasShadow,
                    iconContainerStyle = _this$props2.iconContainerStyle,
                    iconStyle = _this$props2.iconStyle,
                    icon = _this$props2.icon,
                    iconText = _this$props2.iconText,
                    title = _this$props2.title,
                    subtitle = _this$props2.subtitle,
                    onSwitch = _this$props2.onSwitch,
                    switchOn = _this$props2.switchOn,
                    disabled = _this$props2.disabled,
                    onPress = _this$props2.onPress,
                    rightText = _this$props2.rightText,
                    rightArrow = _this$props2.rightArrow;
                var opacity = disabled ? 0.3 : 1;

                if (!icon && !iconText && !title && !subtitle && !onSwitch) {
                    return null;
                }

                var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
                return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.TouchableHighlight, {
                    style: [Styles.container, containerStyle, themeBackgroundColor ? {
                        backgroundColor: themeBackgroundColor
                    } : null],
                    underlayColor: disabled || !onPress ? themeBackgroundColor || '#fff' : underlayColor,
                    onPress: this.onPress
                }, _react.default.createElement(_react.default.Fragment, null, icon || iconText ? _react.default.createElement(_reactNative.View, {
                    style: [Styles.iconContainer, iconContainerStyle, {
                        backgroundColor: themeColor || _Colors.default.green,
                        opacity: opacity
                    }]
                }, icon ? _react.default.createElement(_reactNative.Image, {
                    style: [Styles.icon, iconStyle],
                    source: icon
                }) : _react.default.createElement(_reactNative.Text, {
                    style: Styles.iconText
                }, iconText)) : null, _react.default.createElement(_reactNative.View, {
                    style: [Styles.titleContainer, {
                        opacity: opacity
                    }]
                }, title ? _react.default.createElement(_reactNative.Text, {
                    style: Styles.title
                }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
                    style: Styles.subtitle
                }, subtitle) : null), onSwitch ? _react.default.createElement(_reactNative.View, {
                    style: Styles.switchContainer
                }, _react.default.createElement(_switch.Switch, {
                    value: switchOn,
                    onValueChange: onSwitch,
                    onTintColor: themeColor || _Colors.default.green,
                    disabled: disabled
                })) : rightText || rightArrow ? _react.default.createElement(_react.default.Fragment, null, rightText ? _react.default.createElement(_reactNative.Text, {
                    style: Styles.rightText
                }, rightText) : null, rightArrow ? _react.default.createElement(_reactNative.Image, {
                    style: Styles.rightArrow,
                    source: _Icons.Icons.rightArrow
                }) : null) : null)));
            }
        }]);
        return CardButton;
    }(_react.PureComponent);

    exports.default = CardButton;
    CardButton.defaultProps = {
        underlayColor: 'rgba(0, 0, 0, 0.05)',
        hasShadow: true
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            height: (0, _sizes.adjustSize)(240),
            paddingHorizontal: (0, _sizes.adjustSize)(60),
            flexDirection: 'row',
            alignItems: 'center',
            backgroundColor: '#fff'
        },
        iconContainer: {
            marginRight: (0, _sizes.adjustSize)(39),
            width: (0, _sizes.adjustSize)(120),
            height: (0, _sizes.adjustSize)(120),
            borderRadius: (0, _sizes.adjustSize)(60),
            justifyContent: 'center',
            alignItems: 'center'
        },
        icon: {
            width: (0, _sizes.adjustSize)(72),
            height: (0, _sizes.adjustSize)(72),
            resizeMode: 'contain'
        },
        iconText: {
            fontFamily: _fonts.FontKmedium,
            fontSize: (0, _sizes.adjustSize)(60),
            color: '#fff'
        },
        titleContainer: {
            flex: 1
        },
        title: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(45),
            color: '#000'
        },
        subtitle: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(36),
            lineHeight: (0, _sizes.adjustSize)(42),
            color: '#999'
        },
        switchContainer: {
            marginLeft: (0, _sizes.adjustSize)(30)
        },
        rightText: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(36),
            color: '#999',
            marginLeft: (0, _sizes.adjustSize)(30)
        }
    });
}, 23077, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 23080, 23083, 22447, 23086, 23068, 23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Icons = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var Icons = function Icons() {
        (0, _classCallCheck2.default)(this, Icons);
    };

    exports.Icons = Icons;
    Icons.rightArrow = _$$_REQUIRE(_dependencyMap[2]);
}, 23080, [14305, 14320, 22459]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var Colors = function Colors() {
        (0, _classCallCheck2.default)(this, Colors);
    };

    Colors.green = '#00B7A2';
    Colors.range = '#FFA943';
    Colors.red = '#FC675F';
    var _default = Colors;
    exports.default = _default;
}, 23083, [14305, 14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "ContainerWithShadowAndSeparator", {
        enumerable: true,
        get: function get() {
            return _ContainerWithShadowAndSeparator.default;
        }
    });

    var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 23086, [14305, 23089]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[9]);

    var _sizes = _$$_REQUIRE(_dependencyMap[10]);

    var _GapWrap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var ContainerWithShadowAndSeparator = function (_Component) {
        (0, _inherits2.default)(ContainerWithShadowAndSeparator, _Component);

        function ContainerWithShadowAndSeparator() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, ContainerWithShadowAndSeparator);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ContainerWithShadowAndSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                width: (0, _sizes.adjustSize)(1020),
                height: (0, _sizes.adjustSize)(240)
            };

            _this.onLayout = function (e) {
                var _e$nativeEvent$layout = e.nativeEvent.layout,
                    width = _e$nativeEvent$layout.width,
                    height = _e$nativeEvent$layout.height;

                _this.setState({
                    width: width,
                    height: height
                });
            };

            return _this;
        }

        (0, _createClass2.default)(ContainerWithShadowAndSeparator, [{
            key: "getContents",
            value: function getContents() {
                var _this$props = this.props,
                    children = _this$props.children,
                    separatorStyle = _this$props.separatorStyle,
                    horizontal = _this$props.horizontal;

                if (!children) {
                    return null;
                }

                var type = horizontal ? 'column' : 'row';
                return (Array.isArray(children) ? children : [children]).filter(function (child) {
                    return !!child;
                }).map(function (child, index) {
                    return _react.default.createElement(_GapWrap.default, {
                        key: index,
                        hasSeparator: index > 0,
                        horizontal: horizontal,
                        separatorStyle: separatorStyle
                    }, child);
                });
            }
        }, {
            key: "render",
            value: function render() {
                var contents = this.getContents();
                var _this$props2 = this.props,
                    containerStyle = _this$props2.containerStyle,
                    horizontal = _this$props2.horizontal;
                var _this$state = this.state,
                    width = _this$state.width,
                    height = _this$state.height;

                if (!contents) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, {
                    style: [Styles.box, {
                        height: height <= 1 ? 0 : height + (0, _sizes.adjustSize)(9),
                        overflow: 'visible'
                    }]
                }, _react.default.createElement(_reactNativeShadow.BoxShadow, {
                    setting: {
                        width: width,
                        height: height,
                        color: '#000',
                        border: (0, _sizes.adjustSize)(9),
                        radius: (0, _sizes.adjustSize)(30),
                        opacity: 0.015,
                        x: 0,
                        y: (0, _sizes.adjustSize)(9),
                        style: {
                            position: 'absolute',
                            top: 0,
                            left: 0
                        }
                    }
                }, _react.default.createElement(_reactNative.View, {
                    style: {}
                })), _react.default.createElement(_reactNative.View, {
                    style: [Styles.container, horizontal ? Styles.containerHorizontal : Styles.containerVertical, containerStyle],
                    onLayout: this.onLayout
                }, contents));
            }
        }]);
        return ContainerWithShadowAndSeparator;
    }(_react.Component);

    exports.default = ContainerWithShadowAndSeparator;
    ContainerWithShadowAndSeparator.defaultProps = {
        containerStyle: {},
        separatorStyle: {},
        horizontal: false
    };

    var Styles = _reactNative.StyleSheet.create({
        box: {
            position: 'relative'
        },
        container: {
            borderRadius: (0, _sizes.adjustSize)(30),
            overflow: 'hidden',
            backgroundColor: '#fff'
        },
        containerHorizontal: {
            flexDirection: 'row'
        }
    });
}, 23089, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 13699, 23068, 23092]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _separator = _$$_REQUIRE(_dependencyMap[9]);

    var _sizes = _$$_REQUIRE(_dependencyMap[10]);

    var GapWrap = function (_Component) {
        (0, _inherits2.default)(GapWrap, _Component);

        function GapWrap() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, GapWrap);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                shown: true
            };

            _this.onLayout = function (e) {
                _this.setState({
                    shown: e.nativeEvent.layout.height > (0, _sizes.adjustSize)(3.1)
                });
            };

            return _this;
        }

        (0, _createClass2.default)(GapWrap, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    hasSeparator = _this$props.hasSeparator,
                    separatorStyle = _this$props.separatorStyle,
                    children = _this$props.children;
                var shown = this.state.shown;

                if (!children) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, {
                    onLayout: this.onLayout
                }, hasSeparator && shown ? _react.default.createElement(_separator.Separator, {
                    style: [{
                        height: Math.min((0, _sizes.adjustSize)(3), 1),
                        opacity: 0.35,
                        marginHorizontal: (0, _sizes.adjustSize)(60)
                    }, separatorStyle]
                }) : null, children);
            }
        }]);
        return GapWrap;
    }(_react.Component);

    exports.default = GapWrap;
}, 23092, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 22903, 23068]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _styles = _$$_REQUIRE(_dependencyMap[9]);

    var _colors = _$$_REQUIRE(_dependencyMap[10]);

    var CircleButton = function (_Component) {
        (0, _inherits2.default)(CircleButton, _Component);

        function CircleButton() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, CircleButton);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CircleButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                isPressing: false
            };

            _this.onPress = function () {
                var _this$props = _this.props,
                    disabled = _this$props.disabled,
                    onPress = _this$props.onPress;

                if (disabled) {
                    return;
                }

                onPress();
            };

            _this.onPressIn = function () {
                var showHighlight = _this.props.showHighlight;

                if (showHighlight) {
                    _this.setState({
                        isPressing: true
                    });
                }
            };

            _this.onPressOut = function () {
                _this.setState({
                    isPressing: false
                });
            };

            return _this;
        }

        (0, _createClass2.default)(CircleButton, [{
            key: "render",
            value: function render() {
                var _this$props2 = this.props,
                    sizeLevel = _this$props2.sizeLevel,
                    selected = _this$props2.selected,
                    title = _this$props2.title,
                    icon = _this$props2.icon,
                    iconSelected = _this$props2.iconSelected,
                    iconText = _this$props2.iconText,
                    themeColor = _this$props2.themeColor,
                    disabled = _this$props2.disabled,
                    horizontal = _this$props2.horizontal,
                    offColor = _this$props2.offColor;
                var isPressing = this.state.isPressing;
                var containerSizeStyle = _styles.Styles[['container0', 'container1', 'container2', 'container3'][sizeLevel || 0]] || _styles.Styles.container0;
                var iconContainerSizeStyle = _styles.Styles[['iconContainer0', 'iconContainer1', 'iconContainer2', 'iconContainer3'][sizeLevel || 0]] || _styles.Styles.iconContainer0;
                selected = selected || isPressing;
                return _react.default.createElement(_reactNative.View, {
                    style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
                        opacity: 0.3
                    } : null])
                }, _react.default.createElement(_reactNative.TouchableOpacity, {
                    disabled: disabled,
                    style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
                        backgroundColor: themeColor || _colors.ColorGreen,
                        borderColor: themeColor || _colors.ColorGreen
                    } : offColor ? {
                        backgroundColor: offColor,
                        borderColor: offColor
                    } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null]),
                    activeOpacity: 1,
                    onPress: this.onPress,
                    onPressIn: this.onPressIn,
                    onPressOut: this.onPressOut
                }, icon ? _react.default.createElement(_reactNative.Image, {
                    style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
                    source: selected && !disabled ? iconSelected || iconSelected : icon
                }) : _react.default.createElement(_reactNative.Text, {
                    style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
                }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
                    style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
                        color: themeColor || _colors.ColorGreen
                    } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
                    numberOfLines: horizontal ? 2 : 1
                }, title) : null);
            }
        }]);
        return CircleButton;
    }(_react.Component);

    exports.default = CircleButton;
    CircleButton.defaultProps = {
        sizeLevel: 0,
        themeColor: '',
        offColor: '',
        disabled: false,
        showHighlight: false,
        selected: false,
        horizontal: false,
        onPress: function onPress() { },
        title: '',
        icon: null,
        iconSelected: null,
        iconText: ''
    };
}, 23095, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 23098, 23074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Styles = undefined;

    var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

    var _sizes = _$$_REQUIRE(_dependencyMap[1]);

    var _fonts = _$$_REQUIRE(_dependencyMap[2]);

    var Styles = _reactNative.StyleSheet.create({
        container: {
            alignItems: 'center'
        },
        container0: {
            width: (0, _sizes.adjustSize)(120)
        },
        container1: {
            width: (0, _sizes.adjustSize)(168)
        },
        container2: {
            width: (0, _sizes.adjustSize)(150)
        },
        container3: {
            width: (0, _sizes.adjustSize)(138)
        },
        containerHorizontal: {
            width: 'auto',
            flex: 1,
            flexDirection: 'row'
        },
        iconContainer: {
            justifyContent: 'center',
            alignItems: 'center',
            borderWidth: 1,
            borderColor: 'rgba(176, 182, 184, 0.4)'
        },
        iconContainer0: {
            width: (0, _sizes.adjustSize)(120),
            height: (0, _sizes.adjustSize)(120),
            borderRadius: (0, _sizes.adjustSize)(120) / 2
        },
        iconContainer1: {
            width: (0, _sizes.adjustSize)(168),
            height: (0, _sizes.adjustSize)(168),
            borderRadius: (0, _sizes.adjustSize)(168) / 2
        },
        iconContainer2: {
            width: (0, _sizes.adjustSize)(150),
            height: (0, _sizes.adjustSize)(150),
            borderRadius: (0, _sizes.adjustSize)(150) / 2
        },
        iconContainer3: {
            width: (0, _sizes.adjustSize)(138),
            height: (0, _sizes.adjustSize)(138),
            borderRadius: (0, _sizes.adjustSize)(138) / 2
        },
        iconContainerDisabled: {
            backgroundColor: 'transparent',
            borderColor: 'rgba(197, 201, 203, 1)'
        },
        iconContainerDisabledSelected: {
            backgroundColor: 'rgba(197, 201, 203, 0.3)',
            borderColor: 'rgba(197, 201, 203, 1)'
        },
        icon: {
            resizeMode: 'contain',
            width: (0, _sizes.adjustSize)(72),
            height: (0, _sizes.adjustSize)(72)
        },
        iconText: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(36),
            color: '#000'
        },
        iconTextSelected: {
            color: '#FFF'
        },
        title: {
            marginTop: (0, _sizes.adjustSize)(27),
            textAlign: 'center',
            fontSize: (0, _sizes.adjustSize)(42),
            fontFamily: _fonts.FontDefault,
            color: '#7F7F7F'
        },
        title3: {
            display: 'none'
        },
        titleDisabled: {
            color: '#7F7F7F'
        },
        titleHorizontal: {
            marginTop: 0,
            flex: 1,
            textAlign: 'left',
            marginLeft: (0, _sizes.adjustSize)(39)
        }
    });

    exports.Styles = Styles;
}, 23098, [10033, 23068, 23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var GapWrap = function (_PureComponent) {
        (0, _inherits2.default)(GapWrap, _PureComponent);

        function GapWrap() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, GapWrap);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                shown: true
            };

            _this.onLayout = function (e) {
                _this.setState({
                    shown: e.nativeEvent.layout.height > 0
                });
            };

            return _this;
        }

        (0, _createClass2.default)(GapWrap, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    gap = _this$props.gap,
                    horizontal = _this$props.horizontal,
                    children = _this$props.children;
                var shown = this.state.shown;

                if (!children) {
                    return null;
                }

                var gapSize = shown ? gap : 0;
                return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
                    style: horizontal ? {
                        flex: 1
                    } : null,
                    onLayout: this.onLayout
                }, children), _react.default.createElement(_reactNative.View, {
                    style: [StylesGap.gap, (0, _defineProperty2.default)({}, horizontal ? 'width' : 'height', gapSize)]
                }));
            }
        }]);
        return GapWrap;
    }(_react.PureComponent);

    var ContainerWithGap = function (_PureComponent2) {
        (0, _inherits2.default)(ContainerWithGap, _PureComponent2);

        function ContainerWithGap() {
            (0, _classCallCheck2.default)(this, ContainerWithGap);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ContainerWithGap).apply(this, arguments));
        }

        (0, _createClass2.default)(ContainerWithGap, [{
            key: "getContents",
            value: function getContents() {
                var _this$props2 = this.props,
                    children = _this$props2.children,
                    horizontal = _this$props2.horizontal,
                    gap = _this$props2.gap;

                if (!children) {
                    return null;
                }

                var length = children.length;
                var lengtEdge = length - 1;
                return children.map(function (child, index) {
                    return _react.default.createElement(GapWrap, {
                        key: index,
                        gap: index < lengtEdge ? gap : 0,
                        horizontal: horizontal
                    }, child);
                });
            }
        }, {
            key: "render",
            value: function render() {
                var contents = this.getContents();
                var _this$props3 = this.props,
                    containerStyle = _this$props3.containerStyle,
                    horizontal = _this$props3.horizontal,
                    outerGap = _this$props3.outerGap;

                if (!contents) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, {
                    style: [Styles.container, (0, _defineProperty2.default)({}, horizontal ? 'marginVertical' : 'marginHorizontal', outerGap), horizontal ? {
                        flexDirection: 'row'
                    } : null, containerStyle]
                }, contents);
            }
        }]);
        return ContainerWithGap;
    }(_react.PureComponent);

    exports.default = ContainerWithGap;
    ContainerWithGap.propTypes = {
        containerStyle: _propTypes.default.any,
        horizontal: _propTypes.default.bool,
        gap: _propTypes.default.number,
        outerGap: _propTypes.default.number
    };
    ContainerWithGap.defaultProps = {
        containerStyle: {},
        horizontal: false,
        gap: 7,
        outerGap: 0
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {}
    });

    var StylesGap = _reactNative.StyleSheet.create({
        gap: {
            alignSelf: 'stretch'
        }
    });
}, 23101, [14308, 14305, 14317, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _colors = _$$_REQUIRE(_dependencyMap[11]);

    var _sizes = _$$_REQUIRE(_dependencyMap[12]);

    var _fonts = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var Surface = _reactNative.ART.Surface,
        Group = _reactNative.ART.Group,
        Shape = _reactNative.ART.Shape,
        Path = _reactNative.ART.Path;
    var PI = Math.PI;

    var DeviceWithInfo = function (_PureComponent) {
        (0, _inherits2.default)(DeviceWithInfo, _PureComponent);

        function DeviceWithInfo() {
            (0, _classCallCheck2.default)(this, DeviceWithInfo);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceWithInfo).apply(this, arguments));
        }

        (0, _createClass2.default)(DeviceWithInfo, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    icon = _this$props.icon,
                    title = _this$props.title,
                    subtitle = _this$props.subtitle,
                    holdPlace = _this$props.holdPlace,
                    progress = _this$props.progress,
                    themeColor = _this$props.themeColor;

                if (!progress) {
                    progress = 0;
                }

                progress = Math.min(1, Math.max(0, progress));
                var r = (0, _sizes.adjustSize)(324);
                var rDot = (0, _sizes.adjustSize)(7.5);
                var startX = r + Math.cos(-0.5 * PI) * r;
                var startY = r + Math.sin(-0.5 * PI) * r;
                var halfX = r + Math.cos(0.5 * PI) * r;
                var halfY = r + Math.sin(0.5 * PI) * r;
                var endX = r + Math.cos(progress * 2 * PI - 0.5 * PI) * r;
                var endY = r + Math.sin(progress * 2 * PI - 0.5 * PI) * r;
                var PathCircleBase = new Path().moveTo(startX, startY).arcTo(halfX, halfY, r, r, false, false).arcTo(startX, startY, r, r, false, false);
                var PathCircle = new Path().moveTo(startX, startY);

                if (progress >= 0.5) {
                    PathCircle.arcTo(halfX, halfY, r, r, false, false);
                }

                PathCircle.arcTo(endX, endY, r, r, false, false);
                var PathDot = new Path().moveTo(endX, endY - rDot).arcTo(endX, endY + rDot, rDot, rDot, false, false).arcTo(endX, endY - rDot, rDot, rDot, false, false);
                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: Styles.container
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
                    accessibilityLabel: this.props.accessibilityLabel
                })), _react.default.createElement(_reactNative.View, {
                    style: Styles.deviceContainer
                }, _react.default.createElement(Surface, {
                    width: r * 2,
                    height: r * 2,
                    style: {
                        position: 'absolute',
                        left: 0,
                        top: (0, _sizes.adjustSize)(7.5)
                    }
                }, _react.default.createElement(Shape, {
                    d: PathCircleBase,
                    strokeWidth: 1,
                    stroke: themeColor ? ((0, _colors.fixHex)(themeColor) + "33").slice(0, 9) : '#33ABF233'
                }), progress > 0 ? _react.default.createElement(Group, null, _react.default.createElement(Shape, {
                    d: PathCircle,
                    strokeWidth: 1,
                    stroke: themeColor || '#33ABF2'
                }), _react.default.createElement(Shape, {
                    d: PathDot,
                    strokeWidth: 1,
                    fill: themeColor || '#33ABF2'
                })) : null), _react.default.createElement(_reactNative.View, {
                    style: [Styles.deviceInner, themeColor ? {
                        backgroundColor: themeColor
                    } : null]
                }, _react.default.createElement(_reactNative.Image, {
                    style: Styles.deviceIcon,
                    source: icon
                }))), _react.default.createElement(_reactNative.View, {
                    style: Styles.infoContainer
                }, _react.default.createElement(_reactNative.Text, {
                    style: Styles.infoTitle
                }, title || (holdPlace ? ' ' : '')), _react.default.createElement(_reactNative.Text, {
                    style: Styles.infoSubtitle
                }, subtitle || (holdPlace ? ' ' : ''))));
            }
        }]);
        return DeviceWithInfo;
    }(_react.PureComponent);

    exports.default = DeviceWithInfo;
    DeviceWithInfo.propTypes = {
        icon: _propTypes.default.any,
        title: _propTypes.default.string,
        subtitle: _propTypes.default.string,
        holdPlace: _propTypes.default.bool,
        progress: _propTypes.default.number,
        themeColor: _propTypes.default.any,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            alignItems: 'center',
            marginTop: (0, _sizes.adjustSize)(300)
        },
        deviceContainer: {
            width: (0, _sizes.adjustSize)(663),
            height: (0, _sizes.adjustSize)(663),
            justifyContent: 'center',
            alignItems: 'center'
        },
        deviceInner: {
            width: (0, _sizes.adjustSize)(558),
            height: (0, _sizes.adjustSize)(558),
            borderRadius: (0, _sizes.adjustSize)(279),
            justifyContent: 'center',
            alignItems: 'center',
            backgroundColor: '#43C2FA'
        },
        deviceIcon: {
            width: (0, _sizes.adjustSize)(264),
            height: (0, _sizes.adjustSize)(228)
        },
        infoContainer: {
            marginTop: (0, _sizes.adjustSize)(33),
            alignItems: 'center'
        },
        infoTitle: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(45),
            lineHeight: (0, _sizes.adjustSize)(60),
            color: '#000'
        },
        infoSubtitle: {
            marginTop: (0, _sizes.adjustSize)(9),
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(36),
            lineHeight: (0, _sizes.adjustSize)(48),
            color: '#B2B2B2'
        }
    });
}, 23104, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23074, 23068, 23071, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _sizes = _$$_REQUIRE(_dependencyMap[12]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var Size708 = (0, _sizes.adjustSize)(708);

    function getCircleCenter(type, index) {
        switch (type) {
            case 0:
            case 1:
                return {
                    x: 0,
                    y: 0
                };

            case 2:
                return {
                    x: [3, -2, -1, 2][index] || 0,
                    y: 0
                };

            case 3:
                return {
                    x: [2, -2, -1, 0][index] || 0,
                    y: 0
                };

            case -1:
            default:
                return {
                    x: 0,
                    y: 0
                };
        }
    }

    function getCircleColors(type, index) {
        switch (type) {
            case 0:
                return [['#475154'], ['#475154', '#4A5867'], ['#2D3947'], ['#F7F7F7']][index] || '#475154';

            case 1:
                return [['#00AEFF'], ['#00AEFF', '#5BCCFF'], ['#007DFF'], ['#F7F7F7']][index] || '#00AEFF';

            case 2:
                return [['#00B7AF'], ['#00B7AF', '#0BCEB7'], ['#05CFC6'], ['#F7F7F7']][index] || '#00B7AF';

            case 3:
                return [['#7538F7'], ['#7538F7', '#B88CFF'], ['#7231FB'], ['#F7F7F7']][index] || '#7538F7';

            case 4:
                return [['#5067F9'], ['#5067F9', '#589BFB'], ['#2240F7'], ['#F7F7F7']][index] || '#5067F9';

            default:
                return [['#FFFFFF'], ['#FFFFFF', '#FFFFFF'], ['#FFFFFF'], ['#F7F7F7']][index] || '#FFFFFF';
        }
    }

    function getCircleOpacity(type, index) {
        switch (type) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                return [0.2, 1, 1, 1][index] || 1;

            case -1:
            default:
                return [0.2, 0.6, 1, 1][index] || 1;
        }
    }

    var Circle = function (_Component) {
        (0, _inherits2.default)(Circle, _Component);

        function Circle() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, Circle);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Circle)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                rotation: new _reactNative.Animated.Value(0)
            };
            _this.inited = false;
            _this.currentValue = 0;
            return _this;
        }

        (0, _createClass2.default)(Circle, [{
            key: "rotate",
            value: function rotate(_ref) {
                var disabled = _ref.disabled,
                    _ref$duration = _ref.duration,
                    duration = _ref$duration === undefined ? 4000 : _ref$duration;

                if (!this.inited) {
                    return;
                }

                if (disabled) {
                    this.stopRotation();
                    return;
                }

                this.startRotation(duration);
            }
        }, {
            key: "startRotation",
            value: function startRotation() {
                var _this2 = this;

                var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;
                var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                this.stopRotation();
                this.aniRotation = _reactNative.Animated.timing(this.state.rotation, {
                    toValue: 1,
                    duration: isReset ? duration : duration * (1 - this.currentValue || 0.01),
                    easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
                }).start(function (_ref2) {
                    var finished = _ref2.finished;

                    if (finished) {
                        if (_this2.props.disabled) {
                            return;
                        }

                        _this2.state.rotation.setValue(0);

                        _this2.startRotation(_this2.props.duration, true);
                    }
                });
            }
        }, {
            key: "stopRotation",
            value: function stopRotation() {
                var _this3 = this;

                this.state.rotation.stopAnimation(function (v) {
                    _this3.currentValue = v;
                });
                this.aniRotation = null;
            }
        }, {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(nextProps) {
                if (nextProps && nextProps.disabled) {
                    this.stopRotation();
                    return;
                }

                if (nextProps && this.props && nextProps.duration === this.props.duration && nextProps.disabled === this.props.disabled) {
                    return;
                }

                this.rotate(nextProps || {});
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.inited = true;
                this.rotate(this.props);
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.stopRotation();
            }
        }, {
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    color = _this$props.color,
                    opacity = _this$props.opacity,
                    rx = _this$props.rx,
                    ry = _this$props.ry,
                    _this$props$center = _this$props.center,
                    x = _this$props$center.x,
                    y = _this$props$center.y,
                    counterClock = _this$props.counterClock,
                    _this$props$centerInn = _this$props.centerInner,
                    ix = _this$props$centerInn.x,
                    iy = _this$props$centerInn.y,
                    rxInner = _this$props.rxInner,
                    ryInner = _this$props.ryInner;
                var rotation = this.state.rotation;
                var r = rotation.interpolate({
                    inputRange: [0, 1],
                    outputRange: !counterClock ? ['0deg', '360deg'] : ['360deg', '0deg']
                });
                var d = "\n      M" + (118 + x - rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x + rx) + " " + (118 + y) + "\n      L" + (118 + ix + rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix - rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix + rxInner) + " " + (118 + iy) + "\n      L" + (118 + x + rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x - rx) + " " + (118 + y) + "\n    ";
                return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
                    style: [Styles.circleWrap, {
                        transform: [{
                            rotate: r
                        }]
                    }]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), _react.default.createElement(_reactNativeSvg.Svg, {
                    width: Size708,
                    height: Size708,
                    viewBox: "0 0 236 236"
                }, _react.default.createElement(_reactNativeSvg.Defs, null, _react.default.createElement(_reactNativeSvg.LinearGradient, {
                    id: "circleGradient",
                    x1: "0",
                    y1: "0",
                    x2: "236",
                    y2: "236"
                }, _react.default.createElement(_reactNativeSvg.Stop, {
                    offset: "0",
                    stopColor: color[1] || color[0],
                    stopOpacity: opacity
                }), _react.default.createElement(_reactNativeSvg.Stop, {
                    offset: "1",
                    stopColor: color[0],
                    stopOpacity: opacity
                }))), _react.default.createElement(_reactNativeSvg.Path, {
                    rotation: 0,
                    origin: (118, 118),
                    d: d,
                    fill: "url(#circleGradient)"
                })));
            }
        }]);
        return Circle;
    }(_react.Component);

    Circle.propTypes = {
        disabled: _propTypes.default.bool,
        duration: _propTypes.default.number,
        color: _propTypes.default.string,
        opacity: _propTypes.default.number,
        rx: _propTypes.default.number,
        ry: _propTypes.default.number,
        center: _propTypes.default.shape({
            x: _propTypes.default.number,
            y: _propTypes.default.number
        }),
        centerInner: _propTypes.default.shape({
            x: _propTypes.default.number,
            y: _propTypes.default.number
        }),
        counterClock: _propTypes.default.bool,
        rxInner: _propTypes.default.number,
        ryInner: _propTypes.default.number
    };

    var Fan = function (_Component2) {
        (0, _inherits2.default)(Fan, _Component2);

        function Fan() {
            (0, _classCallCheck2.default)(this, Fan);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Fan).apply(this, arguments));
        }

        (0, _createClass2.default)(Fan, [{
            key: "render",
            value: function render() {
                var _this$props2 = this.props,
                    disabled = _this$props2.disabled,
                    type = _this$props2.type,
                    speedLevel = _this$props2.speedLevel,
                    noDisableColor = _this$props2.noDisableColor;
                var centerInner = getCircleCenter(type, 3);
                var rxInner = 91;
                var ryInner = 91;
                return _react.default.createElement(_reactNative.View, {
                    style: Styles.container
                }, _react.default.createElement(Circle, {
                    disabled: disabled,
                    initRotation: -15,
                    counterClock: true,
                    opacity: getCircleOpacity(disabled ? 0 : type, 0),
                    color: getCircleColors(disabled && !noDisableColor ? 0 : type, 0),
                    duration: 6000 / speedLevel,
                    type: type,
                    rx: 113,
                    ry: 107,
                    center: getCircleCenter(type, 0),
                    centerInner: centerInner,
                    rxInner: rxInner,
                    ryInner: ryInner
                }), _react.default.createElement(Circle, {
                    disabled: disabled,
                    initRotation: 0,
                    counterClock: false,
                    opacity: getCircleOpacity(disabled ? 0 : type, 1),
                    color: getCircleColors(disabled && !noDisableColor ? 0 : type, 1),
                    duration: 5200 / speedLevel,
                    type: type,
                    rx: 105,
                    ry: 105,
                    center: getCircleCenter(type, 1),
                    centerInner: centerInner,
                    rxInner: rxInner,
                    ryInner: ryInner
                }), _react.default.createElement(Circle, {
                    disabled: disabled,
                    initRotation: 45,
                    counterClock: false,
                    opacity: getCircleOpacity(disabled ? 0 : type, 2),
                    color: getCircleColors(disabled && !noDisableColor ? 0 : type, 2),
                    duration: 4000 / speedLevel,
                    type: type,
                    rx: 102,
                    ry: 95,
                    center: getCircleCenter(type, 2),
                    centerInner: centerInner,
                    rxInner: rxInner,
                    ryInner: ryInner
                }));
            }
        }]);
        return Fan;
    }(_react.Component);

    exports.default = Fan;
    Fan.propTypes = {
        disabled: _propTypes.default.bool,
        noDisableColor: _propTypes.default.bool,
        speedLevel: _propTypes.default.number,
        type: _propTypes.default.oneOf([-1, 0, 1, 2, 3, 4])
    };
    Fan.defaultProps = {
        disabled: false,
        noDisableColor: false,
        speedLevel: 1,
        type: -1
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            marginVertical: (0, _sizes.adjustSize)(165),
            width: Size708,
            height: Size708,
            alignSelf: 'center'
        },
        circleWrap: {
            position: 'absolute',
            width: '100%',
            height: '100%',
            left: 0,
            top: 0
        }
    });
}, 23107, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 11485, 10318, 23068, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Background = exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _sizes = _$$_REQUIRE(_dependencyMap[11]);

    var _fonts = _$$_REQUIRE(_dependencyMap[12]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var Source0 = _$$_REQUIRE(_dependencyMap[14]);

    var Source1 = _$$_REQUIRE(_dependencyMap[15]);

    var Source2 = _$$_REQUIRE(_dependencyMap[16]);

    var Source3 = _$$_REQUIRE(_dependencyMap[17]);

    var Source4 = _$$_REQUIRE(_dependencyMap[18]);

    var Source5 = _$$_REQUIRE(_dependencyMap[19]);

    var Source6 = _$$_REQUIRE(_dependencyMap[20]);

    function getRandomBetween(min, max) {
        return Math.random() * (max - min) + min;
    }

    var HeaterHeader = function (_PureComponent) {
        (0, _inherits2.default)(HeaterHeader, _PureComponent);

        function HeaterHeader() {
            (0, _classCallCheck2.default)(this, HeaterHeader);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(HeaterHeader).apply(this, arguments));
        }

        (0, _createClass2.default)(HeaterHeader, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    title = _this$props.title,
                    disabled = _this$props.disabled,
                    themeColor = _this$props.themeColor;
                var color = disabled ? '#47525F' : themeColor || '#FA9E19';

                if (!title) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: Styles.container
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
                    accessibilityLabel: this.props.accessibilityLabel
                })), _react.default.createElement(_reactNative.Text, {
                    style: [Styles.title, {
                        color: color
                    }]
                }, title));
            }
        }]);
        return HeaterHeader;
    }(_react.PureComponent);

    exports.default = HeaterHeader;
    HeaterHeader.propTypes = {
        title: _propTypes.default.string,
        disabled: _propTypes.default.bool,
        themeColor: _propTypes.default.any,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    };

    var Dot = function (_Component) {
        (0, _inherits2.default)(Dot, _Component);

        function Dot() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, Dot);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Dot)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                progress: new _reactNative.Animated.Value(0)
            };
            return _this;
        }

        (0, _createClass2.default)(Dot, [{
            key: "startAnimation",
            value: function startAnimation() {
                var _this2 = this;

                this.ani && this.ani.stop();
                this.ani = _reactNative.Animated.timing(this.state.progress, {
                    toValue: 1,
                    duration: getRandomBetween(12000, 24000)
                }).start(function (_ref) {
                    var finished = _ref.finished;

                    if (finished) {
                        _this2.state.progress.setValue(0);

                        _this2.startAnimation();
                    }
                });
            }
        }, {
            key: "stopAnimation",
            value: function stopAnimation() {
                this.ani && this.ani.stop();
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.startAnimation();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.stopAnimation();
            }
        }, {
            key: "render",
            value: function render() {
                var _this$props2 = this.props,
                    width = _this$props2.width,
                    height = _this$props2.height,
                    source = _this$props2.source;
                var progress = this.state.progress;
                var originLeft = getRandomBetween(20, 350);
                var opacity = progress.interpolate({
                    inputRange: [0, 1],
                    outputRange: [1, 0]
                });
                var bottom = progress.interpolate({
                    inputRange: [0, 1],
                    outputRange: [getRandomBetween(0, 20) + "%", '100%']
                });
                var left = progress.interpolate({
                    inputRange: [0, 1],
                    outputRange: [originLeft - 3, originLeft + 3]
                });
                return _react.default.createElement(_reactNative.Animated.Image, {
                    style: [StylesDot.container, {
                        width: width,
                        height: height,
                        opacity: opacity,
                        bottom: bottom,
                        left: left
                    }],
                    source: source
                });
            }
        }]);
        return Dot;
    }(_react.Component);

    Dot.propTypes = {
        width: _propTypes.default.number,
        height: _propTypes.default.height,
        source: _propTypes.default.any
    };

    var Dot0 = function (_Component2) {
        (0, _inherits2.default)(Dot0, _Component2);

        function Dot0() {
            (0, _classCallCheck2.default)(this, Dot0);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot0).apply(this, arguments));
        }

        (0, _createClass2.default)(Dot0, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(Dot, {
                    width: 26,
                    height: 28,
                    source: Source0
                });
            }
        }]);
        return Dot0;
    }(_react.Component);

    var Dot1 = function (_Component3) {
        (0, _inherits2.default)(Dot1, _Component3);

        function Dot1() {
            (0, _classCallCheck2.default)(this, Dot1);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot1).apply(this, arguments));
        }

        (0, _createClass2.default)(Dot1, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(Dot, {
                    width: 4,
                    height: 4,
                    source: Source1
                });
            }
        }]);
        return Dot1;
    }(_react.Component);

    var Dot2 = function (_Component4) {
        (0, _inherits2.default)(Dot2, _Component4);

        function Dot2() {
            (0, _classCallCheck2.default)(this, Dot2);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot2).apply(this, arguments));
        }

        (0, _createClass2.default)(Dot2, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(Dot, {
                    width: 3,
                    height: 3,
                    source: Source2
                });
            }
        }]);
        return Dot2;
    }(_react.Component);

    var Dot3 = function (_Component5) {
        (0, _inherits2.default)(Dot3, _Component5);

        function Dot3() {
            (0, _classCallCheck2.default)(this, Dot3);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot3).apply(this, arguments));
        }

        (0, _createClass2.default)(Dot3, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(Dot, {
                    width: 16,
                    height: 16,
                    source: Source3
                });
            }
        }]);
        return Dot3;
    }(_react.Component);

    var Dot4 = function (_Component6) {
        (0, _inherits2.default)(Dot4, _Component6);

        function Dot4() {
            (0, _classCallCheck2.default)(this, Dot4);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot4).apply(this, arguments));
        }

        (0, _createClass2.default)(Dot4, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(Dot, {
                    width: 8,
                    height: 8,
                    source: Source4
                });
            }
        }]);
        return Dot4;
    }(_react.Component);

    var Dot5 = function (_Component7) {
        (0, _inherits2.default)(Dot5, _Component7);

        function Dot5() {
            (0, _classCallCheck2.default)(this, Dot5);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot5).apply(this, arguments));
        }

        (0, _createClass2.default)(Dot5, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(Dot, {
                    width: 22,
                    height: 22,
                    source: Source5
                });
            }
        }]);
        return Dot5;
    }(_react.Component);

    var Dot6 = function (_Component8) {
        (0, _inherits2.default)(Dot6, _Component8);

        function Dot6() {
            (0, _classCallCheck2.default)(this, Dot6);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot6).apply(this, arguments));
        }

        (0, _createClass2.default)(Dot6, [{
            key: "render",
            value: function render() {
                return _react.default.createElement(Dot, {
                    width: 83,
                    height: 83,
                    source: Source6
                });
            }
        }]);
        return Dot6;
    }(_react.Component);

    var Background = function (_Component9) {
        (0, _inherits2.default)(Background, _Component9);

        function Background() {
            (0, _classCallCheck2.default)(this, Background);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Background).apply(this, arguments));
        }

        (0, _createClass2.default)(Background, [{
            key: "getDots",
            value: function getDots() {
                var dots = [];
                var Dots = [Dot0, Dot1, Dot2, Dot3, Dot4, Dot5, Dot6].reverse();
                var dotCount = [14, 11, 18, 10, 11, 10, 11].reverse();
                dotCount.forEach(function (c, index) {
                    var DotN = Dots[index];

                    for (var i = 0; i < c; i++) {
                        dots.push(_react.default.createElement(DotN, {
                            key: String(index) + String(i)
                        }));
                    }
                });
                return dots;
            }
        }, {
            key: "render",
            value: function render() {
                var on = this.props.on;

                if (!on) {
                    return null;
                }

                var dots = this.getDots();
                return _react.default.createElement(_reactNative.View, {
                    style: StylesBackground.container
                }, dots);
            }
        }]);
        return Background;
    }(_react.Component);

    exports.Background = Background;
    Background.propTypes = {
        on: _propTypes.default.bool,
        themeColor: _propTypes.default.any
    };
    Background.defaultProps = {
        on: false,
        themeColor: null
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            paddingVertical: (0, _sizes.adjustSize)(195)
        },
        title: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(210),
            textAlign: 'center',
            color: '#f00'
        }
    });

    var StylesDot = _reactNative.StyleSheet.create({
        container: {
            position: 'absolute',
            resizeMode: 'contain'
        }
    });

    var StylesBackground = _reactNative.StyleSheet.create({
        container: {
            height: (0, _sizes.adjustSize)(1263)
        }
    });
}, 23110, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23068, 23071, 22420, 23113, 23116, 23119, 23122, 23125, 23128, 23131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 26,
        "height": 28,
        "scales": [1],
        "hash": "e437a57822191991fca0f7568e3c4cd8",
        "name": "heater-dot0",
        "type": "png"
    });
}, 23113, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 4,
        "height": 4,
        "scales": [1],
        "hash": "c94e9e5660e90a16d10ddf030db99992",
        "name": "heater-dot1",
        "type": "png"
    });
}, 23116, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 3,
        "height": 3,
        "scales": [1],
        "hash": "8075bed0a415b161aa351bf95108e0e2",
        "name": "heater-dot2",
        "type": "png"
    });
}, 23119, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 16,
        "height": 16,
        "scales": [1],
        "hash": "f2b5b67cd2695b07bb24f7293526a495",
        "name": "heater-dot3",
        "type": "png"
    });
}, 23122, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 8,
        "height": 8,
        "scales": [1],
        "hash": "224724549f1506eb56b7cabd953ab33e",
        "name": "heater-dot4",
        "type": "png"
    });
}, 23125, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 22,
        "height": 22,
        "scales": [1],
        "hash": "7ee7506ecc080d92634d4f285aff3210",
        "name": "heater-dot5",
        "type": "png"
    });
}, 23128, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 83,
        "height": 83,
        "scales": [1],
        "hash": "76d5b015b10d6e50eb919f8ece03c611",
        "name": "heater-dot6",
        "type": "png"
    });
}, 23131, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _sizes = _$$_REQUIRE(_dependencyMap[15]);

    var _fns = _$$_REQUIRE(_dependencyMap[16]);

    var _fonts = _$$_REQUIRE(_dependencyMap[17]);

    var _colors = _$$_REQUIRE(_dependencyMap[18]);

    var SelectorWithButton = function (_Component) {
        (0, _inherits2.default)(SelectorWithButton, _Component);

        function SelectorWithButton() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, SelectorWithButton);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SelectorWithButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                selectedIndexs: [0]
            };

            _this.select = function (index) {
                var _this$props = _this.props,
                    disabled = _this$props.disabled,
                    switchDisabled = _this$props.switchDisabled,
                    multiple = _this$props.multiple,
                    onSelected = _this$props.onSelected,
                    minSelected = _this$props.minSelected,
                    maxSelected = _this$props.maxSelected;

                if (disabled || switchDisabled) {
                    return;
                }

                var selectedIndexs = (0, _toConsumableArray2.default)(_this.state.selectedIndexs);
                var selectedIndex = selectedIndexs.indexOf(index);
                var hasChanged = false;

                if (multiple) {
                    if (selectedIndex === -1) {
                        if (selectedIndexs.length >= maxSelected) {
                            selectedIndexs.shift();
                        }

                        selectedIndexs.push(index);
                        hasChanged = true;
                    } else {
                        if (selectedIndexs.length > minSelected) {
                            selectedIndexs.splice(selectedIndex, 1);
                            hasChanged = true;
                        }
                    }
                } else {
                    if (selectedIndex === -1) {
                        hasChanged = true;
                        selectedIndexs = [index];
                    }
                }

                if (hasChanged) {
                    onSelected(selectedIndexs);
                }

                return null;
            };

            _this.getSelectors = function () {
                var _this$props2 = _this.props,
                    items = _this$props2.items,
                    themeColor = _this$props2.themeColor,
                    disabled = _this$props2.disabled,
                    switchDisabled = _this$props2.switchDisabled;
                var selectedIndexs = _this.state.selectedIndexs;
                var itemCount = items.length;

                var sizeLevel = _this.getSizeLevel(items);

                return items.map(function (item, index) {
                    var selected = selectedIndexs.indexOf(index) !== -1;
                    var isHorizontal = itemCount === 2;
                    var hasSeparator = isHorizontal;
                    var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
                        return item && item.icon;
                    }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
                    return _react.default.createElement(_react.Fragment, {
                        key: index
                    }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
                        style: Styles.separator
                    }) : null, _react.default.createElement(_CircleButton.default, {
                        sizeLevel: sizeLevel,
                        horizontal: isHorizontal,
                        themeColor: themeColor,
                        disabled: disabled || switchDisabled,
                        selected: selected,
                        title: hideTitle ? '' : item.title,
                        icon: item.icon,
                        iconSelected: item.iconSelected,
                        iconText: item.title || '',
                        onPress: function onPress() {
                            _this.select(index);
                        }
                    }));
                });
            };

            return _this;
        }

        (0, _createClass2.default)(SelectorWithButton, [{
            key: "getSizeLevel",
            value: function getSizeLevel(items) {
                var itemCount = items.length;
                return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
            }
        }, {
            key: "render",
            value: function render() {
                var _this$props3 = this.props,
                    title = _this$props3.title,
                    subtitle = _this$props3.subtitle,
                    items = _this$props3.items,
                    hasShadow = _this$props3.hasShadow,
                    showSwitch = _this$props3.showSwitch,
                    disabled = _this$props3.disabled,
                    switchOn = _this$props3.switchOn,
                    themeColor = _this$props3.themeColor,
                    onSwitch = _this$props3.onSwitch;

                if (!items || !items.length) {
                    return null;
                }

                var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
                var sizeLevel = this.getSizeLevel(items);
                return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
                    style: Styles.container
                }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, {
                    style: [Styles.header, disabled ? {
                        opacity: 0.3
                    } : null]
                }, title || subtitle ? _react.default.createElement(_reactNative.View, {
                    style: Styles.titleContainer
                }, title ? _react.default.createElement(_reactNative.Text, {
                    style: Styles.title
                }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
                    style: Styles.titleSeparator
                }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
                    style: Styles.subtitle
                }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
                    disabled: disabled,
                    value: switchOn,
                    onTintColor: themeColor || _colors.ColorGreen,
                    onValueChange: onSwitch
                }) : null) : null, showSwitch && !switchOn ? null : _react.default.createElement(_reactNative.View, {
                    style: [Styles.selectors, title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
                }, this.getSelectors())));
            }
        }], [{
            key: "getDerivedStateFromProps",
            value: function getDerivedStateFromProps(nextProps, prevState) {
                var selectedIndexsProp = nextProps.initSelectedIndexs;
                var selectedIndexsState = prevState.initSelectedIndexs;

                if ((0, _fns.isSameArrayElements)(selectedIndexsProp, selectedIndexsState)) {
                    return null;
                }

                return {
                    selectedIndexs: selectedIndexsProp
                };
            }
        }]);
        return SelectorWithButton;
    }(_react.Component);

    exports.default = SelectorWithButton;
    SelectorWithButton.contextType = _configProvider.ConfigContext;
    SelectorWithButton.propTypes = {
        title: _propTypes.default.string,
        subtitle: _propTypes.default.string,
        items: _propTypes.default.arrayOf(_propTypes.default.shape({
            icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
            iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
            title: _propTypes.default.string
        })),
        initSelectedIndexs: _propTypes.default.array,
        onSelected: _propTypes.default.func,
        disabled: _propTypes.default.bool,
        switchDisabled: _propTypes.default.bool,
        themeColor: _propTypes.default.any,
        multiple: _propTypes.default.bool,
        minSelected: _propTypes.default.number,
        maxSelected: _propTypes.default.number,
        showSwitch: _propTypes.default.bool,
        switchOn: _propTypes.default.bool,
        onSwitch: _propTypes.default.func,
        hasShadow: _propTypes.default.bool
    };
    SelectorWithButton.defaultProps = {
        title: '',
        subtitle: '',
        items: [],
        initSelectedIndexs: [0],
        onSelected: _fns.NOOP,
        disabled: false,
        switchDisabled: false,
        themeColor: '',
        multiple: false,
        minSelected: 1,
        maxSelected: Infinity,
        showSwitch: false,
        switchOn: true,
        onSwitch: _fns.log,
        hasShadow: true
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            paddingHorizontal: (0, _sizes.adjustSize)(60)
        },
        header: {
            flexDirection: 'row',
            justifyContent: 'space-between'
        },
        titleContainer: {
            flex: 1,
            height: (0, _sizes.adjustSize)(156),
            flexDirection: 'row',
            alignItems: 'center'
        },
        title: {
            fontSize: (0, _sizes.adjustSize)(42),
            fontFamily: _fonts.FontDefault,
            color: '#000'
        },
        titleSeparator: {
            width: 1,
            height: (0, _sizes.adjustSize)(42),
            backgroundColor: 'rgba(0, 0, 0, 0.3)',
            marginHorizontal: (0, _sizes.adjustSize)(18)
        },
        subtitle: {
            fontSize: (0, _sizes.adjustSize)(36),
            fontFamily: _fonts.FontDefault,
            color: 'rgba(0, 0, 0, 0.6)'
        },
        selectors: {
            paddingVertical: (0, _sizes.adjustSize)(60),
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center'
        },
        selectorsWithHeader: {
            paddingTop: 0
        },
        selectorsPadding0: {
            paddingHorizontal: (0, _sizes.adjustSize)(0)
        },
        selectorsPadding1: {
            paddingHorizontal: (0, _sizes.adjustSize)(78)
        },
        selectorsPadding2: {
            paddingHorizontal: (0, _sizes.adjustSize)(0)
        },
        selectorsPadding3: {
            paddingHorizontal: (0, _sizes.adjustSize)(0)
        },
        selectorWithHeader: {
            paddingTop: 0
        },
        separator: {
            width: 1,
            height: (0, _sizes.adjustSize)(120),
            backgroundColor: 'rgba(0, 0, 0, 0.15)',
            marginHorizontal: (0, _sizes.adjustSize)(60)
        }
    });
}, 23134, [14308, 14305, 14359, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 22426, 22450, 23095, 23089, 23068, 23137, 23071, 23074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.NOOP = NOOP;
    exports.log = log;
    exports.isSameArrayElements = isSameArrayElements;
    exports.getType = getType;

    function NOOP() { }

    function log() { }

    function isSameArrayElements(a, b) {
        if (a === b) {
            return true;
        }

        if (!a && b || a && !b) {
            return false;
        }

        if (a && b && a.length !== b.length) {
            return false;
        }

        var _loop = function _loop(i, l) {
            var item = a[i];

            if (b.find(function (n) {
                return n === item;
            }) === undefined) {
                return {
                    v: false
                };
            }
        };

        for (var i = 0, l = a.length; i < l; i++) {
            var _ret = _loop(i, l);

            if (typeof _ret === "object") return _ret.v;
        }

        return true;
    }

    function getType(o) {
        return Object.prototype.toString.call(o).slice(8, -1);
    }
}, 23137, []);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[12]);

    var _fns = _$$_REQUIRE(_dependencyMap[13]);

    var _sizes = _$$_REQUIRE(_dependencyMap[14]);

    var _fonts = _$$_REQUIRE(_dependencyMap[15]);

    var _colors = _$$_REQUIRE(_dependencyMap[16]);

    var SliderWithHeader = function (_Component) {
        (0, _inherits2.default)(SliderWithHeader, _Component);

        function SliderWithHeader() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, SliderWithHeader);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SliderWithHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));

            _this.onSlidingChange = function (v) {
                var _this$props = _this.props,
                    onSlidingChange = _this$props.onSlidingChange,
                    options = _this$props.options,
                    min = _this$props.min,
                    max = _this$props.max,
                    step = _this$props.step;
                var isRange = min !== max && step !== 0;
                onSlidingChange(isRange ? v : options[v]);
            };

            _this.onSlidingComplete = function (v) {
                var _this$props2 = _this.props,
                    onSlidingComplete = _this$props2.onSlidingComplete,
                    options = _this$props2.options,
                    min = _this$props2.min,
                    max = _this$props2.max,
                    step = _this$props2.step;
                var isRange = min !== max && step !== 0;
                onSlidingComplete(isRange ? v : options[v]);
            };

            return _this;
        }

        (0, _createClass2.default)(SliderWithHeader, [{
            key: "render",
            value: function render() {
                var _this$props3 = this.props,
                    options = _this$props3.options,
                    disabled = _this$props3.disabled,
                    switchDisabled = _this$props3.switchDisabled,
                    themeColor = _this$props3.themeColor,
                    showSwitch = _this$props3.showSwitch,
                    switchOn = _this$props3.switchOn,
                    onSwitch = _this$props3.onSwitch,
                    initValue = _this$props3.initValue,
                    title = _this$props3.title,
                    subtitle = _this$props3.subtitle,
                    hasShadow = _this$props3.hasShadow,
                    min = _this$props3.min,
                    max = _this$props3.max,
                    step = _this$props3.step,
                    contentType = _this$props3.contentType,
                    showEndText = _this$props3.showEndText;
                var isRange = min !== max && step !== 0;

                if ((!options || !options.length) && !isRange) {
                    return null;
                }

                var initSelectedIndex = options.findIndex(function (option) {
                    return option === initValue;
                });
                var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
                return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
                    style: Styles.container
                }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, {
                    style: [Styles.header, disabled ? {
                        opacity: 0.3
                    } : null]
                }, title || subtitle ? _react.default.createElement(_reactNative.View, {
                    style: Styles.titleContainer
                }, title ? _react.default.createElement(_reactNative.Text, {
                    style: Styles.title
                }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
                    style: Styles.titleSeparator
                }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
                    style: Styles.subtitle
                }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
                    disabled: disabled,
                    value: switchOn,
                    onTintColor: themeColor || _colors.ColorGreen,
                    onValueChange: onSwitch
                }) : null) : null, showSwitch && !switchOn ? null : _react.default.createElement(_reactNative.View, {
                    style: [Styles.sliderContainer, title || subtitle || showSwitch ? Styles.sliderContainerWithHeader : null]
                }, _react.default.createElement(_SlideGear.default, {
                    disabled: disabled || showSwitch && switchDisabled,
                    containerStyle: Styles.slider,
                    options: isRange ? [] : options,
                    minimumTrackTintColor: themeColor || _colors.ColorGreen,
                    contentType: contentType,
                    showEndText: showEndText,
                    value: isRange ? initValue : Math.max(0, initSelectedIndex),
                    optionMin: min,
                    optionMax: max,
                    optionStep: step,
                    onValueChange: this.onSlidingChange,
                    onSlidingComplete: this.onSlidingComplete
                }))));
            }
        }]);
        return SliderWithHeader;
    }(_react.Component);

    exports.default = SliderWithHeader;
    SliderWithHeader.propTypes = {
        options: _propTypes.default.array,
        min: _propTypes.default.number,
        max: _propTypes.default.number,
        step: _propTypes.default.number,
        initValue: _propTypes.default.number,
        onSlidingChange: _propTypes.default.func,
        onSlidingComplete: _propTypes.default.func,
        disabled: _propTypes.default.bool,
        switchDisabled: _propTypes.default.bool,
        themeColor: _propTypes.default.any,
        title: _propTypes.default.string,
        subtitle: _propTypes.default.string,
        contentType: _propTypes.default.string,
        showEndText: _propTypes.default.bool,
        showSwitch: _propTypes.default.bool,
        switchOn: _propTypes.default.bool,
        onSwitch: _propTypes.default.func,
        hasShadow: _propTypes.default.bool
    };
    SliderWithHeader.defaultProps = {
        options: [],
        min: 0,
        max: 0,
        step: 0,
        initValue: 0,
        onSlidingChange: _fns.log,
        onSlidingComplete: _fns.log,
        disabled: false,
        switchDisabled: false,
        themeColor: '',
        title: '',
        subtitle: '',
        contentType: '',
        showEndText: true,
        showSwitch: false,
        switchOn: true,
        onSwitch: _fns.log,
        hasShadow: true
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            paddingHorizontal: (0, _sizes.adjustSize)(60)
        },
        header: {
            flexDirection: 'row',
            justifyContent: 'space-between'
        },
        titleContainer: {
            flex: 1,
            height: (0, _sizes.adjustSize)(156),
            flexDirection: 'row',
            alignItems: 'center'
        },
        title: {
            fontSize: (0, _sizes.adjustSize)(42),
            fontFamily: _fonts.FontDefault,
            color: '#000'
        },
        titleSeparator: {
            width: 1,
            height: (0, _sizes.adjustSize)(42),
            backgroundColor: 'rgba(0, 0, 0, 0.3)',
            marginHorizontal: (0, _sizes.adjustSize)(18)
        },
        subtitle: {
            fontSize: (0, _sizes.adjustSize)(36),
            fontFamily: _fonts.FontDefault,
            color: 'rgba(0, 0, 0, 0.6)'
        },
        sliderContainer: {
            paddingVertical: (0, _sizes.adjustSize)(60)
        },
        sliderContainerWithHeader: {
            paddingTop: 0
        }
    });
}, 23140, [14308, 14305, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 22450, 22897, 23086, 23137, 23068, 23071, 23074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _sizes = _$$_REQUIRE(_dependencyMap[11]);

    var _fonts = _$$_REQUIRE(_dependencyMap[12]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var SmallNumber = function (_PureComponent) {
        (0, _inherits2.default)(SmallNumber, _PureComponent);

        function SmallNumber() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, SmallNumber);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SmallNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.offsetX = new _reactNative.Animated.Value(0);
            _this.containerWidth = 0;
            _this.centerWidth = 0;
            _this.centerX = 0;

            _this.onLayoutContainer = function (e) {
                var width = e.nativeEvent.layout.width;
                _this.containerWidth = width;

                if (width && _this.centerWidth) {
                    _this.offsetX.setValue(width / 2 - _this.centerWidth / 2 - _this.centerX);
                }
            };

            _this.onLayoutCenter = function (e) {
                var _e$nativeEvent$layout = e.nativeEvent.layout,
                    width = _e$nativeEvent$layout.width,
                    x = _e$nativeEvent$layout.x;
                _this.centerWidth = width;
                _this.centerX = x;

                if (width && _this.containerWidth) {
                    _this.offsetX.setValue(_this.containerWidth / 2 - width / 2 - x);
                }
            };

            _this.getItems = function () {
                var _this$props = _this.props,
                    list = _this$props.list,
                    themeColor = _this$props.themeColor,
                    titleThemeColor = _this$props.titleThemeColor;
                var filtered = list.filter(function (item) {
                    return item && item.title !== undefined && item.number !== undefined;
                });
                var total = filtered.length;
                var isOdd = total % 2 === 1;
                var centerIndex = total <= 0 ? 0 : isOdd ? total / 2 - 0.5 : total / 2;
                return filtered.map(function (item, index) {
                    var title = item.title,
                        number = item.number;
                    var theme = item.themeColor || themeColor;
                    var titleTheme = item.titleThemeColor || titleThemeColor;
                    return _react.default.createElement(_react.Fragment, {
                        key: index
                    }, index > 0 ? _react.default.createElement(_reactNative.View, {
                        style: [Styles.separator, titleTheme ? {
                            backgroundColor: titleTheme
                        } : null],
                        onLayout: centerIndex === index && !isOdd ? _this.onLayoutCenter : null
                    }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                        style: Styles.item,
                        onLayout: centerIndex === index && isOdd ? _this.onLayoutCenter : null
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
                        accessibilityLabel: item.accessibilityLabel
                    })), _react.default.createElement(_reactNative.Text, {
                        style: [Styles.number, theme ? {
                            color: theme
                        } : null, isNaN(number) ? {
                            fontSize: (0, _sizes.adjustSize)(88)
                        } : null]
                    }, number), _react.default.createElement(_reactNative.Text, {
                        style: [Styles.title, titleTheme ? {
                            color: titleTheme
                        } : null]
                    }, title)));
                });
            };

            return _this;
        }

        (0, _createClass2.default)(SmallNumber, [{
            key: "render",
            value: function render() {
                var list = this.props.list;

                if (!list || !list.length) {
                    return null;
                }

                var items = this.getItems();
                var offsetX = this.offsetX;
                return _react.default.createElement(_reactNative.View, {
                    style: Styles.container,
                    onLayout: this.onLayoutContainer
                }, _react.default.createElement(_reactNative.Animated.View, {
                    style: [Styles.containerInner, {
                        transform: [{
                            translateX: offsetX
                        }]
                    }]
                }, items));
            }
        }]);
        return SmallNumber;
    }(_react.PureComponent);

    exports.default = SmallNumber;
    SmallNumber.propTypes = {
        list: _propTypes.default.arrayOf(_propTypes.default.shape({
            title: _propTypes.default.string,
            number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
            themeColor: _propTypes.default.any,
            titleThemeColor: _propTypes.default.any,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
        })),
        themeColor: _propTypes.default.any,
        titleThemeColor: _propTypes.default.any,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };

    var Styles = _reactNative.StyleSheet.create({
        containerInner: {
            alignItems: 'center',
            flexDirection: 'row',
            justifyContent: 'center'
        },
        separator: {
            width: (0, _sizes.adjustSize)(2.1),
            height: (0, _sizes.adjustSize)(135),
            marginHorizontal: (0, _sizes.adjustSize)(45),
            marginTop: (0, _sizes.adjustSize)(12),
            backgroundColor: 'rgba(0, 0, 0, 1)',
            opacity: 0.2
        },
        item: {
            alignItems: 'center'
        },
        title: {
            fontSize: (0, _sizes.adjustSize)(36),
            fontFamily: _fonts.FontDefault,
            lineHeight: (0, _sizes.adjustSize)(48),
            color: '#1C2229',
            opacity: 1
        },
        number: {
            fontSize: (0, _sizes.adjustSize)(102),
            fontFamily: 'Helvetica',
            lineHeight: (0, _sizes.adjustSize)(123),
            color: '#1C2229',
            opacity: 0.8
        }
    });
}, 23143, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23068, 23071, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _sizes = _$$_REQUIRE(_dependencyMap[12]);

    var _fns = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var SwitchBgColorsOn = ["#fff", "#f1f1f2"];
    var SwitchBgColorsOff = ["#f1f1f2", "#fff"];
    var MarginTops = [0, (0, _sizes.adjustSize)(240), (0, _sizes.adjustSize)(180), (0, _sizes.adjustSize)(105), (0, _sizes.adjustSize)(90)];
    var Heights = [0, (0, _sizes.adjustSize)(990), (0, _sizes.adjustSize)(852), (0, _sizes.adjustSize)(720), (0, _sizes.adjustSize)(516)];

    var WallSwitch = function (_Component) {
        (0, _inherits2.default)(WallSwitch, _Component);

        function WallSwitch() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, WallSwitch);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(WallSwitch)).call.apply(_getPrototypeOf2, [this].concat(args)));

            _this.switch = function (index) {
                var onSwitch = _this.props.onSwitch;

                if (typeof onSwitch === 'function') {
                    onSwitch(index);
                }
            };

            _this.getItems = function (items) {
                var length = items.length;
                return items.map(function (item, index) {
                    var isFirst = index === 0;
                    var isLast = index === length - 1;
                    var isOn = item.isOn;
                    return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
                        key: index,
                        style: [Styles.item, isOn ? Styles.itemOn : Styles.itemOff, isFirst ? Styles.itemFirst : null, isLast ? Styles.itemLast : null],
                        colors: isOn ? SwitchBgColorsOn : SwitchBgColorsOff
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                        accessibilityLabel: item.accessibilityLabel,
                        accessibilityHint: item.accessibilityHint,
                        accessibilityState: {
                            selected: isOn,
                            checked: isOn
                        }
                    })), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
                        style: {
                            width: '100%',
                            height: '100%'
                        },
                        activeOpacity: 0.8,
                        onPress: function onPress() {
                            _this.switch(index);
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: false
                    })), _react.default.createElement(_reactNative.View, {
                        style: Styles.upper
                    }, _react.default.createElement(_reactNative.View, {
                        style: [Styles.indicator, isOn ? Styles.indicatorOn : Styles.indicatorOff]
                    }))));
                });
            };

            return _this;
        }

        (0, _createClass2.default)(WallSwitch, [{
            key: "render",
            value: function render() {
                var items = this.props.items;

                if (!items || !items.length) {
                    return null;
                }

                var length = items.length;
                return _react.default.createElement(_reactNative.View, {
                    style: [Styles.container, {
                        height: Heights[length],
                        marginTop: MarginTops[length]
                    }]
                }, this.getItems(items));
            }
        }]);
        return WallSwitch;
    }(_react.Component);

    exports.default = WallSwitch;
    WallSwitch.propTypes = {
        items: _propTypes.default.arrayOf(_propTypes.default.shape({
            isOn: _propTypes.default.bool,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        onSwitch: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    WallSwitch.defaultProps = {
        items: [],
        onSwitch: _fns.log
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            marginHorizontal: (0, _sizes.adjustSize)(30),
            flexDirection: 'row',
            backgroundColor: '#CDCED0',
            borderRadius: (0, _sizes.adjustSize)(30),
            borderWidth: (0, _sizes.adjustSize)(6),
            borderColor: '#CDCED0',
            overflow: 'hidden'
        },
        item: {
            flex: 1,
            backgroundColor: '#F7F7F7',
            marginHorizontal: (0, _sizes.adjustSize)(3),
            alignItems: 'center'
        },
        itemOn: {
            marginTop: (0, _sizes.adjustSize)(30),
            paddingTop: (0, _sizes.adjustSize)(90),
            marginBottom: 0,
            paddingBottom: (0, _sizes.adjustSize)(60)
        },
        itemOff: {
            marginTop: 0,
            paddingTop: (0, _sizes.adjustSize)(120),
            marginBottom: (0, _sizes.adjustSize)(30),
            paddingBottom: (0, _sizes.adjustSize)(30)
        },
        itemFirst: {
            borderTopLeftRadius: (0, _sizes.adjustSize)(30),
            borderBottomLeftRadius: (0, _sizes.adjustSize)(30),
            borderTopRightRadius: 1,
            borderBottomRightRadius: 1
        },
        itemLast: {
            borderTopLeftRadius: 1,
            borderBottomLeftRadius: 1,
            borderTopRightRadius: (0, _sizes.adjustSize)(30),
            borderBottomRightRadius: (0, _sizes.adjustSize)(30)
        },
        upper: {
            flex: 1,
            marginTop: (0, _sizes.adjustSize)(30),
            alignItems: 'center'
        },
        indicator: {
            width: (0, _sizes.adjustSize)(84),
            height: (0, _sizes.adjustSize)(6),
            marginTop: (0, _sizes.adjustSize)(60)
        },
        indicatorOn: {
            backgroundColor: '#3CB3F7'
        },
        indicatorOff: {
            backgroundColor: '#A2AFC1'
        }
    });
}, 23146, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 14299, 23068, 23137, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _sizes = _$$_REQUIRE(_dependencyMap[10]);

    var _selectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _containerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var DoubleSelectors = function (_Component) {
        (0, _inherits2.default)(DoubleSelectors, _Component);

        function DoubleSelectors() {
            (0, _classCallCheck2.default)(this, DoubleSelectors);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoubleSelectors).apply(this, arguments));
        }

        (0, _createClass2.default)(DoubleSelectors, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    title = _this$props.title,
                    subtitle = _this$props.subtitle,
                    themeColor = _this$props.themeColor,
                    disabled = _this$props.disabled,
                    secondShow = _this$props.secondShow,
                    secondDisabled = _this$props.secondDisabled,
                    first = _this$props.first,
                    second = _this$props.second,
                    hasShadow = _this$props.hasShadow;
                var Wrap = hasShadow ? _containerWithShadowAndSeparator.default : _react.Fragment;
                return _react.default.createElement(Wrap, {
                    separatorStyle: Styles.separator
                }, _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
                    hasShadow: false,
                    themeColor: themeColor,
                    title: title,
                    subtitle: subtitle,
                    disabled: disabled
                }, first)), secondShow ? _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
                    hasShadow: false,
                    themeColor: themeColor,
                    disabled: secondDisabled || disabled
                }, second)) : null);
            }
        }]);
        return DoubleSelectors;
    }(_react.Component);

    exports.default = DoubleSelectors;
    DoubleSelectors.defaultProps = {
        title: '',
        subtitle: '',
        disabled: false,
        secondShow: true,
        secondDisabled: true,
        first: {
            items: []
        },
        second: {
            items: []
        },
        hasShadow: true
    };

    var Styles = _reactNative.StyleSheet.create({
        separator: {
            marginHorizontal: (0, _sizes.adjustSize)(60)
        }
    });
}, 23149, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 23068, 23152, 23086]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    Object.defineProperty(exports, "SelectorWithButton", {
        enumerable: true,
        get: function get() {
            return _SelectorWithButton.default;
        }
    });

    var _SelectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
}, 23152, [14305, 23134]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _sizes = _$$_REQUIRE(_dependencyMap[11]);

    var _fns = _$$_REQUIRE(_dependencyMap[12]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var SourceCurtainPole = _$$_REQUIRE(_dependencyMap[14]);

    var SourceCurtainLight = _$$_REQUIRE(_dependencyMap[15]);

    var SourceCurtainDark = _$$_REQUIRE(_dependencyMap[16]);

    var SourceCurtainBg = _$$_REQUIRE(_dependencyMap[17]);

    var Width858 = (0, _sizes.adjustSize)(858);
    var Width429 = (0, _sizes.adjustSize)(429);
    var Width108 = (0, _sizes.adjustSize)(108);

    function getCurrentValue(type, isLeft, lastValue, moveX) {
        var min = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
        var max = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 100;
        var diffValue = 100 / (type === 0 ? Width429 : Width858) * moveX;
        var value = lastValue + (isLeft ? -1 : 1) * diffValue;
        return Math.min(max, Math.max(min, value));
    }

    var Curtain = function (_Component) {
        (0, _inherits2.default)(Curtain, _Component);

        function Curtain() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, Curtain);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Curtain)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.currValue = 0;
            _this.lastValue = 0;
            _this.value = new _reactNative.Animated.Value(0);
            _this.leftX = new _reactNative.Animated.Value(0);
            _this.rightX = new _reactNative.Animated.Value(0);

            _this.onAccessibilityAction = function (_ref) {
                var actionName = _ref.nativeEvent.actionName;
                var onValueChange = _this.props.onValueChange;
                var targetValue = _this.lastValue;

                switch (actionName) {
                    case 'increment':
                        targetValue += 10;
                        break;

                    case 'decrement':
                        targetValue -= 10;
                        break;
                }

                targetValue = Math.min(100, Math.max(0, targetValue));

                _this.value.setValue(targetValue);

                _this.lastValue = targetValue;
                onValueChange(targetValue);
            };

            return _this;
        }

        (0, _createClass2.default)(Curtain, [{
            key: "animateToPosition",
            value: function animateToPosition(position) {
                var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;

                if (isNaN(position) || !isFinite(position)) {
                    return;
                }

                this.stopAnimation();
                var currValue = this.currValue;
                this.aniPosition = _reactNative.Animated.timing(this.value, {
                    toValue: position,
                    duration: Math.abs(currValue - position) * duration,
                    easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
                }).start();
            }
        }, {
            key: "stopAnimation",
            value: function stopAnimation() {
                this.aniPosition && this.aniPosition.stop();
            }
        }, {
            key: "initPanResponder",
            value: function initPanResponder() {
                this.panResponderLeft = _reactNative.PanResponder.create({
                    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
                        return true;
                    },
                    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
                        return true;
                    },
                    onPanResponderGrant: _fns.log,
                    onPanResponderMove: _reactNative.Animated.event([null, {
                        dx: this.leftX
                    }]),
                    onPanResponderRelease: this.touchEnd.bind(this),
                    onPanResponderTerminate: this.touchEnd.bind(this)
                });
                this.panResponderRight = _reactNative.PanResponder.create({
                    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
                        return true;
                    },
                    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
                        return true;
                    },
                    onPanResponderGrant: _fns.log,
                    onPanResponderMove: _reactNative.Animated.event([null, {
                        dx: this.rightX
                    }]),
                    onPanResponderRelease: this.touchEnd.bind(this),
                    onPanResponderTerminate: this.touchEnd.bind(this)
                });
            }
        }, {
            key: "touchEnd",
            value: function touchEnd() {
                this.lastValue = this.currValue;
                this.props.onValueChange(this.lastValue);
            }
        }, {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(nextProps) {
                var props = this.props;
                this.lastValue = nextProps.position;

                if (nextProps.type !== props.type) {
                    this.initPanResponder(nextProps.type);
                }

                if (nextProps.position !== props.position) {
                    this.animateToPosition(nextProps.position);
                }
            }
        }, {
            key: "UNSAFE_componentWillMount",
            value: function UNSAFE_componentWillMount() {
                var _this2 = this;

                this.leftX.addListener(function (e) {
                    var currValue = getCurrentValue(_this2.props.type, true, _this2.lastValue, e.value);

                    _this2.animateToPosition(currValue, 0);

                    _this2.props.onValueChanging(currValue);
                });
                this.rightX.addListener(function (e) {
                    var currValue = getCurrentValue(_this2.props.type, false, _this2.lastValue, e.value);

                    _this2.animateToPosition(currValue, 0);

                    _this2.props.onValueChanging(currValue);
                });
                this.initPanResponder(this.props.type);
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this3 = this;

                this.value.addListener(function (_ref2) {
                    var value = _ref2.value;
                    _this3.currValue = value;
                });
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.stopAnimation();
            }
        }, {
            key: "getCurtains",
            value: function getCurtains() {
                var type = this.props.type;
                var ret = [];
                var l = type === 0 ? 7 : 13;

                for (var i = 0; i < l; i++) {
                    ret.push(_react.default.createElement(_reactNative.Image, {
                        key: String(i),
                        style: Styles.curtainSingle,
                        source: i % 2 === 0 ? SourceCurtainDark : SourceCurtainLight
                    }));
                }

                return ret;
            }
        }, {
            key: "render",
            value: function render() {
                var type = this.props.type;
                var value = this.value;
                var curtains = this.getCurtains();
                var width = value.interpolate({
                    inputRange: [0, 100],
                    outputRange: type === 0 ? [Width429, Width108] : [Width858, Width108]
                });
                return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: Styles.container
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
                    accessibilityHint: this.props.accessibilityHint
                }), {
                    accessibilityActions: [{
                        name: 'increment'
                    }, {
                        name: 'decrement'
                    }],
                    onAccessibilityAction: this.onAccessibilityAction
                }), _react.default.createElement(_reactNative.Image, {
                    style: Styles.bg,
                    source: SourceCurtainBg
                }), _react.default.createElement(_reactNative.Image, {
                    style: Styles.pole,
                    source: SourceCurtainPole
                }), _react.default.createElement(_reactNative.View, {
                    style: Styles.curtains
                }, [0, 1].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: Styles.curtainWrap
                }, this.panResponderLeft.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), _react.default.createElement(_reactNative.Animated.View, {
                    style: [Styles.curtain, Styles.curtainLeft, {
                        width: width
                    }]
                }, curtains, _react.default.createElement(_reactNative.View, {
                    style: Styles.curtainBtn
                }, _react.default.createElement(_reactNative.View, {
                    style: Styles.curtainBtnInner
                })))), [0, 2].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: Styles.curtainWrap
                }, this.panResponderRight.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                })), _react.default.createElement(_reactNative.Animated.View, {
                    style: [Styles.curtain, Styles.curtainRight, {
                        width: width
                    }]
                }, curtains, _react.default.createElement(_reactNative.View, {
                    style: Styles.curtainBtn
                }, _react.default.createElement(_reactNative.View, {
                    style: Styles.curtainBtnInner
                }))))));
            }
        }]);
        return Curtain;
    }(_react.Component);

    exports.default = Curtain;
    Curtain.propTypes = {
        type: _propTypes.default.oneOf([0, 1, 2]),
        position: _propTypes.default.number,
        onValueChanging: _propTypes.default.func,
        onValueChange: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    Curtain.defaultProps = {
        type: 0,
        position: 0,
        onValueChanging: _fns.log,
        onValueChange: _fns.log
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            alignItems: 'center',
            marginTop: (0, _sizes.adjustSize)(249),
            paddingBottom: (0, _sizes.adjustSize)(60)
        },
        bg: {
            position: 'absolute',
            left: '50%',
            marginLeft: (0, _sizes.adjustSize)(-540),
            width: (0, _sizes.adjustSize)(1080),
            height: (0, _sizes.adjustSize)(879),
            resizeMode: 'contain'
        },
        pole: {
            width: (0, _sizes.adjustSize)(882),
            height: (0, _sizes.adjustSize)(21),
            resizeMode: 'contain'
        },
        curtains: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            width: (0, _sizes.adjustSize)(858)
        },
        curtainWrap: {
            flex: 1,
            height: (0, _sizes.adjustSize)(858)
        },
        curtain: {
            position: 'absolute',
            height: (0, _sizes.adjustSize)(858),
            flexDirection: 'row',
            overflow: 'hidden'
        },
        curtainSingle: {
            flex: 1,
            height: (0, _sizes.adjustSize)(858)
        },
        curtainLeft: {
            left: 0
        },
        curtainRight: {
            right: 0,
            transform: [{
                scaleX: -1
            }]
        },
        curtainBtn: {
            position: 'absolute',
            width: (0, _sizes.adjustSize)(120),
            height: (0, _sizes.adjustSize)(120),
            top: '50%',
            marginTop: (0, _sizes.adjustSize)(-60),
            borderRadius: (0, _sizes.adjustSize)(60),
            right: 0,
            marginRight: (0, _sizes.adjustSize)(-60),
            justifyContent: 'center',
            backgroundColor: '#fff'
        },
        curtainBtnInner: {
            width: (0, _sizes.adjustSize)(9),
            height: (0, _sizes.adjustSize)(48),
            borderRadius: (0, _sizes.adjustSize)(6),
            backgroundColor: '#5898FF',
            marginLeft: (0, _sizes.adjustSize)(30)
        }
    });
}, 23155, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23068, 23137, 22420, 23158, 23161, 23164, 23167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 294,
        "height": 7,
        "scales": [2, 3],
        "hash": "5c656ab1687db8936983a7210b3a4118",
        "name": "curtain-pole",
        "type": "png"
    });
}, 23158, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 22,
        "height": 286,
        "scales": [2, 3],
        "hash": "2219fcc0db10734da3173b657bcc7764",
        "name": "curtain-light",
        "type": "png"
    });
}, 23161, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 22,
        "height": 286,
        "scales": [2, 3],
        "hash": "11212d789dc6f34a86845319d96fa8db",
        "name": "curtain-dark",
        "type": "png"
    });
}, 23164, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
        "width": 360,
        "height": 293,
        "scales": [2, 3],
        "hash": "0267ff3dcfca2c2caf9e5a5d3b30c1f4",
        "name": "curtain-bg",
        "type": "png"
    });
}, 23167, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

    var _sizes = _$$_REQUIRE(_dependencyMap[12]);

    var _fonts = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var CurtainStyle = function (_Component) {
        (0, _inherits2.default)(CurtainStyle, _Component);

        function CurtainStyle() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, CurtainStyle);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CurtainStyle)).call.apply(_getPrototypeOf2, [this].concat(args)));

            _this.onAccessibilityAction = function (_ref, id) {
                var actionName = _ref.nativeEvent.actionName;

                switch (actionName) {
                    case 'activate':
                        _this.onCheckChange(id);

                        break;
                }
            };

            _this.onCheckChange = function (id) {
                var onValueChange = _this.props.onValueChange;

                if (typeof onValueChange === 'function') {
                    onValueChange(id);
                }
            };

            return _this;
        }

        (0, _createClass2.default)(CurtainStyle, [{
            key: "getItems",
            value: function getItems() {
                var _this2 = this;

                var _this$props = this.props,
                    _this$props$icons = _this$props.icons,
                    icons = _this$props$icons === undefined ? [] : _this$props$icons,
                    _this$props$titles = _this$props.titles,
                    titles = _this$props$titles === undefined ? [] : _this$props$titles,
                    _this$props$ids = _this$props.ids,
                    ids = _this$props$ids === undefined ? [] : _this$props$ids,
                    checkedId = _this$props.checkedId,
                    disabled = _this$props.disabled,
                    _this$props$accessibi = _this$props.accessibilityLabels,
                    accessibilityLabels = _this$props$accessibi === undefined ? [] : _this$props$accessibi,
                    _this$props$accessibi2 = _this$props.accessibilityHints,
                    accessibilityHints = _this$props$accessibi2 === undefined ? [] : _this$props$accessibi2;
                return titles.map(function (_, index) {
                    var title = titles[index];
                    var icon = icons[index];
                    var id = ids[index];
                    return title && icon ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                        key: index,
                        style: Styles.item
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this2.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
                        accessibilityLabel: accessibilityLabels[index],
                        accessibilityHint: accessibilityHints[index],
                        accessibilityState: {
                            selected: checkedId === id,
                            checked: checkedId === id,
                            disabled: disabled
                        }
                    }), {
                        accessibilityActions: [{
                            name: 'activate'
                        }],
                        onAccessibilityAction: function onAccessibilityAction(e) {
                            _this2.onAccessibilityAction(e, id);
                        }
                    }), _react.default.createElement(_reactNative.Image, {
                        style: Styles.icon,
                        source: icon
                    }), _react.default.createElement(_reactNative.Text, {
                        style: Styles.title
                    }, title), _react.default.createElement(_Radio.default, {
                        id: Number(id),
                        disabled: disabled,
                        isChecked: checkedId === id,
                        changeCheck: _this2.onCheckChange,
                        bigCircleStyle: {
                            width: (0, _sizes.adjustSize)(60),
                            height: (0, _sizes.adjustSize)(60),
                            borderWidth: (0, _sizes.adjustSize)(12)
                        },
                        checkedBigCircleStyle: {
                            borderColor: '#f0f0f0',
                            borderColorChecked: '#32BAC0'
                        },
                        smallCircleBg: "#fff"
                    })) : null;
                });
            }
        }, {
            key: "render",
            value: function render() {
                var items = this.getItems();
                return _react.default.createElement(_reactNative.View, {
                    style: Styles.container
                }, items);
            }
        }]);
        return CurtainStyle;
    }(_react.Component);

    exports.default = CurtainStyle;
    CurtainStyle.propTypes = {
        icons: _propTypes.default.array,
        titles: _propTypes.default.arrayOf(_propTypes.default.string),
        ids: _propTypes.default.array,
        checkedId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
        disabled: _propTypes.default.bool,
        onValueChange: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabels: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
        accessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {},
        item: {
            marginTop: (0, _sizes.adjustSize)(30),
            marginHorizontal: (0, _sizes.adjustSize)(30),
            paddingLeft: (0, _sizes.adjustSize)(57),
            paddingRight: (0, _sizes.adjustSize)(60),
            paddingVertical: (0, _sizes.adjustSize)(54),
            flexDirection: 'row',
            alignItems: 'center',
            backgroundColor: '#fff'
        },
        icon: {
            width: (0, _sizes.adjustSize)(312),
            height: (0, _sizes.adjustSize)(306),
            resizeMode: 'contain',
            marginRight: (0, _sizes.adjustSize)(57)
        },
        title: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(45),
            color: '#000',
            flex: 1
        }
    });
}, 23170, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 22417, 23068, 23071, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _sizes = _$$_REQUIRE(_dependencyMap[11]);

    var _fonts = _$$_REQUIRE(_dependencyMap[12]);

    var _fns = _$$_REQUIRE(_dependencyMap[13]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

    var PrimeButton = function (_Component) {
        (0, _inherits2.default)(PrimeButton, _Component);

        function PrimeButton() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, PrimeButton);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PrimeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

            _this.onPress = function () {
                var onClick = _this.props.onClick;

                if (typeof onClick === 'function') {
                    onClick();
                }
            };

            return _this;
        }

        (0, _createClass2.default)(PrimeButton, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    title = _this$props.title,
                    themeColor = _this$props.themeColor,
                    textColor = _this$props.textColor,
                    disabled = _this$props.disabled;

                if (!title) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, {
                    style: Styles.container
                }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
                    style: [Styles.btn, themeColor ? {
                        backgroundColor: themeColor,
                        borderColor: themeColor
                    } : null],
                    onPress: this.onPress,
                    disabled: disabled
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: {
                        disabled: disabled
                    }
                })), _react.default.createElement(_reactNative.Text, {
                    style: [Styles.title, textColor ? {
                        color: textColor
                    } : null]
                }, title)));
            }
        }]);
        return PrimeButton;
    }(_react.Component);

    exports.default = PrimeButton;
    PrimeButton.propTypes = {
        title: _propTypes.default.string,
        themeColor: _propTypes.default.any,
        textColor: _propTypes.default.any,
        onClick: _propTypes.default.func,
        disabled: _propTypes.default.bool,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    PrimeButton.defaultProps = {
        title: '',
        themeColor: '',
        textColor: '',
        onClick: _fns.NOOP,
        disabled: false
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            marginHorizontal: (0, _sizes.adjustSize)(72)
        },
        btn: {
            height: (0, _sizes.adjustSize)(126),
            justifyContent: 'center',
            borderWidth: Math.min(1, (0, _sizes.adjustSize)(1.5)),
            borderColor: 'rgba(0, 0, 0, 0.15)',
            borderRadius: (0, _sizes.adjustSize)(15)
        },
        title: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(39),
            textAlign: 'center',
            color: '#000'
        }
    });
}, 23173, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23068, 23071, 23137, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _sizes = _$$_REQUIRE(_dependencyMap[11]);

    var _fonts = _$$_REQUIRE(_dependencyMap[12]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

    var isAndroid = _reactNative.Platform.OS === 'android';

    var QAList = function (_Component) {
        (0, _inherits2.default)(QAList, _Component);

        function QAList() {
            (0, _classCallCheck2.default)(this, QAList);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QAList).apply(this, arguments));
        }

        (0, _createClass2.default)(QAList, [{
            key: "getList",
            value: function getList() {
                var _this = this;

                var list = this.props.list;

                if (!list || !list.length) {
                    return [];
                }

                return list.map(function (item, index) {
                    var title = item.title,
                        text = item.text;
                    return _react.default.createElement(_reactNative.View, {
                        key: String(index),
                        style: Styles.item
                    }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                        style: Styles.title
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                    })), title || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
                        style: Styles.text
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this.props.accessible,
                        accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
                    })), text || '', isAndroid ? '\n' : ''));
                });
            }
        }, {
            key: "render",
            value: function render() {
                var list = this.getList();

                if (!list || !list.length) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, {
                    style: Styles.container
                }, list);
            }
        }]);
        return QAList;
    }(_react.Component);

    exports.default = QAList;
    QAList.propTypes = {
        list: _propTypes.default.arrayOf(_propTypes.default.shape({
            title: _propTypes.default.string,
            text: _propTypes.default.string
        })),
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
    };
    QAList.defaultProps = {
        list: []
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            marginHorizontal: (0, _sizes.adjustSize)(72)
        },
        item: {
            marginBottom: (0, _sizes.adjustSize)(45)
        },
        title: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(36),
            fontWeight: '600',
            color: '#4C4C4C'
        },
        text: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(42),
            lineHeight: (0, _sizes.adjustSize)(78),
            color: '#7F7F7F',
            marginTop: (0, _sizes.adjustSize)(9)
        }
    });
}, 23176, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23068, 23071, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

    var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

    var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

    var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

    var _sizes = _$$_REQUIRE(_dependencyMap[15]);

    var _fns = _$$_REQUIRE(_dependencyMap[16]);

    var _fonts = _$$_REQUIRE(_dependencyMap[17]);

    var _colors = _$$_REQUIRE(_dependencyMap[18]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

    var MultiButtons = function (_Component) {
        (0, _inherits2.default)(MultiButtons, _Component);

        function MultiButtons() {
            var _getPrototypeOf2;

            var _this;

            (0, _classCallCheck2.default)(this, MultiButtons);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MultiButtons)).call.apply(_getPrototypeOf2, [this].concat(args)));
            _this.state = {
                activeIndex: -1
            };

            _this.onClick = function (index) {
                var onClick = _this.props.onClick;

                if (typeof onClick === 'function') {
                    onClick(index);
                }
            };

            _this.getSelectors = function () {
                var _this$props = _this.props,
                    items = _this$props.items,
                    themeColor = _this$props.themeColor,
                    disabled = _this$props.disabled,
                    switchDisabled = _this$props.switchDisabled;
                var itemCount = items.length;

                var sizeLevel = _this.getSizeLevel(items);

                return items.map(function (item, index) {
                    var isHorizontal = itemCount === 2;
                    var hasSeparator = isHorizontal;
                    var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
                        return item && item.icon;
                    }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
                    return _react.default.createElement(_react.Fragment, {
                        key: index
                    }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
                        style: Styles.separator
                    }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
                        sizeLevel: sizeLevel,
                        horizontal: isHorizontal,
                        themeColor: themeColor,
                        disabled: disabled || switchDisabled,
                        showHighlight: true,
                        title: hideTitle ? '' : item.title,
                        icon: item.icon,
                        iconSelected: item.iconSelected,
                        iconText: item.title || '',
                        onPress: function onPress() {
                            _this.onClick(index);
                        }
                    }, (0, _accessibilityHelper.getAccessibilityConfig)({
                        accessible: _this.props.accessible,
                        accessibilityLabel: item.accessibilityLabel,
                        accessibilityHint: item.accessibilityHint
                    }))));
                });
            };

            return _this;
        }

        (0, _createClass2.default)(MultiButtons, [{
            key: "getSizeLevel",
            value: function getSizeLevel(items) {
                var itemCount = items.length;
                return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
            }
        }, {
            key: "render",
            value: function render() {
                var _this$props2 = this.props,
                    title = _this$props2.title,
                    items = _this$props2.items,
                    hasShadow = _this$props2.hasShadow,
                    showSwitch = _this$props2.showSwitch,
                    disabled = _this$props2.disabled,
                    switchOn = _this$props2.switchOn,
                    themeColor = _this$props2.themeColor,
                    onSwitch = _this$props2.onSwitch;

                if (!items || !items.length) {
                    return null;
                }

                var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
                var sizeLevel = this.getSizeLevel(items);
                return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
                    style: Styles.container
                }, title || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
                    style: [Styles.header, disabled ? {
                        opacity: 0.3
                    } : null]
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityPropTypes.text,
                    accessibilityLabel: this.props.accessibilityLabel,
                    accessibilityHint: this.props.accessibilityHint,
                    accessibilityState: showSwitch ? {
                        disabled: disabled,
                        checked: switchOn
                    } : {
                        disabled: disabled
                    }
                })), title ? _react.default.createElement(_reactNative.View, {
                    style: Styles.titleContainer
                }, _react.default.createElement(_reactNative.Text, {
                    style: Styles.title
                }, title)) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
                    disabled: disabled,
                    value: switchOn,
                    onTintColor: themeColor || _colors.ColorGreen,
                    onValueChange: onSwitch
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: false
                }))) : null) : null, _react.default.createElement(_reactNative.View, {
                    style: [Styles.selectors, title || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
                }, this.getSelectors())));
            }
        }]);
        return MultiButtons;
    }(_react.Component);

    exports.default = MultiButtons;
    MultiButtons.contextType = _configProvider.ConfigContext;
    MultiButtons.propTypes = {
        title: _propTypes.default.string,
        items: _propTypes.default.arrayOf(_propTypes.default.shape({
            icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
            iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
            title: _propTypes.default.string,
            accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
            accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
        })),
        onClick: _propTypes.default.func,
        disabled: _propTypes.default.bool,
        switchDisabled: _propTypes.default.bool,
        themeColor: _propTypes.default.any,
        showSwitch: _propTypes.default.bool,
        switchOn: _propTypes.default.bool,
        onSwitch: _propTypes.default.func,
        hasShadow: _propTypes.default.bool,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
        accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    MultiButtons.defaultProps = {
        title: '',
        items: [],
        onClick: _fns.NOOP,
        disabled: false,
        switchDisabled: false,
        themeColor: '',
        showSwitch: false,
        switchOn: true,
        onSwitch: _fns.log,
        hasShadow: true
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: '#fff',
            paddingHorizontal: (0, _sizes.adjustSize)(60)
        },
        header: {
            flexDirection: 'row',
            justifyContent: 'space-between'
        },
        titleContainer: {
            flex: 1,
            height: (0, _sizes.adjustSize)(156),
            flexDirection: 'row',
            alignItems: 'center'
        },
        title: {
            fontSize: (0, _sizes.adjustSize)(42),
            fontFamily: _fonts.FontDefault,
            color: '#000'
        },
        selectors: {
            paddingVertical: (0, _sizes.adjustSize)(60),
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center'
        },
        selectorsWithHeader: {
            paddingTop: 0
        },
        selectorsPadding0: {
            paddingHorizontal: (0, _sizes.adjustSize)(0)
        },
        selectorsPadding1: {
            paddingHorizontal: (0, _sizes.adjustSize)(78)
        },
        selectorsPadding2: {
            paddingHorizontal: (0, _sizes.adjustSize)(0)
        },
        selectorsPadding3: {
            paddingHorizontal: (0, _sizes.adjustSize)(0)
        },
        selectorWithHeader: {
            paddingTop: 0
        },
        separator: {
            width: 1,
            height: (0, _sizes.adjustSize)(120),
            backgroundColor: 'rgba(0, 0, 0, 0.15)',
            marginHorizontal: (0, _sizes.adjustSize)(60)
        }
    });
}, 23179, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 22426, 22450, 23095, 23089, 23068, 23137, 23071, 23074, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = Consumable;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _PrimeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _colors = _$$_REQUIRE(_dependencyMap[6]);

    var _fonts = _$$_REQUIRE(_dependencyMap[7]);

    var _sizes = _$$_REQUIRE(_dependencyMap[8]);

    var _fns = _$$_REQUIRE(_dependencyMap[9]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

    function Consumable(props) {
        var title = props.title,
            titleColor = props.titleColor,
            subtitle = props.subtitle,
            subtitleColor = props.subtitleColor,
            reset = props.reset,
            buy = props.buy,
            icon = props.icon,
            onBuy = props.onBuy,
            onReset = props.onReset;
        return _react.default.createElement(_reactNative.View, {
            style: Styles.container
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: Styles.content
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), icon ? _react.default.createElement(_reactNative.Image, {
            style: Styles.imageWrap,
            source: icon
        }) : null, title ? _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, titleColor ? {
                color: titleColor
            } : null]
        }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
            style: [Styles.subtitle, subtitleColor ? {
                color: subtitleColor
            } : null]
        }, subtitle) : null), buy && reset ? _react.default.createElement(_reactNative.View, {
            style: Styles.buttons
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: Styles.buttonWrap,
            activeOpacity: 0.8,
            onPress: onBuy
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityHint: props.buyAccessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
            style: Styles.button
        }, buy)), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: [Styles.buttonWrap, {
                borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
            }],
            activeOpacity: 0.8,
            onPress: onReset
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityHint: props.resetAccessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
            style: Styles.button
        }, reset))) : buy ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
            title: buy,
            themeColor: _colors.ColorGreen,
            textColor: "#fff",
            onClick: onBuy
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityHint: props.buyAccessibilityHint
        }))) : reset ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
            title: reset,
            themeColor: _colors.ColorGreen,
            textColor: "#fff",
            onClick: onReset
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityHint: props.resetAccessibilityHint
        }))) : null);
    }

    Consumable.propTypes = {
        title: _propTypes.default.string,
        titleColor: _propTypes.default.any,
        subtitle: _propTypes.default.string,
        subtitleColor: _propTypes.default.any,
        reset: _propTypes.default.string,
        buy: _propTypes.default.string,
        icon: _propTypes.default.any,
        onBuy: _propTypes.default.func,
        onReset: _propTypes.default.func,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        resetAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
        buyAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    };
    Consumable.defaultProps = {
        title: '',
        titleColor: '',
        subtitle: '',
        subtitleColor: '',
        reset: '',
        buy: '',
        icon: null,
        onBuy: _fns.NOOP,
        onReset: _fns.NOOP
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1
        },
        content: {
            flex: 1,
            marginTop: (0, _sizes.adjustSize)(144)
        },
        imageWrap: {
            width: (0, _sizes.adjustSize)(684),
            height: (0, _sizes.adjustSize)(1056),
            alignSelf: 'center',
            resizeMode: 'contain',
            marginBottom: (0, _sizes.adjustSize)(75)
        },
        title: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(60),
            fontWeight: '700',
            color: '#000',
            alignSelf: 'center',
            marginHorizontal: (0, _sizes.adjustSize)(72),
            marginBottom: (0, _sizes.adjustSize)(6)
        },
        subtitle: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(54),
            color: '#000',
            alignSelf: 'center',
            marginHorizontal: (0, _sizes.adjustSize)(72)
        },
        buttons: {
            flexDirection: 'row',
            marginHorizontal: (0, _sizes.adjustSize)(72),
            borderWidth: _reactNative.StyleSheet.hairlineWidth,
            borderColor: 'rgba(0, 0, 0, 0.2)',
            borderRadius: (0, _sizes.adjustSize)(15)
        },
        buttonWrap: {
            flex: 1,
            height: (0, _sizes.adjustSize)(144),
            justifyContent: 'center',
            alignItems: 'center',
            borderWidth: 0,
            borderColor: 'rgba(0, 0, 0, 0.2)'
        },
        button: {
            fontFamily: _fonts.FontDefault,
            fontSize: (0, _sizes.adjustSize)(39),
            color: '#4C4C4C'
        },
        normalButton: {
            marginHorizontal: 0,
            flex: 1
        }
    });
}, 23182, [14305, 14344, 10297, 10033, 10318, 23173, 23074, 23071, 23068, 23137, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

    var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = undefined;

    var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

    var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

    var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

    var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

    var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

    var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

    var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

    var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

    var _sizes = _$$_REQUIRE(_dependencyMap[11]);

    var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

    var ImageHeader = function (_Component) {
        (0, _inherits2.default)(ImageHeader, _Component);

        function ImageHeader() {
            (0, _classCallCheck2.default)(this, ImageHeader);
            return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageHeader).apply(this, arguments));
        }

        (0, _createClass2.default)(ImageHeader, [{
            key: "render",
            value: function render() {
                var _this$props = this.props,
                    icon = _this$props.icon,
                    iconStyle = _this$props.iconStyle,
                    containerStyle = _this$props.containerStyle;

                if (!icon) {
                    return null;
                }

                return _react.default.createElement(_reactNative.View, {
                    style: [Styles.container, containerStyle]
                }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
                    style: [Styles.icon, iconStyle],
                    source: icon
                }, (0, _accessibilityHelper.getAccessibilityConfig)({
                    accessible: this.props.accessible,
                    accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
                    accessibilityLabel: this.props.accessibilityLabel
                }))));
            }
        }]);
        return ImageHeader;
    }(_react.Component);

    exports.default = ImageHeader;
    ImageHeader.propTypes = {
        icon: _propTypes.default.any,
        iconStyle: _propTypes.default.any,
        containerStyle: _propTypes.default.any,
        accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
        accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    };

    var Styles = _reactNative.StyleSheet.create({
        container: {
            paddingTop: (0, _sizes.adjustSize)(210),
            paddingBottom: (0, _sizes.adjustSize)(63),
            alignSelf: 'center',
            alignItems: 'center'
        },
        icon: {
            width: (0, _sizes.adjustSize)(540),
            height: (0, _sizes.adjustSize)(540)
        }
    });
}, 23185, [14308, 14305, 14344, 14320, 14323, 14371, 14377, 14386, 10297, 10033, 10318, 23068, 22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "91d5bce9ca8be225bb2b053f4dc68ae6",
        "name": "record_n_dark",
        "type": "png"
    });
}, 23188, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "16f376276d72894454290db6b390e48b",
        "name": "record_p_dark",
        "type": "png"
    });
}, 23191, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "1b31138db705ad4f249356650ef77801",
        "name": "record_d_dark",
        "type": "png"
    });
}, 23194, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "7086650f0de3e98e4bbe2ffe92d605b7",
        "name": "record_n_light",
        "type": "png"
    });
}, 23197, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "8839aec54e1ba9da8b316b117dcb4957",
        "name": "record_p_light",
        "type": "png"
    });
}, 23200, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
        "width": 40,
        "height": 40,
        "scales": [2, 3],
        "hash": "a510dc8a461e519c73a775bf00221200",
        "name": "record_d_light",
        "type": "png"
    });
}, 23203, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
        "width": 86,
        "height": 86,
        "scales": [2, 3],
        "hash": "799ff3d06b999ba716d765af25f4e91a",
        "name": "loading_empty_dark",
        "type": "png"
    });
}, 23206, [10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
    module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
        "width": 86,
        "height": 86,
        "scales": [2, 3],
        "hash": "799ff3d06b999ba716d765af25f4e91a",
        "name": "loading_empty_light",
        "type": "png"
    });
}, 23209, [10420]);
__r(10120);
__r(10001);
